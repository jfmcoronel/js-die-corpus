var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testAddInconvertibleObjectInconvertibleObject) != "undefined") {_RecordType("<9,54,1>",(testAddInconvertibleObjectInconvertibleObject)); Inst0++; } } catch(e) {}
function testAddInconvertibleObjectInconvertibleObject() {
  var count1 = 0;
try { if (Inst1 <= 1000 && typeof (count1) != "undefined") {_RecordType("<65,71,2>",(count1)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (toString1) != "undefined") {_RecordType("<89,98,4>",(toString1)); Inst2++; } } catch(e) {}
  function toString1() {
try { if (Inst3 <= 1000 && typeof (count1) != "undefined") {_RecordType("<109,115,5>",(count1)); Inst3++; } } catch(e) {}
    ++count1;

try { if (Inst4 <= 1000 && typeof (count1) != "undefined") {_RecordType("<126,132,7>",(count1)); Inst4++; } } catch(e) {}
    if (count1 == 95) {
      return {};
    }

try { if (Inst5 <= 1000 && typeof (count1) != "undefined") {_RecordType("<182,188,11>",(count1)); Inst5++; } } catch(e) {}
    return "" + count1;
  }

try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<221,230,15>",(undefined)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (toString1) != "undefined") {_RecordType("<246,255,16>",(toString1)); Inst8++; } } catch(e) {}
  var o1 = {
    valueOf: undefined,
    toString: toString1
  };
try { if (Inst6 <= 1000 && typeof (o1) != "undefined") {_RecordType("<201,203,14>",(o1)); Inst6++; } } catch(e) {}
  var count2 = 0;
try { if (Inst9 <= 1000 && typeof (count2) != "undefined") {_RecordType("<267,273,18>",(count2)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (toString2) != "undefined") {_RecordType("<291,300,20>",(toString2)); Inst10++; } } catch(e) {}
  function toString2() {
try { if (Inst11 <= 1000 && typeof (count2) != "undefined") {_RecordType("<311,317,21>",(count2)); Inst11++; } } catch(e) {}
    ++count2;

try { if (Inst12 <= 1000 && typeof (count2) != "undefined") {_RecordType("<328,334,23>",(count2)); Inst12++; } } catch(e) {}
    if (count2 == 95) {
      return {};
    }

try { if (Inst13 <= 1000 && typeof (count2) != "undefined") {_RecordType("<384,390,27>",(count2)); Inst13++; } } catch(e) {}
    return "" + count2;
  }

try { if (Inst15 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<423,432,31>",(undefined)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (toString2) != "undefined") {_RecordType("<448,457,32>",(toString2)); Inst16++; } } catch(e) {}
  var o2 = {
    valueOf: undefined,
    toString: toString2
  };
try { if (Inst14 <= 1000 && typeof (o2) != "undefined") {_RecordType("<403,405,30>",(o2)); Inst14++; } } catch(e) {}
  var threw = false;
try { if (Inst17 <= 1000 && typeof (threw) != "undefined") {_RecordType("<469,474,34>",(threw)); Inst17++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<569,570,40>",(e)); Inst24++; } } catch(e) {}
  try {
    for (var i = 0; i < 100; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<506,507,37>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<513,514,37>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<522,523,37>",(i)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (o1) != "undefined") {_RecordType("<543,545,38>",(o1)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o2) != "undefined") {_RecordType("<548,550,38>",(o2)); Inst23++; } } catch(e) {}
      var q = o1 + o2;
try { if (Inst21 <= 1000 && typeof (q) != "undefined") {_RecordType("<539,540,38>",(q)); Inst21++; } } catch(e) {}
    }
  } catch (e) {
    threw = true;
try { if (Inst25 <= 1000 && typeof (threw) != "undefined") {_RecordType("<578,583,41>",(threw)); Inst25++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<601,602,43>",(i)); Inst26++; } } catch(e) {}
    if (i !== 94) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<654,655,44>",(i)); Inst27++; } } catch(e) {}
      return "expected i === 94, got " + i;
    }

try { if (Inst28 <= 1000 && typeof (q) != "undefined") {_RecordType("<672,673,47>",(q)); Inst28++; } } catch(e) {}
    if (q !== "9494") {
try { if (Inst29 <= 1000 && typeof (q) != "undefined") {_RecordType("<733,734,48>",(q)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (q) != "undefined") {_RecordType("<756,757,48>",(q)); Inst30++; } } catch(e) {}
      return "expected q === '9494', got " + q + " (type " + typeof q + ")";
    }

try { if (Inst31 <= 1000 && typeof (count1) != "undefined") {_RecordType("<780,786,51>",(count1)); Inst31++; } } catch(e) {}
    if (count1 !== 95) {
try { if (Inst32 <= 1000 && typeof (count1) != "undefined") {_RecordType("<843,849,52>",(count1)); Inst32++; } } catch(e) {}
      return "expected count1 === 95, got " + count1;
    }

try { if (Inst33 <= 1000 && typeof (count2) != "undefined") {_RecordType("<866,872,55>",(count2)); Inst33++; } } catch(e) {}
    if (count2 !== 94) {
try { if (Inst34 <= 1000 && typeof (count2) != "undefined") {_RecordType("<929,935,56>",(count2)); Inst34++; } } catch(e) {}
      return "expected count2 === 94, got " + count2;
    }
  }

try { if (Inst35 <= 1000 && typeof (threw) != "undefined") {_RecordType("<955,960,60>",(threw)); Inst35++; } } catch(e) {}
  if (!threw) {
    return "expected throw with o1 + o2";
  }

  return "pass";
}

try { if (Inst36 <= 1000 && typeof (testAddInconvertibleObjectInconvertibleObject) != "undefined") {_RecordType("<1031,1076,67>",(testAddInconvertibleObjectInconvertibleObject)); Inst36++; } } catch(e) {}
testAddInconvertibleObjectInconvertibleObject();
"pass";

