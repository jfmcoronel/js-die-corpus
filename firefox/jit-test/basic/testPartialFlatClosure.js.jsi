var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (('-r', function (s) {
  function C(i) {
    this.m = function () {
      return i * t;
    };
  }

  var t = s;
  var a = [];

  for (var i = 0; i < 5; i++) {
    a[a.length] = new C(i);
  }

  return a;
})(42)[4].m) != "undefined") {_RecordType("<0,215,1>",(('-r', function (s) {
  function C(i) {
    this.m = function () {
      return i * t;
    };
  }

  var t = s;
  var a = [];

  for (var i = 0; i < 5; i++) {
    a[a.length] = new C(i);
  }

  return a;
})(42)[4].m)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (('-r', function (s) {
  function C(i) {
    this.m = function () {
      return i * t;
    };
  }

  var t = s;
  var a = [];

  for (var i = 0; i < 5; i++) {
    a[a.length] = new C(i);
  }

  return a;
})(42)[4]) != "undefined") {_RecordType("<0,213,1>",(('-r', function (s) {
  function C(i) {
    this.m = function () {
      return i * t;
    };
  }

  var t = s;
  var a = [];

  for (var i = 0; i < 5; i++) {
    a[a.length] = new C(i);
  }

  return a;
})(42)[4])); Inst1++; } } catch(e) {}
('-r', function (s) {
try { if (Inst2 <= 1000 && typeof (s) != "undefined") {_RecordType("<17,18,1>",(s)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<33,34,2>",(C)); Inst3++; } } catch(e) {}
  function C(i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<35,36,2>",(i)); Inst4++; } } catch(e) {}
    this.m = function () {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<80,81,4>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (t) != "undefined") {_RecordType("<84,85,4>",(t)); Inst7++; } } catch(e) {}
      return i * t;
    };
try { if (Inst5 <= 1000 && typeof (this.m) != "undefined") {_RecordType("<44,50,3>",(this.m)); Inst5++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<109,110,8>",(s)); Inst9++; } } catch(e) {}
  var t = s;
try { if (Inst8 <= 1000 && typeof (t) != "undefined") {_RecordType("<105,106,8>",(t)); Inst8++; } } catch(e) {}
  var a = [];
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<118,119,9>",(a)); Inst10++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,11>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<145,146,11>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,11>",(i)); Inst13++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (C) != "undefined") {_RecordType("<181,182,12>",(C)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<183,184,12>",(i)); Inst19++; } } catch(e) {}
    a[a.length] = new C(i);
try { if (Inst14 <= 1000 && typeof (a[a.length]) != "undefined") {_RecordType("<163,174,12>",(a[a.length])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<163,164,12>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<165,173,12>",(a.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<165,166,12>",(a)); Inst17++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<201,202,15>",(a)); Inst20++; } } catch(e) {}
  return a;
})(42)[4].m();
168;

