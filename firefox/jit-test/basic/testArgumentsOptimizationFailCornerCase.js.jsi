var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
Object.prototype.blah = 42;
try { if (Inst0 <= 1000 && typeof (Object.prototype.blah) != "undefined") {_RecordType("<0,21,1>",(Object.prototype.blah)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<0,16,1>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<0,6,1>",(Object)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (g) != "undefined") {_RecordType("<38,39,3>",(g)); Inst3++; } } catch(e) {}
function g(a, b, c) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<40,41,3>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<43,44,3>",(b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<46,47,3>",(c)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<53,54,4>",(a)); Inst7++; } } catch(e) {}
  a;
  1;
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<63,64,6>",(b)); Inst8++; } } catch(e) {}
  b;
  2;
try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<73,74,8>",(c)); Inst9++; } } catch(e) {}
  c;
  3;
  return 43;
}

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<106,107,13>",(f)); Inst10++; } } catch(e) {}
function f() {
try { if (Inst12 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<122,131,14>",(arguments)); Inst12++; } } catch(e) {}
  var a = arguments;
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<118,119,14>",(a)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<143,144,15>",(a)); Inst14++; } } catch(e) {}
  var b = a;
try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<139,140,15>",(b)); Inst13++; } } catch(e) {}
  var s = "blah";
try { if (Inst15 <= 1000 && typeof (s) != "undefined") {_RecordType("<152,153,16>",(s)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (a[s]) != "undefined") {_RecordType("<166,170,17>",(a[s])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<166,167,17>",(a)); Inst17++; } } catch(e) {}
  a[s];
  42;
try { if (Inst18 <= 1000 && typeof (b[s]) != "undefined") {_RecordType("<180,184,19>",(b[s])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<180,181,19>",(b)); Inst19++; } } catch(e) {}
  b[s];
  42;
try { if (Inst20 <= 1000 && typeof (a[s]) != "undefined") {_RecordType("<194,198,21>",(a[s])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<194,195,21>",(a)); Inst21++; } } catch(e) {}
  a[s];
  42;
try { if (Inst22 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<208,216,23>",(b.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<208,209,23>",(b)); Inst23++; } } catch(e) {}
  b.length;
  3;
try { if (Inst24 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<225,233,25>",(a.length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<225,226,25>",(a)); Inst25++; } } catch(e) {}
  a.length;
  3;
try { if (Inst26 <= 1000 && typeof (g.apply) != "undefined") {_RecordType("<242,249,27>",(g.apply)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<242,243,27>",(g)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<256,257,27>",(b)); Inst28++; } } catch(e) {}
  g.apply(null, b);
  43;
}

for (var i = 0; i < 10; ++i) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<278,279,31>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,31>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<295,296,31>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<302,303,32>",(f)); Inst32++; } } catch(e) {}
  f(1, 2, 3);
}

