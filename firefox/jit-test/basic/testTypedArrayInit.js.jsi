var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Arrays should be initialized to zero
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<49,50,2>",(f)); Inst0++; } } catch(e) {}
function f() {
  for (var ctor of [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array]) {
try { if (Inst1 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<66,70,3>",(ctor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<75,84,3>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<86,96,3>",(Uint8Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<98,115,3>",(Uint8ClampedArray)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<117,127,3>",(Int16Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<129,140,3>",(Uint16Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<142,152,3>",(Int32Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<154,165,3>",(Uint32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<167,179,3>",(Float32Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<181,193,3>",(Float64Array)); Inst10++; } } catch(e) {}
    for (var len of [3, 30, 300, 3000, 30000]) {
try { if (Inst11 <= 1000 && typeof (len) != "undefined") {_RecordType("<211,214,4>",(len)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<267,271,5>",(ctor)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (len) != "undefined") {_RecordType("<272,275,5>",(len)); Inst14++; } } catch(e) {}
      var arr = new ctor(len);
try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<257,260,5>",(arr)); Inst12++; } } catch(e) {}

      for (var i = 0; i < arr.length; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<294,295,7>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<301,302,7>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<305,315,7>",(arr.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<305,308,7>",(arr)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<317,318,7>",(i)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<332,338,8>",(arr[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<332,335,8>",(arr)); Inst21++; } } catch(e) {}
        arr[i];
        0;
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<370,371,10>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctor.name) != "undefined") {_RecordType("<383,392,10>",(ctor.name)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<383,387,10>",(ctor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (len) != "undefined") {_RecordType("<405,408,10>",(len)); Inst25++; } } catch(e) {}
        "index " + i + " of " + ctor.name + " len " + len;
      }
    }
  }
}

try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<431,432,16>",(f)); Inst26++; } } catch(e) {}
f();
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<436,437,17>",(f)); Inst27++; } } catch(e) {}
f();
try { if (Inst28 <= 1000 && typeof (gc) != "undefined") {_RecordType("<441,443,18>",(gc)); Inst28++; } } catch(e) {}
gc();
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<447,448,19>",(f)); Inst29++; } } catch(e) {}
f();

