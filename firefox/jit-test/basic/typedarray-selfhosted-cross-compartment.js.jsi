var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * https://creativecommons.org/publicdomain/zero/1.0/
 */
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<126,135,5>",(newGlobal)); Inst1++; } } catch(e) {}
var global = newGlobal();
try { if (Inst0 <= 1000 && typeof (global) != "undefined") {_RecordType("<117,123,5>",(global)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (global.Int8Array) != "undefined") {_RecordType("<155,171,6>",(global.Int8Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (global) != "undefined") {_RecordType("<155,161,6>",(global)); Inst4++; } } catch(e) {}
var array = new global.Int8Array(10);
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<143,148,6>",(array)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (array.find) != "undefined") {_RecordType("<177,187,7>",(array.find)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<177,182,7>",(array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<188,189,7>",(v)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<193,194,7>",(v)); Inst8++; } } catch(e) {}
array.find(v => v == 1);
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<202,211,8>",(undefined)); Inst9++; } } catch(e) {}
undefined;
try { if (Inst10 <= 1000 && typeof (array.findIndex) != "undefined") {_RecordType("<213,228,9>",(array.findIndex)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<213,218,9>",(array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<229,230,9>",(v)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<234,235,9>",(v)); Inst13++; } } catch(e) {}
array.findIndex(v => v == 0);
0;

try { if (Inst14 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<258,271,12>",(reportCompare)); Inst14++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst15 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<292,305,13>",(reportCompare)); Inst15++; } } catch(e) {}
  reportCompare(true, true);
}

