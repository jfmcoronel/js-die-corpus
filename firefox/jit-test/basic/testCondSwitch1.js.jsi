var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (get) != "undefined") {_RecordType("<9,12,1>",(get)); Inst0++; } } catch(e) {}
function get(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<13,14,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<27,28,2>",(x)); Inst2++; } } catch(e) {}
  return x;
}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<42,43,5>",(f)); Inst3++; } } catch(e) {}
function f(x) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<44,45,5>",(x)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<59,60,6>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (get) != "undefined") {_RecordType("<73,76,7>",(get)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (get) != "undefined") {_RecordType("<107,110,10>",(get)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (get) != "undefined") {_RecordType("<141,144,13>",(get)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (get) != "undefined") {_RecordType("<183,186,16>",(get)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (get) != "undefined") {_RecordType("<223,226,19>",(get)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (get) != "undefined") {_RecordType("<265,268,22>",(get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (get) != "undefined") {_RecordType("<301,304,25>",(get)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<341,357,28>",(Number.MIN_VALUE)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number) != "undefined") {_RecordType("<341,347,28>",(Number)); Inst14++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<400,404,31>",(Math)); Inst17++; } } catch(e) {}
  switch (x) {
    case get(0):
      return 0;

    case get(1):
      return 1;

    case get("foo"):
      return "foo";

    case get(true):
      return true;

    case get(false):
      return false;

    case get({}):
      return {};

    case get(null):
      return null;

    case Number.MIN_VALUE:
try { if (Inst15 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<372,388,29>",(Number.MIN_VALUE)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Number) != "undefined") {_RecordType("<372,378,29>",(Number)); Inst16++; } } catch(e) {}
      return Number.MIN_VALUE;

    case Math:
try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<419,423,32>",(Math)); Inst18++; } } catch(e) {}
      return Math;

    default:
      return -123;
  }
}

try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<465,466,39>",(f)); Inst19++; } } catch(e) {}
f(0);
0;
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<474,475,41>",(f)); Inst20++; } } catch(e) {}
f(-0);
0;
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<484,485,43>",(f)); Inst21++; } } catch(e) {}
f(1);
1;
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<493,494,45>",(f)); Inst22++; } } catch(e) {}
f("foo");
"foo";
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<510,511,47>",(f)); Inst23++; } } catch(e) {}
f(true);
true;
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<525,526,49>",(f)); Inst24++; } } catch(e) {}
f(false);
false;
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<542,543,51>",(f)); Inst25++; } } catch(e) {}
f({});
-123;
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<555,556,53>",(f)); Inst26++; } } catch(e) {}
f([]);
-123;
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<568,569,55>",(f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math) != "undefined") {_RecordType("<570,574,55>",(Math)); Inst28++; } } catch(e) {}
f(Math);
try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<577,581,56>",(Math)); Inst29++; } } catch(e) {}
Math;
try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<583,584,57>",(f)); Inst30++; } } catch(e) {}
f({
  x: 1
});
-123;
try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<604,605,61>",(f)); Inst31++; } } catch(e) {}
f(333);
-123;
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<618,619,63>",(f)); Inst32++; } } catch(e) {}
f(null);
null;
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<633,634,65>",(f)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<635,644,65>",(undefined)); Inst34++; } } catch(e) {}
f(undefined);
-123;
try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<653,654,67>",(f)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<655,671,67>",(Number.MIN_VALUE)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Number) != "undefined") {_RecordType("<655,661,67>",(Number)); Inst37++; } } catch(e) {}
f(Number.MIN_VALUE);
try { if (Inst38 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<674,690,68>",(Number.MIN_VALUE)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Number) != "undefined") {_RecordType("<674,680,68>",(Number)); Inst39++; } } catch(e) {}
Number.MIN_VALUE;

