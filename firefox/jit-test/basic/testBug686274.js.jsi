var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Don't Baseline-compile the huge array literal with --baseline-eager
// as it's slow, especially in debug builds.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<125,126,3>",(f)); Inst0++; } } catch(e) {}
function f(N) {
try { if (Inst1 <= 1000 && typeof (N) != "undefined") {_RecordType("<127,128,3>",(N)); Inst1++; } } catch(e) {}
  var body = "return [";
try { if (Inst2 <= 1000 && typeof (body) != "undefined") {_RecordType("<138,142,4>",(body)); Inst2++; } } catch(e) {}

  for (var i = 0; i < N - 1; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<169,170,6>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<176,177,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (N) != "undefined") {_RecordType("<180,181,6>",(N)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,6>",(i)); Inst6++; } } catch(e) {}
    body += "1,";
try { if (Inst7 <= 1000 && typeof (body) != "undefined") {_RecordType("<198,202,7>",(body)); Inst7++; } } catch(e) {}
  }

  body += "2]";
try { if (Inst8 <= 1000 && typeof (body) != "undefined") {_RecordType("<219,223,10>",(body)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Function) != "undefined") {_RecordType("<247,255,11>",(Function)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (body) != "undefined") {_RecordType("<256,260,11>",(body)); Inst11++; } } catch(e) {}
  var f = new Function(body);
try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<239,240,11>",(f)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<275,276,12>",(f)); Inst13++; } } catch(e) {}
  var arr = f();
try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<269,272,12>",(arr)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<282,292,13>",(arr.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<282,285,13>",(arr)); Inst15++; } } catch(e) {}
  arr.length;
try { if (Inst16 <= 1000 && typeof (N) != "undefined") {_RecordType("<296,297,14>",(N)); Inst16++; } } catch(e) {}
  N;
try { if (Inst17 <= 1000 && typeof (arr[N - 1]) != "undefined") {_RecordType("<301,311,15>",(arr[N - 1])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<301,304,15>",(arr)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (N) != "undefined") {_RecordType("<305,306,15>",(N)); Inst19++; } } catch(e) {}
  arr[N - 1];
  2;
}

try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<321,322,19>",(f)); Inst20++; } } catch(e) {}
f(1000000);

