var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<0,6,1>",(gczeal)); Inst0++; } } catch(e) {}
gczeal(1);
try { if (Inst2 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<19,28,2>",(newGlobal)); Inst2++; } } catch(e) {}
var g = newGlobal();
try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<15,16,2>",(g)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<32,38,3>",(g.eval)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<32,33,3>",(g)); Inst4++; } } catch(e) {}
g.eval("\
var f = function(x) { \
    arg = arguments; \
    fun = function() { return x }; \
} \
");
try { if (Inst5 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<134,137,9>",(g.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<134,135,9>",(g)); Inst6++; } } catch(e) {}
g.f(3);
g.f = null;
try { if (Inst7 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<142,145,10>",(g.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<142,143,10>",(g)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (g.fun) != "undefined") {_RecordType("<154,159,11>",(g.fun)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (g) != "undefined") {_RecordType("<154,155,11>",(g)); Inst10++; } } catch(e) {}
g.fun();
3;
try { if (Inst11 <= 1000 && typeof (g.arg[0]) != "undefined") {_RecordType("<166,174,13>",(g.arg[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (g.arg) != "undefined") {_RecordType("<166,171,13>",(g.arg)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<166,167,13>",(g)); Inst13++; } } catch(e) {}
g.arg[0];
3;
try { if (Inst14 <= 1000 && typeof (gc) != "undefined") {_RecordType("<179,181,15>",(gc)); Inst14++; } } catch(e) {}
gc();
g.arg[0] = 9;
try { if (Inst15 <= 1000 && typeof (g.arg[0]) != "undefined") {_RecordType("<185,193,16>",(g.arg[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (g.arg) != "undefined") {_RecordType("<185,190,16>",(g.arg)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<185,186,16>",(g)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (g.fun) != "undefined") {_RecordType("<199,204,17>",(g.fun)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<199,200,17>",(g)); Inst19++; } } catch(e) {}
g.fun();
9;
try { if (Inst20 <= 1000 && typeof (g.arg[0]) != "undefined") {_RecordType("<211,219,19>",(g.arg[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g.arg) != "undefined") {_RecordType("<211,216,19>",(g.arg)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<211,212,19>",(g)); Inst22++; } } catch(e) {}
g.arg[0];
9;

