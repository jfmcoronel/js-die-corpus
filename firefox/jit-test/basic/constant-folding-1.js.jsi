var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<9,17,1>",(bytecode)); Inst0++; } } catch(e) {}
function bytecode(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<18,19,1>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (disassemble) != "undefined") {_RecordType("<36,47,2>",(disassemble)); Inst2++; } } catch(e) {}
  if (typeof disassemble !== "function") {
    return "unavailable";
  }

try { if (Inst4 <= 1000 && typeof (disassemble) != "undefined") {_RecordType("<107,118,6>",(disassemble)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<119,120,6>",(f)); Inst5++; } } catch(e) {}
  var d = disassemble(f);
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<103,104,6>",(d)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (d.slice) != "undefined") {_RecordType("<132,139,7>",(d.slice)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<132,133,7>",(d)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (d.indexOf) != "undefined") {_RecordType("<140,149,7>",(d.indexOf)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (d) != "undefined") {_RecordType("<140,141,7>",(d)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (d.indexOf) != "undefined") {_RecordType("<160,169,7>",(d.indexOf)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<160,161,7>",(d)); Inst11++; } } catch(e) {}
  return d.slice(d.indexOf("main:"), d.indexOf("\n\n"));
}

try { if (Inst12 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<183,191,10>",(bytecode)); Inst12++; } } catch(e) {}
bytecode(() => "hello" + "world");
try { if (Inst13 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<218,226,11>",(bytecode)); Inst13++; } } catch(e) {}
bytecode(() => "helloworld");
try { if (Inst14 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<248,256,12>",(bytecode)); Inst14++; } } catch(e) {}
bytecode(() => 2 + "2" + "2");
try { if (Inst15 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<279,287,13>",(bytecode)); Inst15++; } } catch(e) {}
bytecode(() => "222");
try { if (Inst16 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<302,310,14>",(bytecode)); Inst16++; } } catch(e) {}
bytecode(() => "x" + "3");
try { if (Inst17 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<329,337,15>",(bytecode)); Inst17++; } } catch(e) {}
bytecode(() => "x3");
var s = "hoge";
try { if (Inst18 <= 1000 && typeof (s) != "undefined") {_RecordType("<355,356,16>",(s)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<367,375,17>",(bytecode)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (s) != "undefined") {_RecordType("<395,396,17>",(s)); Inst20++; } } catch(e) {}
bytecode(() => "fo" + "o" + s + "ba" + "r");
try { if (Inst21 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<412,420,18>",(bytecode)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (s) != "undefined") {_RecordType("<435,436,18>",(s)); Inst22++; } } catch(e) {}
bytecode(() => "foo" + s + "bar");
try { if (Inst23 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<447,455,19>",(bytecode)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<479,480,19>",(s)); Inst24++; } } catch(e) {}
bytecode(() => "fo" + "o" + 1 + s + 1 + "ba" + "r");
try { if (Inst25 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<500,508,20>",(bytecode)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (s) != "undefined") {_RecordType("<524,525,20>",(s)); Inst26++; } } catch(e) {}
bytecode(() => "foo1" + s + "1bar");
try { if (Inst27 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<537,545,21>",(bytecode)); Inst27++; } } catch(e) {}
bytecode(() => 1 + 2 * 2 + "x");
try { if (Inst28 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<570,578,22>",(bytecode)); Inst28++; } } catch(e) {}
bytecode(() => 5 + "x");
try { if (Inst29 <= 1000 && typeof (s) != "undefined") {_RecordType("<595,596,23>",(s)); Inst29++; } } catch(e) {}
s + 1 + 2;
"hoge12";

try { if (Inst30 <= 1000 && typeof (s) != "undefined") {_RecordType("<624,625,26>",(s)); Inst30++; } } catch(e) {}
(() => s + 1 + 2)();

"hoge12";
try { if (Inst31 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<649,657,29>",(bytecode)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (s) != "undefined") {_RecordType("<670,671,29>",(s)); Inst32++; } } catch(e) {}
bytecode(() => "x" + s + 1 + 1);
try { if (Inst33 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<682,690,30>",(bytecode)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (s) != "undefined") {_RecordType("<703,704,30>",(s)); Inst34++; } } catch(e) {}
bytecode(() => "x" + s + "11");
var n = 5;
try { if (Inst35 <= 1000 && typeof (n) != "undefined") {_RecordType("<718,719,31>",(n)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (n) != "undefined") {_RecordType("<729,730,32>",(n)); Inst36++; } } catch(e) {}
1 + n + 1 + "ba" + "r";
"7bar";
1 + 2 + {
  valueOf: () => 3,
  toString: () => 'x'
} + 4 + 5;
15;
try { if (Inst37 <= 1000 && typeof (n) != "undefined") {_RecordType("<832,833,39>",(n)); Inst37++; } } catch(e) {}
1 + 2 + n;
8;
try { if (Inst38 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<838,846,41>",(bytecode)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (n) != "undefined") {_RecordType("<861,862,41>",(n)); Inst39++; } } catch(e) {}
bytecode(() => 1 + 2 + n + 1 + 2);
try { if (Inst40 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<873,881,42>",(bytecode)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (n) != "undefined") {_RecordType("<892,893,42>",(n)); Inst41++; } } catch(e) {}
bytecode(() => 3 + n + 1 + 2);
try { if (Inst42 <= 1000 && typeof (n) != "undefined") {_RecordType("<912,913,43>",(n)); Inst42++; } } catch(e) {}
1 + 2 + n + 1 + 2;
11;
try { if (Inst43 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<927,935,45>",(bytecode)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (s) != "undefined") {_RecordType("<950,951,45>",(s)); Inst44++; } } catch(e) {}
bytecode(() => 1 + 2 + s + 1 + 2);
try { if (Inst45 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<962,970,46>",(bytecode)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (s) != "undefined") {_RecordType("<981,982,46>",(s)); Inst46++; } } catch(e) {}
bytecode(() => 3 + s + 1 + 2);
try { if (Inst47 <= 1000 && typeof (s) != "undefined") {_RecordType("<1001,1002,47>",(s)); Inst47++; } } catch(e) {}
1 + 2 + s + 1 + 2;
"3hoge12";
try { if (Inst48 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<1023,1031,49>",(bytecode)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (n) != "undefined") {_RecordType("<1051,1052,49>",(n)); Inst49++; } } catch(e) {}
bytecode(() => ["a" + "b" + n]);
try { if (Inst50 <= 1000 && typeof (bytecode) != "undefined") {_RecordType("<1056,1064,50>",(bytecode)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (n) != "undefined") {_RecordType("<1079,1080,50>",(n)); Inst51++; } } catch(e) {}
bytecode(() => ["ab" + n]);
try { if (Inst53 <= 1000 && typeof (n) != "undefined") {_RecordType("<1105,1106,51>",(n)); Inst53++; } } catch(e) {}
var a = ["a" + "b" + n];
try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1088,1089,51>",(a)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1109,1113,52>",(a[0])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<1109,1110,52>",(a)); Inst55++; } } catch(e) {}
a[0];
"ab5";

