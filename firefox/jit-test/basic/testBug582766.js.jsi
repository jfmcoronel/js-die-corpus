var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
expected = 4;
try { if (Inst0 <= 1000 && typeof (expected) != "undefined") {_RecordType("<0,8,1>",(expected)); Inst0++; } } catch(e) {}
var fourth = {
  nextSibling: null
};
try { if (Inst1 <= 1000 && typeof (fourth) != "undefined") {_RecordType("<18,24,2>",(fourth)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (fourth) != "undefined") {_RecordType("<81,87,6>",(fourth)); Inst3++; } } catch(e) {}
var third = {
  nextSibling: fourth
};
try { if (Inst2 <= 1000 && typeof (third) != "undefined") {_RecordType("<56,61,5>",(third)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (third) != "undefined") {_RecordType("<121,126,9>",(third)); Inst5++; } } catch(e) {}
var second = {
  nextSibling: third
};
try { if (Inst4 <= 1000 && typeof (second) != "undefined") {_RecordType("<95,101,8>",(second)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (second) != "undefined") {_RecordType("<159,165,12>",(second)); Inst7++; } } catch(e) {}
var first = {
  nextSibling: second
};
try { if (Inst6 <= 1000 && typeof (first) != "undefined") {_RecordType("<134,139,11>",(first)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<179,180,15>",(f)); Inst8++; } } catch(e) {}
function f() {
  let loopcount = 0;
try { if (Inst9 <= 1000 && typeof (loopcount) != "undefined") {_RecordType("<191,200,16>",(loopcount)); Inst9++; } } catch(e) {}

  for (let node = first; node; node = node.nextSibling) {
try { if (Inst10 <= 1000 && typeof (node) != "undefined") {_RecordType("<218,222,18>",(node)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (first) != "undefined") {_RecordType("<225,230,18>",(first)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (node) != "undefined") {_RecordType("<232,236,18>",(node)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (node) != "undefined") {_RecordType("<238,242,18>",(node)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (node.nextSibling) != "undefined") {_RecordType("<245,261,18>",(node.nextSibling)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (node) != "undefined") {_RecordType("<245,249,18>",(node)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (loopcount) != "undefined") {_RecordType("<269,278,19>",(loopcount)); Inst16++; } } catch(e) {}
    loopcount++;
  }

try { if (Inst17 <= 1000 && typeof (loopcount) != "undefined") {_RecordType("<296,305,22>",(loopcount)); Inst17++; } } catch(e) {}
  return loopcount;
}

try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<319,320,25>",(f)); Inst19++; } } catch(e) {}
actual = f();
try { if (Inst18 <= 1000 && typeof (actual) != "undefined") {_RecordType("<310,316,25>",(actual)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<324,330,26>",(actual)); Inst20++; } } catch(e) {}
actual;
try { if (Inst21 <= 1000 && typeof (expected) != "undefined") {_RecordType("<332,340,27>",(expected)); Inst21++; } } catch(e) {}
expected;

