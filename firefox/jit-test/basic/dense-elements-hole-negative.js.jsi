var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The index is negative before code generation.
let v = {};
try { if (Inst0 <= 1000 && typeof (v) != "undefined") {_RecordType("<53,54,2>",(v)); Inst0++; } } catch(e) {}
let negativeIndex = -1;
try { if (Inst1 <= 1000 && typeof (negativeIndex) != "undefined") {_RecordType("<65,78,3>",(negativeIndex)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<95,96,5>",(f)); Inst2++; } } catch(e) {}
function f(obj) {
try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<97,100,5>",(obj)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (obj[negativeIndex]) != "undefined") {_RecordType("<106,124,6>",(obj[negativeIndex])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<106,109,6>",(obj)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<129,130,6>",(v)); Inst6++; } } catch(e) {}
  obj[negativeIndex] === v;
  true;
}

for (let i = 0; i < 2000; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,10>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<159,160,10>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<169,170,10>",(i)); Inst9++; } } catch(e) {}
  let obj = {};
try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<182,185,11>",(obj)); Inst10++; } } catch(e) {}
  obj[1] = {};
try { if (Inst11 <= 1000 && typeof (obj[1]) != "undefined") {_RecordType("<194,200,12>",(obj[1])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<194,197,12>",(obj)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (v) != "undefined") {_RecordType("<230,231,13>",(v)); Inst15++; } } catch(e) {}
  obj[negativeIndex] = v;
try { if (Inst13 <= 1000 && typeof (obj[negativeIndex]) != "undefined") {_RecordType("<209,227,13>",(obj[negativeIndex])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<209,212,13>",(obj)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<235,236,14>",(f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<237,240,14>",(obj)); Inst17++; } } catch(e) {}
  f(obj);
} // The sign of the index changes after the code generation.


try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<316,317,18>",(g)); Inst18++; } } catch(e) {}
function g(obj, i) {
try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<318,321,18>",(obj)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<323,324,18>",(i)); Inst20++; } } catch(e) {}
  for (let j = 0; j < 4; j++) {
try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<339,340,19>",(j)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<346,347,19>",(j)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (j) != "undefined") {_RecordType("<353,354,19>",(j)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (obj[i - j]) != "undefined") {_RecordType("<364,374,20>",(obj[i - j])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<364,367,20>",(obj)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<368,369,20>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<372,373,20>",(j)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<379,380,20>",(v)); Inst28++; } } catch(e) {}
    obj[i - j] === v;
    true;
  }
}

for (let i = 0; i < 2000; i++) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<408,409,25>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<415,416,25>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,25>",(i)); Inst31++; } } catch(e) {}
  let obj = {};
try { if (Inst32 <= 1000 && typeof (obj) != "undefined") {_RecordType("<438,441,26>",(obj)); Inst32++; } } catch(e) {}
  obj[1] = {};
try { if (Inst33 <= 1000 && typeof (obj[1]) != "undefined") {_RecordType("<450,456,27>",(obj[1])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<450,453,27>",(obj)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<480,481,28>",(i)); Inst36++; } } catch(e) {}
  let X = 2000 - i;
try { if (Inst35 <= 1000 && typeof (X) != "undefined") {_RecordType("<469,470,28>",(X)); Inst35++; } } catch(e) {}

  for (let j = 0; j < 10; j++) {
try { if (Inst37 <= 1000 && typeof (j) != "undefined") {_RecordType("<495,496,30>",(j)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (j) != "undefined") {_RecordType("<502,503,30>",(j)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (j) != "undefined") {_RecordType("<510,511,30>",(j)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (v) != "undefined") {_RecordType("<534,535,31>",(v)); Inst44++; } } catch(e) {}
    obj[X - j] = v;
try { if (Inst40 <= 1000 && typeof (obj[X - j]) != "undefined") {_RecordType("<521,531,31>",(obj[X - j])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (obj) != "undefined") {_RecordType("<521,524,31>",(obj)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (X) != "undefined") {_RecordType("<525,526,31>",(X)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (j) != "undefined") {_RecordType("<529,530,31>",(j)); Inst43++; } } catch(e) {}
  }

try { if (Inst45 <= 1000 && typeof (g) != "undefined") {_RecordType("<544,545,34>",(g)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (obj) != "undefined") {_RecordType("<546,549,34>",(obj)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (X) != "undefined") {_RecordType("<551,552,34>",(X)); Inst47++; } } catch(e) {}
  g(obj, X);
}

