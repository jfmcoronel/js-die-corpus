var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (parseIntHelper) != "undefined") {_RecordType("<9,23,1>",(parseIntHelper)); Inst0++; } } catch(e) {}
function parseIntHelper(n) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<24,25,1>",(n)); Inst1++; } } catch(e) {}
  var a;
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<35,36,2>",(a)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<50,51,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<57,58,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<64,65,4>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<79,87,5>",(parseInt)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<88,89,5>",(n)); Inst8++; } } catch(e) {}
    a = parseInt(n);
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<75,76,5>",(a)); Inst6++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<106,107,8>",(a)); Inst9++; } } catch(e) {}
  return a;
}

try { if (Inst10 <= 1000 && typeof (doParseIntTests) != "undefined") {_RecordType("<121,136,11>",(doParseIntTests)); Inst10++; } } catch(e) {}
function doParseIntTests() {
  var inputs = [0, -0, .1, -.1, .7, -.7, 1.3, -1.3];
try { if (Inst11 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<147,153,12>",(inputs)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<214,219,13>",(Array)); Inst13++; } } catch(e) {}
  var outputs = new Array(8); //avoid jit, unrolled
try { if (Inst12 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<200,207,13>",(outputs)); Inst12++; } } catch(e) {}

  outputs[0] = outputs[1] = outputs[2] = outputs[4] = 0;
try { if (Inst14 <= 1000 && typeof (outputs[0]) != "undefined") {_RecordType("<249,259,15>",(outputs[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<249,256,15>",(outputs)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (outputs[1]) != "undefined") {_RecordType("<262,272,15>",(outputs[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<262,269,15>",(outputs)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (outputs[2]) != "undefined") {_RecordType("<275,285,15>",(outputs[2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<275,282,15>",(outputs)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (outputs[4]) != "undefined") {_RecordType("<288,298,15>",(outputs[4])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<288,295,15>",(outputs)); Inst21++; } } catch(e) {}
  outputs[3] = outputs[5] = -0;
try { if (Inst22 <= 1000 && typeof (outputs[3]) != "undefined") {_RecordType("<306,316,16>",(outputs[3])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<306,313,16>",(outputs)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (outputs[5]) != "undefined") {_RecordType("<319,329,16>",(outputs[5])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<319,326,16>",(outputs)); Inst25++; } } catch(e) {}
  outputs[6] = 1;
try { if (Inst26 <= 1000 && typeof (outputs[6]) != "undefined") {_RecordType("<338,348,17>",(outputs[6])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<338,345,17>",(outputs)); Inst27++; } } catch(e) {}
  outputs[7] = -1;
try { if (Inst28 <= 1000 && typeof (outputs[7]) != "undefined") {_RecordType("<356,366,18>",(outputs[7])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<356,363,18>",(outputs)); Inst29++; } } catch(e) {}

  for (var i = 0; i < 8; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<385,386,20>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<392,393,20>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<399,400,20>",(i)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (Function) != "undefined") {_RecordType("<427,435,21>",(Function)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<463,469,21>",(uneval)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (inputs[i]) != "undefined") {_RecordType("<470,479,21>",(inputs[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<470,476,21>",(inputs)); Inst37++; } } catch(e) {}
    var testfn = new Function('return parseIntHelper(' + uneval(inputs[i]) + ');');
try { if (Inst33 <= 1000 && typeof (testfn) != "undefined") {_RecordType("<414,420,21>",(testfn)); Inst33++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (testfn) != "undefined") {_RecordType("<494,500,22>",(testfn)); Inst38++; } } catch(e) {}
    testfn();
try { if (Inst39 <= 1000 && typeof (outputs[i]) != "undefined") {_RecordType("<508,518,23>",(outputs[i])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (outputs) != "undefined") {_RecordType("<508,515,23>",(outputs)); Inst40++; } } catch(e) {}
    outputs[i];
  }
}

try { if (Inst41 <= 1000 && typeof (doParseIntTests) != "undefined") {_RecordType("<527,542,27>",(doParseIntTests)); Inst41++; } } catch(e) {}
doParseIntTests();
try { if (Inst42 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<546,554,28>",(parseInt)); Inst42++; } } catch(e) {}
parseInt("08");
8;
try { if (Inst43 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<565,573,30>",(parseInt)); Inst43++; } } catch(e) {}
parseInt("09");
9;

