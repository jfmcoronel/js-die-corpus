var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testNestedClosures) != "undefined") {_RecordType("<9,27,1>",(testNestedClosures)); Inst0++; } } catch(e) {}
function testNestedClosures() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<43,44,2>",(f)); Inst1++; } } catch(e) {}
  function f(a, b) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<45,46,2>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<48,49,2>",(b)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<66,67,3>",(g)); Inst4++; } } catch(e) {}
    function g(x, y) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<68,69,3>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<71,72,3>",(y)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (h) != "undefined") {_RecordType("<91,92,4>",(h)); Inst7++; } } catch(e) {}
      function h(m, n) {
try { if (Inst8 <= 1000 && typeof (m) != "undefined") {_RecordType("<93,94,4>",(m)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<96,97,4>",(n)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (k) != "undefined") {_RecordType("<118,119,5>",(k)); Inst10++; } } catch(e) {}
        function k(u, v) {
try { if (Inst11 <= 1000 && typeof (u) != "undefined") {_RecordType("<120,121,5>",(u)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<123,124,5>",(v)); Inst12++; } } catch(e) {}
          var s = '';
try { if (Inst13 <= 1000 && typeof (s) != "undefined") {_RecordType("<142,143,6>",(s)); Inst13++; } } catch(e) {}

          for (var i = 0; i < 5; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,8>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<177,178,8>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<186,187,8>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<207,208,9>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<217,218,9>",(b)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<227,228,9>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<237,238,9>",(y)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (m) != "undefined") {_RecordType("<247,248,9>",(m)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (n) != "undefined") {_RecordType("<257,258,9>",(n)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (u) != "undefined") {_RecordType("<267,268,9>",(u)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<277,278,9>",(v)); Inst25++; } } catch(e) {}
            s = a + ',' + b + ',' + x + ',' + y + ',' + m + ',' + n + ',' + u + ',' + v;
try { if (Inst17 <= 1000 && typeof (s) != "undefined") {_RecordType("<203,204,9>",(s)); Inst17++; } } catch(e) {}
          }

try { if (Inst26 <= 1000 && typeof (s) != "undefined") {_RecordType("<310,311,12>",(s)); Inst26++; } } catch(e) {}
          return s;
        }

try { if (Inst27 <= 1000 && typeof (k) != "undefined") {_RecordType("<339,340,15>",(k)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (m) != "undefined") {_RecordType("<341,342,15>",(m)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (n) != "undefined") {_RecordType("<348,349,15>",(n)); Inst29++; } } catch(e) {}
        return k(m + 1, n + 1);
      }

try { if (Inst30 <= 1000 && typeof (h) != "undefined") {_RecordType("<378,379,18>",(h)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<380,381,18>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (y) != "undefined") {_RecordType("<387,388,18>",(y)); Inst32++; } } catch(e) {}
      return h(x + 1, y + 1);
    }

try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<413,414,21>",(g)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<415,416,21>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<422,423,21>",(b)); Inst35++; } } catch(e) {}
    return g(a + 1, b + 1);
  }

  var s1;
try { if (Inst36 <= 1000 && typeof (s1) != "undefined") {_RecordType("<441,443,24>",(s1)); Inst36++; } } catch(e) {}

  for (var i = 0; i < 5; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<457,458,26>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<464,465,26>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<473,474,26>",(i)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<487,488,27>",(f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<489,490,27>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<492,493,27>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<496,497,27>",(i)); Inst44++; } } catch(e) {}
    s1 = f(i, i + i);
try { if (Inst40 <= 1000 && typeof (s1) != "undefined") {_RecordType("<482,484,27>",(s1)); Inst40++; } } catch(e) {}
  }

try { if (Inst45 <= 1000 && typeof (s1) != "undefined") {_RecordType("<514,516,30>",(s1)); Inst45++; } } catch(e) {}
  return s1;
}

try { if (Inst46 <= 1000 && typeof (testNestedClosures) != "undefined") {_RecordType("<521,539,33>",(testNestedClosures)); Inst46++; } } catch(e) {}
testNestedClosures();
'4,8,5,9,6,10,7,11';

