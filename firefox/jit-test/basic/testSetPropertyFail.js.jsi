var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test(name, fn, val) {
try { if (Inst1 <= 1000 && typeof (name) != "undefined") {_RecordType("<14,18,1>",(name)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (fn) != "undefined") {_RecordType("<20,22,1>",(fn)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (val) != "undefined") {_RecordType("<24,27,1>",(val)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (gc) != "undefined") {_RecordType("<33,35,2>",(gc)); Inst4++; } } catch(e) {}
  gc();
  var ok = {},
      bad = {};
try { if (Inst5 <= 1000 && typeof (ok) != "undefined") {_RecordType("<45,47,3>",(ok)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (bad) != "undefined") {_RecordType("<60,63,4>",(bad)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (bad.__defineSetter__) != "undefined") {_RecordType("<73,93,6>",(bad.__defineSetter__)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (bad) != "undefined") {_RecordType("<73,76,6>",(bad)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (name) != "undefined") {_RecordType("<94,98,6>",(name)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (fn) != "undefined") {_RecordType("<100,102,6>",(fn)); Inst10++; } } catch(e) {}
  bad.__defineSetter__(name, fn);

try { if (Inst12 <= 1000 && typeof (ok) != "undefined") {_RecordType("<119,121,8>",(ok)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ok) != "undefined") {_RecordType("<123,125,8>",(ok)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ok) != "undefined") {_RecordType("<127,129,8>",(ok)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ok) != "undefined") {_RecordType("<131,133,8>",(ok)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ok) != "undefined") {_RecordType("<135,137,8>",(ok)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (bad) != "undefined") {_RecordType("<139,142,8>",(bad)); Inst17++; } } catch(e) {}
  var arr = [ok, ok, ok, ok, ok, bad];
try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<112,115,8>",(arr)); Inst11++; } } catch(e) {}
  var log = '';
try { if (Inst18 <= 1000 && typeof (log) != "undefined") {_RecordType("<151,154,9>",(log)); Inst18++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (exc) != "undefined") {_RecordType("<274,277,16>",(exc)); Inst29++; } } catch(e) {}
  try {
    for (var i = 0; i < arr.length; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<183,184,12>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,12>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<194,204,12>",(arr.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<194,197,12>",(arr)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<206,207,12>",(i)); Inst23++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (val) != "undefined") {_RecordType("<234,237,13>",(val)); Inst27++; } } catch(e) {}
      arr[i][name] = val;
try { if (Inst24 <= 1000 && typeof (arr[i][name]) != "undefined") {_RecordType("<219,231,13>",(arr[i][name])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<219,225,13>",(arr[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arr) != "undefined") {_RecordType("<219,222,13>",(arr)); Inst26++; } } catch(e) {}
      log += '.';
try { if (Inst28 <= 1000 && typeof (log) != "undefined") {_RecordType("<245,248,14>",(log)); Inst28++; } } catch(e) {}
    }
  } catch (exc) {
    log += 'E';
try { if (Inst30 <= 1000 && typeof (log) != "undefined") {_RecordType("<285,288,17>",(log)); Inst30++; } } catch(e) {}
  }

try { if (Inst31 <= 1000 && typeof (log) != "undefined") {_RecordType("<304,307,20>",(log)); Inst31++; } } catch(e) {}
  log;
  '.....E';
}

try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<324,328,24>",(test)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<334,357,24>",(Function.prototype.call)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<334,352,24>",(Function.prototype)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Function) != "undefined") {_RecordType("<334,342,24>",(Function)); Inst35++; } } catch(e) {}
test("x", Function.prototype.call, null); // TypeError: Function.prototype.call called on incompatible [object Object]

try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<444,448,26>",(test)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Array) != "undefined") {_RecordType("<454,459,26>",(Array)); Inst37++; } } catch(e) {}
test("y", Array, 0.1); // RangeError: invalid array length

try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<504,508,28>",(test)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<512,535,28>",(Function.prototype.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<512,530,28>",(Function.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Function) != "undefined") {_RecordType("<512,520,28>",(Function)); Inst41++; } } catch(e) {}
test(1, Function.prototype.call, null); // TypeError: Function.prototype.call called on incompatible [object Object]

try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<622,626,30>",(test)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Array) != "undefined") {_RecordType("<630,635,30>",(Array)); Inst43++; } } catch(e) {}
test(1, Array, 0.1); // RangeError: invalid array length

