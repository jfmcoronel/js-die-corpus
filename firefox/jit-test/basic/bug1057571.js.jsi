var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
test = function () {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<32,33,2>",(f)); Inst1++; } } catch(e) {}
  function f() {
    [1, 2, 3, 4, 5];
  }

  ;
try { if (Inst2 <= 1000 && typeof (f.toSource) != "undefined") {_RecordType("<102,112,7>",(f.toSource)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<102,103,7>",(f)); Inst3++; } } catch(e) {}
  return "var obj = { x : 2 };" + f.toSource() + "; f()";
}();
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<0,4,1>",(test)); Inst0++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (evalWithCache) != "undefined") {_RecordType("<132,145,10>",(evalWithCache)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<146,150,10>",(test)); Inst5++; } } catch(e) {}
evalWithCache(test, {});

try { if (Inst6 <= 1000 && typeof (evalWithCache) != "undefined") {_RecordType("<167,180,12>",(evalWithCache)); Inst6++; } } catch(e) {}
function evalWithCache(code, ctx) {
try { if (Inst7 <= 1000 && typeof (code) != "undefined") {_RecordType("<181,185,12>",(code)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<187,190,12>",(ctx)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (cacheEntry) != "undefined") {_RecordType("<203,213,13>",(cacheEntry)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (code) != "undefined") {_RecordType("<214,218,13>",(code)); Inst11++; } } catch(e) {}
  code = cacheEntry(code);
try { if (Inst9 <= 1000 && typeof (code) != "undefined") {_RecordType("<196,200,13>",(code)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<236,245,14>",(newGlobal)); Inst14++; } } catch(e) {}
  ctx.global = newGlobal({
    cloneSingletons: true
  });
try { if (Inst12 <= 1000 && typeof (ctx.global) != "undefined") {_RecordType("<223,233,14>",(ctx.global)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<223,226,14>",(ctx)); Inst13++; } } catch(e) {}
  ctx.isRunOnce = true;
try { if (Inst15 <= 1000 && typeof (ctx.isRunOnce) != "undefined") {_RecordType("<282,295,17>",(ctx.isRunOnce)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<282,285,17>",(ctx)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<317,325,18>",(evaluate)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (code) != "undefined") {_RecordType("<326,330,18>",(code)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<332,345,18>",(Object.create)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<332,338,18>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<346,349,18>",(ctx)); Inst22++; } } catch(e) {}
  var res1 = evaluate(code, Object.create(ctx, {
    saveBytecode: {
      value: true
    }
  }));
try { if (Inst17 <= 1000 && typeof (res1) != "undefined") {_RecordType("<310,314,18>",(res1)); Inst17++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<417,425,23>",(evaluate)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (code) != "undefined") {_RecordType("<426,430,23>",(code)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<432,445,23>",(Object.create)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<432,438,23>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<446,449,23>",(ctx)); Inst28++; } } catch(e) {}
  var res2 = evaluate(code, Object.create(ctx, {
    loadBytecode: {
      value: true
    },
    saveBytecode: {
      value: true
    }
  }));
try { if (Inst23 <= 1000 && typeof (res2) != "undefined") {_RecordType("<410,414,23>",(res2)); Inst23++; } } catch(e) {}
}

