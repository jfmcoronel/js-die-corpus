var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (NPList) != "undefined") {_RecordType("<9,15,1>",(NPList)); Inst0++; } } catch(e) {}
function NPList() {
  ;
}

try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<50,55,5>",(Array)); Inst3++; } } catch(e) {}
NPList.prototype = new Array();
try { if (Inst1 <= 1000 && typeof (NPList.prototype) != "undefined") {_RecordType("<27,43,5>",(NPList.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (NPList) != "undefined") {_RecordType("<27,33,5>",(NPList)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (NPList) != "undefined") {_RecordType("<74,80,6>",(NPList)); Inst5++; } } catch(e) {}
var list = new NPList();
try { if (Inst4 <= 1000 && typeof (list) != "undefined") {_RecordType("<63,67,6>",(list)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (list.push) != "undefined") {_RecordType("<84,93,7>",(list.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (list) != "undefined") {_RecordType("<84,88,7>",(list)); Inst7++; } } catch(e) {}
list.push('a');
try { if (Inst9 <= 1000 && typeof (list.splice) != "undefined") {_RecordType("<110,121,8>",(list.splice)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (list) != "undefined") {_RecordType("<110,114,8>",(list)); Inst10++; } } catch(e) {}
var cut = list.splice(0, 1);
try { if (Inst8 <= 1000 && typeof (cut) != "undefined") {_RecordType("<104,107,8>",(cut)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (cut[0]) != "undefined") {_RecordType("<129,135,9>",(cut[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (cut) != "undefined") {_RecordType("<129,132,9>",(cut)); Inst12++; } } catch(e) {}
cut[0];
'a';
try { if (Inst13 <= 1000 && typeof (cut.length) != "undefined") {_RecordType("<142,152,11>",(cut.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (cut) != "undefined") {_RecordType("<142,145,11>",(cut)); Inst14++; } } catch(e) {}
cut.length;
1;
try { if (Inst15 <= 1000 && typeof (list.length) != "undefined") {_RecordType("<157,168,13>",(list.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (list) != "undefined") {_RecordType("<157,161,13>",(list)); Inst16++; } } catch(e) {}
list.length;
0;
try { if (Inst18 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<184,215,15>",(Object.getOwnPropertyDescriptor)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<184,190,15>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (list) != "undefined") {_RecordType("<216,220,15>",(list)); Inst20++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(list, "0");
try { if (Inst17 <= 1000 && typeof (desc) != "undefined") {_RecordType("<177,181,15>",(desc)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (desc) != "undefined") {_RecordType("<228,232,16>",(desc)); Inst21++; } } catch(e) {}
desc;
try { if (Inst22 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<234,243,17>",(undefined)); Inst22++; } } catch(e) {}
undefined;
try { if (Inst23 <= 1000 && typeof (list) != "undefined") {_RecordType("<252,256,18>",(list)); Inst23++; } } catch(e) {}
"0" in list;
false;

