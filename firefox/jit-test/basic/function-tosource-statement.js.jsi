var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<9,11,1>",(f1)); Inst0++; } } catch(e) {}
function f1(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<12,13,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<15,16,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<29,30,2>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<33,34,2>",(b)); Inst4++; } } catch(e) {}
  return a + b;
}

try { if (Inst5 <= 1000 && typeof (f1.toString) != "undefined") {_RecordType("<39,50,5>",(f1.toString)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<39,41,5>",(f1)); Inst6++; } } catch(e) {}
f1.toString();
"function f1(a, b) {\n    return a + b;\n}";
try { if (Inst7 <= 1000 && typeof (f1.toSource) != "undefined") {_RecordType("<99,110,7>",(f1.toSource)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f1) != "undefined") {_RecordType("<99,101,7>",(f1)); Inst8++; } } catch(e) {}
f1.toSource();
try { if (Inst9 <= 1000 && typeof (f1.toString) != "undefined") {_RecordType("<114,125,8>",(f1.toString)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f1) != "undefined") {_RecordType("<114,116,8>",(f1)); Inst10++; } } catch(e) {}
f1.toString();

try { if (Inst11 <= 1000 && typeof (f2) != "undefined") {_RecordType("<139,141,10>",(f2)); Inst11++; } } catch(e) {}
function f2(a,
/* ))))pernicious comment */
b, c, // another comment((
d) {
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<142,143,10>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<174,175,12>",(b)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<177,178,12>",(c)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (d) != "undefined") {_RecordType("<201,202,13>",(d)); Inst15++; } } catch(e) {}
  ;
}

try { if (Inst16 <= 1000 && typeof (f2.toString) != "undefined") {_RecordType("<213,224,17>",(f2.toString)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f2) != "undefined") {_RecordType("<213,215,17>",(f2)); Inst17++; } } catch(e) {}
f2.toString();
"function f2(a, /* ))))pernicious comment */ b,\n            c, // another comment((\n            d) {}";

try { if (Inst18 <= 1000 && typeof (f3) != "undefined") {_RecordType("<344,346,20>",(f3)); Inst18++; } } catch(e) {}
function f3() {
  ;
}

try { if (Inst19 <= 1000 && typeof (f3.toString) != "undefined") {_RecordType("<358,369,24>",(f3.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f3) != "undefined") {_RecordType("<358,360,24>",(f3)); Inst20++; } } catch(e) {}
f3.toString();
"function f3() { }";

