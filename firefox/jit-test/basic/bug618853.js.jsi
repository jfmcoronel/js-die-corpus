var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (e) != "undefined") {_RecordType("<30,31,3>",(e)); Inst1++; } } catch(e) {}
try {
try { if (Inst0 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<12,17,2>",(isNaN)); Inst0++; } } catch(e) {}
  new isNaN();
} catch (e) {
  ;
}

try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<46,51,7>",(Array)); Inst2++; } } catch(e) {}
new Array();
try { if (Inst3 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<59,66,8>",(Boolean)); Inst3++; } } catch(e) {}
new Boolean();
try { if (Inst4 <= 1000 && typeof (Date) != "undefined") {_RecordType("<74,78,9>",(Date)); Inst4++; } } catch(e) {}
new Date();
try { if (Inst5 <= 1000 && typeof (Number) != "undefined") {_RecordType("<86,92,10>",(Number)); Inst5++; } } catch(e) {}
new Number();
try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<100,106,11>",(Object)); Inst6++; } } catch(e) {}
new Object();
try { if (Inst7 <= 1000 && typeof (String) != "undefined") {_RecordType("<114,120,12>",(String)); Inst7++; } } catch(e) {}
new String();

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<158,159,16>",(e)); Inst9++; } } catch(e) {}
try {
try { if (Inst8 <= 1000 && typeof ([].push) != "undefined") {_RecordType("<137,144,15>",([].push)); Inst8++; } } catch(e) {}
  new [].push(4);
} catch (e) {
  ;
}

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<208,209,22>",(e)); Inst11++; } } catch(e) {}
try {
try { if (Inst10 <= 1000 && typeof ([1, 2, 3].pop) != "undefined") {_RecordType("<182,195,21>",([1, 2, 3].pop)); Inst10++; } } catch(e) {}
  new [1, 2, 3].pop();
} catch (e) {
  ;
}

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<261,262,28>",(e)); Inst13++; } } catch(e) {}
try {
try { if (Inst12 <= 1000 && typeof ("a,b,c".split) != "undefined") {_RecordType("<232,245,27>",("a,b,c".split)); Inst12++; } } catch(e) {}
  new "a,b,c".split(",");
} catch (e) {
  ;
}

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<311,312,34>",(e)); Inst16++; } } catch(e) {}
try {
try { if (Inst14 <= 1000 && typeof (Array.concat) != "undefined") {_RecordType("<285,297,33>",(Array.concat)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<285,290,33>",(Array)); Inst15++; } } catch(e) {}
  new Array.concat(3);
} catch (e) {
  ;
}

