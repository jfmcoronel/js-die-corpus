var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testArrayPushPop) != "undefined") {_RecordType("<9,25,1>",(testArrayPushPop)); Inst0++; } } catch(e) {}
function testArrayPushPop() {
  var a = [],
      sum1 = 0,
      sum2 = 0;
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<36,37,2>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (sum1) != "undefined") {_RecordType("<50,54,3>",(sum1)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (sum2) != "undefined") {_RecordType("<66,70,4>",(sum2)); Inst3++; } } catch(e) {}

  for (var i = 0; i < 10; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<88,89,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<95,96,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<105,106,6>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<122,128,7>",(a.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<122,123,7>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<129,130,7>",(i)); Inst10++; } } catch(e) {}
    sum1 += a.push(i);
try { if (Inst7 <= 1000 && typeof (sum1) != "undefined") {_RecordType("<114,118,7>",(sum1)); Inst7++; } } catch(e) {}
  }

  for (var i = 0; i < 10; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<149,150,10>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<156,157,10>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<166,167,10>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a.pop) != "undefined") {_RecordType("<183,188,11>",(a.pop)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<183,184,11>",(a)); Inst16++; } } catch(e) {}
    sum2 += a.pop();
try { if (Inst14 <= 1000 && typeof (sum2) != "undefined") {_RecordType("<175,179,11>",(sum2)); Inst14++; } } catch(e) {}
  }

try { if (Inst17 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<199,205,14>",(a.push)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<199,200,14>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (sum1) != "undefined") {_RecordType("<206,210,14>",(sum1)); Inst19++; } } catch(e) {}
  a.push(sum1);
try { if (Inst20 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<215,221,15>",(a.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<215,216,15>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sum2) != "undefined") {_RecordType("<222,226,15>",(sum2)); Inst22++; } } catch(e) {}
  a.push(sum2);
try { if (Inst23 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<238,244,16>",(a.join)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<238,239,16>",(a)); Inst24++; } } catch(e) {}
  return a.join(",");
}

try { if (Inst25 <= 1000 && typeof (testArrayPushPop) != "undefined") {_RecordType("<254,270,19>",(testArrayPushPop)); Inst25++; } } catch(e) {}
testArrayPushPop();
"55,45";

