var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

var t = [4];
try { if (Inst0 <= 1000 && typeof (t) != "undefined") {_RecordType("<19,20,3>",(t)); Inst0++; } } catch(e) {}
var stop;
try { if (Inst1 <= 1000 && typeof (stop) != "undefined") {_RecordType("<32,36,4>",(stop)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<38,51,5>",(Object.freeze)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<38,44,5>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (t) != "undefined") {_RecordType("<52,53,5>",(t)); Inst4++; } } catch(e) {}
Object.freeze(t);

try { if (Inst5 <= 1000 && typeof (stop) != "undefined") {_RecordType("<219,223,23>",(stop)); Inst5++; } } catch(e) {}
do {
  let ok = false;
try { if (Inst6 <= 1000 && typeof (ok) != "undefined") {_RecordType("<68,70,8>",(ok)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (inIon) != "undefined") {_RecordType("<89,94,9>",(inIon)); Inst8++; } } catch(e) {}
  stop = inIon();
try { if (Inst7 <= 1000 && typeof (stop) != "undefined") {_RecordType("<82,86,9>",(stop)); Inst7++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<132,133,13>",(e)); Inst11++; } } catch(e) {}
  try {
    t[1] = 2;
try { if (Inst9 <= 1000 && typeof (t[1]) != "undefined") {_RecordType("<111,115,12>",(t[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (t) != "undefined") {_RecordType("<111,112,12>",(t)); Inst10++; } } catch(e) {}
  } catch (e) {
    ok = true;
try { if (Inst12 <= 1000 && typeof (ok) != "undefined") {_RecordType("<141,143,14>",(ok)); Inst12++; } } catch(e) {}
  }

try { if (Inst13 <= 1000 && typeof (ok) != "undefined") {_RecordType("<159,161,17>",(ok)); Inst13++; } } catch(e) {}
  ok;
  true;
try { if (Inst14 <= 1000 && typeof (t.length) != "undefined") {_RecordType("<173,181,19>",(t.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<173,174,19>",(t)); Inst15++; } } catch(e) {}
  t.length;
  1;
try { if (Inst16 <= 1000 && typeof (t[1]) != "undefined") {_RecordType("<190,194,21>",(t[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (t) != "undefined") {_RecordType("<190,191,21>",(t)); Inst17++; } } catch(e) {}
  t[1];
try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<198,207,22>",(undefined)); Inst18++; } } catch(e) {}
  undefined;
} while (!stop);

