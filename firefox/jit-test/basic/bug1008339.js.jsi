var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var count = 0;
try { if (Inst0 <= 1000 && typeof (count) != "undefined") {_RecordType("<4,9,1>",(count)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (Parent) != "undefined") {_RecordType("<25,31,3>",(Parent)); Inst1++; } } catch(e) {}
function Parent() {
  // Scanning "this" properties here with Object.keys() solved the bug in my case
  //Object.keys(this);
try { if (Inst2 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<143,151,6>",(this.log)); Inst2++; } } catch(e) {}
  this.log('Parent ctor');
try { if (Inst3 <= 1000 && typeof (this.meth1) != "undefined") {_RecordType("<170,180,7>",(this.meth1)); Inst3++; } } catch(e) {}
  this.meth1();
try { if (Inst4 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<186,194,8>",(this.log)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (this.data3) != "undefined") {_RecordType("<215,225,8>",(this.data3)); Inst5++; } } catch(e) {}
  this.log('data3 before : ' + this.data3);
try { if (Inst6 <= 1000 && typeof (this.meth2) != "undefined") {_RecordType("<230,240,9>",(this.meth2)); Inst6++; } } catch(e) {}
  this.meth2(); // Added properties lost in ChildA

try { if (Inst7 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<282,290,11>",(this.log)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (this.data3) != "undefined") {_RecordType("<310,320,11>",(this.data3)); Inst8++; } } catch(e) {}
  this.log('data3 after : ' + this.data3);
try { if (Inst9 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<325,333,12>",(this.log)); Inst9++; } } catch(e) {}
  this.log('');

try { if (Inst10 <= 1000 && typeof (count) != "undefined") {_RecordType("<346,351,14>",(count)); Inst10++; } } catch(e) {}
  if (count++) {
try { if (Inst11 <= 1000 && typeof (this.data3) != "undefined") {_RecordType("<361,371,15>",(this.data3)); Inst11++; } } catch(e) {}
    this.data3;
    'z';
  }
}

Parent.prototype.meth1 = function () {
try { if (Inst15 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<430,438,21>",(this.log)); Inst15++; } } catch(e) {}
  this.log('Parent.meth1()');
};
try { if (Inst12 <= 1000 && typeof (Parent.prototype.meth1) != "undefined") {_RecordType("<389,411,20>",(Parent.prototype.meth1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Parent.prototype) != "undefined") {_RecordType("<389,405,20>",(Parent.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Parent) != "undefined") {_RecordType("<389,395,20>",(Parent)); Inst14++; } } catch(e) {}

Parent.prototype.meth2 = function () {
try { if (Inst19 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<503,511,25>",(this.log)); Inst19++; } } catch(e) {}
  this.log('Parent.meth2()'); // Requirement for the bug : Parent.meth2() needs to add data

  this.data4 = 'x';
try { if (Inst20 <= 1000 && typeof (this.data4) != "undefined") {_RecordType("<596,606,27>",(this.data4)); Inst20++; } } catch(e) {}
};
try { if (Inst16 <= 1000 && typeof (Parent.prototype.meth2) != "undefined") {_RecordType("<462,484,24>",(Parent.prototype.meth2)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Parent.prototype) != "undefined") {_RecordType("<462,478,24>",(Parent.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Parent) != "undefined") {_RecordType("<462,468,24>",(Parent)); Inst18++; } } catch(e) {}

Parent.prototype.log = function (data) {
try { if (Inst24 <= 1000 && typeof (data) != "undefined") {_RecordType("<651,655,30>",(data)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<661,666,31>",(print)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (data) != "undefined") {_RecordType("<667,671,31>",(data)); Inst26++; } } catch(e) {}
  print(data);
}; // Intermediate constructor to instantiate children prototype without executing Parent constructor code
try { if (Inst21 <= 1000 && typeof (Parent.prototype.log) != "undefined") {_RecordType("<618,638,30>",(Parent.prototype.log)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Parent.prototype) != "undefined") {_RecordType("<618,634,30>",(Parent.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Parent) != "undefined") {_RecordType("<618,624,30>",(Parent)); Inst23++; } } catch(e) {}


try { if (Inst27 <= 1000 && typeof (ParentEmptyCtor) != "undefined") {_RecordType("<792,807,35>",(ParentEmptyCtor)); Inst27++; } } catch(e) {}
function ParentEmptyCtor() {
  ;
}

try { if (Inst30 <= 1000 && typeof (Parent.prototype) != "undefined") {_RecordType("<847,863,39>",(Parent.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Parent) != "undefined") {_RecordType("<847,853,39>",(Parent)); Inst31++; } } catch(e) {}
ParentEmptyCtor.prototype = Parent.prototype;
try { if (Inst28 <= 1000 && typeof (ParentEmptyCtor.prototype) != "undefined") {_RecordType("<819,844,39>",(ParentEmptyCtor.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ParentEmptyCtor) != "undefined") {_RecordType("<819,834,39>",(ParentEmptyCtor)); Inst29++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (ChildA) != "undefined") {_RecordType("<875,881,41>",(ChildA)); Inst32++; } } catch(e) {}
function ChildA() {
try { if (Inst33 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<888,896,42>",(this.log)); Inst33++; } } catch(e) {}
  this.log('ChildA ctor');
try { if (Inst34 <= 1000 && typeof (Parent.call) != "undefined") {_RecordType("<915,926,43>",(Parent.call)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Parent) != "undefined") {_RecordType("<915,921,43>",(Parent)); Inst35++; } } catch(e) {}
  Parent.call(this);
}

try { if (Inst38 <= 1000 && typeof (ParentEmptyCtor) != "undefined") {_RecordType("<960,975,46>",(ParentEmptyCtor)); Inst38++; } } catch(e) {}
ChildA.prototype = new ParentEmptyCtor(); // Using Object.create() instead solves the bug
try { if (Inst36 <= 1000 && typeof (ChildA.prototype) != "undefined") {_RecordType("<937,953,46>",(ChildA.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ChildA) != "undefined") {_RecordType("<937,943,46>",(ChildA)); Inst37++; } } catch(e) {}
//ChildA.prototype = Object.create(ParentEmptyCtor.prototype);

try { if (Inst42 <= 1000 && typeof (ChildA) != "undefined") {_RecordType("<1122,1128,49>",(ChildA)); Inst42++; } } catch(e) {}
ChildA.prototype.constructor = ChildA;
try { if (Inst39 <= 1000 && typeof (ChildA.prototype.constructor) != "undefined") {_RecordType("<1091,1119,49>",(ChildA.prototype.constructor)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ChildA.prototype) != "undefined") {_RecordType("<1091,1107,49>",(ChildA.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ChildA) != "undefined") {_RecordType("<1091,1097,49>",(ChildA)); Inst41++; } } catch(e) {}

ChildA.prototype.meth1 = function () {
try { if (Inst46 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<1172,1180,52>",(this.log)); Inst46++; } } catch(e) {}
  this.log('ChildA.meth1()');
  this.data3 = 'z';
try { if (Inst47 <= 1000 && typeof (this.data3) != "undefined") {_RecordType("<1202,1212,53>",(this.data3)); Inst47++; } } catch(e) {}
};
try { if (Inst43 <= 1000 && typeof (ChildA.prototype.meth1) != "undefined") {_RecordType("<1131,1153,51>",(ChildA.prototype.meth1)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (ChildA.prototype) != "undefined") {_RecordType("<1131,1147,51>",(ChildA.prototype)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (ChildA) != "undefined") {_RecordType("<1131,1137,51>",(ChildA)); Inst45++; } } catch(e) {}

ChildA.prototype.meth2 = function () {
try { if (Inst51 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<1265,1273,57>",(this.log)); Inst51++; } } catch(e) {}
  this.log('ChildA.meth2()');
};
try { if (Inst48 <= 1000 && typeof (ChildA.prototype.meth2) != "undefined") {_RecordType("<1224,1246,56>",(ChildA.prototype.meth2)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (ChildA.prototype) != "undefined") {_RecordType("<1224,1240,56>",(ChildA.prototype)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (ChildA) != "undefined") {_RecordType("<1224,1230,56>",(ChildA)); Inst50++; } } catch(e) {}

try { if (Inst52 <= 1000 && typeof (ChildB) != "undefined") {_RecordType("<1306,1312,60>",(ChildB)); Inst52++; } } catch(e) {}
function ChildB() {
try { if (Inst53 <= 1000 && typeof (this.log) != "undefined") {_RecordType("<1319,1327,61>",(this.log)); Inst53++; } } catch(e) {}
  this.log('ChildB ctor');
try { if (Inst54 <= 1000 && typeof (Parent.call) != "undefined") {_RecordType("<1346,1357,62>",(Parent.call)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Parent) != "undefined") {_RecordType("<1346,1352,62>",(Parent)); Inst55++; } } catch(e) {}
  Parent.call(this);
}

try { if (Inst58 <= 1000 && typeof (ParentEmptyCtor) != "undefined") {_RecordType("<1391,1406,65>",(ParentEmptyCtor)); Inst58++; } } catch(e) {}
ChildB.prototype = new ParentEmptyCtor(); //ChildB.prototype = Object.create(ParentEmptyCtor.prototype);
try { if (Inst56 <= 1000 && typeof (ChildB.prototype) != "undefined") {_RecordType("<1368,1384,65>",(ChildB.prototype)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (ChildB) != "undefined") {_RecordType("<1368,1374,65>",(ChildB)); Inst57++; } } catch(e) {}

try { if (Inst62 <= 1000 && typeof (ChildB) != "undefined") {_RecordType("<1505,1511,67>",(ChildB)); Inst62++; } } catch(e) {}
ChildB.prototype.constructor = ChildB;
try { if (Inst59 <= 1000 && typeof (ChildB.prototype.constructor) != "undefined") {_RecordType("<1474,1502,67>",(ChildB.prototype.constructor)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (ChildB.prototype) != "undefined") {_RecordType("<1474,1490,67>",(ChildB.prototype)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (ChildB) != "undefined") {_RecordType("<1474,1480,67>",(ChildB)); Inst61++; } } catch(e) {}

try { if (Inst63 <= 1000 && typeof (demo) != "undefined") {_RecordType("<1523,1527,69>",(demo)); Inst63++; } } catch(e) {}
function demo() {
  // Requirement for the bug : ChildB needs to be instantiated before ChildA
try { if (Inst64 <= 1000 && typeof (ChildB) != "undefined") {_RecordType("<1615,1621,71>",(ChildB)); Inst64++; } } catch(e) {}
  new ChildB();
try { if (Inst65 <= 1000 && typeof (ChildA) != "undefined") {_RecordType("<1631,1637,72>",(ChildA)); Inst65++; } } catch(e) {}
  new ChildA();
}

try { if (Inst66 <= 1000 && typeof (demo) != "undefined") {_RecordType("<1644,1648,75>",(demo)); Inst66++; } } catch(e) {}
demo();

