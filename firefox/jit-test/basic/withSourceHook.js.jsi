var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| skip-if: typeof withSourceHook !== 'function'
// Check that withSourceHook passes URLs, propagates exceptions, and
// properly restores the original source hooks.
var log = ''; // Establish an outermost source hook.
try { if (Inst0 <= 1000 && typeof (log) != "undefined") {_RecordType("<181,184,4>",(log)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (withSourceHook) != "undefined") {_RecordType("<231,245,6>",(withSourceHook)); Inst1++; } } catch(e) {}
withSourceHook(function (url) {
try { if (Inst2 <= 1000 && typeof (url) != "undefined") {_RecordType("<256,259,6>",(url)); Inst2++; } } catch(e) {}
  log += 'o';
try { if (Inst3 <= 1000 && typeof (log) != "undefined") {_RecordType("<265,268,7>",(log)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (url) != "undefined") {_RecordType("<279,282,8>",(url)); Inst4++; } } catch(e) {}
  url;
  'outer';
  return '(function outer() { 3; })';
}, function () {
  log += 'O'; // Verify that withSourceHook propagates exceptions thrown by source hooks.
try { if (Inst5 <= 1000 && typeof (log) != "undefined") {_RecordType("<352,355,12>",(log)); Inst5++; } } catch(e) {}

  (function () {
    // Establish a source hook that throws.
try { if (Inst6 <= 1000 && typeof (withSourceHook) != "undefined") {_RecordType("<506,520,16>",(withSourceHook)); Inst6++; } } catch(e) {}
    withSourceHook(function (url) {
try { if (Inst7 <= 1000 && typeof (url) != "undefined") {_RecordType("<531,534,16>",(url)); Inst7++; } } catch(e) {}
      log += 'm';
try { if (Inst8 <= 1000 && typeof (log) != "undefined") {_RecordType("<544,547,17>",(log)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (url) != "undefined") {_RecordType("<562,565,18>",(url)); Inst9++; } } catch(e) {}
      url;
      'middle';
      throw 'borborygmus'; // middle
    }, function () {
      log += 'M'; // Establish an innermost source hook that does not throw,
try { if (Inst10 <= 1000 && typeof (log) != "undefined") {_RecordType("<647,650,22>",(log)); Inst10++; } } catch(e) {}
      // and verify that it is in force.

try { if (Inst11 <= 1000 && typeof (withSourceHook) != "undefined") {_RecordType("<766,780,25>",(withSourceHook)); Inst11++; } } catch(e) {}
      withSourceHook(function (url) {
try { if (Inst12 <= 1000 && typeof (url) != "undefined") {_RecordType("<791,794,25>",(url)); Inst12++; } } catch(e) {}
        log += 'i';
try { if (Inst13 <= 1000 && typeof (log) != "undefined") {_RecordType("<806,809,26>",(log)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (url) != "undefined") {_RecordType("<826,829,27>",(url)); Inst14++; } } catch(e) {}
        url;
        'inner';
        return '(function inner() { 1; })';
      }, function () {
        log += 'I';
try { if (Inst15 <= 1000 && typeof (log) != "undefined") {_RecordType("<923,926,31>",(log)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (evaluate('(function inner() { 2; })', {
          fileName: 'inner',
          sourceIsLazy: true
        }).toSource) != "undefined") {_RecordType("<950,1067,32>",(evaluate('(function inner() { 2; })', {
          fileName: 'inner',
          sourceIsLazy: true
        }).toSource)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<950,958,32>",(evaluate)); Inst17++; } } catch(e) {}
        return evaluate('(function inner() { 2; })', {
          fileName: 'inner',
          sourceIsLazy: true
        }).toSource();
      });
      '(function inner() { 1; })';
      // Verify that the source hook that throws has been reinstated.
try { if (Inst18 <= 1000 && typeof (evaluate('(function middle() { })', {
        fileName: 'middle',
        sourceIsLazy: true
      }).toSource) != "undefined") {_RecordType("<1192,1302,39>",(evaluate('(function middle() { })', {
        fileName: 'middle',
        sourceIsLazy: true
      }).toSource)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<1192,1200,39>",(evaluate)); Inst19++; } } catch(e) {}
      evaluate('(function middle() { })', {
        fileName: 'middle',
        sourceIsLazy: true
      }).toSource();
    });
  })();

  'borborygmus';
try { if (Inst20 <= 1000 && typeof (evaluate('(function outer() { 4; })', {
    fileName: 'outer',
    sourceIsLazy: true
  }).toSource) != "undefined") {_RecordType("<1342,1441,47>",(evaluate('(function outer() { 4; })', {
    fileName: 'outer',
    sourceIsLazy: true
  }).toSource)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<1342,1350,47>",(evaluate)); Inst21++; } } catch(e) {}
  evaluate('(function outer() { 4; })', {
    fileName: 'outer',
    sourceIsLazy: true
  }).toSource();
  '(function outer() { 3; })';
});
try { if (Inst22 <= 1000 && typeof (log) != "undefined") {_RecordType("<1480,1483,53>",(log)); Inst22++; } } catch(e) {}
log;
'OMIimo';

