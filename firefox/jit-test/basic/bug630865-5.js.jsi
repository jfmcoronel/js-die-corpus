var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (C) != "undefined") {_RecordType("<9,10,1>",(C)); Inst0++; } } catch(e) {}
function C(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<11,12,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<14,15,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<30,31,2>",(a)); Inst4++; } } catch(e) {}
  this.a = a;
try { if (Inst3 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<21,27,2>",(this.a)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<44,45,3>",(b)); Inst6++; } } catch(e) {}
  this.b = b;
try { if (Inst5 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<35,41,3>",(this.b)); Inst5++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (C.bind) != "undefined") {_RecordType("<58,64,6>",(C.bind)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<58,59,6>",(C)); Inst9++; } } catch(e) {}
var f = C.bind(null, 2);
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<54,55,6>",(f)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<75,96,7>",(Object.defineProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<75,81,7>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<97,98,7>",(f)); Inst12++; } } catch(e) {}
Object.defineProperty(f, "prototype", {
  get: function () {
    throw "FAIL";
  }
});
var x;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<166,167,12>",(x)); Inst13++; } } catch(e) {}

for (var i = 0; i < 10; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,14>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<186,187,14>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,14>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<211,212,15>",(f)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<213,214,15>",(i)); Inst19++; } } catch(e) {}
  x = new f(i);
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<203,204,15>",(x)); Inst17++; } } catch(e) {}
}

try { if (Inst20 <= 1000 && typeof (toString.call) != "undefined") {_RecordType("<220,233,18>",(toString.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (toString) != "undefined") {_RecordType("<220,228,18>",(toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<234,235,18>",(x)); Inst22++; } } catch(e) {}
toString.call(x);
"[object Object]";
try { if (Inst23 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<257,278,20>",(Object.getPrototypeOf)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<257,263,20>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<279,280,20>",(x)); Inst25++; } } catch(e) {}
Object.getPrototypeOf(x);
try { if (Inst26 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<283,294,21>",(C.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (C) != "undefined") {_RecordType("<283,284,21>",(C)); Inst27++; } } catch(e) {}
C.prototype;
try { if (Inst28 <= 1000 && typeof (x.a) != "undefined") {_RecordType("<296,299,22>",(x.a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<296,297,22>",(x)); Inst29++; } } catch(e) {}
x.a;
2;
try { if (Inst30 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<304,307,24>",(x.b)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<304,305,24>",(x)); Inst31++; } } catch(e) {}
x.b;
9;

