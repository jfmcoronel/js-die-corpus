var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<9,10,1>",(g)); Inst0++; } } catch(e) {}
function g() {
  ;
}

try { if (Inst1 <= 1000 && typeof (h) != "undefined") {_RecordType("<31,32,5>",(h)); Inst1++; } } catch(e) {}
function h() {
  for (var i = 0; i < 9; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<48,49,6>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<55,56,6>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<62,63,6>",(i)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<79,80,7>",(i)); Inst7++; } } catch(e) {}
    x.f = i;
try { if (Inst5 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<73,76,7>",(x.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<73,74,7>",(x)); Inst6++; } } catch(e) {}
  }
}

try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<98,99,11>",(j)); Inst8++; } } catch(e) {}
function j() {
try { if (Inst9 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<106,109,12>",(x.f)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<106,107,12>",(x)); Inst10++; } } catch(e) {}
  x.f();
}

try { if (Inst12 <= 1000 && typeof (g) != "undefined") {_RecordType("<141,142,17>",(g)); Inst12++; } } catch(e) {}
var x = {
  f: 0.7,
  g: g
};
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<120,121,15>",(x)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x.g) != "undefined") {_RecordType("<146,149,19>",(x.g)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<146,147,19>",(x)); Inst14++; } } catch(e) {}
x.g(); // interpreter brands x

try { if (Inst15 <= 1000 && typeof (h) != "undefined") {_RecordType("<178,179,21>",(h)); Inst15++; } } catch(e) {}
h();
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<183,188,22>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (shapeOf) != "undefined") {_RecordType("<189,196,22>",(shapeOf)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<197,198,22>",(x)); Inst18++; } } catch(e) {}
print(shapeOf(x));

x.f = function () {
  ;
}; // does not change x's shape
try { if (Inst19 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<203,206,24>",(x.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<203,204,24>",(x)); Inst20++; } } catch(e) {}


try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<261,262,29>",(j)); Inst21++; } } catch(e) {}
j();
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<266,271,30>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (shapeOf) != "undefined") {_RecordType("<272,279,30>",(shapeOf)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<280,281,30>",(x)); Inst24++; } } catch(e) {}
print(shapeOf(x));
try { if (Inst25 <= 1000 && typeof (h) != "undefined") {_RecordType("<285,286,31>",(h)); Inst25++; } } catch(e) {}
h(); // should change x's shape

var thrown = 'none';
try { if (Inst26 <= 1000 && typeof (thrown) != "undefined") {_RecordType("<322,328,33>",(thrown)); Inst26++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (exc) != "undefined") {_RecordType("<394,397,37>",(exc)); Inst28++; } } catch(e) {}
try {
try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<348,349,36>",(j)); Inst27++; } } catch(e) {}
  j(); // should throw since x.f === 8
} catch (exc) {
try { if (Inst30 <= 1000 && typeof (exc.name) != "undefined") {_RecordType("<412,420,38>",(exc.name)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (exc) != "undefined") {_RecordType("<412,415,38>",(exc)); Inst31++; } } catch(e) {}
  thrown = exc.name;
try { if (Inst29 <= 1000 && typeof (thrown) != "undefined") {_RecordType("<403,409,38>",(thrown)); Inst29++; } } catch(e) {}
}

try { if (Inst32 <= 1000 && typeof (thrown) != "undefined") {_RecordType("<425,431,41>",(thrown)); Inst32++; } } catch(e) {}
thrown;
'TypeError';

