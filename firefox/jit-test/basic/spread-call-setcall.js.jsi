var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<9,10,1>",(g)); Inst0++; } } catch(e) {}
function g() {
  ;
}

let a = {
  g: function () {
    ;
  }
};
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<26,27,5>",(a)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (check) != "undefined") {_RecordType("<74,79,11>",(check)); Inst2++; } } catch(e) {}
function check(expr) {
try { if (Inst3 <= 1000 && typeof (expr) != "undefined") {_RecordType("<80,84,11>",(expr)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Function) != "undefined") {_RecordType("<90,98,12>",(Function)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (expr) != "undefined") {_RecordType("<99,103,12>",(expr)); Inst5++; } } catch(e) {}
  Function(expr);
try { if (Inst6 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<108,122,13>",(ReferenceError)); Inst6++; } } catch(e) {}
  ReferenceError;
}

try { if (Inst7 <= 1000 && typeof (checkDestructuring) != "undefined") {_RecordType("<136,154,16>",(checkDestructuring)); Inst7++; } } catch(e) {}
function checkDestructuring(expr) {
try { if (Inst8 <= 1000 && typeof (expr) != "undefined") {_RecordType("<155,159,16>",(expr)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Function) != "undefined") {_RecordType("<172,180,17>",(Function)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (expr) != "undefined") {_RecordType("<181,185,17>",(expr)); Inst10++; } } catch(e) {}
  (() => Function(expr))();

try { if (Inst11 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<194,205,19>",(SyntaxError)); Inst11++; } } catch(e) {}
  SyntaxError;
}

try { if (Inst12 <= 1000 && typeof (check) != "undefined") {_RecordType("<210,215,22>",(check)); Inst12++; } } catch(e) {}
check("g(...[]) = 1");
try { if (Inst13 <= 1000 && typeof (check) != "undefined") {_RecordType("<233,238,23>",(check)); Inst13++; } } catch(e) {}
check("a.g(...[]) = 1");
try { if (Inst14 <= 1000 && typeof (check) != "undefined") {_RecordType("<258,263,24>",(check)); Inst14++; } } catch(e) {}
check("eval(...['1']) = 1");
try { if (Inst15 <= 1000 && typeof (check) != "undefined") {_RecordType("<287,292,25>",(check)); Inst15++; } } catch(e) {}
check("g(...[]) ++");
try { if (Inst16 <= 1000 && typeof (check) != "undefined") {_RecordType("<309,314,26>",(check)); Inst16++; } } catch(e) {}
check("a.g(...[]) ++");
try { if (Inst17 <= 1000 && typeof (check) != "undefined") {_RecordType("<333,338,27>",(check)); Inst17++; } } catch(e) {}
check("eval(...['1']) ++");
try { if (Inst18 <= 1000 && typeof (checkDestructuring) != "undefined") {_RecordType("<361,379,28>",(checkDestructuring)); Inst18++; } } catch(e) {}
checkDestructuring("[g(...[])] = []");
try { if (Inst19 <= 1000 && typeof (checkDestructuring) != "undefined") {_RecordType("<400,418,29>",(checkDestructuring)); Inst19++; } } catch(e) {}
checkDestructuring("[a.g(...[])] = []");
try { if (Inst20 <= 1000 && typeof (checkDestructuring) != "undefined") {_RecordType("<441,459,30>",(checkDestructuring)); Inst20++; } } catch(e) {}
checkDestructuring("[eval(...['1'])] = []");
try { if (Inst21 <= 1000 && typeof (checkDestructuring) != "undefined") {_RecordType("<486,504,31>",(checkDestructuring)); Inst21++; } } catch(e) {}
checkDestructuring("({y: g(...[])} = 1)");
try { if (Inst22 <= 1000 && typeof (checkDestructuring) != "undefined") {_RecordType("<529,547,32>",(checkDestructuring)); Inst22++; } } catch(e) {}
checkDestructuring("({y: a.g(...[])} = 1)");
try { if (Inst23 <= 1000 && typeof (checkDestructuring) != "undefined") {_RecordType("<574,592,33>",(checkDestructuring)); Inst23++; } } catch(e) {}
checkDestructuring("({y: eval(...['1'])} = 1)");

