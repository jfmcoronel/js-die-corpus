var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (escapeme) != "undefined") {_RecordType("<9,17,1>",(escapeme)); Inst0++; } } catch(e) {}
function escapeme() {
  ;
}

try { if (Inst1 <= 1000 && typeof (f1) != "undefined") {_RecordType("<38,40,5>",(f1)); Inst1++; } } catch(e) {}
function f1(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<41,42,5>",(x)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (escapeme) != "undefined") {_RecordType("<48,56,6>",(escapeme)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<57,66,6>",(arguments)); Inst4++; } } catch(e) {}
  escapeme(arguments);
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<81,82,7>",(x)); Inst6++; } } catch(e) {}
  var y = ++x;
try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<75,76,7>",(y)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<93,94,8>",(x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<97,98,8>",(y)); Inst8++; } } catch(e) {}
  return x + y;
}

for (var i = 0; i < 100; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<112,113,11>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<119,120,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<130,131,11>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f1) != "undefined") {_RecordType("<137,139,12>",(f1)); Inst12++; } } catch(e) {}
  f1(2);
  6;
}

try { if (Inst13 <= 1000 && typeof (f2) != "undefined") {_RecordType("<161,163,16>",(f2)); Inst13++; } } catch(e) {}
function f2(x) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<164,165,16>",(x)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (escapeme) != "undefined") {_RecordType("<171,179,17>",(escapeme)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<180,189,17>",(arguments)); Inst16++; } } catch(e) {}
  escapeme(arguments);
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<204,205,18>",(x)); Inst18++; } } catch(e) {}
  var y = --x;
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<198,199,18>",(y)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<216,217,19>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<220,221,19>",(y)); Inst20++; } } catch(e) {}
  return x + y;
}

for (var i = 0; i < 100; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<235,236,22>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<242,243,22>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<253,254,22>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (f2) != "undefined") {_RecordType("<260,262,23>",(f2)); Inst24++; } } catch(e) {}
  f2(2);
  2;
}

try { if (Inst25 <= 1000 && typeof (f3) != "undefined") {_RecordType("<284,286,27>",(f3)); Inst25++; } } catch(e) {}
function f3(x) {
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<287,288,27>",(x)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (escapeme) != "undefined") {_RecordType("<294,302,28>",(escapeme)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<303,312,28>",(arguments)); Inst28++; } } catch(e) {}
  escapeme(arguments);
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<325,326,29>",(x)); Inst30++; } } catch(e) {}
  var y = x++;
try { if (Inst29 <= 1000 && typeof (y) != "undefined") {_RecordType("<321,322,29>",(y)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<339,340,30>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (y) != "undefined") {_RecordType("<343,344,30>",(y)); Inst32++; } } catch(e) {}
  return x + y;
}

for (var i = 0; i < 100; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,33>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<365,366,33>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<376,377,33>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (f3) != "undefined") {_RecordType("<383,385,34>",(f3)); Inst36++; } } catch(e) {}
  f3(2);
  5;
}

try { if (Inst37 <= 1000 && typeof (f4) != "undefined") {_RecordType("<407,409,38>",(f4)); Inst37++; } } catch(e) {}
function f4(x) {
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<410,411,38>",(x)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (escapeme) != "undefined") {_RecordType("<417,425,39>",(escapeme)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<426,435,39>",(arguments)); Inst40++; } } catch(e) {}
  escapeme(arguments);
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<448,449,40>",(x)); Inst42++; } } catch(e) {}
  var y = x--;
try { if (Inst41 <= 1000 && typeof (y) != "undefined") {_RecordType("<444,445,40>",(y)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<462,463,41>",(x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (y) != "undefined") {_RecordType("<466,467,41>",(y)); Inst44++; } } catch(e) {}
  return x + y;
}

for (var i = 0; i < 100; ++i) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<481,482,44>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<488,489,44>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<499,500,44>",(i)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (f4) != "undefined") {_RecordType("<506,508,45>",(f4)); Inst48++; } } catch(e) {}
  f4(2);
  3;
}

