var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
JSON = function () {
try { if (Inst1 <= 1000 && typeof (stringify) != "undefined") {_RecordType("<56,65,3>",(stringify)); Inst1++; } } catch(e) {}
  return {
    stringify: function stringify(value, whitelist) {
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<66,71,3>",(value)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (whitelist) != "undefined") {_RecordType("<73,82,3>",(whitelist)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (value) != "undefined") {_RecordType("<107,112,4>",(value)); Inst4++; } } catch(e) {}
      switch (typeof value) {
        case "object":
try { if (Inst5 <= 1000 && typeof (value.constructor.name) != "undefined") {_RecordType("<156,178,6>",(value.constructor.name)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (value.constructor) != "undefined") {_RecordType("<156,173,6>",(value.constructor)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<156,161,6>",(value)); Inst7++; } } catch(e) {}
          return value.constructor.name;
      }
    }
  };
}();
try { if (Inst0 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<0,4,1>",(JSON)); Inst0++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (missingArgTest2) != "undefined") {_RecordType("<214,229,12>",(missingArgTest2)); Inst8++; } } catch(e) {}
function missingArgTest2() {
  var testPairs = [["{}", {}], ["[]", []], ['{"foo":"bar"}', {
    "foo": "bar"
  }]];
try { if (Inst9 <= 1000 && typeof (testPairs) != "undefined") {_RecordType("<240,249,13>",(testPairs)); Inst9++; } } catch(e) {}
  var a = [];
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<327,328,16>",(a)); Inst10++; } } catch(e) {}

  for (var i = 0; i < testPairs.length; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<347,348,18>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<354,355,18>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (testPairs.length) != "undefined") {_RecordType("<358,374,18>",(testPairs.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (testPairs) != "undefined") {_RecordType("<358,367,18>",(testPairs)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<376,377,18>",(i)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<395,409,19>",(JSON.stringify)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<395,399,19>",(JSON)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (testPairs[i][1]) != "undefined") {_RecordType("<410,425,19>",(testPairs[i][1])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (testPairs[i]) != "undefined") {_RecordType("<410,422,19>",(testPairs[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (testPairs) != "undefined") {_RecordType("<410,419,19>",(testPairs)); Inst21++; } } catch(e) {}
    var s = JSON.stringify(testPairs[i][1]);
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<391,392,19>",(s)); Inst16++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<439,440,20>",(s)); Inst24++; } } catch(e) {}
    a[i] = s;
try { if (Inst22 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<432,436,20>",(a[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<432,433,20>",(a)); Inst23++; } } catch(e) {}
  }

try { if (Inst25 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<456,462,23>",(a.join)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<456,457,23>",(a)); Inst26++; } } catch(e) {}
  return a.join(",");
}

try { if (Inst27 <= 1000 && typeof (missingArgTest2) != "undefined") {_RecordType("<472,487,26>",(missingArgTest2)); Inst27++; } } catch(e) {}
missingArgTest2();
"Object,Array,Object";

