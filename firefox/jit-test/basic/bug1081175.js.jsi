var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var input = "webkit-search-cancel-button-aaaaaaa-bbbbb-ccccccc-dddddddd,";
try { if (Inst0 <= 1000 && typeof (input) != "undefined") {_RecordType("<4,9,1>",(input)); Inst0++; } } catch(e) {}
var bad_regex = '([a-u-]|\\u0080|\\u0100)*[d]';
try { if (Inst1 <= 1000 && typeof (bad_regex) != "undefined") {_RecordType("<79,88,2>",(bad_regex)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (forceUnicode) != "undefined") {_RecordType("<133,145,4>",(forceUnicode)); Inst2++; } } catch(e) {}
function forceUnicode(s) {
try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<146,147,4>",(s)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (('\uffff' + s).replace) != "undefined") {_RecordType("<160,182,5>",(('\uffff' + s).replace)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<172,173,5>",(s)); Inst5++; } } catch(e) {}
  return ('\uffff' + s).replace(/^\uffff/, '');
}

try { if (Inst6 <= 1000 && typeof (testRegex) != "undefined") {_RecordType("<211,220,8>",(testRegex)); Inst6++; } } catch(e) {}
function testRegex(input) {
try { if (Inst7 <= 1000 && typeof (input) != "undefined") {_RecordType("<221,226,8>",(input)); Inst7++; } } catch(e) {}
  for (var i = 0; i < input.length; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<241,242,9>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<248,249,9>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (input.length) != "undefined") {_RecordType("<252,264,9>",(input.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (input) != "undefined") {_RecordType("<252,257,9>",(input)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<266,267,9>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (input.substring) != "undefined") {_RecordType("<287,302,10>",(input.substring)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (input) != "undefined") {_RecordType("<287,292,10>",(input)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,10>",(i)); Inst16++; } } catch(e) {}
    var sub = input.substring(0, i + 1);
try { if (Inst13 <= 1000 && typeof (sub) != "undefined") {_RecordType("<281,284,10>",(sub)); Inst13++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (sub.match) != "undefined") {_RecordType("<328,337,11>",(sub.match)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (sub) != "undefined") {_RecordType("<328,331,11>",(sub)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (bad_regex) != "undefined") {_RecordType("<338,347,11>",(bad_regex)); Inst20++; } } catch(e) {}
    var res = sub.match(bad_regex);
try { if (Inst17 <= 1000 && typeof (res) != "undefined") {_RecordType("<322,325,11>",(res)); Inst17++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<359,360,13>",(i)); Inst21++; } } catch(e) {}
    if (i >= 50) {
try { if (Inst22 <= 1000 && typeof (res.length) != "undefined") {_RecordType("<376,386,14>",(res.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (res) != "undefined") {_RecordType("<376,379,14>",(res)); Inst23++; } } catch(e) {}
      res.length;
      2;
try { if (Inst24 <= 1000 && typeof (res[1]) != "undefined") {_RecordType("<403,409,16>",(res[1])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (res) != "undefined") {_RecordType("<403,406,16>",(res)); Inst25++; } } catch(e) {}
      res[1];
try { if (Inst26 <= 1000 && typeof (sub.substr) != "undefined") {_RecordType("<417,427,17>",(sub.substr)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (sub) != "undefined") {_RecordType("<417,420,17>",(sub)); Inst27++; } } catch(e) {}
      sub.substr(-2, 1);
    } else {
try { if (Inst28 <= 1000 && typeof (res) != "undefined") {_RecordType("<455,458,19>",(res)); Inst28++; } } catch(e) {}
      res;
      null;
    }
  }
}

try { if (Inst29 <= 1000 && typeof (testRegex) != "undefined") {_RecordType("<485,494,25>",(testRegex)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (input) != "undefined") {_RecordType("<495,500,25>",(input)); Inst30++; } } catch(e) {}
testRegex(input);
try { if (Inst31 <= 1000 && typeof (testRegex) != "undefined") {_RecordType("<503,512,26>",(testRegex)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (forceUnicode) != "undefined") {_RecordType("<513,525,26>",(forceUnicode)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (input) != "undefined") {_RecordType("<526,531,26>",(input)); Inst33++; } } catch(e) {}
testRegex(forceUnicode(input));

