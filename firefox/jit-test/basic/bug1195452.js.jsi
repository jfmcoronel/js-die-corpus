var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| allow-oom; allow-unhandlable-oom
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<64,69,2>",(Array)); Inst1++; } } catch(e) {}
var lfcode = new Array();
try { if (Inst0 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<51,57,2>",(lfcode)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<73,84,3>",(lfcode.push)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<73,79,3>",(lfcode)); Inst3++; } } catch(e) {}
lfcode.push(`
function TestCase(e) {
    this.expect = e;
}
function writeHeaderToLog() {}
var SECTION = "15.5.4.7-1";
var TITLE = "String.protoype.lastIndexOf";
writeHeaderToLog();
var j = 0;
for (k = 0, i = 0x0021; i < 0x007e; i++, j++, k++)
    new TestCase("x" - 1);
LastIndexOf();
function LastIndexOf() {
    if (isNaN(n)) {}
}
`);
try { if (Inst4 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<411,422,19>",(lfcode.push)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<411,417,19>",(lfcode)); Inst5++; } } catch(e) {}
lfcode.push(`
oomAfterAllocations(50);
writeHeaderToLog(SECTION + " " + TITLE);
var expect = "Passed";
try {
    eval("this = true");
} catch (e) {
    result = expect;
    exception = e.toString(0, 0);
}
new TestCase();
`);

try { if (Inst6 <= 1000 && typeof (lfcode.length) != "undefined") {_RecordType("<644,657,32>",(lfcode.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<644,650,32>",(lfcode)); Inst7++; } } catch(e) {}
while (lfcode.length > 0) {
try { if (Inst9 <= 1000 && typeof (lfcode.shift) != "undefined") {_RecordType("<678,690,33>",(lfcode.shift)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<678,684,33>",(lfcode)); Inst10++; } } catch(e) {}
  var file = lfcode.shift();
try { if (Inst8 <= 1000 && typeof (file) != "undefined") {_RecordType("<671,675,33>",(file)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (loadFile) != "undefined") {_RecordType("<696,704,34>",(loadFile)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (file) != "undefined") {_RecordType("<705,709,34>",(file)); Inst12++; } } catch(e) {}
  loadFile(file);
}

try { if (Inst13 <= 1000 && typeof (loadFile) != "undefined") {_RecordType("<724,732,37>",(loadFile)); Inst13++; } } catch(e) {}
function loadFile(lfVarx) {
try { if (Inst14 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<733,739,37>",(lfVarx)); Inst14++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (lfVare) != "undefined") {_RecordType("<852,858,42>",(lfVare)); Inst21++; } } catch(e) {}
  try {
try { if (Inst15 <= 1000 && typeof (lfVarx.substr) != "undefined") {_RecordType("<759,772,39>",(lfVarx.substr)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<759,765,39>",(lfVarx)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (lfVarx.length) != "undefined") {_RecordType("<789,802,39>",(lfVarx.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<789,795,39>",(lfVarx)); Inst18++; } } catch(e) {}
    if (lfVarx.substr(-3) != ".js" && lfVarx.length != 1) {
try { if (Inst19 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<817,825,40>",(evaluate)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<826,832,40>",(lfVarx)); Inst20++; } } catch(e) {}
      evaluate(lfVarx);
    }
  } catch (lfVare) {
    ;
  }
}

