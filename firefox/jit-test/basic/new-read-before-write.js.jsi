var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<9,12,1>",(Foo)); Inst0++; } } catch(e) {}
function Foo() {
try { if (Inst2 <= 1000 && typeof (this.property) != "undefined") {_RecordType("<27,40,2>",(this.property)); Inst2++; } } catch(e) {}
  var x = this.property;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<23,24,2>",(x)); Inst1++; } } catch(e) {}
  this.property = 5;
try { if (Inst3 <= 1000 && typeof (this.property) != "undefined") {_RecordType("<44,57,3>",(this.property)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<72,73,4>",(x)); Inst5++; } } catch(e) {}
  glob = x;
try { if (Inst4 <= 1000 && typeof (glob) != "undefined") {_RecordType("<65,69,4>",(glob)); Inst4++; } } catch(e) {}
}

Foo.prototype.property = 10;
try { if (Inst6 <= 1000 && typeof (Foo.prototype.property) != "undefined") {_RecordType("<78,100,7>",(Foo.prototype.property)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<78,91,7>",(Foo.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<78,81,7>",(Foo)); Inst8++; } } catch(e) {}

for (var i = 0; i < 10; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<117,118,9>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<124,125,9>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<132,133,9>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<145,148,10>",(Foo)); Inst12++; } } catch(e) {}
  new Foo();
try { if (Inst13 <= 1000 && typeof (glob) != "undefined") {_RecordType("<154,158,11>",(glob)); Inst13++; } } catch(e) {}
  glob;
  10;
}

try { if (Inst14 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<178,181,15>",(Bar)); Inst14++; } } catch(e) {}
function Bar() {
try { if (Inst15 <= 1000 && typeof (this.property) != "undefined") {_RecordType("<188,201,16>",(this.property)); Inst15++; } } catch(e) {}
  this.property;
  this.other = 5;
try { if (Inst16 <= 1000 && typeof (this.other) != "undefined") {_RecordType("<205,215,17>",(this.other)); Inst16++; } } catch(e) {}
}

Bar.prototype.other = 10;
try { if (Inst17 <= 1000 && typeof (Bar.prototype.other) != "undefined") {_RecordType("<224,243,20>",(Bar.prototype.other)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Bar.prototype) != "undefined") {_RecordType("<224,237,20>",(Bar.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<224,227,20>",(Bar)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<250,271,21>",(Object.defineProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<250,256,21>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Bar.prototype) != "undefined") {_RecordType("<272,285,21>",(Bar.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<272,275,21>",(Bar)); Inst23++; } } catch(e) {}
Object.defineProperty(Bar.prototype, "property", {
  get: function () {
try { if (Inst25 <= 1000 && typeof (this.other) != "undefined") {_RecordType("<333,343,23>",(this.other)); Inst25++; } } catch(e) {}
    glob = this.other;
try { if (Inst24 <= 1000 && typeof (glob) != "undefined") {_RecordType("<326,330,23>",(glob)); Inst24++; } } catch(e) {}
  }
});

for (var i = 0; i < 10; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<363,364,27>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<370,371,27>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,27>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<391,394,28>",(Bar)); Inst29++; } } catch(e) {}
  new Bar();
try { if (Inst30 <= 1000 && typeof (glob) != "undefined") {_RecordType("<400,404,29>",(glob)); Inst30++; } } catch(e) {}
  glob;
  10;
}

