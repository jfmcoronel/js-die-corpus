var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (build_getter) != "undefined") {_RecordType("<9,21,1>",(build_getter)); Inst0++; } } catch(e) {}
function build_getter(i) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<22,23,1>",(i)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<38,39,2>",(i)); Inst3++; } } catch(e) {}
  var x = [i];
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<33,34,2>",(x)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<60,61,3>",(f)); Inst4++; } } catch(e) {}
  return function f() {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<77,78,4>",(x)); Inst5++; } } catch(e) {}
    return x;
  };
}

try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<97,101,8>",(test)); Inst6++; } } catch(e) {}
function test() {
  var N = 0x1000;
try { if (Inst7 <= 1000 && typeof (N) != "undefined") {_RecordType("<112,113,9>",(N)); Inst7++; } } catch(e) {}
  var o = {};
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<130,131,10>",(o)); Inst8++; } } catch(e) {}
  var descriptor = {
    enumerable: true
  };
try { if (Inst9 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<144,154,11>",(descriptor)); Inst9++; } } catch(e) {}

  for (var i = 0; i != N; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,15>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,15>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (N) != "undefined") {_RecordType("<209,210,15>",(N)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,15>",(i)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (build_getter) != "undefined") {_RecordType("<240,252,16>",(build_getter)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<253,254,16>",(i)); Inst17++; } } catch(e) {}
    descriptor.get = build_getter(i);
try { if (Inst14 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<223,237,16>",(descriptor.get)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<223,233,16>",(descriptor)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<261,282,17>",(Object.defineProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<261,267,17>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<283,284,17>",(o)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<286,287,17>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<289,299,17>",(descriptor)); Inst22++; } } catch(e) {}
    Object.defineProperty(o, i, descriptor);
  } // At this point we have an object o with N getters. Each getter in turn
  // is a closure storing an array. During the GC we push to the object
  // marking stack all the getters found in an object after we mark it. As N
  // exceeds the size of the object marking stack, this requires to run the
  // dealyed scanning for some closures to mark the array objects stored in
  // them.
  //
  // We run the GC twice to make sure that the background finalization
  // finishes before we access the objects.


try { if (Inst23 <= 1000 && typeof (gc) != "undefined") {_RecordType("<815,817,29>",(gc)); Inst23++; } } catch(e) {}
  gc();
try { if (Inst24 <= 1000 && typeof (gc) != "undefined") {_RecordType("<823,825,30>",(gc)); Inst24++; } } catch(e) {}
  gc();

  for (var i = 0; i != N; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<841,842,32>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<848,849,32>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (N) != "undefined") {_RecordType("<853,854,32>",(N)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<858,859,32>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (o[i][0]) != "undefined") {_RecordType("<867,874,33>",(o[i][0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o[i]) != "undefined") {_RecordType("<867,871,33>",(o[i])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<867,868,33>",(o)); Inst31++; } } catch(e) {}
    o[i][0];
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<880,881,34>",(i)); Inst32++; } } catch(e) {}
    i;
  }
}

try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<890,894,38>",(test)); Inst33++; } } catch(e) {}
test();

