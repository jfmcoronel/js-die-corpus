var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The teleporting optimization should work correctly
// when we modify an object's proto.
var A = {
  x: 1
};
try { if (Inst0 <= 1000 && typeof (A) != "undefined") {_RecordType("<95,96,3>",(A)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<119,132,6>",(Object.create)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<119,125,6>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (A) != "undefined") {_RecordType("<133,134,6>",(A)); Inst4++; } } catch(e) {}
var B = Object.create(A);
try { if (Inst1 <= 1000 && typeof (B) != "undefined") {_RecordType("<115,116,6>",(B)); Inst1++; } } catch(e) {}
var C = {};
try { if (Inst5 <= 1000 && typeof (C) != "undefined") {_RecordType("<141,142,7>",(C)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (B) != "undefined") {_RecordType("<163,164,8>",(B)); Inst8++; } } catch(e) {}
C.__proto__ = B;
try { if (Inst6 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<149,160,8>",(C.__proto__)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (C) != "undefined") {_RecordType("<149,150,8>",(C)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<176,177,10>",(f)); Inst9++; } } catch(e) {}
function f() {
  for (var i = 0; i < 25; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<193,194,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,11>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,11>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (C.x) != "undefined") {_RecordType("<219,222,12>",(C.x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (C) != "undefined") {_RecordType("<219,220,12>",(C)); Inst14++; } } catch(e) {}
    C.x;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<228,229,13>",(i)); Inst15++; } } catch(e) {}
    i <= 20 ? 1 : 3;

try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<254,255,15>",(i)); Inst16++; } } catch(e) {}
    if (i === 20) {
      B.x = 3;
try { if (Inst17 <= 1000 && typeof (B.x) != "undefined") {_RecordType("<272,275,16>",(B.x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (B) != "undefined") {_RecordType("<272,273,16>",(B)); Inst18++; } } catch(e) {}
    }
  }
}

try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<294,295,21>",(f)); Inst19++; } } catch(e) {}
f();

