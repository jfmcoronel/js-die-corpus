var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
const MAX = 10000;
try { if (Inst0 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<6,9,1>",(MAX)); Inst0++; } } catch(e) {}
var arr = [];
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<23,26,2>",(arr)); Inst1++; } } catch(e) {}
var str = "";
try { if (Inst2 <= 1000 && typeof (str) != "undefined") {_RecordType("<37,40,3>",(str)); Inst2++; } } catch(e) {}

for (var i = 0; i < MAX; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<57,58,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<64,65,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<68,71,5>",(MAX)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<75,76,5>",(i)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (/x/.test) != "undefined") {_RecordType("<82,90,6>",(/x/.test)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (str) != "undefined") {_RecordType("<91,94,6>",(str)); Inst8++; } } catch(e) {}
  /x/.test(str);
try { if (Inst10 <= 1000 && typeof (str) != "undefined") {_RecordType("<105,108,7>",(str)); Inst10++; } } catch(e) {}
  str = str + 'xxxxxxxxxxxxxx';
try { if (Inst9 <= 1000 && typeof (str) != "undefined") {_RecordType("<99,102,7>",(str)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<131,139,8>",(arr.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<131,134,8>",(arr)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (str) != "undefined") {_RecordType("<140,143,8>",(str)); Inst13++; } } catch(e) {}
  arr.push(str);
}

try { if (Inst16 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<162,172,11>",(Math.floor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<162,166,11>",(Math)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<173,176,11>",(MAX)); Inst18++; } } catch(e) {}
arr.length = Math.floor(MAX / 3);
try { if (Inst14 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<149,159,11>",(arr.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<149,152,11>",(arr)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (gc) != "undefined") {_RecordType("<183,185,12>",(gc)); Inst19++; } } catch(e) {}
gc();

for (var i = 0; i < MAX; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<199,200,14>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<206,207,14>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<210,213,14>",(MAX)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,14>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (/x/.test) != "undefined") {_RecordType("<224,232,15>",(/x/.test)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<233,239,15>",(arr[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arr) != "undefined") {_RecordType("<233,236,15>",(arr)); Inst26++; } } catch(e) {}
  /x/.test(arr[i]);
}

