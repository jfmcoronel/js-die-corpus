var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var g = true;
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<4,5,1>",(g)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (get) != "undefined") {_RecordType("<24,27,3>",(get)); Inst1++; } } catch(e) {}
function get(name) {
try { if (Inst2 <= 1000 && typeof (name) != "undefined") {_RecordType("<28,32,3>",(name)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (g) != "undefined") {_RecordType("<42,43,4>",(g)); Inst3++; } } catch(e) {}
  if (g) {
    return 8;
  }
}

try { if (Inst5 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<80,85,9>",(Proxy)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (get) != "undefined") {_RecordType("<99,102,10>",(get)); Inst6++; } } catch(e) {}
var p = new Proxy({}, {
  get: get
});
try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<72,73,9>",(p)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<116,129,12>",(Object.create)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<116,122,12>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<130,131,12>",(p)); Inst10++; } } catch(e) {}
var o2 = Object.create(p);
try { if (Inst7 <= 1000 && typeof (o2) != "undefined") {_RecordType("<111,113,12>",(o2)); Inst7++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<144,148,14>",(test)); Inst11++; } } catch(e) {}
function test(x, expected) {
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<149,150,14>",(x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (expected) != "undefined") {_RecordType("<152,160,14>",(expected)); Inst13++; } } catch(e) {}
  for (var i = 0; i < 3; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,15>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<182,183,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<189,190,15>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x.hello) != "undefined") {_RecordType("<208,215,16>",(x.hello)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<208,209,16>",(x)); Inst19++; } } catch(e) {}
    var v = x.hello;
try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<204,205,16>",(v)); Inst17++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<226,227,18>",(g)); Inst20++; } } catch(e) {}
    if (g) {
try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<237,238,19>",(v)); Inst21++; } } catch(e) {}
      v;
      8;
    }
  }
}

g = false;
try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<262,263,25>",(g)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<273,277,26>",(test)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o2) != "undefined") {_RecordType("<278,280,26>",(o2)); Inst24++; } } catch(e) {}
test(o2);
g = true;
try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<283,284,27>",(g)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<293,297,28>",(test)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o2) != "undefined") {_RecordType("<298,300,28>",(o2)); Inst27++; } } catch(e) {}
test(o2);

