var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test the Error.prototype.stack getter/setter with various "fun" edge cases.
// Stack should be accessible in subclasses. The accessor should walk up the
// prototype chain.
try { if (Inst0 <= 1000 && typeof (Object.create(Error()).stack) != "undefined") {_RecordType("<183,211,4>",(Object.create(Error()).stack)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<183,196,4>",(Object.create)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<183,189,4>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Error) != "undefined") {_RecordType("<197,202,4>",(Error)); Inst3++; } } catch(e) {}
typeof Object.create(Error()).stack;
"string";
try { if (Inst4 <= 1000 && typeof (Object.create(Error.prototype).stack) != "undefined") {_RecordType("<223,259,6>",(Object.create(Error.prototype).stack)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<223,236,6>",(Object.create)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<223,229,6>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Error.prototype) != "undefined") {_RecordType("<237,252,6>",(Error.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Error) != "undefined") {_RecordType("<237,242,6>",(Error)); Inst8++; } } catch(e) {}
Object.create(Error.prototype).stack;
"";
// Stack should be overridable in subclasses.
{
try { if (Inst10 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<329,342,10>",(Object.create)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<329,335,10>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Error) != "undefined") {_RecordType("<343,348,10>",(Error)); Inst12++; } } catch(e) {}
  let myError = Object.create(Error());
try { if (Inst9 <= 1000 && typeof (myError) != "undefined") {_RecordType("<319,326,10>",(myError)); Inst9++; } } catch(e) {}
  myError.stack = 5;
try { if (Inst13 <= 1000 && typeof (myError.stack) != "undefined") {_RecordType("<355,368,11>",(myError.stack)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (myError) != "undefined") {_RecordType("<355,362,11>",(myError)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (myError.stack) != "undefined") {_RecordType("<376,389,12>",(myError.stack)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (myError) != "undefined") {_RecordType("<376,383,12>",(myError)); Inst16++; } } catch(e) {}
  myError.stack;
  5;
try { if (Inst18 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<417,430,14>",(Object.create)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<417,423,14>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Error.prototype) != "undefined") {_RecordType("<431,446,14>",(Error.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Error) != "undefined") {_RecordType("<431,436,14>",(Error)); Inst21++; } } catch(e) {}
  let myOtherError = Object.create(Error.prototype);
try { if (Inst17 <= 1000 && typeof (myOtherError) != "undefined") {_RecordType("<402,414,14>",(myOtherError)); Inst17++; } } catch(e) {}
  myOtherError.stack = 2;
try { if (Inst22 <= 1000 && typeof (myOtherError.stack) != "undefined") {_RecordType("<451,469,15>",(myOtherError.stack)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (myOtherError) != "undefined") {_RecordType("<451,463,15>",(myOtherError)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (myOtherError.stack) != "undefined") {_RecordType("<477,495,16>",(myOtherError.stack)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (myOtherError) != "undefined") {_RecordType("<477,489,16>",(myOtherError)); Inst25++; } } catch(e) {}
  myOtherError.stack;
  2;
} // Should throw when there is no Error in the `this` object's prototype chain.

try { if (Inst27 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<594,607,20>",(Object.create)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<594,600,20>",(Object)); Inst28++; } } catch(e) {}
var obj = Object.create(null);
try { if (Inst26 <= 1000 && typeof (obj) != "undefined") {_RecordType("<588,591,20>",(obj)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<626,657,21>",(Object.getOwnPropertyDescriptor)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<626,632,21>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Error.prototype) != "undefined") {_RecordType("<658,673,21>",(Error.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Error) != "undefined") {_RecordType("<658,663,21>",(Error)); Inst33++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(Error.prototype, "stack");
try { if (Inst29 <= 1000 && typeof (desc) != "undefined") {_RecordType("<619,623,21>",(desc)); Inst29++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<685,706,22>",(Object.defineProperty)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Object) != "undefined") {_RecordType("<685,691,22>",(Object)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (obj) != "undefined") {_RecordType("<707,710,22>",(obj)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (desc) != "undefined") {_RecordType("<721,725,22>",(desc)); Inst37++; } } catch(e) {}
Object.defineProperty(obj, "stack", desc);

try { if (Inst38 <= 1000 && typeof (obj.stack) != "undefined") {_RecordType("<736,745,24>",(obj.stack)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (obj) != "undefined") {_RecordType("<736,739,24>",(obj)); Inst39++; } } catch(e) {}
(() => obj.stack)();

try { if (Inst40 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<751,760,26>",(TypeError)); Inst40++; } } catch(e) {}
TypeError;
try { if (Inst41 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<762,770,27>",(desc.set)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (desc) != "undefined") {_RecordType("<762,766,27>",(desc)); Inst42++; } } catch(e) {}
desc.set;
try { if (Inst43 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<772,781,28>",(TypeError)); Inst43++; } } catch(e) {}
TypeError;
try { if (Inst44 <= 1000 && typeof (desc.set.bind) != "undefined") {_RecordType("<783,796,29>",(desc.set.bind)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<783,791,29>",(desc.set)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (desc) != "undefined") {_RecordType("<783,787,29>",(desc)); Inst46++; } } catch(e) {}
desc.set.bind("string");
try { if (Inst47 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<808,817,30>",(TypeError)); Inst47++; } } catch(e) {}
TypeError;
try { if (Inst48 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<819,827,31>",(desc.get)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (desc) != "undefined") {_RecordType("<819,823,31>",(desc)); Inst49++; } } catch(e) {}
desc.get;
try { if (Inst50 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<829,838,32>",(TypeError)); Inst50++; } } catch(e) {}
TypeError;
try { if (Inst51 <= 1000 && typeof (desc.get.bind) != "undefined") {_RecordType("<840,853,33>",(desc.get.bind)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<840,848,33>",(desc.get)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (desc) != "undefined") {_RecordType("<840,844,33>",(desc)); Inst53++; } } catch(e) {}
desc.get.bind("string");
try { if (Inst54 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<865,874,34>",(TypeError)); Inst54++; } } catch(e) {}
TypeError;

