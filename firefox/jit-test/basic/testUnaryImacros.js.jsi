var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testUnaryImacros) != "undefined") {_RecordType("<9,25,1>",(testUnaryImacros)); Inst0++; } } catch(e) {}
function testUnaryImacros() {
try { if (Inst1 <= 1000 && typeof (checkArg) != "undefined") {_RecordType("<41,49,2>",(checkArg)); Inst1++; } } catch(e) {}
  function checkArg(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<50,51,2>",(x)); Inst2++; } } catch(e) {}
    return 1;
  }

try { if (Inst4 <= 1000 && typeof (checkArg) != "undefined") {_RecordType("<99,107,7>",(checkArg)); Inst4++; } } catch(e) {}
  var o = {
    valueOf: checkArg,
    toString: null
  };
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<80,81,6>",(o)); Inst3++; } } catch(e) {}
  var count = 0;
try { if (Inst5 <= 1000 && typeof (count) != "undefined") {_RecordType("<139,144,10>",(count)); Inst5++; } } catch(e) {}
  var v = 0;
try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<156,157,11>",(v)); Inst6++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,13>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<182,183,13>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<189,190,13>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<206,207,14>",(o)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<213,214,14>",(o)); Inst12++; } } catch(e) {}
    v += +o + - -o;
try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<200,201,14>",(v)); Inst10++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<238,239,17>",(v)); Inst14++; } } catch(e) {}
  var results = [v === 10 ? "valueOf passed" : "valueOf failed"];
try { if (Inst13 <= 1000 && typeof (results) != "undefined") {_RecordType("<227,234,17>",(results)); Inst13++; } } catch(e) {}
  o.valueOf = null;
try { if (Inst15 <= 1000 && typeof (o.valueOf) != "undefined") {_RecordType("<289,298,18>",(o.valueOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<289,290,18>",(o)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (checkArg) != "undefined") {_RecordType("<322,330,19>",(checkArg)); Inst19++; } } catch(e) {}
  o.toString = checkArg;
try { if (Inst17 <= 1000 && typeof (o.toString) != "undefined") {_RecordType("<309,319,19>",(o.toString)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<309,310,19>",(o)); Inst18++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,21>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<351,352,21>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,21>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<375,376,22>",(o)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<382,383,22>",(o)); Inst25++; } } catch(e) {}
    v += +o + - -o;
try { if (Inst23 <= 1000 && typeof (v) != "undefined") {_RecordType("<369,370,22>",(v)); Inst23++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (results.push) != "undefined") {_RecordType("<392,404,25>",(results.push)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (results) != "undefined") {_RecordType("<392,399,25>",(results)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<405,406,25>",(v)); Inst28++; } } catch(e) {}
  results.push(v === 20 ? "toString passed" : "toString failed");
try { if (Inst29 <= 1000 && typeof (results.join) != "undefined") {_RecordType("<465,477,26>",(results.join)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (results) != "undefined") {_RecordType("<465,472,26>",(results)); Inst30++; } } catch(e) {}
  return results.join(", ");
}

try { if (Inst31 <= 1000 && typeof (testUnaryImacros) != "undefined") {_RecordType("<488,504,29>",(testUnaryImacros)); Inst31++; } } catch(e) {}
testUnaryImacros();
"valueOf passed, toString passed";

