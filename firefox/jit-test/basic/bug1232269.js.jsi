var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f() {
  for (var i = 0; i < 100; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<26,27,2>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<33,34,2>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<42,43,2>",(i)); Inst3++; } } catch(e) {}
    var obj = {
      data: {
        id: 1
      }
    };
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<57,60,3>",(obj)); Inst4++; } } catch(e) {}
  }

try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<115,136,10>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<115,121,10>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<137,140,10>",(obj)); Inst7++; } } catch(e) {}
  Object.defineProperty(obj, "id", {
    configurable: true,
    enumerable: false,
    get: function () {
try { if (Inst8 <= 1000 && typeof (this.data.id) != "undefined") {_RecordType("<233,245,14>",(this.data.id)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (this.data) != "undefined") {_RecordType("<233,242,14>",(this.data)); Inst9++; } } catch(e) {}
      return this.data.id;
    }
  });
try { if (Inst10 <= 1000 && typeof (obj.id) != "undefined") {_RecordType("<268,274,17>",(obj.id)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<268,271,17>",(obj)); Inst11++; } } catch(e) {}
  return obj.id;
}

try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<279,280,20>",(f)); Inst12++; } } catch(e) {}
f();
1;

try { if (Inst13 <= 1000 && typeof (f2) != "undefined") {_RecordType("<297,299,23>",(f2)); Inst13++; } } catch(e) {}
function f2() {
  for (var i = 0; i < 100; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,24>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<322,323,24>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,24>",(i)); Inst16++; } } catch(e) {}
    var obj = {
      data: {
        id: 1
      }
    };
try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<346,349,25>",(obj)); Inst17++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<404,425,32>",(Object.defineProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<404,410,32>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<426,429,32>",(obj)); Inst20++; } } catch(e) {}
  Object.defineProperty(obj, "id", {
    configurable: true,
    enumerable: false,
    get: function () {
try { if (Inst21 <= 1000 && typeof (this.data.id) != "undefined") {_RecordType("<522,534,36>",(this.data.id)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (this.data) != "undefined") {_RecordType("<522,531,36>",(this.data)); Inst22++; } } catch(e) {}
      return this.data.id;
    },
    set: function (v) {
try { if (Inst23 <= 1000 && typeof (v) != "undefined") {_RecordType("<562,563,38>",(v)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<588,589,39>",(v)); Inst26++; } } catch(e) {}
      this.data.id = v;
try { if (Inst24 <= 1000 && typeof (this.data.id) != "undefined") {_RecordType("<573,585,39>",(this.data.id)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (this.data) != "undefined") {_RecordType("<573,582,39>",(this.data)); Inst25++; } } catch(e) {}
    }
  });
  obj.id = 3;
try { if (Inst27 <= 1000 && typeof (obj.id) != "undefined") {_RecordType("<605,611,42>",(obj.id)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<605,608,42>",(obj)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (obj.id) != "undefined") {_RecordType("<626,632,43>",(obj.id)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj) != "undefined") {_RecordType("<626,629,43>",(obj)); Inst30++; } } catch(e) {}
  return obj.id;
}

try { if (Inst31 <= 1000 && typeof (f2) != "undefined") {_RecordType("<637,639,46>",(f2)); Inst31++; } } catch(e) {}
f2();
3;

