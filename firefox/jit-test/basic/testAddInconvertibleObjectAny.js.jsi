var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testAddInconvertibleObjectAny) != "undefined") {_RecordType("<9,38,1>",(testAddInconvertibleObjectAny)); Inst0++; } } catch(e) {}
function testAddInconvertibleObjectAny() {
  var count = 0;
try { if (Inst1 <= 1000 && typeof (count) != "undefined") {_RecordType("<49,54,2>",(count)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (toString) != "undefined") {_RecordType("<72,80,4>",(toString)); Inst2++; } } catch(e) {}
  function toString() {
try { if (Inst3 <= 1000 && typeof (count) != "undefined") {_RecordType("<91,96,5>",(count)); Inst3++; } } catch(e) {}
    ++count;

try { if (Inst4 <= 1000 && typeof (count) != "undefined") {_RecordType("<107,112,7>",(count)); Inst4++; } } catch(e) {}
    if (count == 95) {
      return {};
    }

try { if (Inst5 <= 1000 && typeof (count) != "undefined") {_RecordType("<162,167,11>",(count)); Inst5++; } } catch(e) {}
    return "" + count;
  }

try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<199,208,15>",(undefined)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (toString) != "undefined") {_RecordType("<224,232,16>",(toString)); Inst8++; } } catch(e) {}
  var o = {
    valueOf: undefined,
    toString: toString
  };
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<180,181,14>",(o)); Inst6++; } } catch(e) {}
  var threw = false;
try { if (Inst9 <= 1000 && typeof (threw) != "undefined") {_RecordType("<244,249,18>",(threw)); Inst9++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<342,343,24>",(e)); Inst15++; } } catch(e) {}
  try {
    for (var i = 0; i < 100; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<281,282,21>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,21>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<297,298,21>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<318,319,22>",(o)); Inst14++; } } catch(e) {}
      var q = o + 5;
try { if (Inst13 <= 1000 && typeof (q) != "undefined") {_RecordType("<314,315,22>",(q)); Inst13++; } } catch(e) {}
    }
  } catch (e) {
    threw = true;
try { if (Inst16 <= 1000 && typeof (threw) != "undefined") {_RecordType("<351,356,25>",(threw)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<374,375,27>",(i)); Inst17++; } } catch(e) {}
    if (i !== 94) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,28>",(i)); Inst18++; } } catch(e) {}
      return "expected i === 94, got " + i;
    }

try { if (Inst19 <= 1000 && typeof (q) != "undefined") {_RecordType("<445,446,31>",(q)); Inst19++; } } catch(e) {}
    if (q !== "945") {
try { if (Inst20 <= 1000 && typeof (q) != "undefined") {_RecordType("<504,505,32>",(q)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (q) != "undefined") {_RecordType("<527,528,32>",(q)); Inst21++; } } catch(e) {}
      return "expected q === '945', got " + q + " (type " + typeof q + ")";
    }

try { if (Inst22 <= 1000 && typeof (count) != "undefined") {_RecordType("<551,556,35>",(count)); Inst22++; } } catch(e) {}
    if (count !== 95) {
try { if (Inst23 <= 1000 && typeof (count) != "undefined") {_RecordType("<612,617,36>",(count)); Inst23++; } } catch(e) {}
      return "expected count === 95, got " + count;
    }
  }

try { if (Inst24 <= 1000 && typeof (threw) != "undefined") {_RecordType("<637,642,40>",(threw)); Inst24++; } } catch(e) {}
  if (!threw) {
    return "expected throw with o + 5";
  }

  return "pass";
}

try { if (Inst25 <= 1000 && typeof (testAddInconvertibleObjectAny) != "undefined") {_RecordType("<711,740,47>",(testAddInconvertibleObjectAny)); Inst25++; } } catch(e) {}
testAddInconvertibleObjectAny();
"pass";

