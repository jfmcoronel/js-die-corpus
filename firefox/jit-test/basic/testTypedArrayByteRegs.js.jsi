var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Uint8Array and Int8Array need single byte registers.
// Test for id and value having the same backing.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<115,116,3>",(f)); Inst0++; } } catch(e) {}
function f() {
try { if (Inst2 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<135,145,4>",(Uint8Array)); Inst2++; } } catch(e) {}
  var x = new Uint8Array(30);
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<127,128,4>",(x)); Inst1++; } } catch(e) {}

  for (var i = 0; i < x.length; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,6>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<174,182,6>",(x.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<174,175,6>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<184,185,6>",(i)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,7>",(i)); Inst10++; } } catch(e) {}
    x[i] = i;
try { if (Inst8 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<195,199,7>",(x[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<195,196,7>",(x)); Inst9++; } } catch(e) {}
  }

  var res = 0;
try { if (Inst11 <= 1000 && typeof (res) != "undefined") {_RecordType("<216,219,10>",(res)); Inst11++; } } catch(e) {}

  for (var i = 0; i < x.length; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<237,238,12>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<244,245,12>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<248,256,12>",(x.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<248,249,12>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<258,259,12>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<276,280,13>",(x[i])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<276,277,13>",(x)); Inst19++; } } catch(e) {}
    res += x[i];
try { if (Inst17 <= 1000 && typeof (res) != "undefined") {_RecordType("<269,272,13>",(res)); Inst17++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (res) != "undefined") {_RecordType("<289,292,16>",(res)); Inst20++; } } catch(e) {}
  res;
  435;
}

try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<304,305,20>",(f)); Inst21++; } } catch(e) {}
f(); // Test for id and value having a different backing.

try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<372,373,22>",(g)); Inst22++; } } catch(e) {}
function g() {
try { if (Inst24 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<392,401,23>",(Int8Array)); Inst24++; } } catch(e) {}
  var x = new Int8Array(30);
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<384,385,23>",(x)); Inst23++; } } catch(e) {}

  for (var i = 1; i < x.length; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<419,420,25>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<426,427,25>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<430,438,25>",(x.length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<430,431,25>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<440,441,25>",(i)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,26>",(i)); Inst33++; } } catch(e) {}
    x[i - 1] = i;
try { if (Inst30 <= 1000 && typeof (x[i - 1]) != "undefined") {_RecordType("<451,459,26>",(x[i - 1])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<451,452,26>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<453,454,26>",(i)); Inst32++; } } catch(e) {}
  }

  var res = 0;
try { if (Inst34 <= 1000 && typeof (res) != "undefined") {_RecordType("<476,479,29>",(res)); Inst34++; } } catch(e) {}

  for (var i = 0; i < x.length; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<497,498,31>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<504,505,31>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<508,516,31>",(x.length)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<508,509,31>",(x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<518,519,31>",(i)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<536,540,32>",(x[i])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<536,537,32>",(x)); Inst42++; } } catch(e) {}
    res += x[i];
try { if (Inst40 <= 1000 && typeof (res) != "undefined") {_RecordType("<529,532,32>",(res)); Inst40++; } } catch(e) {}
  }

try { if (Inst43 <= 1000 && typeof (res) != "undefined") {_RecordType("<549,552,35>",(res)); Inst43++; } } catch(e) {}
  res;
  435;
}

try { if (Inst44 <= 1000 && typeof (g) != "undefined") {_RecordType("<564,565,39>",(g)); Inst44++; } } catch(e) {}
g();

