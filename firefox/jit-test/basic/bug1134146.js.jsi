var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<9,12,1>",(Foo)); Inst0++; } } catch(e) {}
function Foo(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}
  b = {};
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<23,24,2>",(b)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<42,43,3>",(b)); Inst5++; } } catch(e) {}
  this.b = b;
try { if (Inst4 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<33,39,3>",(this.b)); Inst4++; } } catch(e) {}
}

;
var a = [];
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<54,55,7>",(a)); Inst6++; } } catch(e) {}

for (var i = 0; i < 50; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<72,73,9>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<79,80,9>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<87,88,9>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<96,102,10>",(a.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<96,97,10>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<107,110,10>",(Foo)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<111,112,10>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<114,115,10>",(i)); Inst14++; } } catch(e) {}
  a.push(new Foo(i, i + 1));
}

i = 0;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<126,127,13>",(i)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<142,143,14>",(i)); Inst19++; } } catch(e) {}
a[i].c = i;
try { if (Inst16 <= 1000 && typeof (a[i].c) != "undefined") {_RecordType("<133,139,14>",(a[i].c)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<133,137,14>",(a[i])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<133,134,14>",(a)); Inst18++; } } catch(e) {}

