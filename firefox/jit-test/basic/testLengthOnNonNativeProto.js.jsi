var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testLengthOnNonNativeProto) != "undefined") {_RecordType("<9,35,1>",(testLengthOnNonNativeProto)); Inst0++; } } catch(e) {}
function testLengthOnNonNativeProto() {
  var o = {};
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<46,47,2>",(o)); Inst1++; } } catch(e) {}
  o.__proto__ = [3];
try { if (Inst2 <= 1000 && typeof (o.__proto__) != "undefined") {_RecordType("<56,67,3>",(o.__proto__)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<56,57,3>",(o)); Inst3++; } } catch(e) {}

  for (var j = 0; j < 5; j++) {
try { if (Inst4 <= 1000 && typeof (j) != "undefined") {_RecordType("<87,88,5>",(j)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (j) != "undefined") {_RecordType("<94,95,5>",(j)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (j) != "undefined") {_RecordType("<101,102,5>",(j)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<112,116,6>",(o[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<112,113,6>",(o)); Inst8++; } } catch(e) {}
    o[0];
  }

  var o2 = {};
try { if (Inst9 <= 1000 && typeof (o2) != "undefined") {_RecordType("<129,131,9>",(o2)); Inst9++; } } catch(e) {}
  o2.__proto__ = [];
try { if (Inst10 <= 1000 && typeof (o2.__proto__) != "undefined") {_RecordType("<140,152,10>",(o2.__proto__)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o2) != "undefined") {_RecordType("<140,142,10>",(o2)); Inst11++; } } catch(e) {}

  for (var j = 0; j < 5; j++) {
try { if (Inst12 <= 1000 && typeof (j) != "undefined") {_RecordType("<171,172,12>",(j)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<178,179,12>",(j)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<185,186,12>",(j)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (o2.length) != "undefined") {_RecordType("<196,205,13>",(o2.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o2) != "undefined") {_RecordType("<196,198,13>",(o2)); Inst16++; } } catch(e) {}
    o2.length;
  }

try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<223,226,16>",(foo)); Inst17++; } } catch(e) {}
  function foo() {
    ;
  }

  foo.__proto__ = [];
try { if (Inst18 <= 1000 && typeof (foo.__proto__) != "undefined") {_RecordType("<244,257,20>",(foo.__proto__)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<244,247,20>",(foo)); Inst19++; } } catch(e) {}

  for (var j = 0; j < 5; j++) {
try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<276,277,22>",(j)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<283,284,22>",(j)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<290,291,22>",(j)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (foo.length) != "undefined") {_RecordType("<301,311,23>",(foo.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<301,304,23>",(foo)); Inst24++; } } catch(e) {}
    foo.length;
  }

  return "no assertion";
}

try { if (Inst25 <= 1000 && typeof (testLengthOnNonNativeProto) != "undefined") {_RecordType("<346,372,29>",(testLengthOnNonNativeProto)); Inst25++; } } catch(e) {}
testLengthOnNonNativeProto();
"no assertion";

