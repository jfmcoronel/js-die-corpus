var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<0,6,1>",(gczeal)); Inst0++; } } catch(e) {}
gczeal(9);
try { if (Inst2 <= 1000 && typeof (p3) != "undefined") {_RecordType("<46,48,6>",(p3)); Inst2++; } } catch(e) {}
let o = {
  p1: 0,
  p2: 0,

  set p3({}) {
    ;
  },

  p4: 1,
  p5: 1,
  p6: 1,
  p7: 1,
  p8: 1,
  p9: 1,
  p10: 1,
  p11: 1
};
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<15,16,2>",(o)); Inst1++; } } catch(e) {}

for (let p in o) {
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<153,154,20>",(p)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<158,159,20>",(o)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (o[p]) != "undefined") {_RecordType("<169,173,21>",(o[p])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<169,170,21>",(o)); Inst7++; } } catch(e) {}
  x = o[p];
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<165,166,21>",(x)); Inst5++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (o.p3) != "undefined") {_RecordType("<185,189,24>",(o.p3)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<185,186,24>",(o)); Inst9++; } } catch(e) {}
delete o.p3;

for (let i = 0; i < 100; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<201,202,26>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,26>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,26>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<231,232,27>",(o)); Inst14++; } } catch(e) {}
  x = -o;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<226,227,27>",(x)); Inst13++; } } catch(e) {}
}

