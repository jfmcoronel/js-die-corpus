var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Don't use NativeIterator cache for objects with dense elements.
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<76,79,2>",(bar)); Inst0++; } } catch(e) {}
function bar(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<80,81,2>",(a)); Inst1++; } } catch(e) {}
  var n = 0;
try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<91,92,3>",(n)); Inst2++; } } catch(e) {}

  for (var b in a) {
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<110,111,5>",(b)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<115,116,5>",(a)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<124,125,6>",(n)); Inst5++; } } catch(e) {}
    n++;
  }

try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<143,144,9>",(n)); Inst6++; } } catch(e) {}
  return n;
}

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<158,161,12>",(foo)); Inst7++; } } catch(e) {}
function foo() {
  var x = {
    a: 0,
    b: 1
  };
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<172,173,13>",(x)); Inst8++; } } catch(e) {}
  var y = {
    a: 0,
    b: 1
  };
try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<208,209,17>",(y)); Inst9++; } } catch(e) {}
  y[0] = 2;
try { if (Inst10 <= 1000 && typeof (y[0]) != "undefined") {_RecordType("<240,244,21>",(y[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<240,241,21>",(y)); Inst11++; } } catch(e) {}
  y[1] = 3;
try { if (Inst12 <= 1000 && typeof (y[1]) != "undefined") {_RecordType("<252,256,22>",(y[1])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<252,253,22>",(y)); Inst13++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<274,275,24>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<281,282,24>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<289,290,24>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (bar) != "undefined") {_RecordType("<300,303,25>",(bar)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<304,305,25>",(x)); Inst18++; } } catch(e) {}
    bar(x);
    2;
try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<319,322,27>",(bar)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<323,324,27>",(y)); Inst20++; } } catch(e) {}
    bar(y);
    4;
  }
}

try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<341,344,32>",(foo)); Inst21++; } } catch(e) {}
foo();

