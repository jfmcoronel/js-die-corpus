var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Make sure that unboxed arrays can be created with all possible inline
// capacities for the different sizes.
var bools = [];
try { if (Inst0 <= 1000 && typeof (bools) != "undefined") {_RecordType("<116,121,3>",(bools)); Inst0++; } } catch(e) {}
var ints = [];
try { if (Inst1 <= 1000 && typeof (ints) != "undefined") {_RecordType("<132,136,4>",(ints)); Inst1++; } } catch(e) {}
var doubles = [];
try { if (Inst2 <= 1000 && typeof (doubles) != "undefined") {_RecordType("<147,154,5>",(doubles)); Inst2++; } } catch(e) {}

for (var i = 0; i < 150; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<171,172,7>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<178,179,7>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,7>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (bools.push) != "undefined") {_RecordType("<196,206,8>",(bools.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (bools) != "undefined") {_RecordType("<196,201,8>",(bools)); Inst7++; } } catch(e) {}
  bools.push(false);
try { if (Inst8 <= 1000 && typeof (ints.push) != "undefined") {_RecordType("<217,226,9>",(ints.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ints) != "undefined") {_RecordType("<217,221,9>",(ints)); Inst9++; } } catch(e) {}
  ints.push(0);
try { if (Inst10 <= 1000 && typeof (doubles.push) != "undefined") {_RecordType("<233,245,10>",(doubles.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (doubles) != "undefined") {_RecordType("<233,240,10>",(doubles)); Inst11++; } } catch(e) {}
  doubles.push(0.5);
}

for (var i = 0; i < 150; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<264,265,13>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<271,272,13>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,13>",(i)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (bools.slice) != "undefined") {_RecordType("<297,308,14>",(bools.slice)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (bools) != "undefined") {_RecordType("<297,302,14>",(bools)); Inst17++; } } catch(e) {}
  bools = bools.slice(1);
try { if (Inst15 <= 1000 && typeof (bools) != "undefined") {_RecordType("<289,294,14>",(bools)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (ints.slice) != "undefined") {_RecordType("<322,332,15>",(ints.slice)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (ints) != "undefined") {_RecordType("<322,326,15>",(ints)); Inst20++; } } catch(e) {}
  ints = ints.slice(1);
try { if (Inst18 <= 1000 && typeof (ints) != "undefined") {_RecordType("<315,319,15>",(ints)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (doubles.slice) != "undefined") {_RecordType("<349,362,16>",(doubles.slice)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (doubles) != "undefined") {_RecordType("<349,356,16>",(doubles)); Inst23++; } } catch(e) {}
  doubles = doubles.slice(1);
try { if (Inst21 <= 1000 && typeof (doubles) != "undefined") {_RecordType("<339,346,16>",(doubles)); Inst21++; } } catch(e) {}
}

