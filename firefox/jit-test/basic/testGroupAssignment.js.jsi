var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof ((function () {
  var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32];

  for (var i = 0; i < 4; ++i) {
    var src = i * 8;
    var dst = i * 8 + 7;

    for (var j = 0; j < 4; ++j) {
      [arr[dst--], arr[src++]] = [arr[src], arr[dst]];
    }
  }

  return arr;
})().toSource) != "undefined") {_RecordType("<0,358,1>",((function () {
  var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32];

  for (var i = 0; i < 4; ++i) {
    var src = i * 8;
    var dst = i * 8 + 7;

    for (var j = 0; j < 4; ++j) {
      [arr[dst--], arr[src++]] = [arr[src], arr[dst]];
    }
  }

  return arr;
})().toSource)); Inst0++; } } catch(e) {}
(function () {
  var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32];
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<21,24,2>",(arr)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 4; ++i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,4>",(i)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<198,199,5>",(i)); Inst6++; } } catch(e) {}
    var src = i * 8;
try { if (Inst5 <= 1000 && typeof (src) != "undefined") {_RecordType("<192,195,5>",(src)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<219,220,6>",(i)); Inst8++; } } catch(e) {}
    var dst = i * 8 + 7;
try { if (Inst7 <= 1000 && typeof (dst) != "undefined") {_RecordType("<213,216,6>",(dst)); Inst7++; } } catch(e) {}

    for (var j = 0; j < 4; ++j) {
try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<244,245,8>",(j)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<251,252,8>",(j)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<260,261,8>",(j)); Inst11++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (arr[src]) != "undefined") {_RecordType("<299,307,9>",(arr[src])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<299,302,9>",(arr)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr[dst]) != "undefined") {_RecordType("<309,317,9>",(arr[dst])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<309,312,9>",(arr)); Inst21++; } } catch(e) {}
      [arr[dst--], arr[src++]] = [arr[src], arr[dst]];
try { if (Inst12 <= 1000 && typeof (arr[dst--]) != "undefined") {_RecordType("<272,282,9>",(arr[dst--])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<272,275,9>",(arr)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (dst) != "undefined") {_RecordType("<276,279,9>",(dst)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr[src++]) != "undefined") {_RecordType("<284,294,9>",(arr[src++])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<284,287,9>",(arr)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (src) != "undefined") {_RecordType("<288,291,9>",(src)); Inst17++; } } catch(e) {}
    }
  }

try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<340,343,13>",(arr)); Inst22++; } } catch(e) {}
  return arr;
})().toSource();
"[7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 23, 22, 21, 20, 19, 18, 17, 16, 31, 30, 29, 28, 27, 26, 25, 24, 32]";

