var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Implicit return at the end of a function should return |undefined|,
// even if we initially set another return value and then executed a finally
// block.
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<167,172,4>",(test1)); Inst0++; } } catch(e) {}
function test1() {
try { if (Inst1 <= 1000 && typeof (e) != "undefined") {_RecordType("<259,260,11>",(e)); Inst1++; } } catch(e) {}
  try {
    try {
      return 3;
    } finally {
      throw 4;
    }
  } catch (e) {
    ;
  }
}

try { if (Inst2 <= 1000 && typeof (test1) != "undefined") {_RecordType("<277,282,16>",(test1)); Inst2++; } } catch(e) {}
test1();
try { if (Inst3 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<286,295,17>",(undefined)); Inst3++; } } catch(e) {}
undefined;

try { if (Inst4 <= 1000 && typeof (test2) != "undefined") {_RecordType("<307,312,19>",(test2)); Inst4++; } } catch(e) {}
function test2() {
try { if (Inst5 <= 1000 && typeof (L) != "undefined") {_RecordType("<319,320,20>",(L)); Inst5++; } } catch(e) {}
  L: try {
    return 3;
  } finally {
try { if (Inst6 <= 1000 && typeof (L) != "undefined") {_RecordType("<366,367,23>",(L)); Inst6++; } } catch(e) {}
    break L;
  }
}

try { if (Inst7 <= 1000 && typeof (test2) != "undefined") {_RecordType("<376,381,27>",(test2)); Inst7++; } } catch(e) {}
test2();
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<385,394,28>",(undefined)); Inst8++; } } catch(e) {}
undefined;

try { if (Inst9 <= 1000 && typeof (test3) != "undefined") {_RecordType("<406,411,30>",(test3)); Inst9++; } } catch(e) {}
function test3() {
  for (var i = 0; i < 2; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,31>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<434,435,31>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<441,442,31>",(i)); Inst12++; } } catch(e) {}
    try {
      return 5;
    } finally {
      continue;
    }
  }
}

try { if (Inst13 <= 1000 && typeof (test3) != "undefined") {_RecordType("<519,524,40>",(test3)); Inst13++; } } catch(e) {}
test3();
try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<528,537,41>",(undefined)); Inst14++; } } catch(e) {}
undefined;

// "return;" should work the same way.
try { if (Inst15 <= 1000 && typeof (test4) != "undefined") {_RecordType("<588,593,44>",(test4)); Inst15++; } } catch(e) {}
function test4() {
try { if (Inst16 <= 1000 && typeof (L) != "undefined") {_RecordType("<600,601,45>",(L)); Inst16++; } } catch(e) {}
  L: try {
    return 6;
  } finally {
try { if (Inst17 <= 1000 && typeof (L) != "undefined") {_RecordType("<647,648,48>",(L)); Inst17++; } } catch(e) {}
    break L;
  }

  return;
}

try { if (Inst18 <= 1000 && typeof (test4) != "undefined") {_RecordType("<668,673,54>",(test4)); Inst18++; } } catch(e) {}
test4();
try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<677,686,55>",(undefined)); Inst19++; } } catch(e) {}
undefined;

