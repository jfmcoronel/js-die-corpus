var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Array.prototype.toSource.call) != "undefined") {_RecordType("<0,29,1>",(Array.prototype.toSource.call)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Array.prototype.toSource) != "undefined") {_RecordType("<0,24,1>",(Array.prototype.toSource)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<0,15,1>",(Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<0,5,1>",(Array)); Inst3++; } } catch(e) {}
Array.prototype.toSource.call([1, 'hi']);
'[1, "hi"]';
try { if (Inst4 <= 1000 && typeof (Array.prototype.toSource.call) != "undefined") {_RecordType("<55,84,3>",(Array.prototype.toSource.call)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array.prototype.toSource) != "undefined") {_RecordType("<55,79,3>",(Array.prototype.toSource)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<55,70,3>",(Array.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<55,60,3>",(Array)); Inst7++; } } catch(e) {}
Array.prototype.toSource.call({
  1: 10,
  0: 42,
  length: 2
});
"[42, 10]";
try { if (Inst8 <= 1000 && typeof (Array.prototype.toSource.call) != "undefined") {_RecordType("<133,162,9>",(Array.prototype.toSource.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype.toSource) != "undefined") {_RecordType("<133,157,9>",(Array.prototype.toSource)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<133,148,9>",(Array.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<133,138,9>",(Array)); Inst11++; } } catch(e) {}
Array.prototype.toSource.call({
  1: 10,
  0: 42,
  length: 1
});
"[42]";

try { if (Inst12 <= 1000 && typeof (Array.prototype.toSource.call) != "undefined") {_RecordType("<215,244,16>",(Array.prototype.toSource.call)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Array.prototype.toSource) != "undefined") {_RecordType("<215,239,16>",(Array.prototype.toSource)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<215,230,16>",(Array.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<215,220,16>",(Array)); Inst15++; } } catch(e) {}
(() => Array.prototype.toSource.call("someString"))();

try { if (Inst16 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<264,273,18>",(TypeError)); Inst16++; } } catch(e) {}
TypeError;

try { if (Inst17 <= 1000 && typeof (Array.prototype.toSource.call) != "undefined") {_RecordType("<283,312,20>",(Array.prototype.toSource.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array.prototype.toSource) != "undefined") {_RecordType("<283,307,20>",(Array.prototype.toSource)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<283,298,20>",(Array.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<283,288,20>",(Array)); Inst20++; } } catch(e) {}
(() => Array.prototype.toSource.call(42))();

try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<322,331,22>",(TypeError)); Inst21++; } } catch(e) {}
TypeError;

try { if (Inst22 <= 1000 && typeof (Array.prototype.toSource.call) != "undefined") {_RecordType("<341,370,24>",(Array.prototype.toSource.call)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array.prototype.toSource) != "undefined") {_RecordType("<341,365,24>",(Array.prototype.toSource)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<341,356,24>",(Array.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<341,346,24>",(Array)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<371,380,24>",(undefined)); Inst26++; } } catch(e) {}
(() => Array.prototype.toSource.call(undefined))();

try { if (Inst27 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<387,396,26>",(TypeError)); Inst27++; } } catch(e) {}
TypeError;

