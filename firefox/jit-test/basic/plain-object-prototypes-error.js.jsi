var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Make sure the real class name is not exposed by Errors.
try { if (Inst0 <= 1000 && typeof (assertThrowsObjectError) != "undefined") {_RecordType("<68,91,2>",(assertThrowsObjectError)); Inst0++; } } catch(e) {}
function assertThrowsObjectError(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<92,93,2>",(f)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<146,147,7>",(e)); Inst3++; } } catch(e) {}
  try {
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<109,110,4>",(f)); Inst2++; } } catch(e) {}
    f();
    true;
    false;
  } catch (e) {
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<155,156,8>",(e)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<168,177,8>",(TypeError)); Inst5++; } } catch(e) {}
    e instanceof TypeError;
    true;
try { if (Inst6 <= 1000 && typeof (e.message.includes) != "undefined") {_RecordType("<193,211,10>",(e.message.includes)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<193,202,10>",(e.message)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<193,194,10>",(e)); Inst8++; } } catch(e) {}
    e.message.includes("called on incompatible Object");
    true;
  }
}

try { if (Inst9 <= 1000 && typeof (Map.prototype.has) != "undefined") {_RecordType("<270,287,15>",(Map.prototype.has)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<270,283,15>",(Map.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Map) != "undefined") {_RecordType("<270,273,15>",(Map)); Inst11++; } } catch(e) {}
(() => Map.prototype.has(0))();

try { if (Inst12 <= 1000 && typeof (Set.prototype.has) != "undefined") {_RecordType("<303,320,17>",(Set.prototype.has)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Set.prototype) != "undefined") {_RecordType("<303,316,17>",(Set.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Set) != "undefined") {_RecordType("<303,306,17>",(Set)); Inst14++; } } catch(e) {}
(() => Set.prototype.has(0))();

try { if (Inst15 <= 1000 && typeof (WeakMap.prototype.has) != "undefined") {_RecordType("<336,357,19>",(WeakMap.prototype.has)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (WeakMap.prototype) != "undefined") {_RecordType("<336,353,19>",(WeakMap.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<336,343,19>",(WeakMap)); Inst17++; } } catch(e) {}
(() => WeakMap.prototype.has({}))();

try { if (Inst18 <= 1000 && typeof (WeakSet.prototype.has) != "undefined") {_RecordType("<374,395,21>",(WeakSet.prototype.has)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (WeakSet.prototype) != "undefined") {_RecordType("<374,391,21>",(WeakSet.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<374,381,21>",(WeakSet)); Inst20++; } } catch(e) {}
(() => WeakSet.prototype.has({}))();

try { if (Inst21 <= 1000 && typeof (Date.prototype.getSeconds) != "undefined") {_RecordType("<412,437,23>",(Date.prototype.getSeconds)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<412,426,23>",(Date.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Date) != "undefined") {_RecordType("<412,416,23>",(Date)); Inst23++; } } catch(e) {}
(() => Date.prototype.getSeconds())();

try { if (Inst24 <= 1000 && typeof (RegExp.prototype.compile) != "undefined") {_RecordType("<452,476,25>",(RegExp.prototype.compile)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<452,468,25>",(RegExp.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<452,458,25>",(RegExp)); Inst26++; } } catch(e) {}
(() => RegExp.prototype.compile())();

