var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Created with JS_STRUCTURED_CLONE_VERSION = 3
// var x = {
//     "ab": 1,
//     12: 2,
// };
// print(uneval(serialize(x).clonebuffer));
try { if (Inst1 <= 1000 && typeof (serialize) != "undefined") {_RecordType("<159,168,7>",(serialize)); Inst1++; } } catch(e) {}
var clonebuffer = serialize("abc");
try { if (Inst0 <= 1000 && typeof (clonebuffer) != "undefined") {_RecordType("<145,156,7>",(clonebuffer)); Inst0++; } } catch(e) {}
clonebuffer.clonebuffer = "\x00\x00\x00\x00\b\x00\xFF\xFF\f\x00\x00\x00\x03\x00\xFF\xFF\x00\x00\x00\x00\x00\x00\x00@\x02\x00\x00\x00\x04\x00\xFF\xFFa\x00b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF0?\x00\x00\x00\x00\x00\x00\xFF\xFF";
try { if (Inst2 <= 1000 && typeof (clonebuffer.clonebuffer) != "undefined") {_RecordType("<177,200,8>",(clonebuffer.clonebuffer)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (clonebuffer) != "undefined") {_RecordType("<177,188,8>",(clonebuffer)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (deserialize) != "undefined") {_RecordType("<425,436,9>",(deserialize)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (clonebuffer) != "undefined") {_RecordType("<437,448,9>",(clonebuffer)); Inst6++; } } catch(e) {}
var obj = deserialize(clonebuffer);
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<419,422,9>",(obj)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (obj.ab) != "undefined") {_RecordType("<451,457,10>",(obj.ab)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<451,454,10>",(obj)); Inst8++; } } catch(e) {}
obj.ab;
1;
try { if (Inst9 <= 1000 && typeof (obj[12]) != "undefined") {_RecordType("<462,469,12>",(obj[12])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<462,465,12>",(obj)); Inst10++; } } catch(e) {}
obj[12];
2;
try { if (Inst11 <= 1000 && typeof (Object.keys(obj).toString) != "undefined") {_RecordType("<474,499,14>",(Object.keys(obj).toString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<474,485,14>",(Object.keys)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<474,480,14>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<486,489,14>",(obj)); Inst14++; } } catch(e) {}
Object.keys(obj).toString();
"12,ab";

