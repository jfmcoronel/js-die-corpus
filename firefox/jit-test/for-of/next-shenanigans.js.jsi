var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test for-of with iter.next and monkeypatching.
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<60,61,2>",(g)); Inst0++; } } catch(e) {}
function* g(n) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<62,63,2>",(n)); Inst1++; } } catch(e) {}
  for (var i = 0; i < n; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<78,79,3>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<85,86,3>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<89,90,3>",(n)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<92,93,3>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<109,110,4>",(i)); Inst6++; } } catch(e) {}
    yield i;
  }
}

try { if (Inst8 <= 1000 && typeof (Object.getPrototypeOf(g).prototype) != "undefined") {_RecordType("<150,184,8>",(Object.getPrototypeOf(g).prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<150,171,8>",(Object.getPrototypeOf)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<150,156,8>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<172,173,8>",(g)); Inst11++; } } catch(e) {}
var GeneratorObjectPrototype = Object.getPrototypeOf(g).prototype;
try { if (Inst7 <= 1000 && typeof (GeneratorObjectPrototype) != "undefined") {_RecordType("<123,147,8>",(GeneratorObjectPrototype)); Inst7++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (GeneratorObjectPrototype.next) != "undefined") {_RecordType("<222,251,9>",(GeneratorObjectPrototype.next)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (GeneratorObjectPrototype) != "undefined") {_RecordType("<222,246,9>",(GeneratorObjectPrototype)); Inst14++; } } catch(e) {}
var GeneratorObjectPrototype_next = GeneratorObjectPrototype.next; // Monkeypatch next on an iterator.
try { if (Inst12 <= 1000 && typeof (GeneratorObjectPrototype_next) != "undefined") {_RecordType("<190,219,9>",(GeneratorObjectPrototype_next)); Inst12++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<302,303,11>",(g)); Inst16++; } } catch(e) {}
var inner = g(20);
try { if (Inst15 <= 1000 && typeof (inner) != "undefined") {_RecordType("<294,299,11>",(inner)); Inst15++; } } catch(e) {}
var n = 0;
try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<313,314,12>",(n)); Inst17++; } } catch(e) {}

for (let x of inner) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<330,331,14>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (inner) != "undefined") {_RecordType("<335,340,14>",(inner)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<346,347,15>",(x)); Inst20++; } } catch(e) {}
  x;
try { if (Inst21 <= 1000 && typeof (n) != "undefined") {_RecordType("<351,352,16>",(n)); Inst21++; } } catch(e) {}
  n++;

try { if (Inst22 <= 1000 && typeof (n) != "undefined") {_RecordType("<363,364,18>",(n)); Inst22++; } } catch(e) {}
  if (n == 1) {
    inner.next = function () {
      throw 'not reached';
    };
try { if (Inst23 <= 1000 && typeof (inner.next) != "undefined") {_RecordType("<377,387,19>",(inner.next)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (inner) != "undefined") {_RecordType("<377,382,19>",(inner)); Inst24++; } } catch(e) {}
  }
}

try { if (Inst25 <= 1000 && typeof (n) != "undefined") {_RecordType("<445,446,25>",(n)); Inst25++; } } catch(e) {}
n;
20;
// Monkeypatch next on the prototype.
try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<502,503,28>",(g)); Inst27++; } } catch(e) {}
var inner = g(20);
try { if (Inst26 <= 1000 && typeof (inner) != "undefined") {_RecordType("<494,499,28>",(inner)); Inst26++; } } catch(e) {}
var n = 0;
try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<513,514,29>",(n)); Inst28++; } } catch(e) {}

for (let x of inner) {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<530,531,31>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (inner) != "undefined") {_RecordType("<535,540,31>",(inner)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<546,547,32>",(x)); Inst31++; } } catch(e) {}
  x;
try { if (Inst32 <= 1000 && typeof (n) != "undefined") {_RecordType("<551,552,33>",(n)); Inst32++; } } catch(e) {}
  n++;

try { if (Inst33 <= 1000 && typeof (n) != "undefined") {_RecordType("<563,564,35>",(n)); Inst33++; } } catch(e) {}
  if (n == 1) {
    GeneratorObjectPrototype.next = function () {
      throw 'not reached';
    };
try { if (Inst34 <= 1000 && typeof (GeneratorObjectPrototype.next) != "undefined") {_RecordType("<577,606,36>",(GeneratorObjectPrototype.next)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (GeneratorObjectPrototype) != "undefined") {_RecordType("<577,601,36>",(GeneratorObjectPrototype)); Inst35++; } } catch(e) {}
  }
}

try { if (Inst36 <= 1000 && typeof (n) != "undefined") {_RecordType("<664,665,42>",(n)); Inst36++; } } catch(e) {}
n;
20;

