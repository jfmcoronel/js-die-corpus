var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Changing arguments.length affects a for-of loop iterating over arguments.
try { if (Inst5 <= 1000 && typeof (Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<113,145,2>",(Array.prototype[Symbol.iterator])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<113,128,2>",(Array.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<113,118,2>",(Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<129,144,2>",(Symbol.iterator)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<129,135,2>",(Symbol)); Inst9++; } } catch(e) {}
Object.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];
try { if (Inst0 <= 1000 && typeof (Object.prototype[Symbol.iterator]) != "undefined") {_RecordType("<77,110,2>",(Object.prototype[Symbol.iterator])); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<77,93,2>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<77,83,2>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<94,109,2>",(Symbol.iterator)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<94,100,2>",(Symbol)); Inst4++; } } catch(e) {}
var s;
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<151,152,3>",(s)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<164,165,5>",(f)); Inst11++; } } catch(e) {}
function f() {
  arguments.length = 2;
try { if (Inst12 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<172,188,6>",(arguments.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<172,181,6>",(arguments)); Inst13++; } } catch(e) {}

  for (var v of arguments) {
try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<206,207,8>",(v)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<211,220,8>",(arguments)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<233,234,9>",(v)); Inst17++; } } catch(e) {}
    s += v;
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<228,229,9>",(s)); Inst16++; } } catch(e) {}
  }
}

s = '';
try { if (Inst18 <= 1000 && typeof (s) != "undefined") {_RecordType("<243,244,13>",(s)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<251,252,14>",(f)); Inst19++; } } catch(e) {}
f('a', 'b', 'c', 'd', 'e');
try { if (Inst20 <= 1000 && typeof (s) != "undefined") {_RecordType("<279,280,15>",(s)); Inst20++; } } catch(e) {}
s;
'ab';

