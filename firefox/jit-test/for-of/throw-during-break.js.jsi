var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var whoCaught = "nobody";
try { if (Inst0 <= 1000 && typeof (whoCaught) != "undefined") {_RecordType("<4,13,1>",(whoCaught)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (wrapNoThrow) != "undefined") {_RecordType("<37,48,3>",(wrapNoThrow)); Inst1++; } } catch(e) {}
function* wrapNoThrow() {
try { if (Inst3 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<73,88,5>",(Symbol.iterator)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<73,79,5>",(Symbol)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (next) != "undefined") {_RecordType("<125,129,9>",(next)); Inst5++; } } catch(e) {}
  let iter = {
    [Symbol.iterator]() {
      return this;
    },

    next() {
      return {
        value: 10,
        done: false
      };
    },

    return() {
      throw "nonsense";
    }

  };
try { if (Inst2 <= 1000 && typeof (iter) != "undefined") {_RecordType("<59,63,4>",(iter)); Inst2++; } } catch(e) {}

  for (const i of iter) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,22>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (iter) != "undefined") {_RecordType("<275,279,22>",(iter)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<293,294,23>",(i)); Inst8++; } } catch(e) {}
    yield i;
  }
}

try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<312,315,27>",(foo)); Inst9++; } } catch(e) {}
function foo() {
try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<598,599,42>",(e)); Inst19++; } } catch(e) {}
  try {
try { if (Inst10 <= 1000 && typeof (l2) != "undefined") {_RecordType("<332,334,29>",(l2)); Inst10++; } } catch(e) {}
    l2: for (j of wrapNoThrow()) {
try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<341,342,29>",(j)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (wrapNoThrow) != "undefined") {_RecordType("<346,357,29>",(wrapNoThrow)); Inst12++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<538,539,38>",(e)); Inst17++; } } catch(e) {}
      try {
        for (i of [1, 2, 3]) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<388,389,31>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<463,464,34>",(e)); Inst15++; } } catch(e) {}
          try {
try { if (Inst14 <= 1000 && typeof (l2) != "undefined") {_RecordType("<440,442,33>",(l2)); Inst14++; } } catch(e) {}
            break l2;
          } catch (e) {
            whoCaught = "inner";
try { if (Inst16 <= 1000 && typeof (whoCaught) != "undefined") {_RecordType("<480,489,35>",(whoCaught)); Inst16++; } } catch(e) {}
          }
        }
      } catch (e) {
        whoCaught = "inner2";
try { if (Inst18 <= 1000 && typeof (whoCaught) != "undefined") {_RecordType("<551,560,39>",(whoCaught)); Inst18++; } } catch(e) {}
      }
    }
  } catch (e) {
    whoCaught = "correct";
try { if (Inst20 <= 1000 && typeof (whoCaught) != "undefined") {_RecordType("<607,616,43>",(whoCaught)); Inst20++; } } catch(e) {}
  }
}

try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<661,662,49>",(e)); Inst22++; } } catch(e) {}
try {
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<645,648,48>",(foo)); Inst21++; } } catch(e) {}
  foo();
} catch (e) {
  whoCaught = "outer";
try { if (Inst23 <= 1000 && typeof (whoCaught) != "undefined") {_RecordType("<668,677,50>",(whoCaught)); Inst23++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (whoCaught) != "undefined") {_RecordType("<692,701,53>",(whoCaught)); Inst24++; } } catch(e) {}
whoCaught;
"correct";

