var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// String.prototype.iterator is generic.
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<50,54,2>",(test)); Inst0++; } } catch(e) {}
function test(obj) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<55,58,2>",(obj)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (String.prototype[Symbol.iterator].call) != "undefined") {_RecordType("<73,111,3>",(String.prototype[Symbol.iterator].call)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (String.prototype[Symbol.iterator]) != "undefined") {_RecordType("<73,106,3>",(String.prototype[Symbol.iterator])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<73,89,3>",(String.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (String) != "undefined") {_RecordType("<73,79,3>",(String)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<90,105,3>",(Symbol.iterator)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<90,96,3>",(Symbol)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<112,115,3>",(obj)); Inst9++; } } catch(e) {}
  var it = String.prototype[Symbol.iterator].call(obj);
try { if (Inst2 <= 1000 && typeof (it) != "undefined") {_RecordType("<68,70,3>",(it)); Inst2++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (String) != "undefined") {_RecordType("<128,134,4>",(String)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<135,138,4>",(obj)); Inst12++; } } catch(e) {}
  var s = String(obj);
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<124,125,4>",(s)); Inst10++; } } catch(e) {}

  for (var i = 0, length = s.length; i < length;) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<153,154,6>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (length) != "undefined") {_RecordType("<160,166,6>",(length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (s.length) != "undefined") {_RecordType("<169,177,6>",(s.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<169,170,6>",(s)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,6>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (length) != "undefined") {_RecordType("<183,189,6>",(length)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (s[i++]) != "undefined") {_RecordType("<206,212,7>",(s[i++])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (s) != "undefined") {_RecordType("<206,207,7>",(s)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,7>",(i)); Inst22++; } } catch(e) {}
    var r = s[i++];
try { if (Inst19 <= 1000 && typeof (r) != "undefined") {_RecordType("<202,203,7>",(r)); Inst19++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (isHighSurrogate) != "undefined") {_RecordType("<223,238,9>",(isHighSurrogate)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (r) != "undefined") {_RecordType("<239,240,9>",(r)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,9>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (length) != "undefined") {_RecordType("<249,255,9>",(length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (isLowSurrogate) != "undefined") {_RecordType("<259,273,9>",(isLowSurrogate)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (s[i]) != "undefined") {_RecordType("<274,278,9>",(s[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (s) != "undefined") {_RecordType("<274,275,9>",(s)); Inst29++; } } catch(e) {}
    if (isHighSurrogate(r) && i < length && isLowSurrogate(s[i])) {
try { if (Inst31 <= 1000 && typeof (s[i++]) != "undefined") {_RecordType("<294,300,10>",(s[i++])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (s) != "undefined") {_RecordType("<294,295,10>",(s)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<296,297,10>",(i)); Inst33++; } } catch(e) {}
      r += s[i++];
try { if (Inst30 <= 1000 && typeof (r) != "undefined") {_RecordType("<289,290,10>",(r)); Inst30++; } } catch(e) {}
    }

try { if (Inst34 <= 1000 && typeof (it) != "undefined") {_RecordType("<313,315,13>",(it)); Inst34++; } } catch(e) {}
    it;
try { if (Inst35 <= 1000 && typeof (r) != "undefined") {_RecordType("<321,322,14>",(r)); Inst35++; } } catch(e) {}
    r;
  }

try { if (Inst36 <= 1000 && typeof (it) != "undefined") {_RecordType("<331,333,17>",(it)); Inst36++; } } catch(e) {}
  it;
try { if (Inst37 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<337,346,18>",(undefined)); Inst37++; } } catch(e) {}
  undefined;
}

try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<351,355,21>",(test)); Inst38++; } } catch(e) {}
test({
  toString: () => ""
});
try { if (Inst39 <= 1000 && typeof (test) != "undefined") {_RecordType("<383,387,24>",(test)); Inst39++; } } catch(e) {}
test({
  toString: () => "xyz"
});
try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<418,422,27>",(test)); Inst40++; } } catch(e) {}
test({
  toString: () => "\ud808\udf45"
});
try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<462,466,30>",(test)); Inst41++; } } catch(e) {}
test({
  valueOf: () => ""
});
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<493,497,33>",(test)); Inst42++; } } catch(e) {}
test({
  valueOf: () => "xyz"
});
try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<527,531,36>",(test)); Inst43++; } } catch(e) {}
test({
  valueOf: () => "\ud808\udf45"
});

