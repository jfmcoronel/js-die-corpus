var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Superficial tests of the Array.prototype[@@iterator] builtin function and its workalikes.
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<113,118,2>",(Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (String) != "undefined") {_RecordType("<120,126,2>",(String)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<128,138,2>",(Uint8Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<140,157,2>",(Uint8ClampedArray)); Inst4++; } } catch(e) {}
var constructors = [Array, String, Uint8Array, Uint8ClampedArray];
try { if (Inst0 <= 1000 && typeof (constructors) != "undefined") {_RecordType("<97,109,2>",(constructors)); Inst0++; } } catch(e) {}

for (var c of constructors) {
try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<170,171,4>",(c)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (constructors) != "undefined") {_RecordType("<175,187,4>",(constructors)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (c.prototype[Symbol.iterator].length) != "undefined") {_RecordType("<193,228,5>",(c.prototype[Symbol.iterator].length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (c.prototype[Symbol.iterator]) != "undefined") {_RecordType("<193,221,5>",(c.prototype[Symbol.iterator])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (c.prototype) != "undefined") {_RecordType("<193,204,5>",(c.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<193,194,5>",(c)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<205,220,5>",(Symbol.iterator)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<205,211,5>",(Symbol)); Inst12++; } } catch(e) {}
  c.prototype[Symbol.iterator].length;
  0;
try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<247,248,7>",(c)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<253,258,7>",(Array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<262,263,7>",(c)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<268,274,7>",(String)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c.prototype) != "undefined") {_RecordType("<277,288,7>",(c.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (c) != "undefined") {_RecordType("<277,278,7>",(c)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<291,312,7>",(Object.getPrototypeOf)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<291,297,7>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (c.prototype) != "undefined") {_RecordType("<313,324,7>",(c.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (c) != "undefined") {_RecordType("<313,314,7>",(c)); Inst23++; } } catch(e) {}
  var loc = c === Array || c === String ? c.prototype : Object.getPrototypeOf(c.prototype);
try { if (Inst13 <= 1000 && typeof (loc) != "undefined") {_RecordType("<241,244,7>",(loc)); Inst13++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<340,371,8>",(Object.getOwnPropertyDescriptor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<340,346,8>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (loc) != "undefined") {_RecordType("<372,375,8>",(loc)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<377,392,8>",(Symbol.iterator)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<377,383,8>",(Symbol)); Inst29++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(loc, Symbol.iterator);
try { if (Inst24 <= 1000 && typeof (desc) != "undefined") {_RecordType("<333,337,8>",(desc)); Inst24++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<397,414,9>",(desc.configurable)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (desc) != "undefined") {_RecordType("<397,401,9>",(desc)); Inst31++; } } catch(e) {}
  desc.configurable;
  true;
try { if (Inst32 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<426,441,11>",(desc.enumerable)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (desc) != "undefined") {_RecordType("<426,430,11>",(desc)); Inst33++; } } catch(e) {}
  desc.enumerable;
  false;
try { if (Inst34 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<454,467,13>",(desc.writable)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (desc) != "undefined") {_RecordType("<454,458,13>",(desc)); Inst35++; } } catch(e) {}
  desc.writable;
  true;
}

