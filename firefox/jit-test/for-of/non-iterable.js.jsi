var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Iterating over non-iterable values throws a TypeError.
try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<86,90,4>",(Math)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<92,97,4>",(isNaN)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<99,112,4>",(Object.create)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<99,105,4>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<126,135,4>",(undefined)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<158,165,4>",(Boolean)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Number) != "undefined") {_RecordType("<177,183,4>",(Number)); Inst7++; } } catch(e) {}
var misc = [{}, {
  x: 1
}, Math, isNaN, Object.create(null), null, undefined, true, 0, 3.1416, new Boolean(true), new Number(0), {
  iterator: function () {
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<227,236,6>",(undefined)); Inst8++; } } catch(e) {}
    return undefined;
  }
}, {
  iterator: function () {
    return null;
  }
}, {
  iterator: function () {
    return true;
  }
}, {
  iterator: function () {
    return 17;
  }
}];
try { if (Inst0 <= 1000 && typeof (misc) != "undefined") {_RecordType("<62,66,2>",(misc)); Inst0++; } } catch(e) {}

for (var i = 0; i < misc.length; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<410,411,22>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,22>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (misc.length) != "undefined") {_RecordType("<421,432,22>",(misc.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (misc) != "undefined") {_RecordType("<421,425,22>",(misc)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<434,435,22>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (misc[i]) != "undefined") {_RecordType("<451,458,23>",(misc[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (misc) != "undefined") {_RecordType("<451,455,23>",(misc)); Inst16++; } } catch(e) {}
  let v = misc[i];
try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<447,448,23>",(v)); Inst14++; } } catch(e) {}

  var testfn = function () {
    for (var _ of v) {
try { if (Inst18 <= 1000 && typeof (_) != "undefined") {_RecordType("<503,504,26>",(_)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<508,509,26>",(v)); Inst19++; } } catch(e) {}
      throw 'FAIL';
    }

    throw 'BAD';
  };
try { if (Inst17 <= 1000 && typeof (testfn) != "undefined") {_RecordType("<467,473,25>",(testfn)); Inst17++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (testfn) != "undefined") {_RecordType("<565,571,33>",(testfn)); Inst20++; } } catch(e) {}
  testfn;
try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<575,584,34>",(TypeError)); Inst21++; } } catch(e) {}
  TypeError;
}

