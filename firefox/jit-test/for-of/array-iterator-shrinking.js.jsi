var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// If an array is truncated to the left of an iterator it, it.next() returns { done: true }.
var arr = [0, 1, 2];
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<97,100,2>",(arr)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (arr[Symbol.iterator]) != "undefined") {_RecordType("<123,143,3>",(arr[Symbol.iterator])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<123,126,3>",(arr)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<127,142,3>",(Symbol.iterator)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<127,133,3>",(Symbol)); Inst5++; } } catch(e) {}
var it = arr[Symbol.iterator]();
try { if (Inst1 <= 1000 && typeof (it) != "undefined") {_RecordType("<118,120,3>",(it)); Inst1++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (arr.keys) != "undefined") {_RecordType("<156,164,4>",(arr.keys)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<156,159,4>",(arr)); Inst8++; } } catch(e) {}
var ki = arr.keys();
try { if (Inst6 <= 1000 && typeof (ki) != "undefined") {_RecordType("<151,153,4>",(ki)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (arr.entries) != "undefined") {_RecordType("<177,188,5>",(arr.entries)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<177,180,5>",(arr)); Inst11++; } } catch(e) {}
var ei = arr.entries();
try { if (Inst9 <= 1000 && typeof (ei) != "undefined") {_RecordType("<172,174,5>",(ei)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (it) != "undefined") {_RecordType("<192,194,6>",(it)); Inst12++; } } catch(e) {}
it;
0;
try { if (Inst13 <= 1000 && typeof (it) != "undefined") {_RecordType("<199,201,8>",(it)); Inst13++; } } catch(e) {}
it;
1;
try { if (Inst14 <= 1000 && typeof (ki) != "undefined") {_RecordType("<206,208,10>",(ki)); Inst14++; } } catch(e) {}
ki;
0;
try { if (Inst15 <= 1000 && typeof (ki) != "undefined") {_RecordType("<213,215,12>",(ki)); Inst15++; } } catch(e) {}
ki;
1;
try { if (Inst16 <= 1000 && typeof (ei) != "undefined") {_RecordType("<220,222,14>",(ei)); Inst16++; } } catch(e) {}
ei;
[0, 0];
try { if (Inst17 <= 1000 && typeof (ei) != "undefined") {_RecordType("<232,234,16>",(ei)); Inst17++; } } catch(e) {}
ei;
[1, 1];
arr.length = 1;
try { if (Inst18 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<244,254,18>",(arr.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<244,247,18>",(arr)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (it) != "undefined") {_RecordType("<260,262,19>",(it)); Inst20++; } } catch(e) {}
it;
try { if (Inst21 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<264,273,20>",(undefined)); Inst21++; } } catch(e) {}
undefined;
try { if (Inst22 <= 1000 && typeof (ki) != "undefined") {_RecordType("<275,277,21>",(ki)); Inst22++; } } catch(e) {}
ki;
try { if (Inst23 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<279,288,22>",(undefined)); Inst23++; } } catch(e) {}
undefined;
try { if (Inst24 <= 1000 && typeof (ei) != "undefined") {_RecordType("<290,292,23>",(ei)); Inst24++; } } catch(e) {}
ei;
try { if (Inst25 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<294,303,24>",(undefined)); Inst25++; } } catch(e) {}
undefined;

