var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// for-of works on strings and String objects.
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<56,60,2>",(test)); Inst0++; } } catch(e) {}
function test(s, expectedCodePoints) {
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<61,62,2>",(s)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expectedCodePoints) != "undefined") {_RecordType("<64,82,2>",(expectedCodePoints)); Inst2++; } } catch(e) {}
  var copy = '';
try { if (Inst3 <= 1000 && typeof (copy) != "undefined") {_RecordType("<92,96,3>",(copy)); Inst3++; } } catch(e) {}
  var codepoints = 0;
try { if (Inst4 <= 1000 && typeof (codepoints) != "undefined") {_RecordType("<109,119,4>",(codepoints)); Inst4++; } } catch(e) {}
  var singleHighSurrogate = false;
try { if (Inst5 <= 1000 && typeof (singleHighSurrogate) != "undefined") {_RecordType("<131,150,5>",(singleHighSurrogate)); Inst5++; } } catch(e) {}

  for (var v of s) {
try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<172,173,7>",(v)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (s) != "undefined") {_RecordType("<177,178,7>",(s)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<193,194,8>",(v)); Inst8++; } } catch(e) {}
    typeof v;
    'string';
try { if (Inst9 <= 1000 && typeof (v.length) != "undefined") {_RecordType("<214,222,10>",(v.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<214,215,10>",(v)); Inst10++; } } catch(e) {}
    v.length;
try { if (Inst11 <= 1000 && typeof (isSurrogatePair) != "undefined") {_RecordType("<228,243,11>",(isSurrogatePair)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<244,245,11>",(v)); Inst12++; } } catch(e) {}
    isSurrogatePair(v) ? 2 : 1;
    false;
try { if (Inst13 <= 1000 && typeof (singleHighSurrogate) != "undefined") {_RecordType("<271,290,13>",(singleHighSurrogate)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (isLowSurrogate) != "undefined") {_RecordType("<294,308,13>",(isLowSurrogate)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v) != "undefined") {_RecordType("<309,310,13>",(v)); Inst15++; } } catch(e) {}
    singleHighSurrogate && isLowSurrogate(v);
try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<325,326,14>",(v)); Inst17++; } } catch(e) {}
    copy += v;
try { if (Inst16 <= 1000 && typeof (copy) != "undefined") {_RecordType("<317,321,14>",(copy)); Inst16++; } } catch(e) {}
    codepoints += 1;
try { if (Inst18 <= 1000 && typeof (codepoints) != "undefined") {_RecordType("<332,342,15>",(codepoints)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (isSurrogatePair) != "undefined") {_RecordType("<376,391,16>",(isSurrogatePair)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<392,393,16>",(v)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (isHighSurrogate) != "undefined") {_RecordType("<398,413,16>",(isHighSurrogate)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (v) != "undefined") {_RecordType("<414,415,16>",(v)); Inst23++; } } catch(e) {}
    singleHighSurrogate = !isSurrogatePair(v) && isHighSurrogate(v);
try { if (Inst19 <= 1000 && typeof (singleHighSurrogate) != "undefined") {_RecordType("<353,372,16>",(singleHighSurrogate)); Inst19++; } } catch(e) {}
  }

try { if (Inst24 <= 1000 && typeof (copy) != "undefined") {_RecordType("<425,429,19>",(copy)); Inst24++; } } catch(e) {}
  copy;
try { if (Inst25 <= 1000 && typeof (String) != "undefined") {_RecordType("<433,439,20>",(String)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (s) != "undefined") {_RecordType("<440,441,20>",(s)); Inst26++; } } catch(e) {}
  String(s);
try { if (Inst27 <= 1000 && typeof (codepoints) != "undefined") {_RecordType("<446,456,21>",(codepoints)); Inst27++; } } catch(e) {}
  codepoints;
try { if (Inst28 <= 1000 && typeof (expectedCodePoints) != "undefined") {_RecordType("<460,478,22>",(expectedCodePoints)); Inst28++; } } catch(e) {}
  expectedCodePoints;
}

try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<483,487,25>",(test)); Inst29++; } } catch(e) {}
test('', 0);
try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<496,500,26>",(test)); Inst30++; } } catch(e) {}
test('abc', 3);
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<512,516,27>",(test)); Inst31++; } } catch(e) {}
test('a \0 \ufffe \ufeff', 7); // Non-BMP characters are generally passed to JS in UTF-16, as surrogate pairs.
// ES6 requires that such pairs be treated as a single code point in for-of.

try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<701,705,30>",(test)); Inst32++; } } catch(e) {}
test('\ud808\udf45', 1); // Also test invalid surrogate pairs:
// (1) High surrogate not followed by low surrogate

try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<817,821,33>",(test)); Inst33++; } } catch(e) {}
test('\ud808', 1);
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<836,840,34>",(test)); Inst34++; } } catch(e) {}
test('\ud808\u0000', 2); // (2) Low surrogate not preceded by high surrogate

try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<914,918,36>",(test)); Inst35++; } } catch(e) {}
test('\udf45', 1);
try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<933,937,37>",(test)); Inst36++; } } catch(e) {}
test('\u0000\udf45', 2); // (3) Low surrogate followed by high surrogate

try { if (Inst37 <= 1000 && typeof (test) != "undefined") {_RecordType("<1007,1011,39>",(test)); Inst37++; } } catch(e) {}
test('\udf45\ud808', 2);
try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<1032,1036,40>",(test)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (String) != "undefined") {_RecordType("<1041,1047,40>",(String)); Inst39++; } } catch(e) {}
test(new String(''), 0);
try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<1057,1061,41>",(test)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (String) != "undefined") {_RecordType("<1066,1072,41>",(String)); Inst41++; } } catch(e) {}
test(new String('abc'), 3);
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<1085,1089,42>",(test)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (String) != "undefined") {_RecordType("<1094,1100,42>",(String)); Inst43++; } } catch(e) {}
test(new String('a \0 \ufffe \ufeff'), 7);
try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<1128,1132,43>",(test)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (String) != "undefined") {_RecordType("<1137,1143,43>",(String)); Inst45++; } } catch(e) {}
test(new String('\ud808\udf45'), 1);
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1165,1169,44>",(test)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (String) != "undefined") {_RecordType("<1174,1180,44>",(String)); Inst47++; } } catch(e) {}
test(new String('\ud808'), 1);
try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<1196,1200,45>",(test)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (String) != "undefined") {_RecordType("<1205,1211,45>",(String)); Inst49++; } } catch(e) {}
test(new String('\ud808\u0000'), 2);
try { if (Inst50 <= 1000 && typeof (test) != "undefined") {_RecordType("<1233,1237,46>",(test)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (String) != "undefined") {_RecordType("<1242,1248,46>",(String)); Inst51++; } } catch(e) {}
test(new String('\udf45'), 1);
try { if (Inst52 <= 1000 && typeof (test) != "undefined") {_RecordType("<1264,1268,47>",(test)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (String) != "undefined") {_RecordType("<1273,1279,47>",(String)); Inst53++; } } catch(e) {}
test(new String('\u0000\udf45'), 2);
try { if (Inst54 <= 1000 && typeof (test) != "undefined") {_RecordType("<1301,1305,48>",(test)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (String) != "undefined") {_RecordType("<1310,1316,48>",(String)); Inst55++; } } catch(e) {}
test(new String('\udf45\ud808'), 2);

