var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Basic for-of test with Proxy.
var s = '';
try { if (Inst0 <= 1000 && typeof (s) != "undefined") {_RecordType("<37,38,2>",(s)); Inst0++; } } catch(e) {}
var arr = ['a', 'b', 'c', 'd'];
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<49,52,3>",(arr)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<89,94,4>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<95,98,4>",(arr)); Inst4++; } } catch(e) {}
var p = new Proxy(arr, {}); // Test the same proxy twice.
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<81,82,4>",(p)); Inst2++; } } catch(e) {}

for (var i = 0; i < 2; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<145,146,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<159,160,6>",(i)); Inst7++; } } catch(e) {}
  var j = 0;
try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<172,173,7>",(j)); Inst8++; } } catch(e) {}

  for (var x of p) {
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<191,192,9>",(x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<196,197,9>",(p)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<205,206,10>",(x)); Inst11++; } } catch(e) {}
    x;
try { if (Inst12 <= 1000 && typeof (arr[j++]) != "undefined") {_RecordType("<212,220,11>",(arr[j++])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<212,215,11>",(arr)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<216,217,11>",(j)); Inst14++; } } catch(e) {}
    arr[j++];
  }

try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<229,230,14>",(j)); Inst15++; } } catch(e) {}
  j;
try { if (Inst16 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<234,244,15>",(arr.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<234,237,15>",(arr)); Inst17++; } } catch(e) {}
  arr.length;
}

