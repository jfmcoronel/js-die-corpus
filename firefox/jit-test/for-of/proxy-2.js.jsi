var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Basic for-of test with Proxy whose iterator method is a generator.
var arr = ['a', 'b', 'c', 'd'];
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<74,77,2>",(arr)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<118,123,3>",(Proxy)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<124,127,3>",(arr)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (get) != "undefined") {_RecordType("<133,136,4>",(get)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (target) != "undefined") {_RecordType("<137,143,4>",(target)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (property) != "undefined") {_RecordType("<145,153,4>",(property)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<155,163,4>",(receiver)); Inst7++; } } catch(e) {}
var proxy = new Proxy(arr, {
  get(target, property, receiver) {
try { if (Inst8 <= 1000 && typeof (property) != "undefined") {_RecordType("<175,183,5>",(property)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<188,203,5>",(Symbol.iterator)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<188,194,5>",(Symbol)); Inst10++; } } catch(e) {}
    if (property === Symbol.iterator) {
      return function* () {
        for (var i = 0; i < arr.length; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<252,253,7>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<259,260,7>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<263,273,7>",(arr.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<263,266,7>",(arr)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<275,276,7>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<298,304,8>",(arr[i])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<298,301,8>",(arr)); Inst17++; } } catch(e) {}
          yield arr[i];
        }
      };
    }

try { if (Inst18 <= 1000 && typeof (Reflect.get) != "undefined") {_RecordType("<343,354,13>",(Reflect.get)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<343,350,13>",(Reflect)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (target) != "undefined") {_RecordType("<355,361,13>",(target)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (property) != "undefined") {_RecordType("<363,371,13>",(property)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<373,381,13>",(receiver)); Inst22++; } } catch(e) {}
    return Reflect.get(target, property, receiver);
  }

});
try { if (Inst1 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<106,111,3>",(proxy)); Inst1++; } } catch(e) {}

for (var i = 0; i < 2; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<403,404,18>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<410,411,18>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,18>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof ([...proxy].join) != "undefined") {_RecordType("<426,441,19>",([...proxy].join)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<430,435,19>",(proxy)); Inst27++; } } catch(e) {}
  [...proxy].join(",");
  "a,b,c,d";
}

