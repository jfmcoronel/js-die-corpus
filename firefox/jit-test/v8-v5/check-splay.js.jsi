var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// This benchmark is based on a JavaScript log processing module used
// by the V8 profiler to generate execution time profiles for runs of
// JavaScript applications, and it effectively measures how fast the
// JavaScript engine is at allocating nodes and reclaiming the memory
// used for old nodes. Because of the way splay trees work, the engine
// also has to deal with a lot of changes to the large tree object
// graph.
//var Splay = new BenchmarkSuite('Splay', 126125, [
//  new Benchmark("Splay", SplayRun, SplaySetup, SplayTearDown)
//]);
// This is the best random number generator available to mankind ;)
var MyMath = {
  seed: 49734321,
  random: function () {
    // Robert Jenkins' 32 bit integer hash function.
try { if (Inst2 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2340,2349,42>",(this.seed)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2366,2375,42>",(this.seed)); Inst3++; } } catch(e) {}
    this.seed = this.seed + 0x7ed55d16 + (this.seed << 12) & 0xffffffff;
try { if (Inst1 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2328,2337,42>",(this.seed)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2414,2423,43>",(this.seed)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2439,2448,43>",(this.seed)); Inst6++; } } catch(e) {}
    this.seed = (this.seed ^ 0xc761c23c ^ this.seed >>> 19) & 0xffffffff;
try { if (Inst4 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2401,2410,43>",(this.seed)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2487,2496,44>",(this.seed)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2513,2522,44>",(this.seed)); Inst9++; } } catch(e) {}
    this.seed = this.seed + 0x165667b1 + (this.seed << 5) & 0xffffffff;
try { if (Inst7 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2475,2484,44>",(this.seed)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2560,2569,45>",(this.seed)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2585,2594,45>",(this.seed)); Inst12++; } } catch(e) {}
    this.seed = (this.seed + 0xd3a2646c ^ this.seed << 9) & 0xffffffff;
try { if (Inst10 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2547,2556,45>",(this.seed)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2631,2640,46>",(this.seed)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2657,2666,46>",(this.seed)); Inst15++; } } catch(e) {}
    this.seed = this.seed + 0xfd7046c5 + (this.seed << 3) & 0xffffffff;
try { if (Inst13 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2619,2628,46>",(this.seed)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2704,2713,47>",(this.seed)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2729,2738,47>",(this.seed)); Inst18++; } } catch(e) {}
    this.seed = (this.seed ^ 0xb55a4f09 ^ this.seed >>> 16) & 0xffffffff;
try { if (Inst16 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2691,2700,47>",(this.seed)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (this.seed) != "undefined") {_RecordType("<2773,2782,48>",(this.seed)); Inst19++; } } catch(e) {}
    return (this.seed & 0xfffffff) / 0x10000000;
  }
}; // Configuration.
try { if (Inst0 <= 1000 && typeof (MyMath) != "undefined") {_RecordType("<2218,2224,38>",(MyMath)); Inst0++; } } catch(e) {}

var kSplayTreeSize = 8000;
try { if (Inst20 <= 1000 && typeof (kSplayTreeSize) != "undefined") {_RecordType("<2840,2854,52>",(kSplayTreeSize)); Inst20++; } } catch(e) {}
var kSplayTreeModifications = 80;
try { if (Inst21 <= 1000 && typeof (kSplayTreeModifications) != "undefined") {_RecordType("<2867,2890,53>",(kSplayTreeModifications)); Inst21++; } } catch(e) {}
var kSplayTreePayloadDepth = 5;
try { if (Inst22 <= 1000 && typeof (kSplayTreePayloadDepth) != "undefined") {_RecordType("<2901,2923,54>",(kSplayTreePayloadDepth)); Inst22++; } } catch(e) {}
var splayTree = null;
try { if (Inst23 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<2933,2942,55>",(splayTree)); Inst23++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<2961,2980,57>",(GeneratePayloadTree)); Inst24++; } } catch(e) {}
function GeneratePayloadTree(depth, key) {
try { if (Inst25 <= 1000 && typeof (depth) != "undefined") {_RecordType("<2981,2986,57>",(depth)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (key) != "undefined") {_RecordType("<2988,2991,57>",(key)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (depth) != "undefined") {_RecordType("<3001,3006,58>",(depth)); Inst27++; } } catch(e) {}
  if (depth == 0) {
try { if (Inst28 <= 1000 && typeof (key) != "undefined") {_RecordType("<3107,3110,61>",(key)); Inst28++; } } catch(e) {}
    return {
      array: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
      string: 'String for key ' + key + ' in leaf node'
    };
  } else {
try { if (Inst29 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<3172,3191,65>",(GeneratePayloadTree)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (depth) != "undefined") {_RecordType("<3192,3197,65>",(depth)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (key) != "undefined") {_RecordType("<3203,3206,65>",(key)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<3222,3241,66>",(GeneratePayloadTree)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (depth) != "undefined") {_RecordType("<3242,3247,66>",(depth)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (key) != "undefined") {_RecordType("<3253,3256,66>",(key)); Inst34++; } } catch(e) {}
    return {
      left: GeneratePayloadTree(depth - 1, key),
      right: GeneratePayloadTree(depth - 1, key)
    };
  }
}

try { if (Inst35 <= 1000 && typeof (GenerateKey) != "undefined") {_RecordType("<3281,3292,71>",(GenerateKey)); Inst35++; } } catch(e) {}
function GenerateKey() {
  // The benchmark framework guarantees that Math.random is
  // deterministic; see base.js.
  // base.js isn't pulled in for jit-tests
try { if (Inst36 <= 1000 && typeof (MyMath.random) != "undefined") {_RecordType("<3442,3455,75>",(MyMath.random)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (MyMath) != "undefined") {_RecordType("<3442,3448,75>",(MyMath)); Inst37++; } } catch(e) {}
  return MyMath.random();
}

try { if (Inst38 <= 1000 && typeof (InsertNewNode) != "undefined") {_RecordType("<3471,3484,78>",(InsertNewNode)); Inst38++; } } catch(e) {}
function InsertNewNode() {
  // Insert new node with a unique key.
  var key;
try { if (Inst39 <= 1000 && typeof (key) != "undefined") {_RecordType("<3535,3538,80>",(key)); Inst39++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (splayTree.find) != "undefined") {_RecordType("<3584,3598,84>",(splayTree.find)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3584,3593,84>",(splayTree)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (key) != "undefined") {_RecordType("<3599,3602,84>",(key)); Inst42++; } } catch(e) {}
  do {
try { if (Inst44 <= 1000 && typeof (GenerateKey) != "undefined") {_RecordType("<3558,3569,83>",(GenerateKey)); Inst44++; } } catch(e) {}
    key = GenerateKey();
try { if (Inst43 <= 1000 && typeof (key) != "undefined") {_RecordType("<3552,3555,83>",(key)); Inst43++; } } catch(e) {}
  } while (splayTree.find(key) != null);

try { if (Inst45 <= 1000 && typeof (splayTree.insert) != "undefined") {_RecordType("<3617,3633,86>",(splayTree.insert)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3617,3626,86>",(splayTree)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (key) != "undefined") {_RecordType("<3634,3637,86>",(key)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<3639,3658,86>",(GeneratePayloadTree)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (kSplayTreePayloadDepth) != "undefined") {_RecordType("<3659,3681,86>",(kSplayTreePayloadDepth)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (key) != "undefined") {_RecordType("<3683,3686,86>",(key)); Inst50++; } } catch(e) {}
  splayTree.insert(key, GeneratePayloadTree(kSplayTreePayloadDepth, key));
try { if (Inst51 <= 1000 && typeof (key) != "undefined") {_RecordType("<3699,3702,87>",(key)); Inst51++; } } catch(e) {}
  return key;
}

try { if (Inst52 <= 1000 && typeof (SplaySetup) != "undefined") {_RecordType("<3716,3726,90>",(SplaySetup)); Inst52++; } } catch(e) {}
function SplaySetup() {
try { if (Inst54 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<3749,3758,91>",(SplayTree)); Inst54++; } } catch(e) {}
  splayTree = new SplayTree();
try { if (Inst53 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3733,3742,91>",(splayTree)); Inst53++; } } catch(e) {}

  for (var i = 0; i < kSplayTreeSize; i++) {
try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<3774,3775,93>",(i)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<3781,3782,93>",(i)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (kSplayTreeSize) != "undefined") {_RecordType("<3785,3799,93>",(kSplayTreeSize)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<3801,3802,93>",(i)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (InsertNewNode) != "undefined") {_RecordType("<3812,3825,94>",(InsertNewNode)); Inst59++; } } catch(e) {}
    InsertNewNode();
  }
}

try { if (Inst60 <= 1000 && typeof (SplayTearDown) != "undefined") {_RecordType("<3845,3858,98>",(SplayTearDown)); Inst60++; } } catch(e) {}
function SplayTearDown() {
  // Allow the garbage collector to reclaim the memory
  // used by the splay tree no matter how we exit the
  // tear down function.
try { if (Inst62 <= 1000 && typeof (splayTree.exportKeys) != "undefined") {_RecordType("<4010,4030,102>",(splayTree.exportKeys)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<4010,4019,102>",(splayTree)); Inst63++; } } catch(e) {}
  var keys = splayTree.exportKeys();
try { if (Inst61 <= 1000 && typeof (keys) != "undefined") {_RecordType("<4003,4007,102>",(keys)); Inst61++; } } catch(e) {}
  splayTree = null; // Verify that the splay tree has the right size.
try { if (Inst64 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<4036,4045,103>",(splayTree)); Inst64++; } } catch(e) {}

try { if (Inst66 <= 1000 && typeof (keys.length) != "undefined") {_RecordType("<4120,4131,105>",(keys.length)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (keys) != "undefined") {_RecordType("<4120,4124,105>",(keys)); Inst67++; } } catch(e) {}
  var length = keys.length;
try { if (Inst65 <= 1000 && typeof (length) != "undefined") {_RecordType("<4111,4117,105>",(length)); Inst65++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (length) != "undefined") {_RecordType("<4135,4141,106>",(length)); Inst68++; } } catch(e) {}
  length;
try { if (Inst69 <= 1000 && typeof (kSplayTreeSize) != "undefined") {_RecordType("<4145,4159,107>",(kSplayTreeSize)); Inst69++; } } catch(e) {}
  kSplayTreeSize;

  // Verify that the splay tree has sorted, unique keys.
  for (var i = 0; i < length - 1; i++) {
try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<4230,4231,110>",(i)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<4237,4238,110>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (length) != "undefined") {_RecordType("<4241,4247,110>",(length)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (i) != "undefined") {_RecordType("<4253,4254,110>",(i)); Inst73++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (keys[i]) != "undefined") {_RecordType("<4264,4271,111>",(keys[i])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (keys) != "undefined") {_RecordType("<4264,4268,111>",(keys)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (keys[i + 1]) != "undefined") {_RecordType("<4274,4285,111>",(keys[i + 1])); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (keys) != "undefined") {_RecordType("<4274,4278,111>",(keys)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (i) != "undefined") {_RecordType("<4279,4280,111>",(i)); Inst78++; } } catch(e) {}
    keys[i] < keys[i + 1];
    true;
  }
}

try { if (Inst79 <= 1000 && typeof (SplayRun) != "undefined") {_RecordType("<4313,4321,116>",(SplayRun)); Inst79++; } } catch(e) {}
function SplayRun() {
  // Replace a few nodes in the splay tree.
  for (var i = 0; i < kSplayTreeModifications; i++) {
try { if (Inst80 <= 1000 && typeof (i) != "undefined") {_RecordType("<4381,4382,118>",(i)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<4388,4389,118>",(i)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (kSplayTreeModifications) != "undefined") {_RecordType("<4392,4415,118>",(kSplayTreeModifications)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (i) != "undefined") {_RecordType("<4417,4418,118>",(i)); Inst83++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (InsertNewNode) != "undefined") {_RecordType("<4438,4451,119>",(InsertNewNode)); Inst85++; } } catch(e) {}
    var key = InsertNewNode();
try { if (Inst84 <= 1000 && typeof (key) != "undefined") {_RecordType("<4432,4435,119>",(key)); Inst84++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (splayTree.findGreatestLessThan) != "undefined") {_RecordType("<4474,4504,120>",(splayTree.findGreatestLessThan)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<4474,4483,120>",(splayTree)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (key) != "undefined") {_RecordType("<4505,4508,120>",(key)); Inst89++; } } catch(e) {}
    var greatest = splayTree.findGreatestLessThan(key);
try { if (Inst86 <= 1000 && typeof (greatest) != "undefined") {_RecordType("<4463,4471,120>",(greatest)); Inst86++; } } catch(e) {}

try { if (Inst90 <= 1000 && typeof (greatest) != "undefined") {_RecordType("<4520,4528,122>",(greatest)); Inst90++; } } catch(e) {}
    if (greatest == null) {
try { if (Inst91 <= 1000 && typeof (splayTree.remove) != "undefined") {_RecordType("<4546,4562,123>",(splayTree.remove)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<4546,4555,123>",(splayTree)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (key) != "undefined") {_RecordType("<4563,4566,123>",(key)); Inst93++; } } catch(e) {}
      splayTree.remove(key);
    } else {
try { if (Inst94 <= 1000 && typeof (splayTree.remove) != "undefined") {_RecordType("<4588,4604,125>",(splayTree.remove)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<4588,4597,125>",(splayTree)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (greatest.key) != "undefined") {_RecordType("<4605,4617,125>",(greatest.key)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (greatest) != "undefined") {_RecordType("<4605,4613,125>",(greatest)); Inst97++; } } catch(e) {}
      splayTree.remove(greatest.key);
    }
  }
}
/**
 * Constructs a Splay tree.  A splay tree is a self-balancing binary
 * search tree with the additional property that recently accessed
 * elements are quick to access again. It performs basic operations
 * such as insertion, look-up and removal in O(log(n)) amortized time.
 *
 * @constructor
 */


try { if (Inst98 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<4945,4954,139>",(SplayTree)); Inst98++; } } catch(e) {}
function SplayTree() {
  ;
}

;
/**
 * Pointer to the root node of the tree.
 *
 * @type {SplayTree.Node}
 * @private
 */

SplayTree.prototype.root_ = null;
try { if (Inst99 <= 1000 && typeof (SplayTree.prototype.root_) != "undefined") {_RecordType("<5059,5084,151>",(SplayTree.prototype.root_)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<5059,5078,151>",(SplayTree.prototype)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<5059,5068,151>",(SplayTree)); Inst101++; } } catch(e) {}
/**
 * @return {boolean} Whether the tree is empty.
 */

SplayTree.prototype.isEmpty = function () {
try { if (Inst105 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5204,5214,157>",(this.root_)); Inst105++; } } catch(e) {}
  return !this.root_;
};
try { if (Inst102 <= 1000 && typeof (SplayTree.prototype.isEmpty) != "undefined") {_RecordType("<5150,5177,156>",(SplayTree.prototype.isEmpty)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<5150,5169,156>",(SplayTree.prototype)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<5150,5159,156>",(SplayTree)); Inst104++; } } catch(e) {}
/**
 * Inserts a node into the tree with the specified key and value if
 * the tree does not already contain a node with the specified key. If
 * the value is inserted, it becomes the root of the tree.
 *
 * @param {number} key Key to insert into the tree.
 * @param {*} value Value to insert into the tree.
 */


SplayTree.prototype.insert = function (key, value) {
try { if (Inst109 <= 1000 && typeof (key) != "undefined") {_RecordType("<5572,5575,169>",(key)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (value) != "undefined") {_RecordType("<5577,5582,169>",(value)); Inst110++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<5592,5604,170>",(this.isEmpty)); Inst111++; } } catch(e) {}
  if (this.isEmpty()) {
try { if (Inst113 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<5631,5645,171>",(SplayTree.Node)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<5631,5640,171>",(SplayTree)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (key) != "undefined") {_RecordType("<5646,5649,171>",(key)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (value) != "undefined") {_RecordType("<5651,5656,171>",(value)); Inst116++; } } catch(e) {}
    this.root_ = new SplayTree.Node(key, value);
try { if (Inst112 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5614,5624,171>",(this.root_)); Inst112++; } } catch(e) {}
    return;
  } // Splay on the key to move the last node on the search path for
  // the key to the root of the tree.


try { if (Inst117 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<5782,5793,177>",(this.splay_)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (key) != "undefined") {_RecordType("<5794,5797,177>",(key)); Inst118++; } } catch(e) {}
  this.splay_(key);

try { if (Inst119 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<5807,5821,179>",(this.root_.key)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5807,5817,179>",(this.root_)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (key) != "undefined") {_RecordType("<5825,5828,179>",(key)); Inst121++; } } catch(e) {}
  if (this.root_.key == key) {
    return;
  }

try { if (Inst123 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<5866,5880,183>",(SplayTree.Node)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<5866,5875,183>",(SplayTree)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (key) != "undefined") {_RecordType("<5881,5884,183>",(key)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (value) != "undefined") {_RecordType("<5886,5891,183>",(value)); Inst126++; } } catch(e) {}
  var node = new SplayTree.Node(key, value);
try { if (Inst122 <= 1000 && typeof (node) != "undefined") {_RecordType("<5855,5859,183>",(node)); Inst122++; } } catch(e) {}

try { if (Inst127 <= 1000 && typeof (key) != "undefined") {_RecordType("<5901,5904,185>",(key)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<5907,5921,185>",(this.root_.key)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5907,5917,185>",(this.root_)); Inst129++; } } catch(e) {}
  if (key > this.root_.key) {
try { if (Inst132 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5941,5951,186>",(this.root_)); Inst132++; } } catch(e) {}
    node.left = this.root_;
try { if (Inst130 <= 1000 && typeof (node.left) != "undefined") {_RecordType("<5929,5938,186>",(node.left)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (node) != "undefined") {_RecordType("<5929,5933,186>",(node)); Inst131++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<5970,5986,187>",(this.root_.right)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5970,5980,187>",(this.root_)); Inst136++; } } catch(e) {}
    node.right = this.root_.right;
try { if (Inst133 <= 1000 && typeof (node.right) != "undefined") {_RecordType("<5957,5967,187>",(node.right)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (node) != "undefined") {_RecordType("<5957,5961,187>",(node)); Inst134++; } } catch(e) {}
    this.root_.right = null;
try { if (Inst137 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<5992,6008,188>",(this.root_.right)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5992,6002,188>",(this.root_)); Inst138++; } } catch(e) {}
  } else {
try { if (Inst141 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6045,6055,190>",(this.root_)); Inst141++; } } catch(e) {}
    node.right = this.root_;
try { if (Inst139 <= 1000 && typeof (node.right) != "undefined") {_RecordType("<6032,6042,190>",(node.right)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (node) != "undefined") {_RecordType("<6032,6036,190>",(node)); Inst140++; } } catch(e) {}
try { if (Inst144 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<6073,6088,191>",(this.root_.left)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6073,6083,191>",(this.root_)); Inst145++; } } catch(e) {}
    node.left = this.root_.left;
try { if (Inst142 <= 1000 && typeof (node.left) != "undefined") {_RecordType("<6061,6070,191>",(node.left)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (node) != "undefined") {_RecordType("<6061,6065,191>",(node)); Inst143++; } } catch(e) {}
    this.root_.left = null;
try { if (Inst146 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<6094,6109,192>",(this.root_.left)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6094,6104,192>",(this.root_)); Inst147++; } } catch(e) {}
  }

try { if (Inst149 <= 1000 && typeof (node) != "undefined") {_RecordType("<6138,6142,195>",(node)); Inst149++; } } catch(e) {}
  this.root_ = node;
try { if (Inst148 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6125,6135,195>",(this.root_)); Inst148++; } } catch(e) {}
};
try { if (Inst106 <= 1000 && typeof (SplayTree.prototype.insert) != "undefined") {_RecordType("<5533,5559,169>",(SplayTree.prototype.insert)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<5533,5552,169>",(SplayTree.prototype)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<5533,5542,169>",(SplayTree)); Inst108++; } } catch(e) {}
/**
 * Removes a node with the specified key from the tree if the tree
 * contains a node with this key. The removed node is returned. If the
 * key is not found, an exception is thrown.
 *
 * @param {number} key Key to find and remove from the tree.
 * @return {SplayTree.Node} The removed node.
 */


SplayTree.prototype.remove = function (key) {
try { if (Inst153 <= 1000 && typeof (key) != "undefined") {_RecordType("<6489,6492,207>",(key)); Inst153++; } } catch(e) {}
try { if (Inst154 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<6502,6514,208>",(this.isEmpty)); Inst154++; } } catch(e) {}
  if (this.isEmpty()) {
try { if (Inst155 <= 1000 && typeof (Error) != "undefined") {_RecordType("<6530,6535,209>",(Error)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (key) != "undefined") {_RecordType("<6556,6559,209>",(key)); Inst156++; } } catch(e) {}
    throw Error('Key not found: ' + key);
  }

try { if (Inst157 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<6569,6580,212>",(this.splay_)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (key) != "undefined") {_RecordType("<6581,6584,212>",(key)); Inst158++; } } catch(e) {}
  this.splay_(key);

try { if (Inst159 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<6594,6608,214>",(this.root_.key)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6594,6604,214>",(this.root_)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (key) != "undefined") {_RecordType("<6612,6615,214>",(key)); Inst161++; } } catch(e) {}
  if (this.root_.key != key) {
try { if (Inst162 <= 1000 && typeof (Error) != "undefined") {_RecordType("<6629,6634,215>",(Error)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (key) != "undefined") {_RecordType("<6655,6658,215>",(key)); Inst163++; } } catch(e) {}
    throw Error('Key not found: ' + key);
  }

try { if (Inst165 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6682,6692,218>",(this.root_)); Inst165++; } } catch(e) {}
  var removed = this.root_;
try { if (Inst164 <= 1000 && typeof (removed) != "undefined") {_RecordType("<6672,6679,218>",(removed)); Inst164++; } } catch(e) {}

try { if (Inst166 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<6702,6717,220>",(this.root_.left)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6702,6712,220>",(this.root_)); Inst167++; } } catch(e) {}
  if (!this.root_.left) {
try { if (Inst169 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<6738,6754,221>",(this.root_.right)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6738,6748,221>",(this.root_)); Inst170++; } } catch(e) {}
    this.root_ = this.root_.right;
try { if (Inst168 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6725,6735,221>",(this.root_)); Inst168++; } } catch(e) {}
  } else {
try { if (Inst172 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<6783,6799,223>",(this.root_.right)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6783,6793,223>",(this.root_)); Inst173++; } } catch(e) {}
    var right = this.root_.right;
try { if (Inst171 <= 1000 && typeof (right) != "undefined") {_RecordType("<6775,6780,223>",(right)); Inst171++; } } catch(e) {}
try { if (Inst175 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<6818,6833,224>",(this.root_.left)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6818,6828,224>",(this.root_)); Inst176++; } } catch(e) {}
    this.root_ = this.root_.left; // Splay to make sure that the new root has an empty right child.
try { if (Inst174 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6805,6815,224>",(this.root_)); Inst174++; } } catch(e) {}

try { if (Inst177 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<6906,6917,226>",(this.splay_)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (key) != "undefined") {_RecordType("<6918,6921,226>",(key)); Inst178++; } } catch(e) {}
    this.splay_(key); // Insert the original right child as the right child of the new
    // root.

try { if (Inst181 <= 1000 && typeof (right) != "undefined") {_RecordType("<7026,7031,229>",(right)); Inst181++; } } catch(e) {}
    this.root_.right = right;
try { if (Inst179 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<7007,7023,229>",(this.root_.right)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7007,7017,229>",(this.root_)); Inst180++; } } catch(e) {}
  }

try { if (Inst182 <= 1000 && typeof (removed) != "undefined") {_RecordType("<7047,7054,232>",(removed)); Inst182++; } } catch(e) {}
  return removed;
};
try { if (Inst150 <= 1000 && typeof (SplayTree.prototype.remove) != "undefined") {_RecordType("<6450,6476,207>",(SplayTree.prototype.remove)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<6450,6469,207>",(SplayTree.prototype)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<6450,6459,207>",(SplayTree)); Inst152++; } } catch(e) {}
/**
 * Returns the node having the specified key or null if the tree doesn't contain
 * a node with the specified key.
 *
 * @param {number} key Key to find in the tree.
 * @return {SplayTree.Node} Node having the specified key.
 */


SplayTree.prototype.find = function (key) {
try { if (Inst186 <= 1000 && typeof (key) != "undefined") {_RecordType("<7331,7334,243>",(key)); Inst186++; } } catch(e) {}
try { if (Inst187 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<7344,7356,244>",(this.isEmpty)); Inst187++; } } catch(e) {}
  if (this.isEmpty()) {
    return null;
  }

try { if (Inst188 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<7386,7397,248>",(this.splay_)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (key) != "undefined") {_RecordType("<7398,7401,248>",(key)); Inst189++; } } catch(e) {}
  this.splay_(key);
try { if (Inst190 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<7413,7427,249>",(this.root_.key)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7413,7423,249>",(this.root_)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (key) != "undefined") {_RecordType("<7431,7434,249>",(key)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7437,7447,249>",(this.root_)); Inst193++; } } catch(e) {}
  return this.root_.key == key ? this.root_ : null;
};
try { if (Inst183 <= 1000 && typeof (SplayTree.prototype.find) != "undefined") {_RecordType("<7294,7318,243>",(SplayTree.prototype.find)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<7294,7313,243>",(SplayTree.prototype)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<7294,7303,243>",(SplayTree)); Inst185++; } } catch(e) {}
/**
 * @return {SplayTree.Node} Node having the maximum key value that
 *     is less or equal to the specified key value.
 */


SplayTree.prototype.findGreatestLessThan = function (key) {
try { if (Inst197 <= 1000 && typeof (key) != "undefined") {_RecordType("<7641,7644,257>",(key)); Inst197++; } } catch(e) {}
try { if (Inst198 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<7654,7666,258>",(this.isEmpty)); Inst198++; } } catch(e) {}
  if (this.isEmpty()) {
    return null;
  } // Splay on the key to move the node with the given key or the last
  // node on the search path to the top of the tree.


try { if (Inst199 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<7818,7829,264>",(this.splay_)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (key) != "undefined") {_RecordType("<7830,7833,264>",(key)); Inst200++; } } catch(e) {}
  this.splay_(key); // Now the result is either the root node or the greatest node in
  // the left subtree.

try { if (Inst201 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<7932,7946,267>",(this.root_.key)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7932,7942,267>",(this.root_)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (key) != "undefined") {_RecordType("<7950,7953,267>",(key)); Inst203++; } } catch(e) {}
  if (this.root_.key <= key) {
try { if (Inst204 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7968,7978,268>",(this.root_)); Inst204++; } } catch(e) {}
    return this.root_;
  } else {
try { if (Inst205 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<7999,8014,270>",(this.root_.left)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7999,8009,270>",(this.root_)); Inst206++; } } catch(e) {}
    if (this.root_.left) {
try { if (Inst207 <= 1000 && typeof (this.findMax) != "undefined") {_RecordType("<8031,8043,271>",(this.findMax)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<8044,8059,271>",(this.root_.left)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<8044,8054,271>",(this.root_)); Inst209++; } } catch(e) {}
      return this.findMax(this.root_.left);
    } else {
      return null;
    }
  }
};
try { if (Inst194 <= 1000 && typeof (SplayTree.prototype.findGreatestLessThan) != "undefined") {_RecordType("<7588,7628,257>",(SplayTree.prototype.findGreatestLessThan)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<7588,7607,257>",(SplayTree.prototype)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<7588,7597,257>",(SplayTree)); Inst196++; } } catch(e) {}
/**
 * @return {Array<*>} An array containing all the keys of tree's nodes.
 */


SplayTree.prototype.exportKeys = function () {
  var result = [];
try { if (Inst213 <= 1000 && typeof (result) != "undefined") {_RecordType("<8242,8248,283>",(result)); Inst213++; } } catch(e) {}

try { if (Inst214 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<8263,8275,285>",(this.isEmpty)); Inst214++; } } catch(e) {}
  if (!this.isEmpty()) {
try { if (Inst215 <= 1000 && typeof (this.root_.traverse_) != "undefined") {_RecordType("<8285,8305,286>",(this.root_.traverse_)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<8285,8295,286>",(this.root_)); Inst216++; } } catch(e) {}
    this.root_.traverse_(function (node) {
try { if (Inst217 <= 1000 && typeof (node) != "undefined") {_RecordType("<8316,8320,286>",(node)); Inst217++; } } catch(e) {}
try { if (Inst218 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<8330,8341,287>",(result.push)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (result) != "undefined") {_RecordType("<8330,8336,287>",(result)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (node.key) != "undefined") {_RecordType("<8342,8350,287>",(node.key)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (node) != "undefined") {_RecordType("<8342,8346,287>",(node)); Inst221++; } } catch(e) {}
      result.push(node.key);
    });
  }

try { if (Inst222 <= 1000 && typeof (result) != "undefined") {_RecordType("<8375,8381,291>",(result)); Inst222++; } } catch(e) {}
  return result;
};
try { if (Inst210 <= 1000 && typeof (SplayTree.prototype.exportKeys) != "undefined") {_RecordType("<8189,8219,282>",(SplayTree.prototype.exportKeys)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<8189,8208,282>",(SplayTree.prototype)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<8189,8198,282>",(SplayTree)); Inst212++; } } catch(e) {}
/**
 * Perform the splay operation for the given key. Moves the node with
 * the given key to the top of the tree.  If no node has the given
 * key, the last node on the search path is moved to the top of the
 * tree. This is the simplified top-down splaying algorithm from:
 * "Self-adjusting Binary Search Trees" by Sleator and Tarjan
 *
 * @param {number} key Key to splay the tree on.
 * @private
 */


SplayTree.prototype.splay_ = function (key) {
try { if (Inst226 <= 1000 && typeof (key) != "undefined") {_RecordType("<8832,8835,305>",(key)); Inst226++; } } catch(e) {}
try { if (Inst227 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<8845,8857,306>",(this.isEmpty)); Inst227++; } } catch(e) {}
  if (this.isEmpty()) {
    return;
  } // Create a dummy node.  The use of the dummy node is a bit
  // counter-intuitive: The right child of the dummy node will hold
  // the L tree of the algorithm.  The left child of the dummy node
  // will hold the R tree of the algorithm.  Using a dummy node, left
  // and right will always be nodes and we avoid special cases.


  var dummy, left, right;
try { if (Inst228 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<9217,9222,315>",(dummy)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (left) != "undefined") {_RecordType("<9224,9228,315>",(left)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (right) != "undefined") {_RecordType("<9230,9235,315>",(right)); Inst230++; } } catch(e) {}
try { if (Inst234 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<9266,9280,316>",(SplayTree.Node)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<9266,9275,316>",(SplayTree)); Inst235++; } } catch(e) {}
  dummy = left = right = new SplayTree.Node(null, null);
try { if (Inst231 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<9239,9244,316>",(dummy)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (left) != "undefined") {_RecordType("<9247,9251,316>",(left)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (right) != "undefined") {_RecordType("<9254,9259,316>",(right)); Inst233++; } } catch(e) {}
try { if (Inst237 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<9310,9320,317>",(this.root_)); Inst237++; } } catch(e) {}
  var current = this.root_;
try { if (Inst236 <= 1000 && typeof (current) != "undefined") {_RecordType("<9300,9307,317>",(current)); Inst236++; } } catch(e) {}

  while (true) {
try { if (Inst238 <= 1000 && typeof (key) != "undefined") {_RecordType("<9348,9351,320>",(key)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (current.key) != "undefined") {_RecordType("<9354,9365,320>",(current.key)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (current) != "undefined") {_RecordType("<9354,9361,320>",(current)); Inst240++; } } catch(e) {}
    if (key < current.key) {
try { if (Inst241 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9380,9392,321>",(current.left)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (current) != "undefined") {_RecordType("<9380,9387,321>",(current)); Inst242++; } } catch(e) {}
      if (!current.left) {
        break;
      }

try { if (Inst243 <= 1000 && typeof (key) != "undefined") {_RecordType("<9430,9433,325>",(key)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (current.left.key) != "undefined") {_RecordType("<9436,9452,325>",(current.left.key)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9436,9448,325>",(current.left)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (current) != "undefined") {_RecordType("<9436,9443,325>",(current)); Inst246++; } } catch(e) {}
      if (key < current.left.key) {
        // Rotate right.
try { if (Inst248 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9499,9511,327>",(current.left)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (current) != "undefined") {_RecordType("<9499,9506,327>",(current)); Inst249++; } } catch(e) {}
        var tmp = current.left;
try { if (Inst247 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9493,9496,327>",(tmp)); Inst247++; } } catch(e) {}
try { if (Inst252 <= 1000 && typeof (tmp.right) != "undefined") {_RecordType("<9536,9545,328>",(tmp.right)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9536,9539,328>",(tmp)); Inst253++; } } catch(e) {}
        current.left = tmp.right;
try { if (Inst250 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9521,9533,328>",(current.left)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (current) != "undefined") {_RecordType("<9521,9528,328>",(current)); Inst251++; } } catch(e) {}
try { if (Inst256 <= 1000 && typeof (current) != "undefined") {_RecordType("<9567,9574,329>",(current)); Inst256++; } } catch(e) {}
        tmp.right = current;
try { if (Inst254 <= 1000 && typeof (tmp.right) != "undefined") {_RecordType("<9555,9564,329>",(tmp.right)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9555,9558,329>",(tmp)); Inst255++; } } catch(e) {}
try { if (Inst258 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9594,9597,330>",(tmp)); Inst258++; } } catch(e) {}
        current = tmp;
try { if (Inst257 <= 1000 && typeof (current) != "undefined") {_RecordType("<9584,9591,330>",(current)); Inst257++; } } catch(e) {}

try { if (Inst259 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9613,9625,332>",(current.left)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (current) != "undefined") {_RecordType("<9613,9620,332>",(current)); Inst260++; } } catch(e) {}
        if (!current.left) {
          break;
        }
      } // Link right.


try { if (Inst263 <= 1000 && typeof (current) != "undefined") {_RecordType("<9700,9707,338>",(current)); Inst263++; } } catch(e) {}
      right.left = current;
try { if (Inst261 <= 1000 && typeof (right.left) != "undefined") {_RecordType("<9687,9697,338>",(right.left)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (right) != "undefined") {_RecordType("<9687,9692,338>",(right)); Inst262++; } } catch(e) {}
try { if (Inst265 <= 1000 && typeof (current) != "undefined") {_RecordType("<9723,9730,339>",(current)); Inst265++; } } catch(e) {}
      right = current;
try { if (Inst264 <= 1000 && typeof (right) != "undefined") {_RecordType("<9715,9720,339>",(right)); Inst264++; } } catch(e) {}
try { if (Inst267 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9748,9760,340>",(current.left)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (current) != "undefined") {_RecordType("<9748,9755,340>",(current)); Inst268++; } } catch(e) {}
      current = current.left;
try { if (Inst266 <= 1000 && typeof (current) != "undefined") {_RecordType("<9738,9745,340>",(current)); Inst266++; } } catch(e) {}
    } else {
try { if (Inst269 <= 1000 && typeof (key) != "undefined") {_RecordType("<9785,9788,342>",(key)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (current.key) != "undefined") {_RecordType("<9791,9802,342>",(current.key)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (current) != "undefined") {_RecordType("<9791,9798,342>",(current)); Inst271++; } } catch(e) {}
      if (key > current.key) {
try { if (Inst272 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9819,9832,343>",(current.right)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (current) != "undefined") {_RecordType("<9819,9826,343>",(current)); Inst273++; } } catch(e) {}
        if (!current.right) {
          break;
        }

try { if (Inst274 <= 1000 && typeof (key) != "undefined") {_RecordType("<9876,9879,347>",(key)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (current.right.key) != "undefined") {_RecordType("<9882,9899,347>",(current.right.key)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9882,9895,347>",(current.right)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (current) != "undefined") {_RecordType("<9882,9889,347>",(current)); Inst277++; } } catch(e) {}
        if (key > current.right.key) {
          // Rotate left.
try { if (Inst279 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9949,9962,349>",(current.right)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (current) != "undefined") {_RecordType("<9949,9956,349>",(current)); Inst280++; } } catch(e) {}
          var tmp = current.right;
try { if (Inst278 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9943,9946,349>",(tmp)); Inst278++; } } catch(e) {}
try { if (Inst283 <= 1000 && typeof (tmp.left) != "undefined") {_RecordType("<9990,9998,350>",(tmp.left)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9990,9993,350>",(tmp)); Inst284++; } } catch(e) {}
          current.right = tmp.left;
try { if (Inst281 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9974,9987,350>",(current.right)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (current) != "undefined") {_RecordType("<9974,9981,350>",(current)); Inst282++; } } catch(e) {}
try { if (Inst287 <= 1000 && typeof (current) != "undefined") {_RecordType("<10021,10028,351>",(current)); Inst287++; } } catch(e) {}
          tmp.left = current;
try { if (Inst285 <= 1000 && typeof (tmp.left) != "undefined") {_RecordType("<10010,10018,351>",(tmp.left)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<10010,10013,351>",(tmp)); Inst286++; } } catch(e) {}
try { if (Inst289 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<10050,10053,352>",(tmp)); Inst289++; } } catch(e) {}
          current = tmp;
try { if (Inst288 <= 1000 && typeof (current) != "undefined") {_RecordType("<10040,10047,352>",(current)); Inst288++; } } catch(e) {}

try { if (Inst290 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<10071,10084,354>",(current.right)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (current) != "undefined") {_RecordType("<10071,10078,354>",(current)); Inst291++; } } catch(e) {}
          if (!current.right) {
            break;
          }
        } // Link left.


try { if (Inst294 <= 1000 && typeof (current) != "undefined") {_RecordType("<10166,10173,360>",(current)); Inst294++; } } catch(e) {}
        left.right = current;
try { if (Inst292 <= 1000 && typeof (left.right) != "undefined") {_RecordType("<10153,10163,360>",(left.right)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (left) != "undefined") {_RecordType("<10153,10157,360>",(left)); Inst293++; } } catch(e) {}
try { if (Inst296 <= 1000 && typeof (current) != "undefined") {_RecordType("<10190,10197,361>",(current)); Inst296++; } } catch(e) {}
        left = current;
try { if (Inst295 <= 1000 && typeof (left) != "undefined") {_RecordType("<10183,10187,361>",(left)); Inst295++; } } catch(e) {}
try { if (Inst298 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<10217,10230,362>",(current.right)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (current) != "undefined") {_RecordType("<10217,10224,362>",(current)); Inst299++; } } catch(e) {}
        current = current.right;
try { if (Inst297 <= 1000 && typeof (current) != "undefined") {_RecordType("<10207,10214,362>",(current)); Inst297++; } } catch(e) {}
      } else {
        break;
      }
    }
  } // Assemble.


try { if (Inst302 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<10310,10322,370>",(current.left)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (current) != "undefined") {_RecordType("<10310,10317,370>",(current)); Inst303++; } } catch(e) {}
  left.right = current.left;
try { if (Inst300 <= 1000 && typeof (left.right) != "undefined") {_RecordType("<10297,10307,370>",(left.right)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (left) != "undefined") {_RecordType("<10297,10301,370>",(left)); Inst301++; } } catch(e) {}
try { if (Inst306 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<10339,10352,371>",(current.right)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (current) != "undefined") {_RecordType("<10339,10346,371>",(current)); Inst307++; } } catch(e) {}
  right.left = current.right;
try { if (Inst304 <= 1000 && typeof (right.left) != "undefined") {_RecordType("<10326,10336,371>",(right.left)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (right) != "undefined") {_RecordType("<10326,10331,371>",(right)); Inst305++; } } catch(e) {}
try { if (Inst310 <= 1000 && typeof (dummy.right) != "undefined") {_RecordType("<10371,10382,372>",(dummy.right)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<10371,10376,372>",(dummy)); Inst311++; } } catch(e) {}
  current.left = dummy.right;
try { if (Inst308 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<10356,10368,372>",(current.left)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (current) != "undefined") {_RecordType("<10356,10363,372>",(current)); Inst309++; } } catch(e) {}
try { if (Inst314 <= 1000 && typeof (dummy.left) != "undefined") {_RecordType("<10402,10412,373>",(dummy.left)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<10402,10407,373>",(dummy)); Inst315++; } } catch(e) {}
  current.right = dummy.left;
try { if (Inst312 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<10386,10399,373>",(current.right)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (current) != "undefined") {_RecordType("<10386,10393,373>",(current)); Inst313++; } } catch(e) {}
try { if (Inst317 <= 1000 && typeof (current) != "undefined") {_RecordType("<10429,10436,374>",(current)); Inst317++; } } catch(e) {}
  this.root_ = current;
try { if (Inst316 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<10416,10426,374>",(this.root_)); Inst316++; } } catch(e) {}
};
try { if (Inst223 <= 1000 && typeof (SplayTree.prototype.splay_) != "undefined") {_RecordType("<8793,8819,305>",(SplayTree.prototype.splay_)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<8793,8812,305>",(SplayTree.prototype)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<8793,8802,305>",(SplayTree)); Inst225++; } } catch(e) {}
/**
 * Constructs a Splay tree node.
 *
 * @param {number} key Key.
 * @param {*} value Value.
 */


SplayTree.Node = function (key, value) {
try { if (Inst320 <= 1000 && typeof (key) != "undefined") {_RecordType("<10569,10572,384>",(key)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (value) != "undefined") {_RecordType("<10574,10579,384>",(value)); Inst321++; } } catch(e) {}
try { if (Inst323 <= 1000 && typeof (key) != "undefined") {_RecordType("<10596,10599,385>",(key)); Inst323++; } } catch(e) {}
  this.key = key;
try { if (Inst322 <= 1000 && typeof (this.key) != "undefined") {_RecordType("<10585,10593,385>",(this.key)); Inst322++; } } catch(e) {}
try { if (Inst325 <= 1000 && typeof (value) != "undefined") {_RecordType("<10616,10621,386>",(value)); Inst325++; } } catch(e) {}
  this.value = value;
try { if (Inst324 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<10603,10613,386>",(this.value)); Inst324++; } } catch(e) {}
};
try { if (Inst318 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10542,10556,384>",(SplayTree.Node)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10542,10551,384>",(SplayTree)); Inst319++; } } catch(e) {}
/**
 * @type {SplayTree.Node}
 */


SplayTree.Node.prototype.left = null;
try { if (Inst326 <= 1000 && typeof (SplayTree.Node.prototype.left) != "undefined") {_RecordType("<10662,10691,393>",(SplayTree.Node.prototype.left)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (SplayTree.Node.prototype) != "undefined") {_RecordType("<10662,10686,393>",(SplayTree.Node.prototype)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10662,10676,393>",(SplayTree.Node)); Inst328++; } } catch(e) {}try { if (Inst329 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10662,10671,393>",(SplayTree)); Inst329++; } } catch(e) {}
/**
 * @type {SplayTree.Node}
 */

SplayTree.Node.prototype.right = null;
try { if (Inst330 <= 1000 && typeof (SplayTree.Node.prototype.right) != "undefined") {_RecordType("<10735,10765,398>",(SplayTree.Node.prototype.right)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (SplayTree.Node.prototype) != "undefined") {_RecordType("<10735,10759,398>",(SplayTree.Node.prototype)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10735,10749,398>",(SplayTree.Node)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10735,10744,398>",(SplayTree)); Inst333++; } } catch(e) {}
/**
 * Performs an ordered traversal of the subtree starting at
 * this SplayTree.Node.
 *
 * @param {function(SplayTree.Node)} f Visitor function.
 * @private
 */

SplayTree.Node.prototype.traverse_ = function (f) {
try { if (Inst338 <= 1000 && typeof (f) != "undefined") {_RecordType("<10986,10987,407>",(f)); Inst338++; } } catch(e) {}
  var current = this;
try { if (Inst339 <= 1000 && typeof (current) != "undefined") {_RecordType("<10997,11004,408>",(current)); Inst339++; } } catch(e) {}

try { if (Inst340 <= 1000 && typeof (current) != "undefined") {_RecordType("<11023,11030,410>",(current)); Inst340++; } } catch(e) {}
  while (current) {
try { if (Inst342 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<11049,11061,411>",(current.left)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (current) != "undefined") {_RecordType("<11049,11056,411>",(current)); Inst343++; } } catch(e) {}
    var left = current.left;
try { if (Inst341 <= 1000 && typeof (left) != "undefined") {_RecordType("<11042,11046,411>",(left)); Inst341++; } } catch(e) {}

try { if (Inst344 <= 1000 && typeof (left) != "undefined") {_RecordType("<11072,11076,413>",(left)); Inst344++; } } catch(e) {}
    if (left) {
try { if (Inst345 <= 1000 && typeof (left.traverse_) != "undefined") {_RecordType("<11086,11100,414>",(left.traverse_)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (left) != "undefined") {_RecordType("<11086,11090,414>",(left)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (f) != "undefined") {_RecordType("<11101,11102,414>",(f)); Inst347++; } } catch(e) {}
      left.traverse_(f);
    }

try { if (Inst348 <= 1000 && typeof (f) != "undefined") {_RecordType("<11116,11117,417>",(f)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (current) != "undefined") {_RecordType("<11118,11125,417>",(current)); Inst349++; } } catch(e) {}
    f(current);
try { if (Inst351 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<11142,11155,418>",(current.right)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (current) != "undefined") {_RecordType("<11142,11149,418>",(current)); Inst352++; } } catch(e) {}
    current = current.right;
try { if (Inst350 <= 1000 && typeof (current) != "undefined") {_RecordType("<11132,11139,418>",(current)); Inst350++; } } catch(e) {}
  }
};
try { if (Inst334 <= 1000 && typeof (SplayTree.Node.prototype.traverse_) != "undefined") {_RecordType("<10939,10973,407>",(SplayTree.Node.prototype.traverse_)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (SplayTree.Node.prototype) != "undefined") {_RecordType("<10939,10963,407>",(SplayTree.Node.prototype)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10939,10953,407>",(SplayTree.Node)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10939,10948,407>",(SplayTree)); Inst337++; } } catch(e) {}

try { if (Inst353 <= 1000 && typeof (SplaySetup) != "undefined") {_RecordType("<11165,11175,422>",(SplaySetup)); Inst353++; } } catch(e) {}
SplaySetup();
try { if (Inst354 <= 1000 && typeof (SplayRun) != "undefined") {_RecordType("<11179,11187,423>",(SplayRun)); Inst354++; } } catch(e) {}
SplayRun();
try { if (Inst355 <= 1000 && typeof (SplayTearDown) != "undefined") {_RecordType("<11191,11204,424>",(SplayTearDown)); Inst355++; } } catch(e) {}
SplayTearDown();

