var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
var Inst671 = 0;
var Inst672 = 0;
var Inst673 = 0;
var Inst674 = 0;
var Inst675 = 0;
var Inst676 = 0;
var Inst677 = 0;
var Inst678 = 0;
var Inst679 = 0;
var Inst680 = 0;
var Inst681 = 0;
var Inst682 = 0;
var Inst683 = 0;
var Inst684 = 0;
var Inst685 = 0;
var Inst686 = 0;
var Inst687 = 0;
var Inst688 = 0;
var Inst689 = 0;
var Inst690 = 0;
var Inst691 = 0;
var Inst692 = 0;
var Inst693 = 0;
var Inst694 = 0;
var Inst695 = 0;
var Inst696 = 0;
var Inst697 = 0;
var Inst698 = 0;
var Inst699 = 0;
var Inst700 = 0;
var Inst701 = 0;
var Inst702 = 0;
var Inst703 = 0;
var Inst704 = 0;
var Inst705 = 0;
var Inst706 = 0;
var Inst707 = 0;
var Inst708 = 0;
var Inst709 = 0;
var Inst710 = 0;
var Inst711 = 0;
var Inst712 = 0;
var Inst713 = 0;
var Inst714 = 0;
var Inst715 = 0;
var Inst716 = 0;
var Inst717 = 0;
var Inst718 = 0;
var Inst719 = 0;
var Inst720 = 0;
var Inst721 = 0;
var Inst722 = 0;
var Inst723 = 0;
var Inst724 = 0;
var Inst725 = 0;
var Inst726 = 0;
var Inst727 = 0;
var Inst728 = 0;
var Inst729 = 0;
var Inst730 = 0;
var Inst731 = 0;
var Inst732 = 0;
var Inst733 = 0;
var Inst734 = 0;
var Inst735 = 0;
var Inst736 = 0;
var Inst737 = 0;
var Inst738 = 0;
var Inst739 = 0;
var Inst740 = 0;
var Inst741 = 0;
var Inst742 = 0;
var Inst743 = 0;
var Inst744 = 0;
var Inst745 = 0;
var Inst746 = 0;
var Inst747 = 0;
var Inst748 = 0;
var Inst749 = 0;
var Inst750 = 0;
var Inst751 = 0;
var Inst752 = 0;
var Inst753 = 0;
var Inst754 = 0;
var Inst755 = 0;
var Inst756 = 0;
var Inst757 = 0;
var Inst758 = 0;
var Inst759 = 0;
var Inst760 = 0;
var Inst761 = 0;
var Inst762 = 0;
var Inst763 = 0;
var Inst764 = 0;
var Inst765 = 0;
var Inst766 = 0;
var Inst767 = 0;
var Inst768 = 0;
var Inst769 = 0;
var Inst770 = 0;
var Inst771 = 0;
var Inst772 = 0;
var Inst773 = 0;
var Inst774 = 0;
var Inst775 = 0;
var Inst776 = 0;
var Inst777 = 0;
var Inst778 = 0;
var Inst779 = 0;
var Inst780 = 0;
var Inst781 = 0;
var Inst782 = 0;
var Inst783 = 0;
var Inst784 = 0;
var Inst785 = 0;
var Inst786 = 0;
var Inst787 = 0;
var Inst788 = 0;
var Inst789 = 0;
var Inst790 = 0;
var Inst791 = 0;
var Inst792 = 0;
var Inst793 = 0;
var Inst794 = 0;
var Inst795 = 0;
var Inst796 = 0;
var Inst797 = 0;
var Inst798 = 0;
var Inst799 = 0;
var Inst800 = 0;
var Inst801 = 0;
var Inst802 = 0;
var Inst803 = 0;
var Inst804 = 0;
var Inst805 = 0;
var Inst806 = 0;
var Inst807 = 0;
var Inst808 = 0;
var Inst809 = 0;
var Inst810 = 0;
var Inst811 = 0;
var Inst812 = 0;
var Inst813 = 0;
var Inst814 = 0;
var Inst815 = 0;
var Inst816 = 0;
var Inst817 = 0;
var Inst818 = 0;
var Inst819 = 0;
var Inst820 = 0;
var Inst821 = 0;
var Inst822 = 0;
var Inst823 = 0;
var Inst824 = 0;
var Inst825 = 0;
var Inst826 = 0;
var Inst827 = 0;
var Inst828 = 0;
var Inst829 = 0;
var Inst830 = 0;
var Inst831 = 0;
var Inst832 = 0;
var Inst833 = 0;
var Inst834 = 0;
var Inst835 = 0;
var Inst836 = 0;
var Inst837 = 0;
var Inst838 = 0;
var Inst839 = 0;
var Inst840 = 0;
var Inst841 = 0;
var Inst842 = 0;
var Inst843 = 0;
var Inst844 = 0;
var Inst845 = 0;
var Inst846 = 0;
var Inst847 = 0;
var Inst848 = 0;
var Inst849 = 0;
var Inst850 = 0;
var Inst851 = 0;
var Inst852 = 0;
var Inst853 = 0;
var Inst854 = 0;
var Inst855 = 0;
var Inst856 = 0;
var Inst857 = 0;
var Inst858 = 0;
var Inst859 = 0;
var Inst860 = 0;
var Inst861 = 0;
var Inst862 = 0;
var Inst863 = 0;
var Inst864 = 0;
var Inst865 = 0;
var Inst866 = 0;
var Inst867 = 0;
var Inst868 = 0;
var Inst869 = 0;
var Inst870 = 0;
var Inst871 = 0;
var Inst872 = 0;
var Inst873 = 0;
var Inst874 = 0;
var Inst875 = 0;
var Inst876 = 0;
var Inst877 = 0;
var Inst878 = 0;
var Inst879 = 0;
var Inst880 = 0;
var Inst881 = 0;
var Inst882 = 0;
var Inst883 = 0;
var Inst884 = 0;
var Inst885 = 0;
var Inst886 = 0;
var Inst887 = 0;
var Inst888 = 0;
var Inst889 = 0;
var Inst890 = 0;
var Inst891 = 0;
var Inst892 = 0;
var Inst893 = 0;
var Inst894 = 0;
var Inst895 = 0;
var Inst896 = 0;
var Inst897 = 0;
var Inst898 = 0;
var Inst899 = 0;
var Inst900 = 0;
var Inst901 = 0;
var Inst902 = 0;
var Inst903 = 0;
var Inst904 = 0;
var Inst905 = 0;
var Inst906 = 0;
var Inst907 = 0;
var Inst908 = 0;
var Inst909 = 0;
var Inst910 = 0;
var Inst911 = 0;
var Inst912 = 0;
var Inst913 = 0;
var Inst914 = 0;
var Inst915 = 0;
var Inst916 = 0;
var Inst917 = 0;
var Inst918 = 0;
var Inst919 = 0;
var Inst920 = 0;
var Inst921 = 0;
var Inst922 = 0;
var Inst923 = 0;
var Inst924 = 0;
var Inst925 = 0;
var Inst926 = 0;
var Inst927 = 0;
var Inst928 = 0;
var Inst929 = 0;
var Inst930 = 0;
var Inst931 = 0;
var Inst932 = 0;
var Inst933 = 0;
var Inst934 = 0;
var Inst935 = 0;
var Inst936 = 0;
var Inst937 = 0;
var Inst938 = 0;
var Inst939 = 0;
var Inst940 = 0;
var Inst941 = 0;
var Inst942 = 0;
var Inst943 = 0;
var Inst944 = 0;
var Inst945 = 0;
var Inst946 = 0;
var Inst947 = 0;
var Inst948 = 0;
var Inst949 = 0;
var Inst950 = 0;
var Inst951 = 0;
var Inst952 = 0;
var Inst953 = 0;
var Inst954 = 0;
var Inst955 = 0;
var Inst956 = 0;
var Inst957 = 0;
var Inst958 = 0;
var Inst959 = 0;
var Inst960 = 0;
var Inst961 = 0;
var Inst962 = 0;
var Inst963 = 0;
var Inst964 = 0;
var Inst965 = 0;
var Inst966 = 0;
var Inst967 = 0;
var Inst968 = 0;
var Inst969 = 0;
var Inst970 = 0;
var Inst971 = 0;
var Inst972 = 0;
var Inst973 = 0;
var Inst974 = 0;
var Inst975 = 0;
var Inst976 = 0;
var Inst977 = 0;
var Inst978 = 0;
var Inst979 = 0;
var Inst980 = 0;
var Inst981 = 0;
var Inst982 = 0;
var Inst983 = 0;
var Inst984 = 0;
var Inst985 = 0;
var Inst986 = 0;
var Inst987 = 0;
var Inst988 = 0;
var Inst989 = 0;
var Inst990 = 0;
var Inst991 = 0;
var Inst992 = 0;
var Inst993 = 0;
var Inst994 = 0;
var Inst995 = 0;
var Inst996 = 0;
var Inst997 = 0;
var Inst998 = 0;
var Inst999 = 0;
var Inst1000 = 0;
var Inst1001 = 0;
var Inst1002 = 0;
var Inst1003 = 0;
var Inst1004 = 0;
var Inst1005 = 0;
var Inst1006 = 0;
var Inst1007 = 0;
var Inst1008 = 0;
var Inst1009 = 0;
var Inst1010 = 0;
var Inst1011 = 0;
var Inst1012 = 0;
var Inst1013 = 0;
var Inst1014 = 0;
var Inst1015 = 0;
var Inst1016 = 0;
var Inst1017 = 0;
var Inst1018 = 0;
var Inst1019 = 0;
var Inst1020 = 0;
var Inst1021 = 0;
var Inst1022 = 0;
var Inst1023 = 0;
var Inst1024 = 0;
var Inst1025 = 0;
var Inst1026 = 0;
var Inst1027 = 0;
var Inst1028 = 0;
var Inst1029 = 0;
var Inst1030 = 0;
var Inst1031 = 0;
var Inst1032 = 0;
var Inst1033 = 0;
var Inst1034 = 0;
var Inst1035 = 0;
var Inst1036 = 0;
var Inst1037 = 0;
var Inst1038 = 0;
var Inst1039 = 0;
var Inst1040 = 0;
var Inst1041 = 0;
var Inst1042 = 0;
var Inst1043 = 0;
var Inst1044 = 0;
var Inst1045 = 0;
var Inst1046 = 0;
var Inst1047 = 0;
var Inst1048 = 0;
var Inst1049 = 0;
var Inst1050 = 0;
var Inst1051 = 0;
var Inst1052 = 0;
var Inst1053 = 0;
var Inst1054 = 0;
var Inst1055 = 0;
var Inst1056 = 0;
var Inst1057 = 0;
var Inst1058 = 0;
var Inst1059 = 0;
var Inst1060 = 0;
var Inst1061 = 0;
var Inst1062 = 0;
var Inst1063 = 0;
var Inst1064 = 0;
var Inst1065 = 0;
var Inst1066 = 0;
var Inst1067 = 0;
var Inst1068 = 0;
var Inst1069 = 0;
var Inst1070 = 0;
var Inst1071 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Copyright 1996 John Maloney and Mario Wolczko.
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// This implementation of the DeltaBlue benchmark is derived
// from the Smalltalk implementation by John Maloney and Mario
// Wolczko. Some parts have been translated directly, whereas
// others have been modified more aggresively to make it feel
// more like a JavaScript program.
//var DeltaBlue = new BenchmarkSuite('DeltaBlue', 71104, [
//  new Benchmark('DeltaBlue', deltaBlue)
//]);

/**
 * A JavaScript implementation of the DeltaBlue constrain-solving
 * algorithm, as described in:
 *
 * "The DeltaBlue Algorithm: An Incremental Constraint Hierarchy Solver"
 *   Bjorn N. Freeman-Benson and John Maloney
 *   January 1990 Communications of the ACM,
 *   also available as University of Washington TR 89-08-06.
 *
 * Beware: this benchmark is written in a grotesque style where
 * the constraint model is built by side-effects from constructors.
 * I've kept it this way to avoid deviating too much from the original
 * implementation.
 */
try { if (Inst0 <= 1000 && typeof (alert) != "undefined") {_RecordType("<1784,1789,39>",(alert)); Inst0++; } } catch(e) {}
function alert(msg) {
try { if (Inst1 <= 1000 && typeof (msg) != "undefined") {_RecordType("<1790,1793,39>",(msg)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<1799,1804,40>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (msg) != "undefined") {_RecordType("<1805,1808,40>",(msg)); Inst3++; } } catch(e) {}
  print(msg);
  false;
  true;
}
/* --- O b j e c t   M o d e l --- */


Object.prototype.inheritsFrom = function (shuper) {
try { if (Inst7 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1912,1918,47>",(shuper)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1933,1942,48>",(Inheriter)); Inst8++; } } catch(e) {}
  function Inheriter() {
    ;
  }

try { if (Inst11 <= 1000 && typeof (shuper.prototype) != "undefined") {_RecordType("<1982,1998,52>",(shuper.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1982,1988,52>",(shuper)); Inst12++; } } catch(e) {}
  Inheriter.prototype = shuper.prototype;
try { if (Inst9 <= 1000 && typeof (Inheriter.prototype) != "undefined") {_RecordType("<1960,1979,52>",(Inheriter.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1960,1969,52>",(Inheriter)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<2023,2032,53>",(Inheriter)); Inst14++; } } catch(e) {}
  this.prototype = new Inheriter();
try { if (Inst13 <= 1000 && typeof (this.prototype) != "undefined") {_RecordType("<2002,2016,53>",(this.prototype)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<2062,2068,54>",(shuper)); Inst16++; } } catch(e) {}
  this.superConstructor = shuper;
try { if (Inst15 <= 1000 && typeof (this.superConstructor) != "undefined") {_RecordType("<2038,2059,54>",(this.superConstructor)); Inst15++; } } catch(e) {}
};
try { if (Inst4 <= 1000 && typeof (Object.prototype.inheritsFrom) != "undefined") {_RecordType("<1870,1899,47>",(Object.prototype.inheritsFrom)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1870,1886,47>",(Object.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1870,1876,47>",(Object)); Inst6++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2083,2100,57>",(OrderedCollection)); Inst17++; } } catch(e) {}
function OrderedCollection() {
try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2123,2128,58>",(Array)); Inst19++; } } catch(e) {}
  this.elms = new Array();
try { if (Inst18 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2107,2116,58>",(this.elms)); Inst18++; } } catch(e) {}
}

OrderedCollection.prototype.add = function (elm) {
try { if (Inst23 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2179,2182,61>",(elm)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (this.elms.push) != "undefined") {_RecordType("<2188,2202,62>",(this.elms.push)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2188,2197,62>",(this.elms)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2203,2206,62>",(elm)); Inst26++; } } catch(e) {}
  this.elms.push(elm);
};
try { if (Inst20 <= 1000 && typeof (OrderedCollection.prototype.add) != "undefined") {_RecordType("<2135,2166,61>",(OrderedCollection.prototype.add)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2135,2162,61>",(OrderedCollection.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2135,2152,61>",(OrderedCollection)); Inst22++; } } catch(e) {}

OrderedCollection.prototype.at = function (index) {
try { if (Inst30 <= 1000 && typeof (index) != "undefined") {_RecordType("<2256,2261,65>",(index)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2274,2290,66>",(this.elms[index])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2274,2283,66>",(this.elms)); Inst32++; } } catch(e) {}
  return this.elms[index];
};
try { if (Inst27 <= 1000 && typeof (OrderedCollection.prototype.at) != "undefined") {_RecordType("<2213,2243,65>",(OrderedCollection.prototype.at)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2213,2240,65>",(OrderedCollection.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2213,2230,65>",(OrderedCollection)); Inst29++; } } catch(e) {}

OrderedCollection.prototype.size = function () {
try { if (Inst36 <= 1000 && typeof (this.elms.length) != "undefined") {_RecordType("<2354,2370,70>",(this.elms.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2354,2363,70>",(this.elms)); Inst37++; } } catch(e) {}
  return this.elms.length;
};
try { if (Inst33 <= 1000 && typeof (OrderedCollection.prototype.size) != "undefined") {_RecordType("<2296,2328,69>",(OrderedCollection.prototype.size)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2296,2323,69>",(OrderedCollection.prototype)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2296,2313,69>",(OrderedCollection)); Inst35++; } } catch(e) {}

OrderedCollection.prototype.removeFirst = function () {
try { if (Inst41 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2441,2454,74>",(this.elms.pop)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2441,2450,74>",(this.elms)); Inst42++; } } catch(e) {}
  return this.elms.pop();
};
try { if (Inst38 <= 1000 && typeof (OrderedCollection.prototype.removeFirst) != "undefined") {_RecordType("<2376,2415,73>",(OrderedCollection.prototype.removeFirst)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2376,2403,73>",(OrderedCollection.prototype)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2376,2393,73>",(OrderedCollection)); Inst40++; } } catch(e) {}

OrderedCollection.prototype.remove = function (elm) {
try { if (Inst46 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2509,2512,77>",(elm)); Inst46++; } } catch(e) {}
  var index = 0,
      skipped = 0;
try { if (Inst47 <= 1000 && typeof (index) != "undefined") {_RecordType("<2522,2527,78>",(index)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2539,2546,79>",(skipped)); Inst48++; } } catch(e) {}

  for (var i = 0; i < this.elms.length; i++) {
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<2564,2565,81>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<2571,2572,81>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (this.elms.length) != "undefined") {_RecordType("<2575,2591,81>",(this.elms.length)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2575,2584,81>",(this.elms)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2593,2594,81>",(i)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (this.elms[i]) != "undefined") {_RecordType("<2616,2628,82>",(this.elms[i])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2616,2625,82>",(this.elms)); Inst56++; } } catch(e) {}
    var value = this.elms[i];
try { if (Inst54 <= 1000 && typeof (value) != "undefined") {_RecordType("<2608,2613,82>",(value)); Inst54++; } } catch(e) {}

try { if (Inst57 <= 1000 && typeof (value) != "undefined") {_RecordType("<2639,2644,84>",(value)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2648,2651,84>",(elm)); Inst58++; } } catch(e) {}
    if (value != elm) {
try { if (Inst61 <= 1000 && typeof (value) != "undefined") {_RecordType("<2680,2685,85>",(value)); Inst61++; } } catch(e) {}
      this.elms[index] = value;
try { if (Inst59 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2661,2677,85>",(this.elms[index])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2661,2670,85>",(this.elms)); Inst60++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (index) != "undefined") {_RecordType("<2693,2698,86>",(index)); Inst62++; } } catch(e) {}
      index++;
    } else {
try { if (Inst63 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2721,2728,88>",(skipped)); Inst63++; } } catch(e) {}
      skipped++;
    }
  }

  for (var i = 0; i < skipped; i++) {
try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<2754,2755,92>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<2761,2762,92>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2765,2772,92>",(skipped)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<2774,2775,92>",(i)); Inst67++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2785,2798,93>",(this.elms.pop)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2785,2794,93>",(this.elms)); Inst69++; } } catch(e) {}
    this.elms.pop();
  }
};
try { if (Inst43 <= 1000 && typeof (OrderedCollection.prototype.remove) != "undefined") {_RecordType("<2462,2496,77>",(OrderedCollection.prototype.remove)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2462,2489,77>",(OrderedCollection.prototype)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2462,2479,77>",(OrderedCollection)); Inst45++; } } catch(e) {}
/* --- *
 * S t r e n g t h
 * --- */

/**
 * Strengths are used to measure the relative importance of constraints.
 * New strengths may be inserted in the strength hierarchy without
 * disrupting current constraints.  Strengths cannot be created outside
 * this class, so pointer comparison can be used for value comparison.
 */


try { if (Inst70 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3150,3158,108>",(Strength)); Inst70++; } } catch(e) {}
function Strength(strengthValue, name) {
try { if (Inst71 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<3159,3172,108>",(strengthValue)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (name) != "undefined") {_RecordType("<3174,3178,108>",(name)); Inst72++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<3205,3218,109>",(strengthValue)); Inst74++; } } catch(e) {}
  this.strengthValue = strengthValue;
try { if (Inst73 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<3184,3202,109>",(this.strengthValue)); Inst73++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (name) != "undefined") {_RecordType("<3234,3238,110>",(name)); Inst76++; } } catch(e) {}
  this.name = name;
try { if (Inst75 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<3222,3231,110>",(this.name)); Inst75++; } } catch(e) {}
}

Strength.stronger = function (s1, s2) {
try { if (Inst79 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3273,3275,113>",(s1)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3277,3279,113>",(s2)); Inst80++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3292,3308,114>",(s1.strengthValue)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3292,3294,114>",(s1)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3311,3327,114>",(s2.strengthValue)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3311,3313,114>",(s2)); Inst84++; } } catch(e) {}
  return s1.strengthValue < s2.strengthValue;
};
try { if (Inst77 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<3243,3260,113>",(Strength.stronger)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3243,3251,113>",(Strength)); Inst78++; } } catch(e) {}

Strength.weaker = function (s1, s2) {
try { if (Inst87 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3361,3363,117>",(s1)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3365,3367,117>",(s2)); Inst88++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3380,3396,118>",(s1.strengthValue)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3380,3382,118>",(s1)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3399,3415,118>",(s2.strengthValue)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3399,3401,118>",(s2)); Inst92++; } } catch(e) {}
  return s1.strengthValue > s2.strengthValue;
};
try { if (Inst85 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<3333,3348,117>",(Strength.weaker)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3333,3341,117>",(Strength)); Inst86++; } } catch(e) {}

Strength.weakestOf = function (s1, s2) {
try { if (Inst95 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3452,3454,121>",(s1)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3456,3458,121>",(s2)); Inst96++; } } catch(e) {}
try { if (Inst97 <= 1000 && typeof (this.weaker) != "undefined") {_RecordType("<3471,3482,122>",(this.weaker)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3483,3485,122>",(s1)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3487,3489,122>",(s2)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3493,3495,122>",(s1)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3498,3500,122>",(s2)); Inst101++; } } catch(e) {}
  return this.weaker(s1, s2) ? s1 : s2;
};
try { if (Inst93 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<3421,3439,121>",(Strength.weakestOf)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3421,3429,121>",(Strength)); Inst94++; } } catch(e) {}

Strength.strongest = function (s1, s2) {
try { if (Inst104 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3537,3539,125>",(s1)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3541,3543,125>",(s2)); Inst105++; } } catch(e) {}
try { if (Inst106 <= 1000 && typeof (this.stronger) != "undefined") {_RecordType("<3556,3569,126>",(this.stronger)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3570,3572,126>",(s1)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3574,3576,126>",(s2)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3580,3582,126>",(s1)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3585,3587,126>",(s2)); Inst110++; } } catch(e) {}
  return this.stronger(s1, s2) ? s1 : s2;
};
try { if (Inst102 <= 1000 && typeof (Strength.strongest) != "undefined") {_RecordType("<3506,3524,125>",(Strength.strongest)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3506,3514,125>",(Strength)); Inst103++; } } catch(e) {}

Strength.prototype.nextWeaker = function () {
try { if (Inst114 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<3649,3667,130>",(this.strengthValue)); Inst114++; } } catch(e) {}
  switch (this.strengthValue) {
    case 0:
try { if (Inst115 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<3696,3712,132>",(Strength.WEAKEST)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3696,3704,132>",(Strength)); Inst116++; } } catch(e) {}
      return Strength.WEAKEST;

    case 1:
try { if (Inst117 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<3740,3761,135>",(Strength.WEAK_DEFAULT)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3740,3748,135>",(Strength)); Inst118++; } } catch(e) {}
      return Strength.WEAK_DEFAULT;

    case 2:
try { if (Inst119 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<3789,3804,138>",(Strength.NORMAL)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3789,3797,138>",(Strength)); Inst120++; } } catch(e) {}
      return Strength.NORMAL;

    case 3:
try { if (Inst121 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<3832,3855,141>",(Strength.STRONG_DEFAULT)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3832,3840,141>",(Strength)); Inst122++; } } catch(e) {}
      return Strength.STRONG_DEFAULT;

    case 4:
try { if (Inst123 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<3883,3901,144>",(Strength.PREFERRED)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3883,3891,144>",(Strength)); Inst124++; } } catch(e) {}
      return Strength.PREFERRED;

    case 5:
try { if (Inst125 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<3929,3946,147>",(Strength.REQUIRED)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3929,3937,147>",(Strength)); Inst126++; } } catch(e) {}
      return Strength.REQUIRED;
  }
}; // Strength constants.
try { if (Inst111 <= 1000 && typeof (Strength.prototype.nextWeaker) != "undefined") {_RecordType("<3593,3622,129>",(Strength.prototype.nextWeaker)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Strength.prototype) != "undefined") {_RecordType("<3593,3611,129>",(Strength.prototype)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3593,3601,129>",(Strength)); Inst113++; } } catch(e) {}


try { if (Inst129 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4004,4012,152>",(Strength)); Inst129++; } } catch(e) {}
Strength.REQUIRED = new Strength(0, "required");
try { if (Inst127 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<3980,3997,152>",(Strength.REQUIRED)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3980,3988,152>",(Strength)); Inst128++; } } catch(e) {}
try { if (Inst132 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4060,4068,153>",(Strength)); Inst132++; } } catch(e) {}
Strength.STONG_PREFERRED = new Strength(1, "strongPreferred");
try { if (Inst130 <= 1000 && typeof (Strength.STONG_PREFERRED) != "undefined") {_RecordType("<4029,4053,153>",(Strength.STONG_PREFERRED)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4029,4037,153>",(Strength)); Inst131++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4117,4125,154>",(Strength)); Inst135++; } } catch(e) {}
Strength.PREFERRED = new Strength(2, "preferred");
try { if (Inst133 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<4092,4110,154>",(Strength.PREFERRED)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4092,4100,154>",(Strength)); Inst134++; } } catch(e) {}
try { if (Inst138 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4173,4181,155>",(Strength)); Inst138++; } } catch(e) {}
Strength.STRONG_DEFAULT = new Strength(3, "strongDefault");
try { if (Inst136 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<4143,4166,155>",(Strength.STRONG_DEFAULT)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4143,4151,155>",(Strength)); Inst137++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4225,4233,156>",(Strength)); Inst141++; } } catch(e) {}
Strength.NORMAL = new Strength(4, "normal");
try { if (Inst139 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<4203,4218,156>",(Strength.NORMAL)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4203,4211,156>",(Strength)); Inst140++; } } catch(e) {}
try { if (Inst144 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4276,4284,157>",(Strength)); Inst144++; } } catch(e) {}
Strength.WEAK_DEFAULT = new Strength(5, "weakDefault");
try { if (Inst142 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<4248,4269,157>",(Strength.WEAK_DEFAULT)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4248,4256,157>",(Strength)); Inst143++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4327,4335,158>",(Strength)); Inst147++; } } catch(e) {}
Strength.WEAKEST = new Strength(6, "weakest");
try { if (Inst145 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<4304,4320,158>",(Strength.WEAKEST)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4304,4312,158>",(Strength)); Inst146++; } } catch(e) {}
/* --- *
 * C o n s t r a i n t
 * --- */

/**
 * An abstract class representing a system-maintainable relationship
 * (or "constraint") between a set of variables. A constraint supplies
 * a strength instance variable; concrete subclasses provide a means
 * of storing the constrained variables and other information required
 * to represent a constraint.
 */

try { if (Inst148 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4722,4732,171>",(Constraint)); Inst148++; } } catch(e) {}
function Constraint(strength) {
try { if (Inst149 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4733,4741,171>",(strength)); Inst149++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4763,4771,172>",(strength)); Inst151++; } } catch(e) {}
  this.strength = strength;
try { if (Inst150 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<4747,4760,172>",(this.strength)); Inst150++; } } catch(e) {}
}
/**
 * Activate this constraint and attempt to satisfy it.
 */


Constraint.prototype.addConstraint = function () {
try { if (Inst155 <= 1000 && typeof (this.addToGraph) != "undefined") {_RecordType("<4893,4908,180>",(this.addToGraph)); Inst155++; } } catch(e) {}
  this.addToGraph();
try { if (Inst156 <= 1000 && typeof (planner.incrementalAdd) != "undefined") {_RecordType("<4914,4936,181>",(planner.incrementalAdd)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (planner) != "undefined") {_RecordType("<4914,4921,181>",(planner)); Inst157++; } } catch(e) {}
  planner.incrementalAdd(this);
};
try { if (Inst152 <= 1000 && typeof (Constraint.prototype.addConstraint) != "undefined") {_RecordType("<4840,4874,179>",(Constraint.prototype.addConstraint)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<4840,4860,179>",(Constraint.prototype)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4840,4850,179>",(Constraint)); Inst154++; } } catch(e) {}
/**
 * Attempt to find a way to enforce this constraint. If successful,
 * record the solution, perhaps modifying the current dataflow
 * graph. Answer the constraint that this constraint overrides, if
 * there is one, or nil, if there isn't.
 * Assume: I am not already satisfied.
 */


Constraint.prototype.satisfy = function (mark) {
try { if (Inst161 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5276,5280,192>",(mark)); Inst161++; } } catch(e) {}
try { if (Inst162 <= 1000 && typeof (this.chooseMethod) != "undefined") {_RecordType("<5286,5303,193>",(this.chooseMethod)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5304,5308,193>",(mark)); Inst163++; } } catch(e) {}
  this.chooseMethod(mark);

try { if (Inst164 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5319,5335,195>",(this.isSatisfied)); Inst164++; } } catch(e) {}
  if (!this.isSatisfied()) {
try { if (Inst165 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<5349,5362,196>",(this.strength)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<5366,5383,196>",(Strength.REQUIRED)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<5366,5374,196>",(Strength)); Inst167++; } } catch(e) {}
    if (this.strength == Strength.REQUIRED) {
try { if (Inst168 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5393,5398,197>",(alert)); Inst168++; } } catch(e) {}
      alert("Could not satisfy a required constraint!");
    }

    return null;
  }

try { if (Inst169 <= 1000 && typeof (this.markInputs) != "undefined") {_RecordType("<5475,5490,203>",(this.markInputs)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5491,5495,203>",(mark)); Inst170++; } } catch(e) {}
  this.markInputs(mark);
try { if (Inst172 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<5510,5521,204>",(this.output)); Inst172++; } } catch(e) {}
  var out = this.output();
try { if (Inst171 <= 1000 && typeof (out) != "undefined") {_RecordType("<5504,5507,204>",(out)); Inst171++; } } catch(e) {}
try { if (Inst174 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5544,5560,205>",(out.determinedBy)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (out) != "undefined") {_RecordType("<5544,5547,205>",(out)); Inst175++; } } catch(e) {}
  var overridden = out.determinedBy;
try { if (Inst173 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5531,5541,205>",(overridden)); Inst173++; } } catch(e) {}

try { if (Inst176 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5569,5579,207>",(overridden)); Inst176++; } } catch(e) {}
  if (overridden != null) {
try { if (Inst177 <= 1000 && typeof (overridden.markUnsatisfied) != "undefined") {_RecordType("<5595,5621,208>",(overridden.markUnsatisfied)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5595,5605,208>",(overridden)); Inst178++; } } catch(e) {}
    overridden.markUnsatisfied();
  }

  out.determinedBy = this;
try { if (Inst179 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5632,5648,211>",(out.determinedBy)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (out) != "undefined") {_RecordType("<5632,5635,211>",(out)); Inst180++; } } catch(e) {}

try { if (Inst181 <= 1000 && typeof (planner.addPropagate) != "undefined") {_RecordType("<5665,5685,213>",(planner.addPropagate)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5665,5672,213>",(planner)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5692,5696,213>",(mark)); Inst183++; } } catch(e) {}
  if (!planner.addPropagate(this, mark)) {
try { if (Inst184 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5705,5710,214>",(alert)); Inst184++; } } catch(e) {}
    alert("Cycle encountered");
  }

try { if (Inst187 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5751,5755,217>",(mark)); Inst187++; } } catch(e) {}
  out.mark = mark;
try { if (Inst185 <= 1000 && typeof (out.mark) != "undefined") {_RecordType("<5740,5748,217>",(out.mark)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (out) != "undefined") {_RecordType("<5740,5743,217>",(out)); Inst186++; } } catch(e) {}
try { if (Inst188 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5766,5776,218>",(overridden)); Inst188++; } } catch(e) {}
  return overridden;
};
try { if (Inst158 <= 1000 && typeof (Constraint.prototype.satisfy) != "undefined") {_RecordType("<5235,5263,192>",(Constraint.prototype.satisfy)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5235,5255,192>",(Constraint.prototype)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5235,5245,192>",(Constraint)); Inst160++; } } catch(e) {}

Constraint.prototype.destroyConstraint = function () {
try { if (Inst192 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5843,5859,222>",(this.isSatisfied)); Inst192++; } } catch(e) {}
  if (this.isSatisfied()) {
try { if (Inst193 <= 1000 && typeof (planner.incrementalRemove) != "undefined") {_RecordType("<5869,5894,223>",(planner.incrementalRemove)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5869,5876,223>",(planner)); Inst194++; } } catch(e) {}
    planner.incrementalRemove(this);
  } else {
try { if (Inst195 <= 1000 && typeof (this.removeFromGraph) != "undefined") {_RecordType("<5917,5937,225>",(this.removeFromGraph)); Inst195++; } } catch(e) {}
    this.removeFromGraph();
  }
};
try { if (Inst189 <= 1000 && typeof (Constraint.prototype.destroyConstraint) != "undefined") {_RecordType("<5782,5820,221>",(Constraint.prototype.destroyConstraint)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5782,5802,221>",(Constraint.prototype)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5782,5792,221>",(Constraint)); Inst191++; } } catch(e) {}
/**
 * Normal constraints are not input constraints.  An input constraint
 * is one that depends on external state, such as the mouse, the
 * keybord, a clock, or some arbitraty piece of imperative code.
 */


Constraint.prototype.isInput = function () {
  return false;
};
try { if (Inst196 <= 1000 && typeof (Constraint.prototype.isInput) != "undefined") {_RecordType("<6158,6186,235>",(Constraint.prototype.isInput)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<6158,6178,235>",(Constraint.prototype)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<6158,6168,235>",(Constraint)); Inst198++; } } catch(e) {}
/* --- *
 * U n a r y   C o n s t r a i n t
 * --- */

/**
 * Abstract superclass for constraints having a single possible output
 * variable.
 */


try { if (Inst199 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6380,6395,248>",(UnaryConstraint)); Inst199++; } } catch(e) {}
function UnaryConstraint(v, strength) {
try { if (Inst200 <= 1000 && typeof (v) != "undefined") {_RecordType("<6396,6397,248>",(v)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6399,6407,248>",(strength)); Inst201++; } } catch(e) {}
try { if (Inst202 <= 1000 && typeof (UnaryConstraint.superConstructor.call) != "undefined") {_RecordType("<6413,6450,249>",(UnaryConstraint.superConstructor.call)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (UnaryConstraint.superConstructor) != "undefined") {_RecordType("<6413,6445,249>",(UnaryConstraint.superConstructor)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6413,6428,249>",(UnaryConstraint)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6457,6465,249>",(strength)); Inst205++; } } catch(e) {}
  UnaryConstraint.superConstructor.call(this, strength);
try { if (Inst207 <= 1000 && typeof (v) != "undefined") {_RecordType("<6486,6487,250>",(v)); Inst207++; } } catch(e) {}
  this.myOutput = v;
try { if (Inst206 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6470,6483,250>",(this.myOutput)); Inst206++; } } catch(e) {}
  this.satisfied = false;
try { if (Inst208 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6491,6505,251>",(this.satisfied)); Inst208++; } } catch(e) {}
try { if (Inst209 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<6517,6535,252>",(this.addConstraint)); Inst209++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst210 <= 1000 && typeof (UnaryConstraint.inheritsFrom) != "undefined") {_RecordType("<6542,6570,255>",(UnaryConstraint.inheritsFrom)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6542,6557,255>",(UnaryConstraint)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<6571,6581,255>",(Constraint)); Inst212++; } } catch(e) {}
UnaryConstraint.inheritsFrom(Constraint);
/**
 * Adds this constraint to the constraint graph
 */

UnaryConstraint.prototype.addToGraph = function () {
try { if (Inst216 <= 1000 && typeof (this.myOutput.addConstraint) != "undefined") {_RecordType("<6696,6723,261>",(this.myOutput.addConstraint)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6696,6709,261>",(this.myOutput)); Inst217++; } } catch(e) {}
  this.myOutput.addConstraint(this);
  this.satisfied = false;
try { if (Inst218 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6733,6747,262>",(this.satisfied)); Inst218++; } } catch(e) {}
};
try { if (Inst213 <= 1000 && typeof (UnaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<6641,6677,260>",(UnaryConstraint.prototype.addToGraph)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6641,6666,260>",(UnaryConstraint.prototype)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6641,6656,260>",(UnaryConstraint)); Inst215++; } } catch(e) {}
/**
 * Decides if this constraint can be satisfied and records that
 * decision.
 */


UnaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst222 <= 1000 && typeof (mark) != "undefined") {_RecordType("<6898,6902,270>",(mark)); Inst222++; } } catch(e) {}
try { if (Inst224 <= 1000 && typeof (this.myOutput.mark) != "undefined") {_RecordType("<6925,6943,271>",(this.myOutput.mark)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6925,6938,271>",(this.myOutput)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (mark) != "undefined") {_RecordType("<6947,6951,271>",(mark)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<6955,6972,271>",(Strength.stronger)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<6955,6963,271>",(Strength)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<6973,6986,271>",(this.strength)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<6988,7014,271>",(this.myOutput.walkStrength)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6988,7001,271>",(this.myOutput)); Inst231++; } } catch(e) {}
  this.satisfied = this.myOutput.mark != mark && Strength.stronger(this.strength, this.myOutput.walkStrength);
try { if (Inst223 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6908,6922,271>",(this.satisfied)); Inst223++; } } catch(e) {}
};
try { if (Inst219 <= 1000 && typeof (UnaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<6847,6885,270>",(UnaryConstraint.prototype.chooseMethod)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6847,6872,270>",(UnaryConstraint.prototype)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6847,6862,270>",(UnaryConstraint)); Inst221++; } } catch(e) {}
/**
 * Returns true if this constraint is satisfied in the current solution.
 */


UnaryConstraint.prototype.isSatisfied = function () {
try { if (Inst235 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7166,7180,279>",(this.satisfied)); Inst235++; } } catch(e) {}
  return this.satisfied;
};
try { if (Inst232 <= 1000 && typeof (UnaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<7103,7140,278>",(UnaryConstraint.prototype.isSatisfied)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7103,7128,278>",(UnaryConstraint.prototype)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7103,7118,278>",(UnaryConstraint)); Inst234++; } } catch(e) {}

UnaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst239 <= 1000 && typeof (mark) != "undefined") {_RecordType("<7235,7239,282>",(mark)); Inst239++; } } catch(e) {}
  ;
} // has no inputs

/**
 * Returns the current output variable.
 */
;
try { if (Inst236 <= 1000 && typeof (UnaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<7186,7222,282>",(UnaryConstraint.prototype.markInputs)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7186,7211,282>",(UnaryConstraint.prototype)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7186,7201,282>",(UnaryConstraint)); Inst238++; } } catch(e) {}

UnaryConstraint.prototype.output = function () {
try { if (Inst243 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7376,7389,292>",(this.myOutput)); Inst243++; } } catch(e) {}
  return this.myOutput;
};
try { if (Inst240 <= 1000 && typeof (UnaryConstraint.prototype.output) != "undefined") {_RecordType("<7318,7350,291>",(UnaryConstraint.prototype.output)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7318,7343,291>",(UnaryConstraint.prototype)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7318,7333,291>",(UnaryConstraint)); Inst242++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


UnaryConstraint.prototype.recalculate = function () {
try { if (Inst249 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<7659,7672,302>",(this.strength)); Inst249++; } } catch(e) {}
  this.myOutput.walkStrength = this.strength;
try { if (Inst247 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<7630,7656,302>",(this.myOutput.walkStrength)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7630,7643,302>",(this.myOutput)); Inst248++; } } catch(e) {}
try { if (Inst252 <= 1000 && typeof (this.isInput) != "undefined") {_RecordType("<7698,7710,303>",(this.isInput)); Inst252++; } } catch(e) {}
  this.myOutput.stay = !this.isInput();
try { if (Inst250 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7676,7694,303>",(this.myOutput.stay)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7676,7689,303>",(this.myOutput)); Inst251++; } } catch(e) {}

try { if (Inst253 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7721,7739,305>",(this.myOutput.stay)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7721,7734,305>",(this.myOutput)); Inst254++; } } catch(e) {}
  if (this.myOutput.stay) {
try { if (Inst255 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<7747,7759,306>",(this.execute)); Inst255++; } } catch(e) {}
    this.execute();
  } // Stay optimization

};
try { if (Inst244 <= 1000 && typeof (UnaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<7574,7611,301>",(UnaryConstraint.prototype.recalculate)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7574,7599,301>",(UnaryConstraint.prototype)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7574,7589,301>",(UnaryConstraint)); Inst246++; } } catch(e) {}
/**
 * Records that this constraint is unsatisfied
 */


UnaryConstraint.prototype.markUnsatisfied = function () {
  this.satisfied = false;
try { if (Inst259 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7909,7923,316>",(this.satisfied)); Inst259++; } } catch(e) {}
};
try { if (Inst256 <= 1000 && typeof (UnaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<7849,7890,315>",(UnaryConstraint.prototype.markUnsatisfied)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7849,7874,315>",(UnaryConstraint.prototype)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7849,7864,315>",(UnaryConstraint)); Inst258++; } } catch(e) {}

UnaryConstraint.prototype.inputsKnown = function () {
  return true;
};
try { if (Inst260 <= 1000 && typeof (UnaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<7937,7974,319>",(UnaryConstraint.prototype.inputsKnown)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7937,7962,319>",(UnaryConstraint.prototype)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7937,7952,319>",(UnaryConstraint)); Inst262++; } } catch(e) {}

UnaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst266 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<8074,8087,324>",(this.myOutput)); Inst266++; } } catch(e) {}
  if (this.myOutput != null) {
try { if (Inst267 <= 1000 && typeof (this.myOutput.removeConstraint) != "undefined") {_RecordType("<8103,8133,325>",(this.myOutput.removeConstraint)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<8103,8116,325>",(this.myOutput)); Inst268++; } } catch(e) {}
    this.myOutput.removeConstraint(this);
  }

  this.satisfied = false;
try { if (Inst269 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<8148,8162,328>",(this.satisfied)); Inst269++; } } catch(e) {}
};
try { if (Inst263 <= 1000 && typeof (UnaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<8010,8051,323>",(UnaryConstraint.prototype.removeFromGraph)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<8010,8035,323>",(UnaryConstraint.prototype)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8010,8025,323>",(UnaryConstraint)); Inst265++; } } catch(e) {}
/* --- *
 * S t a y   C o n s t r a i n t
 * --- */

/**
 * Variables that should, with some level of preference, stay the same.
 * Planners may exploit the fact that instances, if satisfied, will not
 * change their output during plan execution.  This is called "stay
 * optimization".
 */


try { if (Inst270 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8477,8491,342>",(StayConstraint)); Inst270++; } } catch(e) {}
function StayConstraint(v, str) {
try { if (Inst271 <= 1000 && typeof (v) != "undefined") {_RecordType("<8492,8493,342>",(v)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (str) != "undefined") {_RecordType("<8495,8498,342>",(str)); Inst272++; } } catch(e) {}
try { if (Inst273 <= 1000 && typeof (StayConstraint.superConstructor.call) != "undefined") {_RecordType("<8504,8540,343>",(StayConstraint.superConstructor.call)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (StayConstraint.superConstructor) != "undefined") {_RecordType("<8504,8535,343>",(StayConstraint.superConstructor)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8504,8518,343>",(StayConstraint)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (v) != "undefined") {_RecordType("<8547,8548,343>",(v)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (str) != "undefined") {_RecordType("<8550,8553,343>",(str)); Inst277++; } } catch(e) {}
  StayConstraint.superConstructor.call(this, v, str);
}

try { if (Inst278 <= 1000 && typeof (StayConstraint.inheritsFrom) != "undefined") {_RecordType("<8559,8586,346>",(StayConstraint.inheritsFrom)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8559,8573,346>",(StayConstraint)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8587,8602,346>",(UnaryConstraint)); Inst280++; } } catch(e) {}
StayConstraint.inheritsFrom(UnaryConstraint);

StayConstraint.prototype.execute = function () {
  ;
} // Stay constraints do nothing

/* --- *
 * E d i t   C o n s t r a i n t
 * --- */

/**
 * A unary input constraint used to mark a variable that the client
 * wishes to change.
 */
;
try { if (Inst281 <= 1000 && typeof (StayConstraint.prototype.execute) != "undefined") {_RecordType("<8606,8638,348>",(StayConstraint.prototype.execute)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (StayConstraint.prototype) != "undefined") {_RecordType("<8606,8630,348>",(StayConstraint.prototype)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8606,8620,348>",(StayConstraint)); Inst283++; } } catch(e) {}

try { if (Inst284 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8855,8869,362>",(EditConstraint)); Inst284++; } } catch(e) {}
function EditConstraint(v, str) {
try { if (Inst285 <= 1000 && typeof (v) != "undefined") {_RecordType("<8870,8871,362>",(v)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (str) != "undefined") {_RecordType("<8873,8876,362>",(str)); Inst286++; } } catch(e) {}
try { if (Inst287 <= 1000 && typeof (EditConstraint.superConstructor.call) != "undefined") {_RecordType("<8882,8918,363>",(EditConstraint.superConstructor.call)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (EditConstraint.superConstructor) != "undefined") {_RecordType("<8882,8913,363>",(EditConstraint.superConstructor)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8882,8896,363>",(EditConstraint)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (v) != "undefined") {_RecordType("<8925,8926,363>",(v)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (str) != "undefined") {_RecordType("<8928,8931,363>",(str)); Inst291++; } } catch(e) {}
  EditConstraint.superConstructor.call(this, v, str);
}

try { if (Inst292 <= 1000 && typeof (EditConstraint.inheritsFrom) != "undefined") {_RecordType("<8937,8964,366>",(EditConstraint.inheritsFrom)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8937,8951,366>",(EditConstraint)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8965,8980,366>",(UnaryConstraint)); Inst294++; } } catch(e) {}
EditConstraint.inheritsFrom(UnaryConstraint);
/**
 * Edits indicate that a variable is to be changed by imperative code.
 */

EditConstraint.prototype.isInput = function () {
  return true;
};
try { if (Inst295 <= 1000 && typeof (EditConstraint.prototype.isInput) != "undefined") {_RecordType("<9063,9095,371>",(EditConstraint.prototype.isInput)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<9063,9087,371>",(EditConstraint.prototype)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<9063,9077,371>",(EditConstraint)); Inst297++; } } catch(e) {}

EditConstraint.prototype.execute = function () {
  ;
} // Edit constraints do nothing

/* --- *
 * B i n a r y   C o n s t r a i n t
 * --- */
;
try { if (Inst298 <= 1000 && typeof (EditConstraint.prototype.execute) != "undefined") {_RecordType("<9131,9163,375>",(EditConstraint.prototype.execute)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<9131,9155,375>",(EditConstraint.prototype)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<9131,9145,375>",(EditConstraint)); Inst300++; } } catch(e) {}

try { if (Inst302 <= 1000 && typeof (Object) != "undefined") {_RecordType("<9297,9303,384>",(Object)); Inst302++; } } catch(e) {}
var Direction = new Object();
try { if (Inst301 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9281,9290,384>",(Direction)); Inst301++; } } catch(e) {}
Direction.NONE = 0;
try { if (Inst303 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9307,9321,385>",(Direction.NONE)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9307,9316,385>",(Direction)); Inst304++; } } catch(e) {}
Direction.FORWARD = 1;
try { if (Inst305 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<9327,9344,386>",(Direction.FORWARD)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9327,9336,386>",(Direction)); Inst306++; } } catch(e) {}
Direction.BACKWARD = -1;
try { if (Inst307 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<9350,9368,387>",(Direction.BACKWARD)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9350,9359,387>",(Direction)); Inst308++; } } catch(e) {}
/**
 * Abstract superclass for constraints having two possible output
 * variables.
 */

try { if (Inst309 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9473,9489,393>",(BinaryConstraint)); Inst309++; } } catch(e) {}
function BinaryConstraint(var1, var2, strength) {
try { if (Inst310 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9490,9494,393>",(var1)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9496,9500,393>",(var2)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9502,9510,393>",(strength)); Inst312++; } } catch(e) {}
try { if (Inst313 <= 1000 && typeof (BinaryConstraint.superConstructor.call) != "undefined") {_RecordType("<9516,9554,394>",(BinaryConstraint.superConstructor.call)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (BinaryConstraint.superConstructor) != "undefined") {_RecordType("<9516,9549,394>",(BinaryConstraint.superConstructor)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9516,9532,394>",(BinaryConstraint)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9561,9569,394>",(strength)); Inst316++; } } catch(e) {}
  BinaryConstraint.superConstructor.call(this, strength);
try { if (Inst318 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9584,9588,395>",(var1)); Inst318++; } } catch(e) {}
  this.v1 = var1;
try { if (Inst317 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9574,9581,395>",(this.v1)); Inst317++; } } catch(e) {}
try { if (Inst320 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9602,9606,396>",(var2)); Inst320++; } } catch(e) {}
  this.v2 = var2;
try { if (Inst319 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9592,9599,396>",(this.v2)); Inst319++; } } catch(e) {}
try { if (Inst322 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9627,9641,397>",(Direction.NONE)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9627,9636,397>",(Direction)); Inst323++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst321 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9610,9624,397>",(this.direction)); Inst321++; } } catch(e) {}
try { if (Inst324 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<9645,9663,398>",(this.addConstraint)); Inst324++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst325 <= 1000 && typeof (BinaryConstraint.inheritsFrom) != "undefined") {_RecordType("<9670,9699,401>",(BinaryConstraint.inheritsFrom)); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9670,9686,401>",(BinaryConstraint)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<9700,9710,401>",(Constraint)); Inst327++; } } catch(e) {}
BinaryConstraint.inheritsFrom(Constraint);
/**
 * Decides if this constratint can be satisfied and which way it
 * should flow based on the relative strength of the variables related,
 * and record that decision.
 */

BinaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst331 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9940,9944,408>",(mark)); Inst331++; } } catch(e) {}
try { if (Inst332 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<9954,9966,409>",(this.v1.mark)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9954,9961,409>",(this.v1)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9970,9974,409>",(mark)); Inst334++; } } catch(e) {}
  if (this.v1.mark == mark) {
try { if (Inst336 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<9999,10011,410>",(this.v1.mark)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9999,10006,410>",(this.v1)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10015,10019,410>",(mark)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10023,10040,410>",(Strength.stronger)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10023,10031,410>",(Strength)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10041,10054,410>",(this.strength)); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10056,10076,410>",(this.v2.walkStrength)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10056,10063,410>",(this.v2)); Inst343++; } } catch(e) {}try { if (Inst344 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<10080,10097,410>",(Direction.FORWARD)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10080,10089,410>",(Direction)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10100,10114,410>",(Direction.NONE)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10100,10109,410>",(Direction)); Inst347++; } } catch(e) {}
    this.direction = this.v1.mark != mark && Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.NONE;
try { if (Inst335 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9982,9996,410>",(this.direction)); Inst335++; } } catch(e) {}
  }

try { if (Inst348 <= 1000 && typeof (this.v2.mark) != "undefined") {_RecordType("<10127,10139,413>",(this.v2.mark)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10127,10134,413>",(this.v2)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10143,10147,413>",(mark)); Inst350++; } } catch(e) {}
  if (this.v2.mark == mark) {
try { if (Inst352 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<10172,10184,414>",(this.v1.mark)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10172,10179,414>",(this.v1)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10188,10192,414>",(mark)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10196,10213,414>",(Strength.stronger)); Inst355++; } } catch(e) {}try { if (Inst356 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10196,10204,414>",(Strength)); Inst356++; } } catch(e) {}try { if (Inst357 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10214,10227,414>",(this.strength)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10229,10249,414>",(this.v1.walkStrength)); Inst358++; } } catch(e) {}try { if (Inst359 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10229,10236,414>",(this.v1)); Inst359++; } } catch(e) {}try { if (Inst360 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10253,10271,414>",(Direction.BACKWARD)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10253,10262,414>",(Direction)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10274,10288,414>",(Direction.NONE)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10274,10283,414>",(Direction)); Inst363++; } } catch(e) {}
    this.direction = this.v1.mark != mark && Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst351 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10155,10169,414>",(this.direction)); Inst351++; } } catch(e) {}
  }

try { if (Inst364 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<10301,10316,417>",(Strength.weaker)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10301,10309,417>",(Strength)); Inst365++; } } catch(e) {}try { if (Inst366 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10317,10337,417>",(this.v1.walkStrength)); Inst366++; } } catch(e) {}try { if (Inst367 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10317,10324,417>",(this.v1)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10339,10359,417>",(this.v2.walkStrength)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10339,10346,417>",(this.v2)); Inst369++; } } catch(e) {}
  if (Strength.weaker(this.v1.walkStrength, this.v2.walkStrength)) {
try { if (Inst371 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10385,10402,418>",(Strength.stronger)); Inst371++; } } catch(e) {}try { if (Inst372 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10385,10393,418>",(Strength)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10403,10416,418>",(this.strength)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10418,10438,418>",(this.v1.walkStrength)); Inst374++; } } catch(e) {}try { if (Inst375 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10418,10425,418>",(this.v1)); Inst375++; } } catch(e) {}try { if (Inst376 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10442,10460,418>",(Direction.BACKWARD)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10442,10451,418>",(Direction)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10463,10477,418>",(Direction.NONE)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10463,10472,418>",(Direction)); Inst379++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst370 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10368,10382,418>",(this.direction)); Inst370++; } } catch(e) {}
  } else {
try { if (Inst381 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10511,10528,420>",(Strength.stronger)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10511,10519,420>",(Strength)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10529,10542,420>",(this.strength)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10544,10564,420>",(this.v2.walkStrength)); Inst384++; } } catch(e) {}try { if (Inst385 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10544,10551,420>",(this.v2)); Inst385++; } } catch(e) {}try { if (Inst386 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<10568,10585,420>",(Direction.FORWARD)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10568,10577,420>",(Direction)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10588,10606,420>",(Direction.BACKWARD)); Inst388++; } } catch(e) {}try { if (Inst389 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10588,10597,420>",(Direction)); Inst389++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.BACKWARD;
try { if (Inst380 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10494,10508,420>",(this.direction)); Inst380++; } } catch(e) {}
  }
};
try { if (Inst328 <= 1000 && typeof (BinaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<9888,9927,408>",(BinaryConstraint.prototype.chooseMethod)); Inst328++; } } catch(e) {}try { if (Inst329 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<9888,9914,408>",(BinaryConstraint.prototype)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9888,9904,408>",(BinaryConstraint)); Inst330++; } } catch(e) {}
/**
 * Add this constraint to the constraint graph
 */


BinaryConstraint.prototype.addToGraph = function () {
try { if (Inst393 <= 1000 && typeof (this.v1.addConstraint) != "undefined") {_RecordType("<10728,10749,429>",(this.v1.addConstraint)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10728,10735,429>",(this.v1)); Inst394++; } } catch(e) {}
  this.v1.addConstraint(this);
try { if (Inst395 <= 1000 && typeof (this.v2.addConstraint) != "undefined") {_RecordType("<10759,10780,430>",(this.v2.addConstraint)); Inst395++; } } catch(e) {}try { if (Inst396 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10759,10766,430>",(this.v2)); Inst396++; } } catch(e) {}
  this.v2.addConstraint(this);
try { if (Inst398 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10807,10821,431>",(Direction.NONE)); Inst398++; } } catch(e) {}try { if (Inst399 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10807,10816,431>",(Direction)); Inst399++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst397 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10790,10804,431>",(this.direction)); Inst397++; } } catch(e) {}
};
try { if (Inst390 <= 1000 && typeof (BinaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<10672,10709,428>",(BinaryConstraint.prototype.addToGraph)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10672,10698,428>",(BinaryConstraint.prototype)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10672,10688,428>",(BinaryConstraint)); Inst392++; } } catch(e) {}
/**
 * Answer true if this constraint is satisfied in the current solution.
 */


BinaryConstraint.prototype.isSatisfied = function () {
try { if (Inst403 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10972,10986,439>",(this.direction)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10990,11004,439>",(Direction.NONE)); Inst404++; } } catch(e) {}try { if (Inst405 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10990,10999,439>",(Direction)); Inst405++; } } catch(e) {}
  return this.direction != Direction.NONE;
};
try { if (Inst400 <= 1000 && typeof (BinaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<10908,10946,438>",(BinaryConstraint.prototype.isSatisfied)); Inst400++; } } catch(e) {}try { if (Inst401 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10908,10934,438>",(BinaryConstraint.prototype)); Inst401++; } } catch(e) {}try { if (Inst402 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10908,10924,438>",(BinaryConstraint)); Inst402++; } } catch(e) {}
/**
 * Mark the input variable with the given mark.
 */


BinaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst409 <= 1000 && typeof (mark) != "undefined") {_RecordType("<11117,11121,446>",(mark)); Inst409++; } } catch(e) {}
try { if (Inst412 <= 1000 && typeof (mark) != "undefined") {_RecordType("<11147,11151,447>",(mark)); Inst412++; } } catch(e) {}
  this.input().mark = mark;
try { if (Inst410 <= 1000 && typeof (this.input().mark) != "undefined") {_RecordType("<11127,11144,447>",(this.input().mark)); Inst410++; } } catch(e) {}try { if (Inst411 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<11127,11137,447>",(this.input)); Inst411++; } } catch(e) {}
};
try { if (Inst406 <= 1000 && typeof (BinaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<11067,11104,446>",(BinaryConstraint.prototype.markInputs)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11067,11093,446>",(BinaryConstraint.prototype)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11067,11083,446>",(BinaryConstraint)); Inst408++; } } catch(e) {}
/**
 * Returns the current input variable
 */


BinaryConstraint.prototype.input = function () {
try { if (Inst416 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11262,11276,455>",(this.direction)); Inst416++; } } catch(e) {}try { if (Inst417 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11280,11297,455>",(Direction.FORWARD)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11280,11289,455>",(Direction)); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11300,11307,455>",(this.v1)); Inst419++; } } catch(e) {}try { if (Inst420 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11310,11317,455>",(this.v2)); Inst420++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v1 : this.v2;
};
try { if (Inst413 <= 1000 && typeof (BinaryConstraint.prototype.input) != "undefined") {_RecordType("<11204,11236,454>",(BinaryConstraint.prototype.input)); Inst413++; } } catch(e) {}try { if (Inst414 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11204,11230,454>",(BinaryConstraint.prototype)); Inst414++; } } catch(e) {}try { if (Inst415 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11204,11220,454>",(BinaryConstraint)); Inst415++; } } catch(e) {}
/**
 * Returns the current output variable
 */


BinaryConstraint.prototype.output = function () {
try { if (Inst424 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11430,11444,463>",(this.direction)); Inst424++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11448,11465,463>",(Direction.FORWARD)); Inst425++; } } catch(e) {}try { if (Inst426 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11448,11457,463>",(Direction)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11468,11475,463>",(this.v2)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11478,11485,463>",(this.v1)); Inst428++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v2 : this.v1;
};
try { if (Inst421 <= 1000 && typeof (BinaryConstraint.prototype.output) != "undefined") {_RecordType("<11371,11404,462>",(BinaryConstraint.prototype.output)); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11371,11397,462>",(BinaryConstraint.prototype)); Inst422++; } } catch(e) {}try { if (Inst423 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11371,11387,462>",(BinaryConstraint)); Inst423++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this
 * constraint. Assume this constraint is satisfied.
 */


BinaryConstraint.prototype.recalculate = function () {
try { if (Inst433 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<11737,11747,473>",(this.input)); Inst433++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<11763,11774,474>",(this.output)); Inst435++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst432 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11731,11734,473>",(ihn)); Inst432++; } } catch(e) {}try { if (Inst434 <= 1000 && typeof (out) != "undefined") {_RecordType("<11757,11760,474>",(out)); Inst434++; } } catch(e) {}
try { if (Inst438 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<11799,11817,475>",(Strength.weakestOf)); Inst438++; } } catch(e) {}try { if (Inst439 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<11799,11807,475>",(Strength)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<11818,11831,475>",(this.strength)); Inst440++; } } catch(e) {}try { if (Inst441 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<11833,11849,475>",(ihn.walkStrength)); Inst441++; } } catch(e) {}try { if (Inst442 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11833,11836,475>",(ihn)); Inst442++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst436 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<11780,11796,475>",(out.walkStrength)); Inst436++; } } catch(e) {}try { if (Inst437 <= 1000 && typeof (out) != "undefined") {_RecordType("<11780,11783,475>",(out)); Inst437++; } } catch(e) {}
try { if (Inst445 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<11865,11873,476>",(ihn.stay)); Inst445++; } } catch(e) {}try { if (Inst446 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11865,11868,476>",(ihn)); Inst446++; } } catch(e) {}
  out.stay = ihn.stay;
try { if (Inst443 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<11854,11862,476>",(out.stay)); Inst443++; } } catch(e) {}try { if (Inst444 <= 1000 && typeof (out) != "undefined") {_RecordType("<11854,11857,476>",(out)); Inst444++; } } catch(e) {}

try { if (Inst447 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<11882,11890,478>",(out.stay)); Inst447++; } } catch(e) {}try { if (Inst448 <= 1000 && typeof (out) != "undefined") {_RecordType("<11882,11885,478>",(out)); Inst448++; } } catch(e) {}
  if (out.stay) {
try { if (Inst449 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<11898,11910,479>",(this.execute)); Inst449++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst429 <= 1000 && typeof (BinaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<11670,11708,472>",(BinaryConstraint.prototype.recalculate)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11670,11696,472>",(BinaryConstraint.prototype)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11670,11686,472>",(BinaryConstraint)); Inst431++; } } catch(e) {}
/**
 * Record the fact that this constraint is unsatisfied.
 */


BinaryConstraint.prototype.markUnsatisfied = function () {
try { if (Inst454 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12065,12079,488>",(Direction.NONE)); Inst454++; } } catch(e) {}try { if (Inst455 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12065,12074,488>",(Direction)); Inst455++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst453 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12048,12062,488>",(this.direction)); Inst453++; } } catch(e) {}
};
try { if (Inst450 <= 1000 && typeof (BinaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<11987,12029,487>",(BinaryConstraint.prototype.markUnsatisfied)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11987,12013,487>",(BinaryConstraint.prototype)); Inst451++; } } catch(e) {}try { if (Inst452 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11987,12003,487>",(BinaryConstraint)); Inst452++; } } catch(e) {}

BinaryConstraint.prototype.inputsKnown = function (mark) {
try { if (Inst459 <= 1000 && typeof (mark) != "undefined") {_RecordType("<12136,12140,491>",(mark)); Inst459++; } } catch(e) {}
try { if (Inst461 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<12154,12164,492>",(this.input)); Inst461++; } } catch(e) {}
  var i = this.input();
try { if (Inst460 <= 1000 && typeof (i) != "undefined") {_RecordType("<12150,12151,492>",(i)); Inst460++; } } catch(e) {}
try { if (Inst462 <= 1000 && typeof (i.mark) != "undefined") {_RecordType("<12177,12183,493>",(i.mark)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (i) != "undefined") {_RecordType("<12177,12178,493>",(i)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (mark) != "undefined") {_RecordType("<12187,12191,493>",(mark)); Inst464++; } } catch(e) {}try { if (Inst465 <= 1000 && typeof (i.stay) != "undefined") {_RecordType("<12195,12201,493>",(i.stay)); Inst465++; } } catch(e) {}try { if (Inst466 <= 1000 && typeof (i) != "undefined") {_RecordType("<12195,12196,493>",(i)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (i.determinedBy) != "undefined") {_RecordType("<12205,12219,493>",(i.determinedBy)); Inst467++; } } catch(e) {}try { if (Inst468 <= 1000 && typeof (i) != "undefined") {_RecordType("<12205,12206,493>",(i)); Inst468++; } } catch(e) {}
  return i.mark == mark || i.stay || i.determinedBy == null;
};
try { if (Inst456 <= 1000 && typeof (BinaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<12085,12123,491>",(BinaryConstraint.prototype.inputsKnown)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<12085,12111,491>",(BinaryConstraint.prototype)); Inst457++; } } catch(e) {}try { if (Inst458 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12085,12101,491>",(BinaryConstraint)); Inst458++; } } catch(e) {}

BinaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst472 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12298,12305,497>",(this.v1)); Inst472++; } } catch(e) {}
  if (this.v1 != null) {
try { if (Inst473 <= 1000 && typeof (this.v1.removeConstraint) != "undefined") {_RecordType("<12321,12345,498>",(this.v1.removeConstraint)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12321,12328,498>",(this.v1)); Inst474++; } } catch(e) {}
    this.v1.removeConstraint(this);
  }

try { if (Inst475 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12364,12371,501>",(this.v2)); Inst475++; } } catch(e) {}
  if (this.v2 != null) {
try { if (Inst476 <= 1000 && typeof (this.v2.removeConstraint) != "undefined") {_RecordType("<12387,12411,502>",(this.v2.removeConstraint)); Inst476++; } } catch(e) {}try { if (Inst477 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12387,12394,502>",(this.v2)); Inst477++; } } catch(e) {}
    this.v2.removeConstraint(this);
  }

try { if (Inst479 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12443,12457,505>",(Direction.NONE)); Inst479++; } } catch(e) {}try { if (Inst480 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12443,12452,505>",(Direction)); Inst480++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst478 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12426,12440,505>",(this.direction)); Inst478++; } } catch(e) {}
};
try { if (Inst469 <= 1000 && typeof (BinaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<12233,12275,496>",(BinaryConstraint.prototype.removeFromGraph)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<12233,12259,496>",(BinaryConstraint.prototype)); Inst470++; } } catch(e) {}try { if (Inst471 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12233,12249,496>",(BinaryConstraint)); Inst471++; } } catch(e) {}
/* --- *
 * S c a l e   C o n s t r a i n t
 * --- */

/**
 * Relates two variables by the linear scaling relationship: "v2 =
 * (v1 * scale) + offset". Either v1 or v2 may be changed to maintain
 * this relationship but the scale factor and offset are considered
 * read-only.
 */


try { if (Inst481 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12755,12770,519>",(ScaleConstraint)); Inst481++; } } catch(e) {}
function ScaleConstraint(src, scale, offset, dest, strength) {
try { if (Inst482 <= 1000 && typeof (src) != "undefined") {_RecordType("<12771,12774,519>",(src)); Inst482++; } } catch(e) {}try { if (Inst483 <= 1000 && typeof (scale) != "undefined") {_RecordType("<12776,12781,519>",(scale)); Inst483++; } } catch(e) {}try { if (Inst484 <= 1000 && typeof (offset) != "undefined") {_RecordType("<12783,12789,519>",(offset)); Inst484++; } } catch(e) {}try { if (Inst485 <= 1000 && typeof (dest) != "undefined") {_RecordType("<12791,12795,519>",(dest)); Inst485++; } } catch(e) {}try { if (Inst486 <= 1000 && typeof (strength) != "undefined") {_RecordType("<12797,12805,519>",(strength)); Inst486++; } } catch(e) {}
try { if (Inst488 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12828,12842,520>",(Direction.NONE)); Inst488++; } } catch(e) {}try { if (Inst489 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12828,12837,520>",(Direction)); Inst489++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst487 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12811,12825,520>",(this.direction)); Inst487++; } } catch(e) {}
try { if (Inst491 <= 1000 && typeof (scale) != "undefined") {_RecordType("<12859,12864,521>",(scale)); Inst491++; } } catch(e) {}
  this.scale = scale;
try { if (Inst490 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<12846,12856,521>",(this.scale)); Inst490++; } } catch(e) {}
try { if (Inst493 <= 1000 && typeof (offset) != "undefined") {_RecordType("<12882,12888,522>",(offset)); Inst493++; } } catch(e) {}
  this.offset = offset;
try { if (Inst492 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<12868,12879,522>",(this.offset)); Inst492++; } } catch(e) {}
try { if (Inst494 <= 1000 && typeof (ScaleConstraint.superConstructor.call) != "undefined") {_RecordType("<12892,12929,523>",(ScaleConstraint.superConstructor.call)); Inst494++; } } catch(e) {}try { if (Inst495 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<12892,12924,523>",(ScaleConstraint.superConstructor)); Inst495++; } } catch(e) {}try { if (Inst496 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12892,12907,523>",(ScaleConstraint)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (src) != "undefined") {_RecordType("<12936,12939,523>",(src)); Inst497++; } } catch(e) {}try { if (Inst498 <= 1000 && typeof (dest) != "undefined") {_RecordType("<12941,12945,523>",(dest)); Inst498++; } } catch(e) {}try { if (Inst499 <= 1000 && typeof (strength) != "undefined") {_RecordType("<12947,12955,523>",(strength)); Inst499++; } } catch(e) {}
  ScaleConstraint.superConstructor.call(this, src, dest, strength);
}

try { if (Inst500 <= 1000 && typeof (ScaleConstraint.inheritsFrom) != "undefined") {_RecordType("<12961,12989,526>",(ScaleConstraint.inheritsFrom)); Inst500++; } } catch(e) {}try { if (Inst501 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12961,12976,526>",(ScaleConstraint)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12990,13006,526>",(BinaryConstraint)); Inst502++; } } catch(e) {}
ScaleConstraint.inheritsFrom(BinaryConstraint);
/**
 * Adds this constraint to the constraint graph.
 */

ScaleConstraint.prototype.addToGraph = function () {
try { if (Inst506 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph.call) != "undefined") {_RecordType("<13122,13180,532>",(ScaleConstraint.superConstructor.prototype.addToGraph.call)); Inst506++; } } catch(e) {}try { if (Inst507 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph) != "undefined") {_RecordType("<13122,13175,532>",(ScaleConstraint.superConstructor.prototype.addToGraph)); Inst507++; } } catch(e) {}try { if (Inst508 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13122,13164,532>",(ScaleConstraint.superConstructor.prototype)); Inst508++; } } catch(e) {}try { if (Inst509 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13122,13154,532>",(ScaleConstraint.superConstructor)); Inst509++; } } catch(e) {}try { if (Inst510 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13122,13137,532>",(ScaleConstraint)); Inst510++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.addToGraph.call(this);
try { if (Inst511 <= 1000 && typeof (this.scale.addConstraint) != "undefined") {_RecordType("<13190,13214,533>",(this.scale.addConstraint)); Inst511++; } } catch(e) {}try { if (Inst512 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13190,13200,533>",(this.scale)); Inst512++; } } catch(e) {}
  this.scale.addConstraint(this);
try { if (Inst513 <= 1000 && typeof (this.offset.addConstraint) != "undefined") {_RecordType("<13224,13249,534>",(this.offset.addConstraint)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13224,13235,534>",(this.offset)); Inst514++; } } catch(e) {}
  this.offset.addConstraint(this);
};
try { if (Inst503 <= 1000 && typeof (ScaleConstraint.prototype.addToGraph) != "undefined") {_RecordType("<13067,13103,531>",(ScaleConstraint.prototype.addToGraph)); Inst503++; } } catch(e) {}try { if (Inst504 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13067,13092,531>",(ScaleConstraint.prototype)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13067,13082,531>",(ScaleConstraint)); Inst505++; } } catch(e) {}

ScaleConstraint.prototype.removeFromGraph = function () {
try { if (Inst518 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph.call) != "undefined") {_RecordType("<13321,13384,538>",(ScaleConstraint.superConstructor.prototype.removeFromGraph.call)); Inst518++; } } catch(e) {}try { if (Inst519 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph) != "undefined") {_RecordType("<13321,13379,538>",(ScaleConstraint.superConstructor.prototype.removeFromGraph)); Inst519++; } } catch(e) {}try { if (Inst520 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13321,13363,538>",(ScaleConstraint.superConstructor.prototype)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13321,13353,538>",(ScaleConstraint.superConstructor)); Inst521++; } } catch(e) {}try { if (Inst522 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13321,13336,538>",(ScaleConstraint)); Inst522++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.removeFromGraph.call(this);

try { if (Inst523 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13399,13409,540>",(this.scale)); Inst523++; } } catch(e) {}
  if (this.scale != null) {
try { if (Inst524 <= 1000 && typeof (this.scale.removeConstraint) != "undefined") {_RecordType("<13425,13452,541>",(this.scale.removeConstraint)); Inst524++; } } catch(e) {}try { if (Inst525 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13425,13435,541>",(this.scale)); Inst525++; } } catch(e) {}
    this.scale.removeConstraint(this);
  }

try { if (Inst526 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13471,13482,544>",(this.offset)); Inst526++; } } catch(e) {}
  if (this.offset != null) {
try { if (Inst527 <= 1000 && typeof (this.offset.removeConstraint) != "undefined") {_RecordType("<13498,13526,545>",(this.offset.removeConstraint)); Inst527++; } } catch(e) {}try { if (Inst528 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13498,13509,545>",(this.offset)); Inst528++; } } catch(e) {}
    this.offset.removeConstraint(this);
  }
};
try { if (Inst515 <= 1000 && typeof (ScaleConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<13261,13302,537>",(ScaleConstraint.prototype.removeFromGraph)); Inst515++; } } catch(e) {}try { if (Inst516 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13261,13286,537>",(ScaleConstraint.prototype)); Inst516++; } } catch(e) {}try { if (Inst517 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13261,13276,537>",(ScaleConstraint)); Inst517++; } } catch(e) {}

ScaleConstraint.prototype.markInputs = function (mark) {
try { if (Inst532 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13591,13595,549>",(mark)); Inst532++; } } catch(e) {}
try { if (Inst533 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs.call) != "undefined") {_RecordType("<13601,13659,550>",(ScaleConstraint.superConstructor.prototype.markInputs.call)); Inst533++; } } catch(e) {}try { if (Inst534 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs) != "undefined") {_RecordType("<13601,13654,550>",(ScaleConstraint.superConstructor.prototype.markInputs)); Inst534++; } } catch(e) {}try { if (Inst535 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13601,13643,550>",(ScaleConstraint.superConstructor.prototype)); Inst535++; } } catch(e) {}try { if (Inst536 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13601,13633,550>",(ScaleConstraint.superConstructor)); Inst536++; } } catch(e) {}try { if (Inst537 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13601,13616,550>",(ScaleConstraint)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13666,13670,550>",(mark)); Inst538++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.markInputs.call(this, mark);
try { if (Inst543 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13712,13716,551>",(mark)); Inst543++; } } catch(e) {}
  this.scale.mark = this.offset.mark = mark;
try { if (Inst539 <= 1000 && typeof (this.scale.mark) != "undefined") {_RecordType("<13675,13690,551>",(this.scale.mark)); Inst539++; } } catch(e) {}try { if (Inst540 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13675,13685,551>",(this.scale)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (this.offset.mark) != "undefined") {_RecordType("<13693,13709,551>",(this.offset.mark)); Inst541++; } } catch(e) {}try { if (Inst542 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13693,13704,551>",(this.offset)); Inst542++; } } catch(e) {}
};
try { if (Inst529 <= 1000 && typeof (ScaleConstraint.prototype.markInputs) != "undefined") {_RecordType("<13542,13578,549>",(ScaleConstraint.prototype.markInputs)); Inst529++; } } catch(e) {}try { if (Inst530 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13542,13567,549>",(ScaleConstraint.prototype)); Inst530++; } } catch(e) {}try { if (Inst531 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13542,13557,549>",(ScaleConstraint)); Inst531++; } } catch(e) {}
/**
 * Enforce this constraint. Assume that it is satisfied.
 */


ScaleConstraint.prototype.execute = function () {
try { if (Inst547 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<13844,13858,559>",(this.direction)); Inst547++; } } catch(e) {}try { if (Inst548 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<13862,13879,559>",(Direction.FORWARD)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<13862,13871,559>",(Direction)); Inst549++; } } catch(e) {}
  if (this.direction == Direction.FORWARD) {
try { if (Inst552 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<13903,13916,560>",(this.v1.value)); Inst552++; } } catch(e) {}try { if (Inst553 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13903,13910,560>",(this.v1)); Inst553++; } } catch(e) {}try { if (Inst554 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<13919,13935,560>",(this.scale.value)); Inst554++; } } catch(e) {}try { if (Inst555 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13919,13929,560>",(this.scale)); Inst555++; } } catch(e) {}try { if (Inst556 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<13938,13955,560>",(this.offset.value)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13938,13949,560>",(this.offset)); Inst557++; } } catch(e) {}
    this.v2.value = this.v1.value * this.scale.value + this.offset.value;
try { if (Inst550 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<13887,13900,560>",(this.v2.value)); Inst550++; } } catch(e) {}try { if (Inst551 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<13887,13894,560>",(this.v2)); Inst551++; } } catch(e) {}
  } else {
try { if (Inst560 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<13989,14002,562>",(this.v2.value)); Inst560++; } } catch(e) {}try { if (Inst561 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<13989,13996,562>",(this.v2)); Inst561++; } } catch(e) {}try { if (Inst562 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<14005,14022,562>",(this.offset.value)); Inst562++; } } catch(e) {}try { if (Inst563 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<14005,14016,562>",(this.offset)); Inst563++; } } catch(e) {}try { if (Inst564 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<14026,14042,562>",(this.scale.value)); Inst564++; } } catch(e) {}try { if (Inst565 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<14026,14036,562>",(this.scale)); Inst565++; } } catch(e) {}
    this.v1.value = (this.v2.value - this.offset.value) / this.scale.value;
try { if (Inst558 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<13972,13985,562>",(this.v1.value)); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13972,13979,562>",(this.v1)); Inst559++; } } catch(e) {}
  }
};
try { if (Inst544 <= 1000 && typeof (ScaleConstraint.prototype.execute) != "undefined") {_RecordType("<13788,13821,558>",(ScaleConstraint.prototype.execute)); Inst544++; } } catch(e) {}try { if (Inst545 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13788,13813,558>",(ScaleConstraint.prototype)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13788,13803,558>",(ScaleConstraint)); Inst546++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


ScaleConstraint.prototype.recalculate = function () {
try { if (Inst570 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<14297,14307,573>",(this.input)); Inst570++; } } catch(e) {}try { if (Inst572 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<14323,14334,574>",(this.output)); Inst572++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst569 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14291,14294,573>",(ihn)); Inst569++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (out) != "undefined") {_RecordType("<14317,14320,574>",(out)); Inst571++; } } catch(e) {}
try { if (Inst575 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<14359,14377,575>",(Strength.weakestOf)); Inst575++; } } catch(e) {}try { if (Inst576 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<14359,14367,575>",(Strength)); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<14378,14391,575>",(this.strength)); Inst577++; } } catch(e) {}try { if (Inst578 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<14393,14409,575>",(ihn.walkStrength)); Inst578++; } } catch(e) {}try { if (Inst579 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14393,14396,575>",(ihn)); Inst579++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst573 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<14340,14356,575>",(out.walkStrength)); Inst573++; } } catch(e) {}try { if (Inst574 <= 1000 && typeof (out) != "undefined") {_RecordType("<14340,14343,575>",(out)); Inst574++; } } catch(e) {}
try { if (Inst582 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<14425,14433,576>",(ihn.stay)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14425,14428,576>",(ihn)); Inst583++; } } catch(e) {}try { if (Inst584 <= 1000 && typeof (this.scale.stay) != "undefined") {_RecordType("<14437,14452,576>",(this.scale.stay)); Inst584++; } } catch(e) {}try { if (Inst585 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<14437,14447,576>",(this.scale)); Inst585++; } } catch(e) {}try { if (Inst586 <= 1000 && typeof (this.offset.stay) != "undefined") {_RecordType("<14456,14472,576>",(this.offset.stay)); Inst586++; } } catch(e) {}try { if (Inst587 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<14456,14467,576>",(this.offset)); Inst587++; } } catch(e) {}
  out.stay = ihn.stay && this.scale.stay && this.offset.stay;
try { if (Inst580 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14414,14422,576>",(out.stay)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (out) != "undefined") {_RecordType("<14414,14417,576>",(out)); Inst581++; } } catch(e) {}

try { if (Inst588 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14481,14489,578>",(out.stay)); Inst588++; } } catch(e) {}try { if (Inst589 <= 1000 && typeof (out) != "undefined") {_RecordType("<14481,14484,578>",(out)); Inst589++; } } catch(e) {}
  if (out.stay) {
try { if (Inst590 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<14497,14509,579>",(this.execute)); Inst590++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst566 <= 1000 && typeof (ScaleConstraint.prototype.recalculate) != "undefined") {_RecordType("<14231,14268,572>",(ScaleConstraint.prototype.recalculate)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<14231,14256,572>",(ScaleConstraint.prototype)); Inst567++; } } catch(e) {}try { if (Inst568 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<14231,14246,572>",(ScaleConstraint)); Inst568++; } } catch(e) {}
/* --- *
 * E q u a l i t  y   C o n s t r a i n t
 * --- */

/**
 * Constrains two variables to have the same value.
 */


try { if (Inst591 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14653,14671,591>",(EqualityConstraint)); Inst591++; } } catch(e) {}
function EqualityConstraint(var1, var2, strength) {
try { if (Inst592 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14672,14676,591>",(var1)); Inst592++; } } catch(e) {}try { if (Inst593 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14678,14682,591>",(var2)); Inst593++; } } catch(e) {}try { if (Inst594 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14684,14692,591>",(strength)); Inst594++; } } catch(e) {}
try { if (Inst595 <= 1000 && typeof (EqualityConstraint.superConstructor.call) != "undefined") {_RecordType("<14698,14738,592>",(EqualityConstraint.superConstructor.call)); Inst595++; } } catch(e) {}try { if (Inst596 <= 1000 && typeof (EqualityConstraint.superConstructor) != "undefined") {_RecordType("<14698,14733,592>",(EqualityConstraint.superConstructor)); Inst596++; } } catch(e) {}try { if (Inst597 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14698,14716,592>",(EqualityConstraint)); Inst597++; } } catch(e) {}try { if (Inst598 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14745,14749,592>",(var1)); Inst598++; } } catch(e) {}try { if (Inst599 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14751,14755,592>",(var2)); Inst599++; } } catch(e) {}try { if (Inst600 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14757,14765,592>",(strength)); Inst600++; } } catch(e) {}
  EqualityConstraint.superConstructor.call(this, var1, var2, strength);
}

try { if (Inst601 <= 1000 && typeof (EqualityConstraint.inheritsFrom) != "undefined") {_RecordType("<14771,14802,595>",(EqualityConstraint.inheritsFrom)); Inst601++; } } catch(e) {}try { if (Inst602 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14771,14789,595>",(EqualityConstraint)); Inst602++; } } catch(e) {}try { if (Inst603 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<14803,14819,595>",(BinaryConstraint)); Inst603++; } } catch(e) {}
EqualityConstraint.inheritsFrom(BinaryConstraint);
/**
 * Enforce this constraint. Assume that it is satisfied.
 */

EqualityConstraint.prototype.execute = function () {
try { if (Inst609 <= 1000 && typeof (this.input().value) != "undefined") {_RecordType("<14965,14983,601>",(this.input().value)); Inst609++; } } catch(e) {}try { if (Inst610 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<14965,14975,601>",(this.input)); Inst610++; } } catch(e) {}
  this.output().value = this.input().value;
try { if (Inst607 <= 1000 && typeof (this.output().value) != "undefined") {_RecordType("<14943,14962,601>",(this.output().value)); Inst607++; } } catch(e) {}try { if (Inst608 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<14943,14954,601>",(this.output)); Inst608++; } } catch(e) {}
};
try { if (Inst604 <= 1000 && typeof (EqualityConstraint.prototype.execute) != "undefined") {_RecordType("<14888,14924,600>",(EqualityConstraint.prototype.execute)); Inst604++; } } catch(e) {}try { if (Inst605 <= 1000 && typeof (EqualityConstraint.prototype) != "undefined") {_RecordType("<14888,14916,600>",(EqualityConstraint.prototype)); Inst605++; } } catch(e) {}try { if (Inst606 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14888,14906,600>",(EqualityConstraint)); Inst606++; } } catch(e) {}
/* --- *
 * V a r i a b l e
 * --- */

/**
 * A constrained variable. In addition to its value, it maintain the
 * structure of the constraint graph, the current dataflow graph, and
 * various parameters of interest to the DeltaBlue incremental
 * constraint solver.
 **/


try { if (Inst611 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15271,15279,615>",(Variable)); Inst611++; } } catch(e) {}
function Variable(name, initialValue) {
try { if (Inst612 <= 1000 && typeof (name) != "undefined") {_RecordType("<15280,15284,615>",(name)); Inst612++; } } catch(e) {}try { if (Inst613 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15286,15298,615>",(initialValue)); Inst613++; } } catch(e) {}
try { if (Inst615 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15317,15329,616>",(initialValue)); Inst615++; } } catch(e) {}
  this.value = initialValue || 0;
try { if (Inst614 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<15304,15314,616>",(this.value)); Inst614++; } } catch(e) {}
try { if (Inst617 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<15361,15378,617>",(OrderedCollection)); Inst617++; } } catch(e) {}
  this.constraints = new OrderedCollection();
try { if (Inst616 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15338,15354,617>",(this.constraints)); Inst616++; } } catch(e) {}
  this.determinedBy = null;
try { if (Inst618 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15384,15401,618>",(this.determinedBy)); Inst618++; } } catch(e) {}
  this.mark = 0;
try { if (Inst619 <= 1000 && typeof (this.mark) != "undefined") {_RecordType("<15412,15421,619>",(this.mark)); Inst619++; } } catch(e) {}
try { if (Inst621 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<15449,15465,620>",(Strength.WEAKEST)); Inst621++; } } catch(e) {}try { if (Inst622 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<15449,15457,620>",(Strength)); Inst622++; } } catch(e) {}
  this.walkStrength = Strength.WEAKEST;
try { if (Inst620 <= 1000 && typeof (this.walkStrength) != "undefined") {_RecordType("<15429,15446,620>",(this.walkStrength)); Inst620++; } } catch(e) {}
  this.stay = true;
try { if (Inst623 <= 1000 && typeof (this.stay) != "undefined") {_RecordType("<15469,15478,621>",(this.stay)); Inst623++; } } catch(e) {}
try { if (Inst625 <= 1000 && typeof (name) != "undefined") {_RecordType("<15501,15505,622>",(name)); Inst625++; } } catch(e) {}
  this.name = name;
try { if (Inst624 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<15489,15498,622>",(this.name)); Inst624++; } } catch(e) {}
}
/**
 * Add the given constraint to the set of all constraints that refer
 * this variable.
 */


Variable.prototype.addConstraint = function (c) {
try { if (Inst629 <= 1000 && typeof (c) != "undefined") {_RecordType("<15651,15652,630>",(c)); Inst629++; } } catch(e) {}
try { if (Inst630 <= 1000 && typeof (this.constraints.add) != "undefined") {_RecordType("<15658,15678,631>",(this.constraints.add)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15658,15674,631>",(this.constraints)); Inst631++; } } catch(e) {}try { if (Inst632 <= 1000 && typeof (c) != "undefined") {_RecordType("<15679,15680,631>",(c)); Inst632++; } } catch(e) {}
  this.constraints.add(c);
};
try { if (Inst626 <= 1000 && typeof (Variable.prototype.addConstraint) != "undefined") {_RecordType("<15606,15638,630>",(Variable.prototype.addConstraint)); Inst626++; } } catch(e) {}try { if (Inst627 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15606,15624,630>",(Variable.prototype)); Inst627++; } } catch(e) {}try { if (Inst628 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15606,15614,630>",(Variable)); Inst628++; } } catch(e) {}
/**
 * Removes all traces of c from this variable.
 */


Variable.prototype.removeConstraint = function (c) {
try { if (Inst636 <= 1000 && typeof (c) != "undefined") {_RecordType("<15791,15792,638>",(c)); Inst636++; } } catch(e) {}
try { if (Inst637 <= 1000 && typeof (this.constraints.remove) != "undefined") {_RecordType("<15798,15821,639>",(this.constraints.remove)); Inst637++; } } catch(e) {}try { if (Inst638 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15798,15814,639>",(this.constraints)); Inst638++; } } catch(e) {}try { if (Inst639 <= 1000 && typeof (c) != "undefined") {_RecordType("<15822,15823,639>",(c)); Inst639++; } } catch(e) {}
  this.constraints.remove(c);

try { if (Inst640 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15833,15850,641>",(this.determinedBy)); Inst640++; } } catch(e) {}try { if (Inst641 <= 1000 && typeof (c) != "undefined") {_RecordType("<15854,15855,641>",(c)); Inst641++; } } catch(e) {}
  if (this.determinedBy == c) {
    this.determinedBy = null;
try { if (Inst642 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15863,15880,642>",(this.determinedBy)); Inst642++; } } catch(e) {}
  }
};
try { if (Inst633 <= 1000 && typeof (Variable.prototype.removeConstraint) != "undefined") {_RecordType("<15743,15778,638>",(Variable.prototype.removeConstraint)); Inst633++; } } catch(e) {}try { if (Inst634 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15743,15761,638>",(Variable.prototype)); Inst634++; } } catch(e) {}try { if (Inst635 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15743,15751,638>",(Variable)); Inst635++; } } catch(e) {}
/* --- *
 * P l a n n e r
 * --- */

/**
 * The DeltaBlue planner
 */


try { if (Inst643 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<15977,15984,654>",(Planner)); Inst643++; } } catch(e) {}
function Planner() {
  this.currentMark = 0;
try { if (Inst644 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<15991,16007,655>",(this.currentMark)); Inst644++; } } catch(e) {}
}
/**
 * Attempt to satisfy the given constraint and, if successful,
 * incrementally update the dataflow graph.  Details: If satifying
 * the constraint is successful, it may override a weaker constraint
 * on its output. The algorithm attempts to resatisfy that
 * constraint using some other method. This process is repeated
 * until either a) it reaches a variable that was not previously
 * determined by any constraint or b) it reaches a constraint that
 * is too weak to be satisfied using any of its methods. The
 * variables of constraints that have been processed are marked with
 * a unique mark value so that we know where we've been. This allows
 * the algorithm to avoid getting into an infinite loop even if the
 * constraint graph has an inadvertent cycle.
 */


Planner.prototype.incrementalAdd = function (c) {
try { if (Inst648 <= 1000 && typeof (c) != "undefined") {_RecordType("<16837,16838,673>",(c)); Inst648++; } } catch(e) {}
try { if (Inst650 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<16855,16867,674>",(this.newMark)); Inst650++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst649 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16848,16852,674>",(mark)); Inst649++; } } catch(e) {}
try { if (Inst652 <= 1000 && typeof (c.satisfy) != "undefined") {_RecordType("<16890,16899,675>",(c.satisfy)); Inst652++; } } catch(e) {}try { if (Inst653 <= 1000 && typeof (c) != "undefined") {_RecordType("<16890,16891,675>",(c)); Inst653++; } } catch(e) {}try { if (Inst654 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16900,16904,675>",(mark)); Inst654++; } } catch(e) {}
  var overridden = c.satisfy(mark);
try { if (Inst651 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16877,16887,675>",(overridden)); Inst651++; } } catch(e) {}

try { if (Inst655 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16917,16927,677>",(overridden)); Inst655++; } } catch(e) {}
  while (overridden != null) {
try { if (Inst657 <= 1000 && typeof (overridden.satisfy) != "undefined") {_RecordType("<16956,16974,678>",(overridden.satisfy)); Inst657++; } } catch(e) {}try { if (Inst658 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16956,16966,678>",(overridden)); Inst658++; } } catch(e) {}try { if (Inst659 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16975,16979,678>",(mark)); Inst659++; } } catch(e) {}
    overridden = overridden.satisfy(mark);
try { if (Inst656 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16943,16953,678>",(overridden)); Inst656++; } } catch(e) {}
  }
};
try { if (Inst645 <= 1000 && typeof (Planner.prototype.incrementalAdd) != "undefined") {_RecordType("<16792,16824,673>",(Planner.prototype.incrementalAdd)); Inst645++; } } catch(e) {}try { if (Inst646 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<16792,16809,673>",(Planner.prototype)); Inst646++; } } catch(e) {}try { if (Inst647 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<16792,16799,673>",(Planner)); Inst647++; } } catch(e) {}
/**
 * Entry point for retracting a constraint. Remove the given
 * constraint and incrementally update the dataflow graph.
 * Details: Retracting the given constraint may allow some currently
 * unsatisfiable downstream constraint to be satisfied. We therefore collect
 * a list of unsatisfied downstream constraints and attempt to
 * satisfy each one in turn. This list is traversed by constraint
 * strength, strongest first, as a heuristic for avoiding
 * unnecessarily adding and then overriding weak constraints.
 * Assume: c is satisfied.
 */


Planner.prototype.incrementalRemove = function (c) {
try { if (Inst663 <= 1000 && typeof (c) != "undefined") {_RecordType("<17589,17590,694>",(c)); Inst663++; } } catch(e) {}
try { if (Inst665 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<17606,17614,695>",(c.output)); Inst665++; } } catch(e) {}try { if (Inst666 <= 1000 && typeof (c) != "undefined") {_RecordType("<17606,17607,695>",(c)); Inst666++; } } catch(e) {}
  var out = c.output();
try { if (Inst664 <= 1000 && typeof (out) != "undefined") {_RecordType("<17600,17603,695>",(out)); Inst664++; } } catch(e) {}
try { if (Inst667 <= 1000 && typeof (c.markUnsatisfied) != "undefined") {_RecordType("<17620,17637,696>",(c.markUnsatisfied)); Inst667++; } } catch(e) {}try { if (Inst668 <= 1000 && typeof (c) != "undefined") {_RecordType("<17620,17621,696>",(c)); Inst668++; } } catch(e) {}
  c.markUnsatisfied();
try { if (Inst669 <= 1000 && typeof (c.removeFromGraph) != "undefined") {_RecordType("<17643,17660,697>",(c.removeFromGraph)); Inst669++; } } catch(e) {}try { if (Inst670 <= 1000 && typeof (c) != "undefined") {_RecordType("<17643,17644,697>",(c)); Inst670++; } } catch(e) {}
  c.removeFromGraph();
try { if (Inst672 <= 1000 && typeof (this.removePropagateFrom) != "undefined") {_RecordType("<17684,17708,698>",(this.removePropagateFrom)); Inst672++; } } catch(e) {}try { if (Inst673 <= 1000 && typeof (out) != "undefined") {_RecordType("<17709,17712,698>",(out)); Inst673++; } } catch(e) {}
  var unsatisfied = this.removePropagateFrom(out);
try { if (Inst671 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17670,17681,698>",(unsatisfied)); Inst671++; } } catch(e) {}
try { if (Inst675 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<17732,17749,699>",(Strength.REQUIRED)); Inst675++; } } catch(e) {}try { if (Inst676 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<17732,17740,699>",(Strength)); Inst676++; } } catch(e) {}
  var strength = Strength.REQUIRED;
try { if (Inst674 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17721,17729,699>",(strength)); Inst674++; } } catch(e) {}

try { if (Inst677 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17976,17984,711>",(strength)); Inst677++; } } catch(e) {}try { if (Inst678 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<17988,18004,711>",(Strength.WEAKEST)); Inst678++; } } catch(e) {}try { if (Inst679 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<17988,17996,711>",(Strength)); Inst679++; } } catch(e) {}
  do {
    for (var i = 0; i < unsatisfied.size(); i++) {
try { if (Inst680 <= 1000 && typeof (i) != "undefined") {_RecordType("<17772,17773,702>",(i)); Inst680++; } } catch(e) {}try { if (Inst681 <= 1000 && typeof (i) != "undefined") {_RecordType("<17779,17780,702>",(i)); Inst681++; } } catch(e) {}try { if (Inst682 <= 1000 && typeof (unsatisfied.size) != "undefined") {_RecordType("<17783,17799,702>",(unsatisfied.size)); Inst682++; } } catch(e) {}try { if (Inst683 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17783,17794,702>",(unsatisfied)); Inst683++; } } catch(e) {}try { if (Inst684 <= 1000 && typeof (i) != "undefined") {_RecordType("<17803,17804,702>",(i)); Inst684++; } } catch(e) {}
try { if (Inst686 <= 1000 && typeof (unsatisfied.at) != "undefined") {_RecordType("<17824,17838,703>",(unsatisfied.at)); Inst686++; } } catch(e) {}try { if (Inst687 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17824,17835,703>",(unsatisfied)); Inst687++; } } catch(e) {}try { if (Inst688 <= 1000 && typeof (i) != "undefined") {_RecordType("<17839,17840,703>",(i)); Inst688++; } } catch(e) {}
      var u = unsatisfied.at(i);
try { if (Inst685 <= 1000 && typeof (u) != "undefined") {_RecordType("<17820,17821,703>",(u)); Inst685++; } } catch(e) {}

try { if (Inst689 <= 1000 && typeof (u.strength) != "undefined") {_RecordType("<17854,17864,705>",(u.strength)); Inst689++; } } catch(e) {}try { if (Inst690 <= 1000 && typeof (u) != "undefined") {_RecordType("<17854,17855,705>",(u)); Inst690++; } } catch(e) {}try { if (Inst691 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17868,17876,705>",(strength)); Inst691++; } } catch(e) {}
      if (u.strength == strength) {
try { if (Inst692 <= 1000 && typeof (this.incrementalAdd) != "undefined") {_RecordType("<17888,17907,706>",(this.incrementalAdd)); Inst692++; } } catch(e) {}try { if (Inst693 <= 1000 && typeof (u) != "undefined") {_RecordType("<17908,17909,706>",(u)); Inst693++; } } catch(e) {}
        this.incrementalAdd(u);
      }
    }

try { if (Inst695 <= 1000 && typeof (strength.nextWeaker) != "undefined") {_RecordType("<17942,17961,710>",(strength.nextWeaker)); Inst695++; } } catch(e) {}try { if (Inst696 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17942,17950,710>",(strength)); Inst696++; } } catch(e) {}
    strength = strength.nextWeaker();
try { if (Inst694 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17931,17939,710>",(strength)); Inst694++; } } catch(e) {}
  } while (strength != Strength.WEAKEST);
};
try { if (Inst660 <= 1000 && typeof (Planner.prototype.incrementalRemove) != "undefined") {_RecordType("<17541,17576,694>",(Planner.prototype.incrementalRemove)); Inst660++; } } catch(e) {}try { if (Inst661 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<17541,17558,694>",(Planner.prototype)); Inst661++; } } catch(e) {}try { if (Inst662 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<17541,17548,694>",(Planner)); Inst662++; } } catch(e) {}
/**
 * Select a previously unused mark value.
 */


Planner.prototype.newMark = function () {
try { if (Inst700 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<18115,18131,719>",(this.currentMark)); Inst700++; } } catch(e) {}
  return ++this.currentMark;
};
try { if (Inst697 <= 1000 && typeof (Planner.prototype.newMark) != "undefined") {_RecordType("<18062,18087,718>",(Planner.prototype.newMark)); Inst697++; } } catch(e) {}try { if (Inst698 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<18062,18079,718>",(Planner.prototype)); Inst698++; } } catch(e) {}try { if (Inst699 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<18062,18069,718>",(Planner)); Inst699++; } } catch(e) {}
/**
 * Extract a plan for resatisfaction starting from the given source
 * constraints, usually a set of input constraints. This method
 * assumes that stay optimization is desired; the plan will contain
 * only constraints whose output variables are not stay. Constraints
 * that do no computation, such as stay and edit constraints, are
 * not included in the plan.
 * Details: The outputs of a constraint are marked when it is added
 * to the plan under construction. A constraint may be appended to
 * the plan when all its input variables are known. A variable is
 * known if either a) the variable is marked (indicating that has
 * been computed by a constraint appearing earlier in the plan), b)
 * the variable is 'stay' (i.e. it is a constant at plan execution
 * time), or c) the variable is not determined by any
 * constraint. The last provision is for past states of history
 * variables, which are not stay but which are also not computed by
 * any constraint.
 * Assume: sources are all satisfied.
 */


Planner.prototype.makePlan = function (sources) {
try { if (Inst704 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19194,19201,742>",(sources)); Inst704++; } } catch(e) {}
try { if (Inst706 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<19218,19230,743>",(this.newMark)); Inst706++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst705 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19211,19215,743>",(mark)); Inst705++; } } catch(e) {}
try { if (Inst708 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<19251,19255,744>",(Plan)); Inst708++; } } catch(e) {}
  var plan = new Plan();
try { if (Inst707 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19240,19244,744>",(plan)); Inst707++; } } catch(e) {}
try { if (Inst710 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19272,19279,745>",(sources)); Inst710++; } } catch(e) {}
  var todo = sources;
try { if (Inst709 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19265,19269,745>",(todo)); Inst709++; } } catch(e) {}

try { if (Inst711 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<19291,19300,747>",(todo.size)); Inst711++; } } catch(e) {}try { if (Inst712 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19291,19295,747>",(todo)); Inst712++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst714 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<19322,19338,748>",(todo.removeFirst)); Inst714++; } } catch(e) {}try { if (Inst715 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19322,19326,748>",(todo)); Inst715++; } } catch(e) {}
    var c = todo.removeFirst();
try { if (Inst713 <= 1000 && typeof (c) != "undefined") {_RecordType("<19318,19319,748>",(c)); Inst713++; } } catch(e) {}

try { if (Inst716 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19351,19366,750>",(c.output().mark)); Inst716++; } } catch(e) {}try { if (Inst717 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19351,19359,750>",(c.output)); Inst717++; } } catch(e) {}try { if (Inst718 <= 1000 && typeof (c) != "undefined") {_RecordType("<19351,19352,750>",(c)); Inst718++; } } catch(e) {}try { if (Inst719 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19370,19374,750>",(mark)); Inst719++; } } catch(e) {}try { if (Inst720 <= 1000 && typeof (c.inputsKnown) != "undefined") {_RecordType("<19378,19391,750>",(c.inputsKnown)); Inst720++; } } catch(e) {}try { if (Inst721 <= 1000 && typeof (c) != "undefined") {_RecordType("<19378,19379,750>",(c)); Inst721++; } } catch(e) {}try { if (Inst722 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19392,19396,750>",(mark)); Inst722++; } } catch(e) {}
    if (c.output().mark != mark && c.inputsKnown(mark)) {
try { if (Inst723 <= 1000 && typeof (plan.addConstraint) != "undefined") {_RecordType("<19407,19425,751>",(plan.addConstraint)); Inst723++; } } catch(e) {}try { if (Inst724 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19407,19411,751>",(plan)); Inst724++; } } catch(e) {}try { if (Inst725 <= 1000 && typeof (c) != "undefined") {_RecordType("<19426,19427,751>",(c)); Inst725++; } } catch(e) {}
      plan.addConstraint(c);
try { if (Inst729 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19454,19458,752>",(mark)); Inst729++; } } catch(e) {}
      c.output().mark = mark;
try { if (Inst726 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19436,19451,752>",(c.output().mark)); Inst726++; } } catch(e) {}try { if (Inst727 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19436,19444,752>",(c.output)); Inst727++; } } catch(e) {}try { if (Inst728 <= 1000 && typeof (c) != "undefined") {_RecordType("<19436,19437,752>",(c)); Inst728++; } } catch(e) {}
try { if (Inst730 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<19466,19496,753>",(this.addConstraintsConsumingTo)); Inst730++; } } catch(e) {}try { if (Inst731 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19497,19505,753>",(c.output)); Inst731++; } } catch(e) {}try { if (Inst732 <= 1000 && typeof (c) != "undefined") {_RecordType("<19497,19498,753>",(c)); Inst732++; } } catch(e) {}try { if (Inst733 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19509,19513,753>",(todo)); Inst733++; } } catch(e) {}
      this.addConstraintsConsumingTo(c.output(), todo);
    }
  }

try { if (Inst734 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19536,19540,757>",(plan)); Inst734++; } } catch(e) {}
  return plan;
};
try { if (Inst701 <= 1000 && typeof (Planner.prototype.makePlan) != "undefined") {_RecordType("<19155,19181,742>",(Planner.prototype.makePlan)); Inst701++; } } catch(e) {}try { if (Inst702 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<19155,19172,742>",(Planner.prototype)); Inst702++; } } catch(e) {}try { if (Inst703 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<19155,19162,742>",(Planner)); Inst703++; } } catch(e) {}
/**
 * Extract a plan for resatisfying starting from the output of the
 * given constraints, usually a set of input constraints.
 */


Planner.prototype.extractPlanFromConstraints = function (constraints) {
try { if (Inst738 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19737,19748,765>",(constraints)); Inst738++; } } catch(e) {}
try { if (Inst740 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<19772,19789,766>",(OrderedCollection)); Inst740++; } } catch(e) {}
  var sources = new OrderedCollection();
try { if (Inst739 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19758,19765,766>",(sources)); Inst739++; } } catch(e) {}

  for (var i = 0; i < constraints.size(); i++) {
try { if (Inst741 <= 1000 && typeof (i) != "undefined") {_RecordType("<19805,19806,768>",(i)); Inst741++; } } catch(e) {}try { if (Inst742 <= 1000 && typeof (i) != "undefined") {_RecordType("<19812,19813,768>",(i)); Inst742++; } } catch(e) {}try { if (Inst743 <= 1000 && typeof (constraints.size) != "undefined") {_RecordType("<19816,19832,768>",(constraints.size)); Inst743++; } } catch(e) {}try { if (Inst744 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19816,19827,768>",(constraints)); Inst744++; } } catch(e) {}try { if (Inst745 <= 1000 && typeof (i) != "undefined") {_RecordType("<19836,19837,768>",(i)); Inst745++; } } catch(e) {}
try { if (Inst747 <= 1000 && typeof (constraints.at) != "undefined") {_RecordType("<19855,19869,769>",(constraints.at)); Inst747++; } } catch(e) {}try { if (Inst748 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19855,19866,769>",(constraints)); Inst748++; } } catch(e) {}try { if (Inst749 <= 1000 && typeof (i) != "undefined") {_RecordType("<19870,19871,769>",(i)); Inst749++; } } catch(e) {}
    var c = constraints.at(i);
try { if (Inst746 <= 1000 && typeof (c) != "undefined") {_RecordType("<19851,19852,769>",(c)); Inst746++; } } catch(e) {}

try { if (Inst750 <= 1000 && typeof (c.isInput) != "undefined") {_RecordType("<19883,19892,771>",(c.isInput)); Inst750++; } } catch(e) {}try { if (Inst751 <= 1000 && typeof (c) != "undefined") {_RecordType("<19883,19884,771>",(c)); Inst751++; } } catch(e) {}try { if (Inst752 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<19898,19911,771>",(c.isSatisfied)); Inst752++; } } catch(e) {}try { if (Inst753 <= 1000 && typeof (c) != "undefined") {_RecordType("<19898,19899,771>",(c)); Inst753++; } } catch(e) {}
    if (c.isInput() && c.isSatisfied()) {
      // not in plan already and eligible for inclusion
try { if (Inst754 <= 1000 && typeof (sources.add) != "undefined") {_RecordType("<19979,19990,773>",(sources.add)); Inst754++; } } catch(e) {}try { if (Inst755 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19979,19986,773>",(sources)); Inst755++; } } catch(e) {}try { if (Inst756 <= 1000 && typeof (c) != "undefined") {_RecordType("<19991,19992,773>",(c)); Inst756++; } } catch(e) {}
      sources.add(c);
    }
  }

try { if (Inst757 <= 1000 && typeof (this.makePlan) != "undefined") {_RecordType("<20015,20028,777>",(this.makePlan)); Inst757++; } } catch(e) {}try { if (Inst758 <= 1000 && typeof (sources) != "undefined") {_RecordType("<20029,20036,777>",(sources)); Inst758++; } } catch(e) {}
  return this.makePlan(sources);
};
try { if (Inst735 <= 1000 && typeof (Planner.prototype.extractPlanFromConstraints) != "undefined") {_RecordType("<19680,19724,765>",(Planner.prototype.extractPlanFromConstraints)); Inst735++; } } catch(e) {}try { if (Inst736 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<19680,19697,765>",(Planner.prototype)); Inst736++; } } catch(e) {}try { if (Inst737 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<19680,19687,765>",(Planner)); Inst737++; } } catch(e) {}
/**
 * Recompute the walkabout strengths and stay flags of all variables
 * downstream of the given constraint and recompute the actual
 * values of all variables whose stay flag is true. If a cycle is
 * detected, remove the given constraint and answer
 * false. Otherwise, answer true.
 * Details: Cycles are detected when a marked variable is
 * encountered downstream of the given constraint. The sender is
 * assumed to have marked the inputs of the given constraint with
 * the given mark. Thus, encountering a marked node downstream of
 * the output constraint means that there is a path from the
 * constraint's output to one of its inputs.
 */


Planner.prototype.addPropagate = function (c, mark) {
try { if (Inst762 <= 1000 && typeof (c) != "undefined") {_RecordType("<20740,20741,794>",(c)); Inst762++; } } catch(e) {}try { if (Inst763 <= 1000 && typeof (mark) != "undefined") {_RecordType("<20743,20747,794>",(mark)); Inst763++; } } catch(e) {}
try { if (Inst765 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<20768,20785,795>",(OrderedCollection)); Inst765++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst764 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20757,20761,795>",(todo)); Inst764++; } } catch(e) {}
try { if (Inst766 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<20791,20799,796>",(todo.add)); Inst766++; } } catch(e) {}try { if (Inst767 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20791,20795,796>",(todo)); Inst767++; } } catch(e) {}try { if (Inst768 <= 1000 && typeof (c) != "undefined") {_RecordType("<20800,20801,796>",(c)); Inst768++; } } catch(e) {}
  todo.add(c);

try { if (Inst769 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<20814,20823,798>",(todo.size)); Inst769++; } } catch(e) {}try { if (Inst770 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20814,20818,798>",(todo)); Inst770++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst772 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<20845,20861,799>",(todo.removeFirst)); Inst772++; } } catch(e) {}try { if (Inst773 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20845,20849,799>",(todo)); Inst773++; } } catch(e) {}
    var d = todo.removeFirst();
try { if (Inst771 <= 1000 && typeof (d) != "undefined") {_RecordType("<20841,20842,799>",(d)); Inst771++; } } catch(e) {}

try { if (Inst774 <= 1000 && typeof (d.output().mark) != "undefined") {_RecordType("<20874,20889,801>",(d.output().mark)); Inst774++; } } catch(e) {}try { if (Inst775 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<20874,20882,801>",(d.output)); Inst775++; } } catch(e) {}try { if (Inst776 <= 1000 && typeof (d) != "undefined") {_RecordType("<20874,20875,801>",(d)); Inst776++; } } catch(e) {}try { if (Inst777 <= 1000 && typeof (mark) != "undefined") {_RecordType("<20893,20897,801>",(mark)); Inst777++; } } catch(e) {}
    if (d.output().mark == mark) {
try { if (Inst778 <= 1000 && typeof (this.incrementalRemove) != "undefined") {_RecordType("<20907,20929,802>",(this.incrementalRemove)); Inst778++; } } catch(e) {}try { if (Inst779 <= 1000 && typeof (c) != "undefined") {_RecordType("<20930,20931,802>",(c)); Inst779++; } } catch(e) {}
      this.incrementalRemove(c);
      return false;
    }

try { if (Inst780 <= 1000 && typeof (d.recalculate) != "undefined") {_RecordType("<20965,20978,806>",(d.recalculate)); Inst780++; } } catch(e) {}try { if (Inst781 <= 1000 && typeof (d) != "undefined") {_RecordType("<20965,20966,806>",(d)); Inst781++; } } catch(e) {}
    d.recalculate();
try { if (Inst782 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<20986,21016,807>",(this.addConstraintsConsumingTo)); Inst782++; } } catch(e) {}try { if (Inst783 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<21017,21025,807>",(d.output)); Inst783++; } } catch(e) {}try { if (Inst784 <= 1000 && typeof (d) != "undefined") {_RecordType("<21017,21018,807>",(d)); Inst784++; } } catch(e) {}try { if (Inst785 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21029,21033,807>",(todo)); Inst785++; } } catch(e) {}
    this.addConstraintsConsumingTo(d.output(), todo);
  }

  return true;
};
try { if (Inst759 <= 1000 && typeof (Planner.prototype.addPropagate) != "undefined") {_RecordType("<20697,20727,794>",(Planner.prototype.addPropagate)); Inst759++; } } catch(e) {}try { if (Inst760 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<20697,20714,794>",(Planner.prototype)); Inst760++; } } catch(e) {}try { if (Inst761 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<20697,20704,794>",(Planner)); Inst761++; } } catch(e) {}
/**
 * Update the walkabout strengths and stay flags of all variables
 * downstream of the given constraint. Answer a collection of
 * unsatisfied constraints sorted in order of decreasing strength.
 */


Planner.prototype.removePropagateFrom = function (out) {
try { if (Inst789 <= 1000 && typeof (out) != "undefined") {_RecordType("<21314,21317,819>",(out)); Inst789++; } } catch(e) {}
  out.determinedBy = null;
try { if (Inst790 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<21323,21339,820>",(out.determinedBy)); Inst790++; } } catch(e) {}try { if (Inst791 <= 1000 && typeof (out) != "undefined") {_RecordType("<21323,21326,820>",(out)); Inst791++; } } catch(e) {}
try { if (Inst794 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<21369,21385,821>",(Strength.WEAKEST)); Inst794++; } } catch(e) {}try { if (Inst795 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<21369,21377,821>",(Strength)); Inst795++; } } catch(e) {}
  out.walkStrength = Strength.WEAKEST;
try { if (Inst792 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<21350,21366,821>",(out.walkStrength)); Inst792++; } } catch(e) {}try { if (Inst793 <= 1000 && typeof (out) != "undefined") {_RecordType("<21350,21353,821>",(out)); Inst793++; } } catch(e) {}
  out.stay = true;
try { if (Inst796 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<21389,21397,822>",(out.stay)); Inst796++; } } catch(e) {}try { if (Inst797 <= 1000 && typeof (out) != "undefined") {_RecordType("<21389,21392,822>",(out)); Inst797++; } } catch(e) {}
try { if (Inst799 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21430,21447,823>",(OrderedCollection)); Inst799++; } } catch(e) {}
  var unsatisfied = new OrderedCollection();
try { if (Inst798 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21412,21423,823>",(unsatisfied)); Inst798++; } } catch(e) {}
try { if (Inst801 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21468,21485,824>",(OrderedCollection)); Inst801++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst800 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21457,21461,824>",(todo)); Inst800++; } } catch(e) {}
try { if (Inst802 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21491,21499,825>",(todo.add)); Inst802++; } } catch(e) {}try { if (Inst803 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21491,21495,825>",(todo)); Inst803++; } } catch(e) {}try { if (Inst804 <= 1000 && typeof (out) != "undefined") {_RecordType("<21500,21503,825>",(out)); Inst804++; } } catch(e) {}
  todo.add(out);

try { if (Inst805 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<21516,21525,827>",(todo.size)); Inst805++; } } catch(e) {}try { if (Inst806 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21516,21520,827>",(todo)); Inst806++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst808 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<21547,21563,828>",(todo.removeFirst)); Inst808++; } } catch(e) {}try { if (Inst809 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21547,21551,828>",(todo)); Inst809++; } } catch(e) {}
    var v = todo.removeFirst();
try { if (Inst807 <= 1000 && typeof (v) != "undefined") {_RecordType("<21543,21544,828>",(v)); Inst807++; } } catch(e) {}

    for (var i = 0; i < v.constraints.size(); i++) {
try { if (Inst810 <= 1000 && typeof (i) != "undefined") {_RecordType("<21581,21582,830>",(i)); Inst810++; } } catch(e) {}try { if (Inst811 <= 1000 && typeof (i) != "undefined") {_RecordType("<21588,21589,830>",(i)); Inst811++; } } catch(e) {}try { if (Inst812 <= 1000 && typeof (v.constraints.size) != "undefined") {_RecordType("<21592,21610,830>",(v.constraints.size)); Inst812++; } } catch(e) {}try { if (Inst813 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21592,21605,830>",(v.constraints)); Inst813++; } } catch(e) {}try { if (Inst814 <= 1000 && typeof (v) != "undefined") {_RecordType("<21592,21593,830>",(v)); Inst814++; } } catch(e) {}try { if (Inst815 <= 1000 && typeof (i) != "undefined") {_RecordType("<21614,21615,830>",(i)); Inst815++; } } catch(e) {}
try { if (Inst817 <= 1000 && typeof (v.constraints.at) != "undefined") {_RecordType("<21635,21651,831>",(v.constraints.at)); Inst817++; } } catch(e) {}try { if (Inst818 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21635,21648,831>",(v.constraints)); Inst818++; } } catch(e) {}try { if (Inst819 <= 1000 && typeof (v) != "undefined") {_RecordType("<21635,21636,831>",(v)); Inst819++; } } catch(e) {}try { if (Inst820 <= 1000 && typeof (i) != "undefined") {_RecordType("<21652,21653,831>",(i)); Inst820++; } } catch(e) {}
      var c = v.constraints.at(i);
try { if (Inst816 <= 1000 && typeof (c) != "undefined") {_RecordType("<21631,21632,831>",(c)); Inst816++; } } catch(e) {}

try { if (Inst821 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<21668,21681,833>",(c.isSatisfied)); Inst821++; } } catch(e) {}try { if (Inst822 <= 1000 && typeof (c) != "undefined") {_RecordType("<21668,21669,833>",(c)); Inst822++; } } catch(e) {}
      if (!c.isSatisfied()) {
try { if (Inst823 <= 1000 && typeof (unsatisfied.add) != "undefined") {_RecordType("<21695,21710,834>",(unsatisfied.add)); Inst823++; } } catch(e) {}try { if (Inst824 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21695,21706,834>",(unsatisfied)); Inst824++; } } catch(e) {}try { if (Inst825 <= 1000 && typeof (c) != "undefined") {_RecordType("<21711,21712,834>",(c)); Inst825++; } } catch(e) {}
        unsatisfied.add(c);
      }
    }

try { if (Inst827 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<21752,21766,838>",(v.determinedBy)); Inst827++; } } catch(e) {}try { if (Inst828 <= 1000 && typeof (v) != "undefined") {_RecordType("<21752,21753,838>",(v)); Inst828++; } } catch(e) {}
    var determining = v.determinedBy;
try { if (Inst826 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21738,21749,838>",(determining)); Inst826++; } } catch(e) {}

    for (var i = 0; i < v.constraints.size(); i++) {
try { if (Inst829 <= 1000 && typeof (i) != "undefined") {_RecordType("<21782,21783,840>",(i)); Inst829++; } } catch(e) {}try { if (Inst830 <= 1000 && typeof (i) != "undefined") {_RecordType("<21789,21790,840>",(i)); Inst830++; } } catch(e) {}try { if (Inst831 <= 1000 && typeof (v.constraints.size) != "undefined") {_RecordType("<21793,21811,840>",(v.constraints.size)); Inst831++; } } catch(e) {}try { if (Inst832 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21793,21806,840>",(v.constraints)); Inst832++; } } catch(e) {}try { if (Inst833 <= 1000 && typeof (v) != "undefined") {_RecordType("<21793,21794,840>",(v)); Inst833++; } } catch(e) {}try { if (Inst834 <= 1000 && typeof (i) != "undefined") {_RecordType("<21815,21816,840>",(i)); Inst834++; } } catch(e) {}
try { if (Inst836 <= 1000 && typeof (v.constraints.at) != "undefined") {_RecordType("<21839,21855,841>",(v.constraints.at)); Inst836++; } } catch(e) {}try { if (Inst837 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21839,21852,841>",(v.constraints)); Inst837++; } } catch(e) {}try { if (Inst838 <= 1000 && typeof (v) != "undefined") {_RecordType("<21839,21840,841>",(v)); Inst838++; } } catch(e) {}try { if (Inst839 <= 1000 && typeof (i) != "undefined") {_RecordType("<21856,21857,841>",(i)); Inst839++; } } catch(e) {}
      var next = v.constraints.at(i);
try { if (Inst835 <= 1000 && typeof (next) != "undefined") {_RecordType("<21832,21836,841>",(next)); Inst835++; } } catch(e) {}

try { if (Inst840 <= 1000 && typeof (next) != "undefined") {_RecordType("<21871,21875,843>",(next)); Inst840++; } } catch(e) {}try { if (Inst841 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21879,21890,843>",(determining)); Inst841++; } } catch(e) {}try { if (Inst842 <= 1000 && typeof (next.isSatisfied) != "undefined") {_RecordType("<21894,21910,843>",(next.isSatisfied)); Inst842++; } } catch(e) {}try { if (Inst843 <= 1000 && typeof (next) != "undefined") {_RecordType("<21894,21898,843>",(next)); Inst843++; } } catch(e) {}
      if (next != determining && next.isSatisfied()) {
try { if (Inst844 <= 1000 && typeof (next.recalculate) != "undefined") {_RecordType("<21924,21940,844>",(next.recalculate)); Inst844++; } } catch(e) {}try { if (Inst845 <= 1000 && typeof (next) != "undefined") {_RecordType("<21924,21928,844>",(next)); Inst845++; } } catch(e) {}
        next.recalculate();
try { if (Inst846 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21952,21960,845>",(todo.add)); Inst846++; } } catch(e) {}try { if (Inst847 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21952,21956,845>",(todo)); Inst847++; } } catch(e) {}try { if (Inst848 <= 1000 && typeof (next.output) != "undefined") {_RecordType("<21961,21972,845>",(next.output)); Inst848++; } } catch(e) {}try { if (Inst849 <= 1000 && typeof (next) != "undefined") {_RecordType("<21961,21965,845>",(next)); Inst849++; } } catch(e) {}
        todo.add(next.output());
      }
    }
  }

try { if (Inst850 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<22005,22016,850>",(unsatisfied)); Inst850++; } } catch(e) {}
  return unsatisfied;
};
try { if (Inst786 <= 1000 && typeof (Planner.prototype.removePropagateFrom) != "undefined") {_RecordType("<21264,21301,819>",(Planner.prototype.removePropagateFrom)); Inst786++; } } catch(e) {}try { if (Inst787 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<21264,21281,819>",(Planner.prototype)); Inst787++; } } catch(e) {}try { if (Inst788 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<21264,21271,819>",(Planner)); Inst788++; } } catch(e) {}

Planner.prototype.addConstraintsConsumingTo = function (v, coll) {
try { if (Inst854 <= 1000 && typeof (v) != "undefined") {_RecordType("<22078,22079,853>",(v)); Inst854++; } } catch(e) {}try { if (Inst855 <= 1000 && typeof (coll) != "undefined") {_RecordType("<22081,22085,853>",(coll)); Inst855++; } } catch(e) {}
try { if (Inst857 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<22109,22123,854>",(v.determinedBy)); Inst857++; } } catch(e) {}try { if (Inst858 <= 1000 && typeof (v) != "undefined") {_RecordType("<22109,22110,854>",(v)); Inst858++; } } catch(e) {}
  var determining = v.determinedBy;
try { if (Inst856 <= 1000 && typeof (determining) != "undefined") {_RecordType("<22095,22106,854>",(determining)); Inst856++; } } catch(e) {}
try { if (Inst860 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<22136,22149,855>",(v.constraints)); Inst860++; } } catch(e) {}try { if (Inst861 <= 1000 && typeof (v) != "undefined") {_RecordType("<22136,22137,855>",(v)); Inst861++; } } catch(e) {}
  var cc = v.constraints;
try { if (Inst859 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22131,22133,855>",(cc)); Inst859++; } } catch(e) {}

  for (var i = 0; i < cc.size(); i++) {
try { if (Inst862 <= 1000 && typeof (i) != "undefined") {_RecordType("<22163,22164,857>",(i)); Inst862++; } } catch(e) {}try { if (Inst863 <= 1000 && typeof (i) != "undefined") {_RecordType("<22170,22171,857>",(i)); Inst863++; } } catch(e) {}try { if (Inst864 <= 1000 && typeof (cc.size) != "undefined") {_RecordType("<22174,22181,857>",(cc.size)); Inst864++; } } catch(e) {}try { if (Inst865 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22174,22176,857>",(cc)); Inst865++; } } catch(e) {}try { if (Inst866 <= 1000 && typeof (i) != "undefined") {_RecordType("<22185,22186,857>",(i)); Inst866++; } } catch(e) {}
try { if (Inst868 <= 1000 && typeof (cc.at) != "undefined") {_RecordType("<22204,22209,858>",(cc.at)); Inst868++; } } catch(e) {}try { if (Inst869 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22204,22206,858>",(cc)); Inst869++; } } catch(e) {}try { if (Inst870 <= 1000 && typeof (i) != "undefined") {_RecordType("<22210,22211,858>",(i)); Inst870++; } } catch(e) {}
    var c = cc.at(i);
try { if (Inst867 <= 1000 && typeof (c) != "undefined") {_RecordType("<22200,22201,858>",(c)); Inst867++; } } catch(e) {}

try { if (Inst871 <= 1000 && typeof (c) != "undefined") {_RecordType("<22223,22224,860>",(c)); Inst871++; } } catch(e) {}try { if (Inst872 <= 1000 && typeof (determining) != "undefined") {_RecordType("<22228,22239,860>",(determining)); Inst872++; } } catch(e) {}try { if (Inst873 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<22243,22256,860>",(c.isSatisfied)); Inst873++; } } catch(e) {}try { if (Inst874 <= 1000 && typeof (c) != "undefined") {_RecordType("<22243,22244,860>",(c)); Inst874++; } } catch(e) {}
    if (c != determining && c.isSatisfied()) {
try { if (Inst875 <= 1000 && typeof (coll.add) != "undefined") {_RecordType("<22268,22276,861>",(coll.add)); Inst875++; } } catch(e) {}try { if (Inst876 <= 1000 && typeof (coll) != "undefined") {_RecordType("<22268,22272,861>",(coll)); Inst876++; } } catch(e) {}try { if (Inst877 <= 1000 && typeof (c) != "undefined") {_RecordType("<22277,22278,861>",(c)); Inst877++; } } catch(e) {}
      coll.add(c);
    }
  }
};
try { if (Inst851 <= 1000 && typeof (Planner.prototype.addConstraintsConsumingTo) != "undefined") {_RecordType("<22022,22065,853>",(Planner.prototype.addConstraintsConsumingTo)); Inst851++; } } catch(e) {}try { if (Inst852 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<22022,22039,853>",(Planner.prototype)); Inst852++; } } catch(e) {}try { if (Inst853 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<22022,22029,853>",(Planner)); Inst853++; } } catch(e) {}
/* --- *
 * P l a n
 * --- */

/**
 * A Plan is an ordered list of constraints to be executed in sequence
 * to resatisfy all currently satisfiable constraints in the face of
 * one or more changing inputs.
 */


try { if (Inst878 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22516,22520,876>",(Plan)); Inst878++; } } catch(e) {}
function Plan() {
try { if (Inst880 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<22540,22557,877>",(OrderedCollection)); Inst880++; } } catch(e) {}
  this.v = new OrderedCollection();
try { if (Inst879 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22527,22533,877>",(this.v)); Inst879++; } } catch(e) {}
}

Plan.prototype.addConstraint = function (c) {
try { if (Inst884 <= 1000 && typeof (c) != "undefined") {_RecordType("<22605,22606,880>",(c)); Inst884++; } } catch(e) {}
try { if (Inst885 <= 1000 && typeof (this.v.add) != "undefined") {_RecordType("<22612,22622,881>",(this.v.add)); Inst885++; } } catch(e) {}try { if (Inst886 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22612,22618,881>",(this.v)); Inst886++; } } catch(e) {}try { if (Inst887 <= 1000 && typeof (c) != "undefined") {_RecordType("<22623,22624,881>",(c)); Inst887++; } } catch(e) {}
  this.v.add(c);
};
try { if (Inst881 <= 1000 && typeof (Plan.prototype.addConstraint) != "undefined") {_RecordType("<22564,22592,880>",(Plan.prototype.addConstraint)); Inst881++; } } catch(e) {}try { if (Inst882 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22564,22578,880>",(Plan.prototype)); Inst882++; } } catch(e) {}try { if (Inst883 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22564,22568,880>",(Plan)); Inst883++; } } catch(e) {}

Plan.prototype.size = function () {
try { if (Inst891 <= 1000 && typeof (this.v.size) != "undefined") {_RecordType("<22676,22687,885>",(this.v.size)); Inst891++; } } catch(e) {}try { if (Inst892 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22676,22682,885>",(this.v)); Inst892++; } } catch(e) {}
  return this.v.size();
};
try { if (Inst888 <= 1000 && typeof (Plan.prototype.size) != "undefined") {_RecordType("<22631,22650,884>",(Plan.prototype.size)); Inst888++; } } catch(e) {}try { if (Inst889 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22631,22645,884>",(Plan.prototype)); Inst889++; } } catch(e) {}try { if (Inst890 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22631,22635,884>",(Plan)); Inst890++; } } catch(e) {}

Plan.prototype.constraintAt = function (index) {
try { if (Inst896 <= 1000 && typeof (index) != "undefined") {_RecordType("<22735,22740,888>",(index)); Inst896++; } } catch(e) {}
try { if (Inst897 <= 1000 && typeof (this.v.at) != "undefined") {_RecordType("<22753,22762,889>",(this.v.at)); Inst897++; } } catch(e) {}try { if (Inst898 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22753,22759,889>",(this.v)); Inst898++; } } catch(e) {}try { if (Inst899 <= 1000 && typeof (index) != "undefined") {_RecordType("<22763,22768,889>",(index)); Inst899++; } } catch(e) {}
  return this.v.at(index);
};
try { if (Inst893 <= 1000 && typeof (Plan.prototype.constraintAt) != "undefined") {_RecordType("<22695,22722,888>",(Plan.prototype.constraintAt)); Inst893++; } } catch(e) {}try { if (Inst894 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22695,22709,888>",(Plan.prototype)); Inst894++; } } catch(e) {}try { if (Inst895 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22695,22699,888>",(Plan)); Inst895++; } } catch(e) {}

Plan.prototype.execute = function () {
  for (var i = 0; i < this.size(); i++) {
try { if (Inst903 <= 1000 && typeof (i) != "undefined") {_RecordType("<22825,22826,893>",(i)); Inst903++; } } catch(e) {}try { if (Inst904 <= 1000 && typeof (i) != "undefined") {_RecordType("<22832,22833,893>",(i)); Inst904++; } } catch(e) {}try { if (Inst905 <= 1000 && typeof (this.size) != "undefined") {_RecordType("<22836,22845,893>",(this.size)); Inst905++; } } catch(e) {}try { if (Inst906 <= 1000 && typeof (i) != "undefined") {_RecordType("<22849,22850,893>",(i)); Inst906++; } } catch(e) {}
try { if (Inst908 <= 1000 && typeof (this.constraintAt) != "undefined") {_RecordType("<22868,22885,894>",(this.constraintAt)); Inst908++; } } catch(e) {}try { if (Inst909 <= 1000 && typeof (i) != "undefined") {_RecordType("<22886,22887,894>",(i)); Inst909++; } } catch(e) {}
    var c = this.constraintAt(i);
try { if (Inst907 <= 1000 && typeof (c) != "undefined") {_RecordType("<22864,22865,894>",(c)); Inst907++; } } catch(e) {}
try { if (Inst910 <= 1000 && typeof (c.execute) != "undefined") {_RecordType("<22894,22903,895>",(c.execute)); Inst910++; } } catch(e) {}try { if (Inst911 <= 1000 && typeof (c) != "undefined") {_RecordType("<22894,22895,895>",(c)); Inst911++; } } catch(e) {}
    c.execute();
  }
};
try { if (Inst900 <= 1000 && typeof (Plan.prototype.execute) != "undefined") {_RecordType("<22775,22797,892>",(Plan.prototype.execute)); Inst900++; } } catch(e) {}try { if (Inst901 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22775,22789,892>",(Plan.prototype)); Inst901++; } } catch(e) {}try { if (Inst902 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22775,22779,892>",(Plan)); Inst902++; } } catch(e) {}
/* --- *
 * M a i n
 * --- */

/**
 * This is the standard DeltaBlue benchmark. A long chain of equality
 * constraints is constructed with a stay constraint on one end. An
 * edit constraint is then added to the opposite end and the time is
 * measured for adding and removing this constraint, and extracting
 * and executing a constraint satisfaction plan. There are two cases.
 * In case 1, the added constraint is stronger than the stay
 * constraint and values must propagate down the entire length of the
 * chain. In case 2, the added constraint is weaker than the stay
 * constraint so it cannot be accomodated. The cost in this case is,
 * of course, very low. Typical situations lie somewhere between these
 * two extremes.
 */


try { if (Inst912 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<23663,23672,917>",(chainTest)); Inst912++; } } catch(e) {}
function chainTest(n) {
try { if (Inst913 <= 1000 && typeof (n) != "undefined") {_RecordType("<23673,23674,917>",(n)); Inst913++; } } catch(e) {}
try { if (Inst915 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<23694,23701,918>",(Planner)); Inst915++; } } catch(e) {}
  planner = new Planner();
try { if (Inst914 <= 1000 && typeof (planner) != "undefined") {_RecordType("<23680,23687,918>",(planner)); Inst914++; } } catch(e) {}
  var prev = null,
      first = null,
      last = null; // Build chain of n equality constraints
try { if (Inst916 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23711,23715,919>",(prev)); Inst916++; } } catch(e) {}try { if (Inst917 <= 1000 && typeof (first) != "undefined") {_RecordType("<23730,23735,920>",(first)); Inst917++; } } catch(e) {}try { if (Inst918 <= 1000 && typeof (last) != "undefined") {_RecordType("<23750,23754,921>",(last)); Inst918++; } } catch(e) {}

  for (var i = 0; i <= n; i++) {
try { if (Inst919 <= 1000 && typeof (i) != "undefined") {_RecordType("<23816,23817,923>",(i)); Inst919++; } } catch(e) {}try { if (Inst920 <= 1000 && typeof (i) != "undefined") {_RecordType("<23823,23824,923>",(i)); Inst920++; } } catch(e) {}try { if (Inst921 <= 1000 && typeof (n) != "undefined") {_RecordType("<23828,23829,923>",(n)); Inst921++; } } catch(e) {}try { if (Inst922 <= 1000 && typeof (i) != "undefined") {_RecordType("<23831,23832,923>",(i)); Inst922++; } } catch(e) {}
try { if (Inst924 <= 1000 && typeof (i) != "undefined") {_RecordType("<23859,23860,924>",(i)); Inst924++; } } catch(e) {}
    var name = "v" + i;
try { if (Inst923 <= 1000 && typeof (name) != "undefined") {_RecordType("<23846,23850,924>",(name)); Inst923++; } } catch(e) {}
try { if (Inst926 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<23878,23886,925>",(Variable)); Inst926++; } } catch(e) {}try { if (Inst927 <= 1000 && typeof (name) != "undefined") {_RecordType("<23887,23891,925>",(name)); Inst927++; } } catch(e) {}
    var v = new Variable(name);
try { if (Inst925 <= 1000 && typeof (v) != "undefined") {_RecordType("<23870,23871,925>",(v)); Inst925++; } } catch(e) {}

try { if (Inst928 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23903,23907,927>",(prev)); Inst928++; } } catch(e) {}
    if (prev != null) {
try { if (Inst929 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<23929,23947,928>",(EqualityConstraint)); Inst929++; } } catch(e) {}try { if (Inst930 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23948,23952,928>",(prev)); Inst930++; } } catch(e) {}try { if (Inst931 <= 1000 && typeof (v) != "undefined") {_RecordType("<23954,23955,928>",(v)); Inst931++; } } catch(e) {}try { if (Inst932 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<23957,23974,928>",(Strength.REQUIRED)); Inst932++; } } catch(e) {}try { if (Inst933 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<23957,23965,928>",(Strength)); Inst933++; } } catch(e) {}
      new EqualityConstraint(prev, v, Strength.REQUIRED);
    }

try { if (Inst934 <= 1000 && typeof (i) != "undefined") {_RecordType("<23992,23993,931>",(i)); Inst934++; } } catch(e) {}
    if (i == 0) {
try { if (Inst936 <= 1000 && typeof (v) != "undefined") {_RecordType("<24016,24017,932>",(v)); Inst936++; } } catch(e) {}
      first = v;
try { if (Inst935 <= 1000 && typeof (first) != "undefined") {_RecordType("<24008,24013,932>",(first)); Inst935++; } } catch(e) {}
    }

try { if (Inst937 <= 1000 && typeof (i) != "undefined") {_RecordType("<24034,24035,935>",(i)); Inst937++; } } catch(e) {}try { if (Inst938 <= 1000 && typeof (n) != "undefined") {_RecordType("<24039,24040,935>",(n)); Inst938++; } } catch(e) {}
    if (i == n) {
try { if (Inst940 <= 1000 && typeof (v) != "undefined") {_RecordType("<24057,24058,936>",(v)); Inst940++; } } catch(e) {}
      last = v;
try { if (Inst939 <= 1000 && typeof (last) != "undefined") {_RecordType("<24050,24054,936>",(last)); Inst939++; } } catch(e) {}
    }

try { if (Inst942 <= 1000 && typeof (v) != "undefined") {_RecordType("<24078,24079,939>",(v)); Inst942++; } } catch(e) {}
    prev = v;
try { if (Inst941 <= 1000 && typeof (prev) != "undefined") {_RecordType("<24071,24075,939>",(prev)); Inst941++; } } catch(e) {}
  }

try { if (Inst943 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<24092,24106,942>",(StayConstraint)); Inst943++; } } catch(e) {}try { if (Inst944 <= 1000 && typeof (last) != "undefined") {_RecordType("<24107,24111,942>",(last)); Inst944++; } } catch(e) {}try { if (Inst945 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<24113,24136,942>",(Strength.STRONG_DEFAULT)); Inst945++; } } catch(e) {}try { if (Inst946 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24113,24121,942>",(Strength)); Inst946++; } } catch(e) {}
  new StayConstraint(last, Strength.STRONG_DEFAULT);
try { if (Inst948 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<24156,24170,943>",(EditConstraint)); Inst948++; } } catch(e) {}try { if (Inst949 <= 1000 && typeof (first) != "undefined") {_RecordType("<24171,24176,943>",(first)); Inst949++; } } catch(e) {}try { if (Inst950 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<24178,24196,943>",(Strength.PREFERRED)); Inst950++; } } catch(e) {}try { if (Inst951 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24178,24186,943>",(Strength)); Inst951++; } } catch(e) {}
  var edit = new EditConstraint(first, Strength.PREFERRED);
try { if (Inst947 <= 1000 && typeof (edit) != "undefined") {_RecordType("<24145,24149,943>",(edit)); Inst947++; } } catch(e) {}
try { if (Inst953 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<24217,24234,944>",(OrderedCollection)); Inst953++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst952 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24205,24210,944>",(edits)); Inst952++; } } catch(e) {}
try { if (Inst954 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<24240,24249,945>",(edits.add)); Inst954++; } } catch(e) {}try { if (Inst955 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24240,24245,945>",(edits)); Inst955++; } } catch(e) {}try { if (Inst956 <= 1000 && typeof (edit) != "undefined") {_RecordType("<24250,24254,945>",(edit)); Inst956++; } } catch(e) {}
  edits.add(edit);
try { if (Inst958 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<24270,24304,946>",(planner.extractPlanFromConstraints)); Inst958++; } } catch(e) {}try { if (Inst959 <= 1000 && typeof (planner) != "undefined") {_RecordType("<24270,24277,946>",(planner)); Inst959++; } } catch(e) {}try { if (Inst960 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24305,24310,946>",(edits)); Inst960++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst957 <= 1000 && typeof (plan) != "undefined") {_RecordType("<24263,24267,946>",(plan)); Inst957++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst961 <= 1000 && typeof (i) != "undefined") {_RecordType("<24325,24326,948>",(i)); Inst961++; } } catch(e) {}try { if (Inst962 <= 1000 && typeof (i) != "undefined") {_RecordType("<24332,24333,948>",(i)); Inst962++; } } catch(e) {}try { if (Inst963 <= 1000 && typeof (i) != "undefined") {_RecordType("<24341,24342,948>",(i)); Inst963++; } } catch(e) {}
try { if (Inst966 <= 1000 && typeof (i) != "undefined") {_RecordType("<24366,24367,949>",(i)); Inst966++; } } catch(e) {}
    first.value = i;
try { if (Inst964 <= 1000 && typeof (first.value) != "undefined") {_RecordType("<24352,24363,949>",(first.value)); Inst964++; } } catch(e) {}try { if (Inst965 <= 1000 && typeof (first) != "undefined") {_RecordType("<24352,24357,949>",(first)); Inst965++; } } catch(e) {}
try { if (Inst967 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<24373,24385,950>",(plan.execute)); Inst967++; } } catch(e) {}try { if (Inst968 <= 1000 && typeof (plan) != "undefined") {_RecordType("<24373,24377,950>",(plan)); Inst968++; } } catch(e) {}
    plan.execute();
try { if (Inst969 <= 1000 && typeof (last.value) != "undefined") {_RecordType("<24393,24403,951>",(last.value)); Inst969++; } } catch(e) {}try { if (Inst970 <= 1000 && typeof (last) != "undefined") {_RecordType("<24393,24397,951>",(last)); Inst970++; } } catch(e) {}
    last.value;
try { if (Inst971 <= 1000 && typeof (i) != "undefined") {_RecordType("<24409,24410,952>",(i)); Inst971++; } } catch(e) {}
    i;
  }
}
/**
 * This test constructs a two sets of variables related to each
 * other by a simple linear transformation (scale and offset). The
 * time is measured to change a variable on either side of the
 * mapping and to change the scale and offset factors.
 */


try { if (Inst972 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<24686,24700,963>",(projectionTest)); Inst972++; } } catch(e) {}
function projectionTest(n) {
try { if (Inst973 <= 1000 && typeof (n) != "undefined") {_RecordType("<24701,24702,963>",(n)); Inst973++; } } catch(e) {}
try { if (Inst975 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<24722,24729,964>",(Planner)); Inst975++; } } catch(e) {}
  planner = new Planner();
try { if (Inst974 <= 1000 && typeof (planner) != "undefined") {_RecordType("<24708,24715,964>",(planner)); Inst974++; } } catch(e) {}
try { if (Inst977 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24751,24759,965>",(Variable)); Inst977++; } } catch(e) {}
  var scale = new Variable("scale", 10);
try { if (Inst976 <= 1000 && typeof (scale) != "undefined") {_RecordType("<24739,24744,965>",(scale)); Inst976++; } } catch(e) {}
try { if (Inst979 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24793,24801,966>",(Variable)); Inst979++; } } catch(e) {}
  var offset = new Variable("offset", 1000);
try { if (Inst978 <= 1000 && typeof (offset) != "undefined") {_RecordType("<24780,24786,966>",(offset)); Inst978++; } } catch(e) {}
  var src = null,
      dst = null;
try { if (Inst980 <= 1000 && typeof (src) != "undefined") {_RecordType("<24825,24828,967>",(src)); Inst980++; } } catch(e) {}try { if (Inst981 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24843,24846,968>",(dst)); Inst981++; } } catch(e) {}
try { if (Inst983 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<24873,24890,969>",(OrderedCollection)); Inst983++; } } catch(e) {}
  var dests = new OrderedCollection();
try { if (Inst982 <= 1000 && typeof (dests) != "undefined") {_RecordType("<24861,24866,969>",(dests)); Inst982++; } } catch(e) {}

  for (var i = 0; i < n; i++) {
try { if (Inst984 <= 1000 && typeof (i) != "undefined") {_RecordType("<24906,24907,971>",(i)); Inst984++; } } catch(e) {}try { if (Inst985 <= 1000 && typeof (i) != "undefined") {_RecordType("<24913,24914,971>",(i)); Inst985++; } } catch(e) {}try { if (Inst986 <= 1000 && typeof (n) != "undefined") {_RecordType("<24917,24918,971>",(n)); Inst986++; } } catch(e) {}try { if (Inst987 <= 1000 && typeof (i) != "undefined") {_RecordType("<24920,24921,971>",(i)); Inst987++; } } catch(e) {}
try { if (Inst989 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24941,24949,972>",(Variable)); Inst989++; } } catch(e) {}try { if (Inst990 <= 1000 && typeof (i) != "undefined") {_RecordType("<24958,24959,972>",(i)); Inst990++; } } catch(e) {}try { if (Inst991 <= 1000 && typeof (i) != "undefined") {_RecordType("<24961,24962,972>",(i)); Inst991++; } } catch(e) {}
    src = new Variable("src" + i, i);
try { if (Inst988 <= 1000 && typeof (src) != "undefined") {_RecordType("<24931,24934,972>",(src)); Inst988++; } } catch(e) {}
try { if (Inst993 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24979,24987,973>",(Variable)); Inst993++; } } catch(e) {}try { if (Inst994 <= 1000 && typeof (i) != "undefined") {_RecordType("<24996,24997,973>",(i)); Inst994++; } } catch(e) {}try { if (Inst995 <= 1000 && typeof (i) != "undefined") {_RecordType("<24999,25000,973>",(i)); Inst995++; } } catch(e) {}
    dst = new Variable("dst" + i, i);
try { if (Inst992 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24969,24972,973>",(dst)); Inst992++; } } catch(e) {}
try { if (Inst996 <= 1000 && typeof (dests.add) != "undefined") {_RecordType("<25007,25016,974>",(dests.add)); Inst996++; } } catch(e) {}try { if (Inst997 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25007,25012,974>",(dests)); Inst997++; } } catch(e) {}try { if (Inst998 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25017,25020,974>",(dst)); Inst998++; } } catch(e) {}
    dests.add(dst);
try { if (Inst999 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<25031,25045,975>",(StayConstraint)); Inst999++; } } catch(e) {}try { if (Inst1000 <= 1000 && typeof (src) != "undefined") {_RecordType("<25046,25049,975>",(src)); Inst1000++; } } catch(e) {}try { if (Inst1001 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<25051,25066,975>",(Strength.NORMAL)); Inst1001++; } } catch(e) {}try { if (Inst1002 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25051,25059,975>",(Strength)); Inst1002++; } } catch(e) {}
    new StayConstraint(src, Strength.NORMAL);
try { if (Inst1003 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<25077,25092,976>",(ScaleConstraint)); Inst1003++; } } catch(e) {}try { if (Inst1004 <= 1000 && typeof (src) != "undefined") {_RecordType("<25093,25096,976>",(src)); Inst1004++; } } catch(e) {}try { if (Inst1005 <= 1000 && typeof (scale) != "undefined") {_RecordType("<25098,25103,976>",(scale)); Inst1005++; } } catch(e) {}try { if (Inst1006 <= 1000 && typeof (offset) != "undefined") {_RecordType("<25105,25111,976>",(offset)); Inst1006++; } } catch(e) {}try { if (Inst1007 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25113,25116,976>",(dst)); Inst1007++; } } catch(e) {}try { if (Inst1008 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<25118,25135,976>",(Strength.REQUIRED)); Inst1008++; } } catch(e) {}try { if (Inst1009 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25118,25126,976>",(Strength)); Inst1009++; } } catch(e) {}
    new ScaleConstraint(src, scale, offset, dst, Strength.REQUIRED);
  }

try { if (Inst1010 <= 1000 && typeof (change) != "undefined") {_RecordType("<25145,25151,979>",(change)); Inst1010++; } } catch(e) {}try { if (Inst1011 <= 1000 && typeof (src) != "undefined") {_RecordType("<25152,25155,979>",(src)); Inst1011++; } } catch(e) {}
  change(src, 17);
try { if (Inst1012 <= 1000 && typeof (dst.value) != "undefined") {_RecordType("<25164,25173,980>",(dst.value)); Inst1012++; } } catch(e) {}try { if (Inst1013 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25164,25167,980>",(dst)); Inst1013++; } } catch(e) {}
  dst.value;
  1170;
try { if (Inst1014 <= 1000 && typeof (change) != "undefined") {_RecordType("<25185,25191,982>",(change)); Inst1014++; } } catch(e) {}try { if (Inst1015 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25192,25195,982>",(dst)); Inst1015++; } } catch(e) {}
  change(dst, 1050);
try { if (Inst1016 <= 1000 && typeof (src.value) != "undefined") {_RecordType("<25206,25215,983>",(src.value)); Inst1016++; } } catch(e) {}try { if (Inst1017 <= 1000 && typeof (src) != "undefined") {_RecordType("<25206,25209,983>",(src)); Inst1017++; } } catch(e) {}
  src.value;
  5;
try { if (Inst1018 <= 1000 && typeof (change) != "undefined") {_RecordType("<25224,25230,985>",(change)); Inst1018++; } } catch(e) {}try { if (Inst1019 <= 1000 && typeof (scale) != "undefined") {_RecordType("<25231,25236,985>",(scale)); Inst1019++; } } catch(e) {}
  change(scale, 5);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst1020 <= 1000 && typeof (i) != "undefined") {_RecordType("<25254,25255,987>",(i)); Inst1020++; } } catch(e) {}try { if (Inst1021 <= 1000 && typeof (i) != "undefined") {_RecordType("<25261,25262,987>",(i)); Inst1021++; } } catch(e) {}try { if (Inst1022 <= 1000 && typeof (n) != "undefined") {_RecordType("<25265,25266,987>",(n)); Inst1022++; } } catch(e) {}try { if (Inst1023 <= 1000 && typeof (i) != "undefined") {_RecordType("<25272,25273,987>",(i)); Inst1023++; } } catch(e) {}
try { if (Inst1024 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<25283,25300,988>",(dests.at(i).value)); Inst1024++; } } catch(e) {}try { if (Inst1025 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<25283,25291,988>",(dests.at)); Inst1025++; } } catch(e) {}try { if (Inst1026 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25283,25288,988>",(dests)); Inst1026++; } } catch(e) {}try { if (Inst1027 <= 1000 && typeof (i) != "undefined") {_RecordType("<25292,25293,988>",(i)); Inst1027++; } } catch(e) {}
    dests.at(i).value;
try { if (Inst1028 <= 1000 && typeof (i) != "undefined") {_RecordType("<25306,25307,989>",(i)); Inst1028++; } } catch(e) {}
    i * 5 + 1000;
  }

try { if (Inst1029 <= 1000 && typeof (change) != "undefined") {_RecordType("<25327,25333,992>",(change)); Inst1029++; } } catch(e) {}try { if (Inst1030 <= 1000 && typeof (offset) != "undefined") {_RecordType("<25334,25340,992>",(offset)); Inst1030++; } } catch(e) {}
  change(offset, 2000);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst1031 <= 1000 && typeof (i) != "undefined") {_RecordType("<25361,25362,994>",(i)); Inst1031++; } } catch(e) {}try { if (Inst1032 <= 1000 && typeof (i) != "undefined") {_RecordType("<25368,25369,994>",(i)); Inst1032++; } } catch(e) {}try { if (Inst1033 <= 1000 && typeof (n) != "undefined") {_RecordType("<25372,25373,994>",(n)); Inst1033++; } } catch(e) {}try { if (Inst1034 <= 1000 && typeof (i) != "undefined") {_RecordType("<25379,25380,994>",(i)); Inst1034++; } } catch(e) {}
try { if (Inst1035 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<25390,25407,995>",(dests.at(i).value)); Inst1035++; } } catch(e) {}try { if (Inst1036 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<25390,25398,995>",(dests.at)); Inst1036++; } } catch(e) {}try { if (Inst1037 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25390,25395,995>",(dests)); Inst1037++; } } catch(e) {}try { if (Inst1038 <= 1000 && typeof (i) != "undefined") {_RecordType("<25399,25400,995>",(i)); Inst1038++; } } catch(e) {}
    dests.at(i).value;
try { if (Inst1039 <= 1000 && typeof (i) != "undefined") {_RecordType("<25413,25414,996>",(i)); Inst1039++; } } catch(e) {}
    i * 5 + 2000;
  }
}

try { if (Inst1040 <= 1000 && typeof (change) != "undefined") {_RecordType("<25443,25449,1000>",(change)); Inst1040++; } } catch(e) {}
function change(v, newValue) {
try { if (Inst1041 <= 1000 && typeof (v) != "undefined") {_RecordType("<25450,25451,1000>",(v)); Inst1041++; } } catch(e) {}try { if (Inst1042 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<25453,25461,1000>",(newValue)); Inst1042++; } } catch(e) {}
try { if (Inst1044 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<25482,25496,1001>",(EditConstraint)); Inst1044++; } } catch(e) {}try { if (Inst1045 <= 1000 && typeof (v) != "undefined") {_RecordType("<25497,25498,1001>",(v)); Inst1045++; } } catch(e) {}try { if (Inst1046 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<25500,25518,1001>",(Strength.PREFERRED)); Inst1046++; } } catch(e) {}try { if (Inst1047 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25500,25508,1001>",(Strength)); Inst1047++; } } catch(e) {}
  var edit = new EditConstraint(v, Strength.PREFERRED);
try { if (Inst1043 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25471,25475,1001>",(edit)); Inst1043++; } } catch(e) {}
try { if (Inst1049 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<25539,25556,1002>",(OrderedCollection)); Inst1049++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst1048 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25527,25532,1002>",(edits)); Inst1048++; } } catch(e) {}
try { if (Inst1050 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<25562,25571,1003>",(edits.add)); Inst1050++; } } catch(e) {}try { if (Inst1051 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25562,25567,1003>",(edits)); Inst1051++; } } catch(e) {}try { if (Inst1052 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25572,25576,1003>",(edit)); Inst1052++; } } catch(e) {}
  edits.add(edit);
try { if (Inst1054 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<25592,25626,1004>",(planner.extractPlanFromConstraints)); Inst1054++; } } catch(e) {}try { if (Inst1055 <= 1000 && typeof (planner) != "undefined") {_RecordType("<25592,25599,1004>",(planner)); Inst1055++; } } catch(e) {}try { if (Inst1056 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25627,25632,1004>",(edits)); Inst1056++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst1053 <= 1000 && typeof (plan) != "undefined") {_RecordType("<25585,25589,1004>",(plan)); Inst1053++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst1057 <= 1000 && typeof (i) != "undefined") {_RecordType("<25647,25648,1006>",(i)); Inst1057++; } } catch(e) {}try { if (Inst1058 <= 1000 && typeof (i) != "undefined") {_RecordType("<25654,25655,1006>",(i)); Inst1058++; } } catch(e) {}try { if (Inst1059 <= 1000 && typeof (i) != "undefined") {_RecordType("<25662,25663,1006>",(i)); Inst1059++; } } catch(e) {}
try { if (Inst1062 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<25683,25691,1007>",(newValue)); Inst1062++; } } catch(e) {}
    v.value = newValue;
try { if (Inst1060 <= 1000 && typeof (v.value) != "undefined") {_RecordType("<25673,25680,1007>",(v.value)); Inst1060++; } } catch(e) {}try { if (Inst1061 <= 1000 && typeof (v) != "undefined") {_RecordType("<25673,25674,1007>",(v)); Inst1061++; } } catch(e) {}
try { if (Inst1063 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<25697,25709,1008>",(plan.execute)); Inst1063++; } } catch(e) {}try { if (Inst1064 <= 1000 && typeof (plan) != "undefined") {_RecordType("<25697,25701,1008>",(plan)); Inst1064++; } } catch(e) {}
    plan.execute();
  }

try { if (Inst1065 <= 1000 && typeof (edit.destroyConstraint) != "undefined") {_RecordType("<25720,25742,1011>",(edit.destroyConstraint)); Inst1065++; } } catch(e) {}try { if (Inst1066 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25720,25724,1011>",(edit)); Inst1066++; } } catch(e) {}
  edit.destroyConstraint();
} // Global variable holding the current planner.


var planner = null;
try { if (Inst1067 <= 1000 && typeof (planner) != "undefined") {_RecordType("<25802,25809,1015>",(planner)); Inst1067++; } } catch(e) {}

try { if (Inst1068 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<25828,25837,1017>",(deltaBlue)); Inst1068++; } } catch(e) {}
function deltaBlue() {
try { if (Inst1069 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<25844,25853,1018>",(chainTest)); Inst1069++; } } catch(e) {}
  chainTest(100);
try { if (Inst1070 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<25862,25876,1019>",(projectionTest)); Inst1070++; } } catch(e) {}
  projectionTest(100);
}

try { if (Inst1071 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<25886,25895,1022>",(deltaBlue)); Inst1071++; } } catch(e) {}
deltaBlue();

