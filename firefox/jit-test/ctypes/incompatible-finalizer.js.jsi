var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst2 <= 1000 && typeof (ctypes.CDataFinalizer) != "undefined") {_RecordType("<30,51,2>",(ctypes.CDataFinalizer)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<30,36,2>",(ctypes)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<52,66,2>",(ctypes.int32_t)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<52,58,2>",(ctypes)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ctypes.FunctionType(ctypes.default_abi, ctypes.int32_t, [ctypes.int32_t]).ptr) != "undefined") {_RecordType("<71,148,2>",(ctypes.FunctionType(ctypes.default_abi, ctypes.int32_t, [ctypes.int32_t]).ptr)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ctypes.FunctionType) != "undefined") {_RecordType("<71,90,2>",(ctypes.FunctionType)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<71,77,2>",(ctypes)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ctypes.default_abi) != "undefined") {_RecordType("<91,109,2>",(ctypes.default_abi)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<91,97,2>",(ctypes)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<111,125,2>",(ctypes.int32_t)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<111,117,2>",(ctypes)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<128,142,2>",(ctypes.int32_t)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<128,134,2>",(ctypes)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<149,150,2>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<154,155,2>",(x)); Inst16++; } } catch(e) {}
  let fin = ctypes.CDataFinalizer(ctypes.int32_t(0), ctypes.FunctionType(ctypes.default_abi, ctypes.int32_t, [ctypes.int32_t]).ptr(x => x));
try { if (Inst1 <= 1000 && typeof (fin) != "undefined") {_RecordType("<24,27,2>",(fin)); Inst1++; } } catch(e) {}

  (() => {
try { if (Inst17 <= 1000 && typeof (fin.toSource.call) != "undefined") {_RecordType("<175,192,5>",(fin.toSource.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (fin.toSource) != "undefined") {_RecordType("<175,187,5>",(fin.toSource)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (fin) != "undefined") {_RecordType("<175,178,5>",(fin)); Inst19++; } } catch(e) {}
    fin.toSource.call(1);
  })();

  "CDataFinalizer.prototype.toSource called on incompatible object, got the number 1";

  (() => {
try { if (Inst20 <= 1000 && typeof (fin.toString.call) != "undefined") {_RecordType("<309,326,11>",(fin.toString.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (fin.toString) != "undefined") {_RecordType("<309,321,11>",(fin.toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (fin) != "undefined") {_RecordType("<309,312,11>",(fin)); Inst22++; } } catch(e) {}
    fin.toString.call(1);
  })();

  "CDataFinalizer.prototype.toString called on incompatible object, got the number 1";

  (() => {
try { if (Inst23 <= 1000 && typeof (fin.forget.call) != "undefined") {_RecordType("<443,458,17>",(fin.forget.call)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (fin.forget) != "undefined") {_RecordType("<443,453,17>",(fin.forget)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (fin) != "undefined") {_RecordType("<443,446,17>",(fin)); Inst25++; } } catch(e) {}
    fin.forget.call(1);
  })();

  "CDataFinalizer.prototype.forget called on incompatible object, got the number 1";

  (() => {
try { if (Inst26 <= 1000 && typeof (fin.dispose.call) != "undefined") {_RecordType("<573,589,23>",(fin.dispose.call)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (fin.dispose) != "undefined") {_RecordType("<573,584,23>",(fin.dispose)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (fin) != "undefined") {_RecordType("<573,576,23>",(fin)); Inst28++; } } catch(e) {}
    fin.dispose.call(1);
  })();

  "CDataFinalizer.prototype.dispose called on incompatible object, got the number 1";
try { if (Inst29 <= 1000 && typeof (fin.forget) != "undefined") {_RecordType("<691,701,27>",(fin.forget)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (fin) != "undefined") {_RecordType("<691,694,27>",(fin)); Inst30++; } } catch(e) {}
  fin.forget();

  (() => {
try { if (Inst31 <= 1000 && typeof (fin.readString) != "undefined") {_RecordType("<721,735,30>",(fin.readString)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (fin) != "undefined") {_RecordType("<721,724,30>",(fin)); Inst32++; } } catch(e) {}
    fin.readString();
  })();

  "CDataFinalizer.prototype.readString called on empty CDataFinalizer";

  (() => {
try { if (Inst33 <= 1000 && typeof (fin.dispose) != "undefined") {_RecordType("<836,847,36>",(fin.dispose)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (fin) != "undefined") {_RecordType("<836,839,36>",(fin)); Inst34++; } } catch(e) {}
    fin.dispose();
  })();

  "CDataFinalizer.prototype.dispose called on empty CDataFinalizer";

  (() => {
try { if (Inst35 <= 1000 && typeof (fin.forget) != "undefined") {_RecordType("<945,955,42>",(fin.forget)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (fin) != "undefined") {_RecordType("<945,948,42>",(fin)); Inst36++; } } catch(e) {}
    fin.forget();
  })();

  "CDataFinalizer.prototype.forget called on empty CDataFinalizer";
}

try { if (Inst37 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1050,1056,48>",(ctypes)); Inst37++; } } catch(e) {}
if (typeof ctypes === "object") {
try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<1075,1079,49>",(test)); Inst38++; } } catch(e) {}
  test();
}

