var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst1 <= 1000 && typeof (getBuildConfiguration()["pointer-byte-size"]) != "undefined") {_RecordType("<24,68,2>",(getBuildConfiguration()["pointer-byte-size"])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (getBuildConfiguration) != "undefined") {_RecordType("<24,45,2>",(getBuildConfiguration)); Inst2++; } } catch(e) {}
  if (getBuildConfiguration()["pointer-byte-size"] == 4) {
try { if (Inst4 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<97,117,3>",(ctypes.int32_t.array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<97,111,3>",(ctypes.int32_t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<97,103,3>",(ctypes)); Inst6++; } } catch(e) {}
    let big_array = ctypes.int32_t.array(0xfffffff);
try { if (Inst3 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<85,94,3>",(big_array)); Inst3++; } } catch(e) {}

    (() => {
try { if (Inst7 <= 1000 && typeof (ctypes.StructType) != "undefined") {_RecordType("<150,167,6>",(ctypes.StructType)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<150,156,6>",(ctypes)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<187,196,7>",(big_array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<219,228,9>",(big_array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<251,260,11>",(big_array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<283,292,13>",(big_array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<315,324,15>",(big_array)); Inst13++; } } catch(e) {}
      ctypes.StructType("x", [{
        a: big_array
      }, {
        b: big_array
      }, {
        c: big_array
      }, {
        d: big_array
      }, {
        e: big_array
      }]);
    })();

    "struct size does not fit in size_t";
  } else {
try { if (Inst14 <= 1000 && typeof (getBuildConfiguration()["pointer-byte-size"]) != "undefined") {_RecordType("<408,452,21>",(getBuildConfiguration()["pointer-byte-size"])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (getBuildConfiguration) != "undefined") {_RecordType("<408,429,21>",(getBuildConfiguration)); Inst15++; } } catch(e) {}
    if (getBuildConfiguration()["pointer-byte-size"] == 8) {
try { if (Inst17 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<483,503,22>",(ctypes.int32_t.array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<483,497,22>",(ctypes.int32_t)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<483,489,22>",(ctypes)); Inst19++; } } catch(e) {}
      let big_array = ctypes.int32_t.array(0xfffffffffffffff);
try { if (Inst16 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<471,480,22>",(big_array)); Inst16++; } } catch(e) {}

      (() => {
try { if (Inst20 <= 1000 && typeof (ctypes.StructType) != "undefined") {_RecordType("<548,565,25>",(ctypes.StructType)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<548,554,25>",(ctypes)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<587,596,26>",(big_array)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<623,632,28>",(big_array)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<659,668,30>",(big_array)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<695,704,32>",(big_array)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (big_array) != "undefined") {_RecordType("<731,740,34>",(big_array)); Inst26++; } } catch(e) {}
        ctypes.StructType("x", [{
          a: big_array
        }, {
          b: big_array
        }, {
          c: big_array
        }, {
          d: big_array
        }, {
          e: big_array
        }]);
      })();

      "struct size does not fit in size_t";
    }
  }
}

try { if (Inst27 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<835,841,43>",(ctypes)); Inst27++; } } catch(e) {}
if (typeof ctypes === "object") {
try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<860,864,44>",(test)); Inst28++; } } catch(e) {}
  test();
}

