var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Type conversion error should report its type.
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<58,62,2>",(test)); Inst0++; } } catch(e) {}
function test() {
  // constructor
  (() => {
try { if (Inst1 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<99,119,5>",(ctypes.int32_t.array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<99,113,5>",(ctypes.int32_t)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<99,105,5>",(ctypes)); Inst3++; } } catch(e) {}
    ctypes.int32_t.array()("foo");
  })();

  "can't convert the string \"foo\" to the type ctypes.int32_t.array()";

  (() => {
try { if (Inst4 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<228,248,11>",(ctypes.int32_t.array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<228,242,11>",(ctypes.int32_t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<228,234,11>",(ctypes)); Inst6++; } } catch(e) {}
    ctypes.int32_t.array(10)("foo");
  })();

  "can't convert the string \"foo\" to the type ctypes.int32_t.array(10)";

  (() => {
try { if (Inst7 <= 1000 && typeof (ctypes.char.array) != "undefined") {_RecordType("<361,378,17>",(ctypes.char.array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctypes.char) != "undefined") {_RecordType("<361,372,17>",(ctypes.char)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<361,367,17>",(ctypes)); Inst9++; } } catch(e) {}
    ctypes.char.array(2)("foo");
  })();

  "length of the string \"foo\" does not fit in the length of the type ctypes.char.array(2) (expected 2 or lower, got 3)";

  (() => {
try { if (Inst10 <= 1000 && typeof (ctypes.char16_t.array) != "undefined") {_RecordType("<538,559,23>",(ctypes.char16_t.array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ctypes.char16_t) != "undefined") {_RecordType("<538,553,23>",(ctypes.char16_t)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<538,544,23>",(ctypes)); Inst12++; } } catch(e) {}
    ctypes.char16_t.array(2)("foo");
  })();

  "length of the string \"foo\" does not fit in the length of the type ctypes.char16_t.array(2) (expected 2 or lower, got 3)";

  (() => {
try { if (Inst13 <= 1000 && typeof (ctypes.int8_t.array) != "undefined") {_RecordType("<723,742,29>",(ctypes.int8_t.array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ctypes.int8_t) != "undefined") {_RecordType("<723,736,29>",(ctypes.int8_t)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<723,729,29>",(ctypes)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<750,761,29>",(ArrayBuffer)); Inst16++; } } catch(e) {}
    ctypes.int8_t.array(2)(new ArrayBuffer(8));
  })();

  "length of the array buffer ({}) does not match to the length of the type ctypes.int8_t.array(2) (expected 2, got 8)";

  (() => {
try { if (Inst17 <= 1000 && typeof (ctypes.int8_t.array) != "undefined") {_RecordType("<913,932,35>",(ctypes.int8_t.array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ctypes.int8_t) != "undefined") {_RecordType("<913,926,35>",(ctypes.int8_t)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<913,919,35>",(ctypes)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<940,949,35>",(Int8Array)); Inst20++; } } catch(e) {}
    ctypes.int8_t.array(2)(new Int8Array(8));
  })();

  "length of the typed array ({0:0, 1:0, 2:0, 3:0, 4:0, 5:0, 6:0, 7:0}) does not match to the length of the type ctypes.int8_t.array(2) (expected 2, got 8)";

  (() => {
    ctypes.int32_t.array(10)()[0] = "foo";
try { if (Inst21 <= 1000 && typeof (ctypes.int32_t.array(10)()[0]) != "undefined") {_RecordType("<1138,1167,41>",(ctypes.int32_t.array(10)()[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<1138,1158,41>",(ctypes.int32_t.array)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1138,1152,41>",(ctypes.int32_t)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1138,1144,41>",(ctypes)); Inst24++; } } catch(e) {}
  })();

  "can't convert the string \"foo\" to element 0 of the type ctypes.int32_t.array(10)";

  (() => {
    ctypes.int32_t.array(10)()[1] = "foo";
try { if (Inst25 <= 1000 && typeof (ctypes.int32_t.array(10)()[1]) != "undefined") {_RecordType("<1290,1319,47>",(ctypes.int32_t.array(10)()[1])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<1290,1310,47>",(ctypes.int32_t.array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1290,1304,47>",(ctypes.int32_t)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1290,1296,47>",(ctypes)); Inst28++; } } catch(e) {}
  })();

  "can't convert the string \"foo\" to element 1 of the type ctypes.int32_t.array(10)";

  (() => {
    ctypes.int32_t.array(1)().value = ["foo"];
try { if (Inst29 <= 1000 && typeof (ctypes.int32_t.array(1)().value) != "undefined") {_RecordType("<1442,1473,53>",(ctypes.int32_t.array(1)().value)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<1442,1462,53>",(ctypes.int32_t.array)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1442,1456,53>",(ctypes.int32_t)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1442,1448,53>",(ctypes)); Inst32++; } } catch(e) {}
  })();

  "can't convert the string \"foo\" to element 0 of the type ctypes.int32_t.array(1)";

  (() => {
    ctypes.int32_t.array(1)().value = [2, "foo"];
try { if (Inst33 <= 1000 && typeof (ctypes.int32_t.array(1)().value) != "undefined") {_RecordType("<1597,1628,59>",(ctypes.int32_t.array(1)().value)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<1597,1617,59>",(ctypes.int32_t.array)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1597,1611,59>",(ctypes.int32_t)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1597,1603,59>",(ctypes)); Inst36++; } } catch(e) {}
  })();

  "length of the array [2, \"foo\"] does not match to the length of the type ctypes.int32_t.array(1) (expected 1, got 2)";

  (() => {
    ctypes.int32_t.array(2)().value = [2, "foo"];
try { if (Inst37 <= 1000 && typeof (ctypes.int32_t.array(2)().value) != "undefined") {_RecordType("<1791,1822,65>",(ctypes.int32_t.array(2)().value)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (ctypes.int32_t.array) != "undefined") {_RecordType("<1791,1811,65>",(ctypes.int32_t.array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1791,1805,65>",(ctypes.int32_t)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1791,1797,65>",(ctypes)); Inst40++; } } catch(e) {}
  })();

  "can't convert the string \"foo\" to element 1 of the type ctypes.int32_t.array(2)";
}

try { if (Inst41 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1947,1953,71>",(ctypes)); Inst41++; } } catch(e) {}
if (typeof ctypes === "object") {
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<1972,1976,72>",(test)); Inst42++; } } catch(e) {}
  test();
}

