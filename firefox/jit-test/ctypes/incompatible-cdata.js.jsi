var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  (() => {
try { if (Inst1 <= 1000 && typeof (ctypes.int32_t(0).address.call) != "undefined") {_RecordType("<33,63,3>",(ctypes.int32_t(0).address.call)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ctypes.int32_t(0).address) != "undefined") {_RecordType("<33,58,3>",(ctypes.int32_t(0).address)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<33,47,3>",(ctypes.int32_t)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<33,39,3>",(ctypes)); Inst4++; } } catch(e) {}
    ctypes.int32_t(0).address.call(1);
  })();

  "CData.prototype.address called on incompatible object, got the number 1";

  (() => {
try { if (Inst5 <= 1000 && typeof (ctypes.char.array(10)("abc").readString.call) != "undefined") {_RecordType("<170,214,9>",(ctypes.char.array(10)("abc").readString.call)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ctypes.char.array(10)("abc").readString) != "undefined") {_RecordType("<170,209,9>",(ctypes.char.array(10)("abc").readString)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ctypes.char.array) != "undefined") {_RecordType("<170,187,9>",(ctypes.char.array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctypes.char) != "undefined") {_RecordType("<170,181,9>",(ctypes.char)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<170,176,9>",(ctypes)); Inst9++; } } catch(e) {}
    ctypes.char.array(10)("abc").readString.call(1);
  })();

  "CData.prototype.readString called on incompatible object, got the number 1";

  (() => {
try { if (Inst10 <= 1000 && typeof (ctypes.char.array(10)("abc").readStringReplaceMalformed.call) != "undefined") {_RecordType("<324,384,15>",(ctypes.char.array(10)("abc").readStringReplaceMalformed.call)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ctypes.char.array(10)("abc").readStringReplaceMalformed) != "undefined") {_RecordType("<324,379,15>",(ctypes.char.array(10)("abc").readStringReplaceMalformed)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ctypes.char.array) != "undefined") {_RecordType("<324,341,15>",(ctypes.char.array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ctypes.char) != "undefined") {_RecordType("<324,335,15>",(ctypes.char)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<324,330,15>",(ctypes)); Inst14++; } } catch(e) {}
    ctypes.char.array(10)("abc").readStringReplaceMalformed.call(1);
  })();

  "CData.prototype.readStringReplaceMalformed called on incompatible object, got the number 1";

  (() => {
try { if (Inst15 <= 1000 && typeof (ctypes.int32_t(0).toSource.call) != "undefined") {_RecordType("<510,541,21>",(ctypes.int32_t(0).toSource.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ctypes.int32_t(0).toSource) != "undefined") {_RecordType("<510,536,21>",(ctypes.int32_t(0).toSource)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<510,524,21>",(ctypes.int32_t)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<510,516,21>",(ctypes)); Inst18++; } } catch(e) {}
    ctypes.int32_t(0).toSource.call(1);
  })();

  "CData.prototype.toSource called on incompatible object, got the number 1";
try { if (Inst20 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<643,664,25>",(Object.getPrototypeOf)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<643,649,25>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<665,679,25>",(ctypes.int32_t)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<665,671,25>",(ctypes)); Inst23++; } } catch(e) {}
  let p = Object.getPrototypeOf(ctypes.int32_t());
try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<639,640,25>",(p)); Inst19++; } } catch(e) {}
  let o = {};
try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<690,691,26>",(o)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<700,721,27>",(Object.setPrototypeOf)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<700,706,27>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<722,723,27>",(o)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (p) != "undefined") {_RecordType("<725,726,27>",(p)); Inst28++; } } catch(e) {}
  Object.setPrototypeOf(o, p);

  (() => {
try { if (Inst29 <= 1000 && typeof (o.readString) != "undefined") {_RecordType("<745,757,30>",(o.readString)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<745,746,30>",(o)); Inst30++; } } catch(e) {}
    o.readString();
  })();

  "CData.prototype.readString called on incompatible object, got <<error converting value to string>>";

  (() => {
try { if (Inst31 <= 1000 && typeof (o.readStringReplaceMalformed) != "undefined") {_RecordType("<890,918,36>",(o.readStringReplaceMalformed)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<890,891,36>",(o)); Inst32++; } } catch(e) {}
    o.readStringReplaceMalformed();
  })();

  "CData.prototype.readStringReplaceMalformed called on incompatible object, got <<error converting value to string>>";
}

try { if (Inst33 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1065,1071,42>",(ctypes)); Inst33++; } } catch(e) {}
if (typeof ctypes === "object") {
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<1090,1094,43>",(test)); Inst34++; } } catch(e) {}
  test();
}

