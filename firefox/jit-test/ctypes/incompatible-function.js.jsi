var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  (() => {
try { if (Inst1 <= 1000 && typeof (ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call) != "undefined") {_RecordType("<33,97,3>",(ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call) != "undefined") {_RecordType("<33,92,3>",(ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ctypes.FunctionType) != "undefined") {_RecordType("<33,52,3>",(ctypes.FunctionType)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<33,39,3>",(ctypes)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ctypes.default_abi) != "undefined") {_RecordType("<53,71,3>",(ctypes.default_abi)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<53,59,3>",(ctypes)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ctypes.void_t) != "undefined") {_RecordType("<73,86,3>",(ctypes.void_t)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<73,79,3>",(ctypes)); Inst8++; } } catch(e) {}
    ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call(1);
  })();

  "Function.prototype.call called on incompatible number";

  (() => {
try { if (Inst9 <= 1000 && typeof (ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call) != "undefined") {_RecordType("<186,250,9>",(ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call) != "undefined") {_RecordType("<186,245,9>",(ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ctypes.FunctionType) != "undefined") {_RecordType("<186,205,9>",(ctypes.FunctionType)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<186,192,9>",(ctypes)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ctypes.default_abi) != "undefined") {_RecordType("<206,224,9>",(ctypes.default_abi)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<206,212,9>",(ctypes)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ctypes.void_t) != "undefined") {_RecordType("<226,239,9>",(ctypes.void_t)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<226,232,9>",(ctypes)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<251,265,9>",(ctypes.int32_t)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<251,257,9>",(ctypes)); Inst18++; } } catch(e) {}
    ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call(ctypes.int32_t(0));
  })();

  "FunctionType.prototype.call called on non-PointerType CData, got ctypes.int32_t(0)";

  (() => {
try { if (Inst19 <= 1000 && typeof (ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call) != "undefined") {_RecordType("<384,448,15>",(ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call) != "undefined") {_RecordType("<384,443,15>",(ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ctypes.FunctionType) != "undefined") {_RecordType("<384,403,15>",(ctypes.FunctionType)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<384,390,15>",(ctypes)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctypes.default_abi) != "undefined") {_RecordType("<404,422,15>",(ctypes.default_abi)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<404,410,15>",(ctypes)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (ctypes.void_t) != "undefined") {_RecordType("<424,437,15>",(ctypes.void_t)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<424,430,15>",(ctypes)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ctypes.int32_t.ptr) != "undefined") {_RecordType("<449,467,15>",(ctypes.int32_t.ptr)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<449,463,15>",(ctypes.int32_t)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<449,455,15>",(ctypes)); Inst29++; } } catch(e) {}
    ctypes.FunctionType(ctypes.default_abi, ctypes.void_t).call.call(ctypes.int32_t.ptr(0));
  })();

  "FunctionType.prototype.call called on non-FunctionType pointer, got ctypes.int32_t.ptr(ctypes.UInt64(\"0x0\"))";
}

try { if (Inst30 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<612,618,21>",(ctypes)); Inst30++; } } catch(e) {}
if (typeof ctypes === "object") {
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<637,641,22>",(test)); Inst31++; } } catch(e) {}
  test();
}

