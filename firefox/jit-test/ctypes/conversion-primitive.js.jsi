var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Type conversion error should report its type.
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<58,62,2>",(test)); Inst0++; } } catch(e) {}
function test() {
  // constructor
  (() => {
try { if (Inst1 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<99,113,5>",(ctypes.int32_t)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<99,105,5>",(ctypes)); Inst2++; } } catch(e) {}
    ctypes.int32_t("foo");
  })();

  "can't convert the string \"foo\" to the type int32_t";

  (() => {
try { if (Inst3 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<205,219,11>",(ctypes.int32_t)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<205,211,11>",(ctypes)); Inst4++; } } catch(e) {}
    ctypes.int32_t(null);
  })();

  "can't convert null to the type int32_t";

  (() => {
try { if (Inst5 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<296,310,17>",(ctypes.int32_t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<296,302,17>",(ctypes)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<311,320,17>",(undefined)); Inst7++; } } catch(e) {}
    ctypes.int32_t(undefined);
  })();

  "can't convert undefined to the type int32_t";

  (() => {
try { if (Inst8 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<397,411,23>",(ctypes.int32_t)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<397,403,23>",(ctypes)); Inst9++; } } catch(e) {}
    ctypes.int32_t({});
  })();

  "can't convert the object ({}) to the type int32_t";

  (() => {
try { if (Inst10 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<497,511,29>",(ctypes.int32_t)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<497,503,29>",(ctypes)); Inst11++; } } catch(e) {}
    ctypes.int32_t([]);
  })();

  "can't convert the array [] to the type int32_t";

  (() => {
try { if (Inst12 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<594,608,35>",(ctypes.int32_t)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<594,600,35>",(ctypes)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<613,622,35>",(Int8Array)); Inst14++; } } catch(e) {}
    ctypes.int32_t(new Int8Array([]));
  })();

  "can't convert the typed array ({}) to the type int32_t";

  (() => {
try { if (Inst15 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<714,728,41>",(ctypes.int32_t)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<714,720,41>",(ctypes)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<729,743,41>",(ctypes.int32_t)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<729,735,41>",(ctypes)); Inst18++; } } catch(e) {}
    ctypes.int32_t(ctypes.int32_t);
  })();

  "can't convert ctypes.int32_t to the type int32_t";

  (() => {
try { if (Inst19 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<825,839,47>",(ctypes.int32_t)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<825,831,47>",(ctypes)); Inst20++; } } catch(e) {}
    ctypes.int32_t("0xfffffffffffffffffffffff");
  })();

  "the string \"0xfffffffffffffffffffffff\" does not fit in the type int32_t";

try { if (Inst21 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<972,978,52>",(Symbol)); Inst21++; } } catch(e) {}
  if (typeof Symbol === "function") {
    (() => {
try { if (Inst22 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1016,1030,54>",(ctypes.int32_t)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1016,1022,54>",(ctypes)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1031,1046,54>",(Symbol.iterator)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1031,1037,54>",(Symbol)); Inst25++; } } catch(e) {}
      ctypes.int32_t(Symbol.iterator);
    })();

    "can't convert Symbol.iterator to the type int32_t";

    (() => {
try { if (Inst26 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1137,1151,60>",(ctypes.int32_t)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1137,1143,60>",(ctypes)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1152,1158,60>",(Symbol)); Inst28++; } } catch(e) {}
      ctypes.int32_t(Symbol("foo"));
    })();

    "can't convert Symbol(\"foo\") to the type int32_t";
  } // value setter


try { if (Inst30 <= 1000 && typeof (ctypes.StructType) != "undefined") {_RecordType("<1278,1295,67>",(ctypes.StructType)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1278,1284,67>",(ctypes)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1323,1337,68>",(ctypes.int32_t)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1323,1329,68>",(ctypes)); Inst33++; } } catch(e) {}
  let test_struct = ctypes.StructType("test_struct", [{
    "x": ctypes.int32_t
  }]);
try { if (Inst29 <= 1000 && typeof (test_struct) != "undefined") {_RecordType("<1264,1275,67>",(test_struct)); Inst29++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (test_struct) != "undefined") {_RecordType("<1364,1375,70>",(test_struct)); Inst35++; } } catch(e) {}
  let struct_val = test_struct();
try { if (Inst34 <= 1000 && typeof (struct_val) != "undefined") {_RecordType("<1351,1361,70>",(struct_val)); Inst34++; } } catch(e) {}

  (() => {
try { if (Inst39 <= 1000 && typeof (struct_val) != "undefined") {_RecordType("<1417,1427,73>",(struct_val)); Inst39++; } } catch(e) {}
    ctypes.bool().value = struct_val;
try { if (Inst36 <= 1000 && typeof (ctypes.bool().value) != "undefined") {_RecordType("<1395,1414,73>",(ctypes.bool().value)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ctypes.bool) != "undefined") {_RecordType("<1395,1406,73>",(ctypes.bool)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1395,1401,73>",(ctypes)); Inst38++; } } catch(e) {}
  })();

  "can't convert test_struct(0) to the type boolean";

  (() => {
try { if (Inst43 <= 1000 && typeof (struct_val) != "undefined") {_RecordType("<1534,1544,79>",(struct_val)); Inst43++; } } catch(e) {}
    ctypes.char16_t().value = struct_val;
try { if (Inst40 <= 1000 && typeof (ctypes.char16_t().value) != "undefined") {_RecordType("<1508,1531,79>",(ctypes.char16_t().value)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ctypes.char16_t) != "undefined") {_RecordType("<1508,1523,79>",(ctypes.char16_t)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1508,1514,79>",(ctypes)); Inst42++; } } catch(e) {}
  })();

  "can't convert test_struct(0) to the type char16_t";

  (() => {
try { if (Inst47 <= 1000 && typeof (struct_val) != "undefined") {_RecordType("<1650,1660,85>",(struct_val)); Inst47++; } } catch(e) {}
    ctypes.int8_t().value = struct_val;
try { if (Inst44 <= 1000 && typeof (ctypes.int8_t().value) != "undefined") {_RecordType("<1626,1647,85>",(ctypes.int8_t().value)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (ctypes.int8_t) != "undefined") {_RecordType("<1626,1639,85>",(ctypes.int8_t)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1626,1632,85>",(ctypes)); Inst46++; } } catch(e) {}
  })();

  "can't convert test_struct(0) to the type int8_t";

  (() => {
try { if (Inst51 <= 1000 && typeof (struct_val) != "undefined") {_RecordType("<1764,1774,91>",(struct_val)); Inst51++; } } catch(e) {}
    ctypes.double().value = struct_val;
try { if (Inst48 <= 1000 && typeof (ctypes.double().value) != "undefined") {_RecordType("<1740,1761,91>",(ctypes.double().value)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (ctypes.double) != "undefined") {_RecordType("<1740,1753,91>",(ctypes.double)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1740,1746,91>",(ctypes)); Inst50++; } } catch(e) {}
  })();

  "can't convert test_struct(0) to the type double";
}

try { if (Inst52 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1852,1858,97>",(ctypes)); Inst52++; } } catch(e) {}
if (typeof ctypes === "object") {
try { if (Inst53 <= 1000 && typeof (test) != "undefined") {_RecordType("<1877,1881,98>",(test)); Inst53++; } } catch(e) {}
  test();
}

