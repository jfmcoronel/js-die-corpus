var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  (() => {
try { if (Inst1 <= 1000 && typeof (ctypes.Int64(0).toString.call) != "undefined") {_RecordType("<33,62,3>",(ctypes.Int64(0).toString.call)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ctypes.Int64(0).toString) != "undefined") {_RecordType("<33,57,3>",(ctypes.Int64(0).toString)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ctypes.Int64) != "undefined") {_RecordType("<33,45,3>",(ctypes.Int64)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<33,39,3>",(ctypes)); Inst4++; } } catch(e) {}
    ctypes.Int64(0).toString.call(1);
  })();

  "Int64.prototype.toString called on incompatible object, got the number 1";

  (() => {
try { if (Inst5 <= 1000 && typeof (ctypes.Int64(0).toString.call) != "undefined") {_RecordType("<170,199,9>",(ctypes.Int64(0).toString.call)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ctypes.Int64(0).toString) != "undefined") {_RecordType("<170,194,9>",(ctypes.Int64(0).toString)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ctypes.Int64) != "undefined") {_RecordType("<170,182,9>",(ctypes.Int64)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<170,176,9>",(ctypes)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<200,214,9>",(ctypes.int32_t)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<200,206,9>",(ctypes)); Inst10++; } } catch(e) {}
    ctypes.Int64(0).toString.call(ctypes.int32_t(0));
  })();

  "Int64.prototype.toString called on non-Int64 CData";

  (() => {
try { if (Inst11 <= 1000 && typeof (ctypes.Int64(0).toSource.call) != "undefined") {_RecordType("<301,330,15>",(ctypes.Int64(0).toSource.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ctypes.Int64(0).toSource) != "undefined") {_RecordType("<301,325,15>",(ctypes.Int64(0).toSource)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ctypes.Int64) != "undefined") {_RecordType("<301,313,15>",(ctypes.Int64)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<301,307,15>",(ctypes)); Inst14++; } } catch(e) {}
    ctypes.Int64(0).toSource.call(1);
  })();

  "Int64.prototype.toSource called on incompatible object, got the number 1";

  (() => {
try { if (Inst15 <= 1000 && typeof (ctypes.Int64(0).toSource.call) != "undefined") {_RecordType("<438,467,21>",(ctypes.Int64(0).toSource.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ctypes.Int64(0).toSource) != "undefined") {_RecordType("<438,462,21>",(ctypes.Int64(0).toSource)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctypes.Int64) != "undefined") {_RecordType("<438,450,21>",(ctypes.Int64)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<438,444,21>",(ctypes)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<468,482,21>",(ctypes.int32_t)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<468,474,21>",(ctypes)); Inst20++; } } catch(e) {}
    ctypes.Int64(0).toSource.call(ctypes.int32_t(0));
  })();

  "Int64.prototype.toSource called on non-Int64 CData";

  (() => {
try { if (Inst21 <= 1000 && typeof (ctypes.UInt64(0).toString.call) != "undefined") {_RecordType("<569,599,27>",(ctypes.UInt64(0).toString.call)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ctypes.UInt64(0).toString) != "undefined") {_RecordType("<569,594,27>",(ctypes.UInt64(0).toString)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctypes.UInt64) != "undefined") {_RecordType("<569,582,27>",(ctypes.UInt64)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<569,575,27>",(ctypes)); Inst24++; } } catch(e) {}
    ctypes.UInt64(0).toString.call(1);
  })();

  "UInt64.prototype.toString called on incompatible object, got the number 1";

  (() => {
try { if (Inst25 <= 1000 && typeof (ctypes.UInt64(0).toString.call) != "undefined") {_RecordType("<708,738,33>",(ctypes.UInt64(0).toString.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ctypes.UInt64(0).toString) != "undefined") {_RecordType("<708,733,33>",(ctypes.UInt64(0).toString)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ctypes.UInt64) != "undefined") {_RecordType("<708,721,33>",(ctypes.UInt64)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<708,714,33>",(ctypes)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<739,753,33>",(ctypes.int32_t)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<739,745,33>",(ctypes)); Inst30++; } } catch(e) {}
    ctypes.UInt64(0).toString.call(ctypes.int32_t(0));
  })();

  "UInt64.prototype.toString called on non-UInt64 CData";

  (() => {
try { if (Inst31 <= 1000 && typeof (ctypes.UInt64(0).toSource.call) != "undefined") {_RecordType("<842,872,39>",(ctypes.UInt64(0).toSource.call)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ctypes.UInt64(0).toSource) != "undefined") {_RecordType("<842,867,39>",(ctypes.UInt64(0).toSource)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ctypes.UInt64) != "undefined") {_RecordType("<842,855,39>",(ctypes.UInt64)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<842,848,39>",(ctypes)); Inst34++; } } catch(e) {}
    ctypes.UInt64(0).toSource.call(1);
  })();

  "UInt64.prototype.toSource called on incompatible object, got the number 1";

  (() => {
try { if (Inst35 <= 1000 && typeof (ctypes.UInt64(0).toSource.call) != "undefined") {_RecordType("<981,1011,45>",(ctypes.UInt64(0).toSource.call)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ctypes.UInt64(0).toSource) != "undefined") {_RecordType("<981,1006,45>",(ctypes.UInt64(0).toSource)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ctypes.UInt64) != "undefined") {_RecordType("<981,994,45>",(ctypes.UInt64)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<981,987,45>",(ctypes)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ctypes.int32_t) != "undefined") {_RecordType("<1012,1026,45>",(ctypes.int32_t)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1012,1018,45>",(ctypes)); Inst40++; } } catch(e) {}
    ctypes.UInt64(0).toSource.call(ctypes.int32_t(0));
  })();

  "UInt64.prototype.toSource called on non-UInt64 CData";
}

try { if (Inst41 <= 1000 && typeof (ctypes) != "undefined") {_RecordType("<1113,1119,51>",(ctypes)); Inst41++; } } catch(e) {}
if (typeof ctypes === "object") {
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<1138,1142,52>",(test)); Inst42++; } } catch(e) {}
  test();
}

