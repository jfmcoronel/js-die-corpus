var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (check) != "undefined") {_RecordType("<9,14,1>",(check)); Inst0++; } } catch(e) {}
function check(expected, ...rest) {
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<15,23,1>",(expected)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (rest) != "undefined") {_RecordType("<28,32,1>",(rest)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (expected.toString) != "undefined") {_RecordType("<38,55,2>",(expected.toString)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<38,46,2>",(expected)); Inst4++; } } catch(e) {}
  expected.toString();
try { if (Inst5 <= 1000 && typeof (rest.toString) != "undefined") {_RecordType("<61,74,3>",(rest.toString)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (rest) != "undefined") {_RecordType("<61,65,3>",(rest)); Inst6++; } } catch(e) {}
  rest.toString();
}

try { if (Inst7 <= 1000 && typeof (check.length) != "undefined") {_RecordType("<81,93,6>",(check.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (check) != "undefined") {_RecordType("<81,86,6>",(check)); Inst8++; } } catch(e) {}
check.length;
1;
try { if (Inst9 <= 1000 && typeof (check) != "undefined") {_RecordType("<98,103,8>",(check)); Inst9++; } } catch(e) {}
check([]);
try { if (Inst10 <= 1000 && typeof (check) != "undefined") {_RecordType("<109,114,9>",(check)); Inst10++; } } catch(e) {}
check(['a', 'b'], 'a', 'b');
try { if (Inst11 <= 1000 && typeof (check) != "undefined") {_RecordType("<138,143,10>",(check)); Inst11++; } } catch(e) {}
check(['a', 'b', 'c', 'd'], 'a', 'b', 'c', 'd');
try { if (Inst12 <= 1000 && typeof (check.apply) != "undefined") {_RecordType("<187,198,11>",(check.apply)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (check) != "undefined") {_RecordType("<187,192,11>",(check)); Inst13++; } } catch(e) {}
check.apply(null, [['a', 'b'], 'a', 'b']);
try { if (Inst14 <= 1000 && typeof (check.call) != "undefined") {_RecordType("<230,240,12>",(check.call)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (check) != "undefined") {_RecordType("<230,235,12>",(check)); Inst15++; } } catch(e) {}
check.call(null, ['a', 'b'], 'a', 'b');
try { if (Inst17 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<278,287,13>",(newGlobal)); Inst17++; } } catch(e) {}
var g = newGlobal();
try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<274,275,13>",(g)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<291,297,14>",(g.eval)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<291,292,14>",(g)); Inst19++; } } catch(e) {}
g.eval("function f(...rest) { return rest; }");
try { if (Inst21 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<347,350,15>",(g.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<347,348,15>",(g)); Inst22++; } } catch(e) {}
var a = g.f(1, 2, 3);
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<343,344,15>",(a)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<361,362,16>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (g.Array) != "undefined") {_RecordType("<374,381,16>",(g.Array)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<374,375,16>",(g)); Inst25++; } } catch(e) {}
a instanceof g.Array;
true;

