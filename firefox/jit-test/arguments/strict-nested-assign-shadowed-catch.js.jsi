var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var obj = {};
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<116,119,5>",(obj)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (strictNestedAssignShadowCatch) != "undefined") {_RecordType("<136,165,7>",(strictNestedAssignShadowCatch)); Inst1++; } } catch(e) {}
function strictNestedAssignShadowCatch(p) {
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<166,167,7>",(p)); Inst2++; } } catch(e) {}
  "use strict";

try { if (Inst3 <= 1000 && typeof (inner) != "undefined") {_RecordType("<199,204,10>",(inner)); Inst3++; } } catch(e) {}
  function inner() {
try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<240,241,13>",(p)); Inst4++; } } catch(e) {}
    try {
      ;
    } catch (p) {
try { if (Inst6 <= 1000 && typeof (innermost) != "undefined") {_RecordType("<268,277,14>",(innermost)); Inst6++; } } catch(e) {}
      var f = function innermost() {
        p = 1776;
try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<290,291,15>",(p)); Inst7++; } } catch(e) {}
        return 12;
      };
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<255,256,14>",(f)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<335,336,19>",(f)); Inst8++; } } catch(e) {}
      f();
    }
  }

try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<360,369,23>",(arguments)); Inst9++; } } catch(e) {}
  return arguments;
}

var a1, a2, a3, a4;
try { if (Inst10 <= 1000 && typeof (a1) != "undefined") {_RecordType("<378,380,26>",(a1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a2) != "undefined") {_RecordType("<382,384,26>",(a2)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a3) != "undefined") {_RecordType("<386,388,26>",(a3)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a4) != "undefined") {_RecordType("<390,392,26>",(a4)); Inst13++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<404,405,28>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<411,412,28>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<418,419,28>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (strictNestedAssignShadowCatch) != "undefined") {_RecordType("<432,461,29>",(strictNestedAssignShadowCatch)); Inst18++; } } catch(e) {}
  a1 = strictNestedAssignShadowCatch();
try { if (Inst17 <= 1000 && typeof (a1) != "undefined") {_RecordType("<427,429,29>",(a1)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (strictNestedAssignShadowCatch) != "undefined") {_RecordType("<472,501,30>",(strictNestedAssignShadowCatch)); Inst20++; } } catch(e) {}
  a2 = strictNestedAssignShadowCatch(99);
try { if (Inst19 <= 1000 && typeof (a2) != "undefined") {_RecordType("<467,469,30>",(a2)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (strictNestedAssignShadowCatch) != "undefined") {_RecordType("<514,543,31>",(strictNestedAssignShadowCatch)); Inst22++; } } catch(e) {}
  a3 = strictNestedAssignShadowCatch("");
try { if (Inst21 <= 1000 && typeof (a3) != "undefined") {_RecordType("<509,511,31>",(a3)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (strictNestedAssignShadowCatch) != "undefined") {_RecordType("<556,585,32>",(strictNestedAssignShadowCatch)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<586,589,32>",(obj)); Inst25++; } } catch(e) {}
  a4 = strictNestedAssignShadowCatch(obj);
try { if (Inst23 <= 1000 && typeof (a4) != "undefined") {_RecordType("<551,553,32>",(a4)); Inst23++; } } catch(e) {}
}

try { if (Inst26 <= 1000 && typeof (arraysEqual) != "undefined") {_RecordType("<595,606,35>",(arraysEqual)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a1) != "undefined") {_RecordType("<607,609,35>",(a1)); Inst27++; } } catch(e) {}
arraysEqual(a1, []);
true;
try { if (Inst28 <= 1000 && typeof (arraysEqual) != "undefined") {_RecordType("<622,633,37>",(arraysEqual)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a2) != "undefined") {_RecordType("<634,636,37>",(a2)); Inst29++; } } catch(e) {}
arraysEqual(a2, [99]);
true;
try { if (Inst30 <= 1000 && typeof (arraysEqual) != "undefined") {_RecordType("<651,662,39>",(arraysEqual)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a3) != "undefined") {_RecordType("<663,665,39>",(a3)); Inst31++; } } catch(e) {}
arraysEqual(a3, [""]);
true;
try { if (Inst32 <= 1000 && typeof (arraysEqual) != "undefined") {_RecordType("<680,691,41>",(arraysEqual)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a4) != "undefined") {_RecordType("<692,694,41>",(a4)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<697,700,41>",(obj)); Inst34++; } } catch(e) {}
arraysEqual(a4, [obj]);
true;

