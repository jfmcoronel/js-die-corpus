var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = 'g,g,g,g,f,';
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (test) != "undefined") {_RecordType("<48,52,4>",(test)); Inst2++; } } catch(e) {}
function test() {
try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<74,83,5>",(arguments)); Inst4++; } } catch(e) {}
  var testargs = arguments;
try { if (Inst3 <= 1000 && typeof (testargs) != "undefined") {_RecordType("<63,71,5>",(testargs)); Inst3++; } } catch(e) {}

  var f = function (name, which) {
try { if (Inst6 <= 1000 && typeof (name) != "undefined") {_RecordType("<106,110,7>",(name)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (which) != "undefined") {_RecordType("<112,117,7>",(which)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (testargs) != "undefined") {_RecordType("<137,145,8>",(testargs)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<147,156,8>",(arguments)); Inst10++; } } catch(e) {}
    var args = [testargs, arguments];
try { if (Inst8 <= 1000 && typeof (args) != "undefined") {_RecordType("<129,133,8>",(args)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (args[which][0]) != "undefined") {_RecordType("<170,184,9>",(args[which][0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (args[which]) != "undefined") {_RecordType("<170,181,9>",(args[which])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (args) != "undefined") {_RecordType("<170,174,9>",(args)); Inst13++; } } catch(e) {}
    return args[which][0];
  };
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<92,93,7>",(f)); Inst5++; } } catch(e) {}

  var arr = [0, 0, 0, 0, 1];
try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<198,201,12>",(arr)); Inst14++; } } catch(e) {}

  for (var i = 0; i < arr.length; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<233,234,14>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<240,241,14>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<244,254,14>",(arr.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<244,247,14>",(arr)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<256,257,14>",(i)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<276,277,15>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<283,289,15>",(arr[i])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<283,286,15>",(arr)); Inst24++; } } catch(e) {}
    arr[i] = f("f", arr[i]);
try { if (Inst20 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<267,273,15>",(arr[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<267,270,15>",(arr)); Inst21++; } } catch(e) {}
  }

try { if (Inst25 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<299,313,18>",(appendToActual)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arr) != "undefined") {_RecordType("<314,317,18>",(arr)); Inst26++; } } catch(e) {}
  appendToActual(arr);
}

try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<323,327,21>",(test)); Inst27++; } } catch(e) {}
test('g');
try { if (Inst28 <= 1000 && typeof (actual) != "undefined") {_RecordType("<334,340,22>",(actual)); Inst28++; } } catch(e) {}
actual;
try { if (Inst29 <= 1000 && typeof (expected) != "undefined") {_RecordType("<342,350,23>",(expected)); Inst29++; } } catch(e) {}
expected;

