var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (t) != "undefined") {_RecordType("<9,10,1>",(t)); Inst0++; } } catch(e) {}
function t() {
try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<25,34,2>",(arguments)); Inst2++; } } catch(e) {}
  var a = arguments;
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<21,22,2>",(a)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<38,59,3>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<38,44,3>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<60,61,3>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<63,78,3>",(Symbol.iterator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<63,69,3>",(Symbol)); Inst7++; } } catch(e) {}
  Object.defineProperty(a, Symbol.iterator, {});

  for (var i = 0; i < 5; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<97,98,5>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<104,105,5>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<111,112,5>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (a[Symbol.iterator]) != "undefined") {_RecordType("<122,140,6>",(a[Symbol.iterator])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<122,123,6>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<124,139,6>",(Symbol.iterator)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<124,130,6>",(Symbol)); Inst14++; } } catch(e) {}
    a[Symbol.iterator];
try { if (Inst15 <= 1000 && typeof (Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<146,178,7>",(Array.prototype[Symbol.iterator])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<146,161,7>",(Array.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<146,151,7>",(Array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<162,177,7>",(Symbol.iterator)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<162,168,7>",(Symbol)); Inst19++; } } catch(e) {}
    Array.prototype[Symbol.iterator];
  }

try { if (Inst21 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<198,229,10>",(Object.getOwnPropertyDescriptor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<198,204,10>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<230,231,10>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<233,248,10>",(Symbol.iterator)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<233,239,10>",(Symbol)); Inst25++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(a, Symbol.iterator);
try { if (Inst20 <= 1000 && typeof (desc) != "undefined") {_RecordType("<191,195,10>",(desc)); Inst20++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (desc.value) != "undefined") {_RecordType("<253,263,11>",(desc.value)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (desc) != "undefined") {_RecordType("<253,257,11>",(desc)); Inst27++; } } catch(e) {}
  desc.value;
try { if (Inst28 <= 1000 && typeof (Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<267,299,12>",(Array.prototype[Symbol.iterator])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<267,282,12>",(Array.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Array) != "undefined") {_RecordType("<267,272,12>",(Array)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<283,298,12>",(Symbol.iterator)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<283,289,12>",(Symbol)); Inst32++; } } catch(e) {}
  Array.prototype[Symbol.iterator];
try { if (Inst33 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<303,316,13>",(desc.writable)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (desc) != "undefined") {_RecordType("<303,307,13>",(desc)); Inst34++; } } catch(e) {}
  desc.writable;
  true;
try { if (Inst35 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<328,343,15>",(desc.enumerable)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (desc) != "undefined") {_RecordType("<328,332,15>",(desc)); Inst36++; } } catch(e) {}
  desc.enumerable;
  false;
try { if (Inst37 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<356,373,17>",(desc.configurable)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (desc) != "undefined") {_RecordType("<356,360,17>",(desc)); Inst38++; } } catch(e) {}
  desc.configurable;
  true;
}

try { if (Inst39 <= 1000 && typeof (t) != "undefined") {_RecordType("<386,387,21>",(t)); Inst39++; } } catch(e) {}
t();

