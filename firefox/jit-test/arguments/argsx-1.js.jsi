var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = "function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},3,1,2,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,[object Object],a,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,function f() {\n  var a = arguments;\n  \n  for (var i = 0; i < 10; ++i) {\n    appendToActual(a.callee);\n    appendToActual(a.length);\n    appendToActual(a[0]);\n    appendToActual(a[1]);\n  }\n},2,abc,def,"; // args object created by interpreter
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<6406,6407,4>",(f)); Inst2++; } } catch(e) {}
function f() {
try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<6422,6431,5>",(arguments)); Inst4++; } } catch(e) {}
  var a = arguments;
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<6418,6419,5>",(a)); Inst3++; } } catch(e) {}

  for (var i = 0; i < 10; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<6445,6446,7>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<6452,6453,7>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<6462,6463,7>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<6471,6485,8>",(appendToActual)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a.callee) != "undefined") {_RecordType("<6486,6494,8>",(a.callee)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<6486,6487,8>",(a)); Inst10++; } } catch(e) {}
    appendToActual(a.callee);
try { if (Inst11 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<6501,6515,9>",(appendToActual)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<6516,6524,9>",(a.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<6516,6517,9>",(a)); Inst13++; } } catch(e) {}
    appendToActual(a.length);
try { if (Inst14 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<6531,6545,10>",(appendToActual)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<6546,6550,10>",(a[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<6546,6547,10>",(a)); Inst16++; } } catch(e) {}
    appendToActual(a[0]);
try { if (Inst17 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<6557,6571,11>",(appendToActual)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<6572,6576,11>",(a[1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<6572,6573,11>",(a)); Inst19++; } } catch(e) {}
    appendToActual(a[1]);
  }
}

try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<6586,6587,15>",(f)); Inst20++; } } catch(e) {}
f(1, 2, 3);
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<6598,6599,16>",(f)); Inst21++; } } catch(e) {}
f({}, 'a');
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<6610,6611,17>",(f)); Inst22++; } } catch(e) {}
f('abc', 'def');
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<6627,6633,18>",(actual)); Inst23++; } } catch(e) {}
actual;
try { if (Inst24 <= 1000 && typeof (expected) != "undefined") {_RecordType("<6635,6643,19>",(expected)); Inst24++; } } catch(e) {}
expected;

