var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// An unmapped arguments object is created for strict functions or functions
// with default/rest/destructuring args.
try { if (Inst0 <= 1000 && typeof (testDefaults) != "undefined") {_RecordType("<127,139,3>",(testDefaults)); Inst0++; } } catch(e) {}
function testDefaults(a, b = 3) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<140,141,3>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<143,144,3>",(b)); Inst2++; } } catch(e) {}
  a = 3;
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<154,155,4>",(a)); Inst3++; } } catch(e) {}
  b = 4;
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<163,164,5>",(b)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<172,188,6>",(arguments.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<172,181,6>",(arguments)); Inst6++; } } catch(e) {}
  arguments.length;
  1;
try { if (Inst7 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<197,209,8>",(arguments[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<197,206,8>",(arguments)); Inst8++; } } catch(e) {}
  arguments[0];
  1;
try { if (Inst9 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<218,230,10>",(arguments[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<218,227,10>",(arguments)); Inst10++; } } catch(e) {}
  arguments[1];
try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<234,243,11>",(undefined)); Inst11++; } } catch(e) {}
  undefined;
  arguments[0] = 5;
try { if (Inst12 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<247,259,12>",(arguments[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<247,256,12>",(arguments)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<267,268,13>",(a)); Inst14++; } } catch(e) {}
  a;
  3;

}

try { if (Inst15 <= 1000 && typeof (testDefaults) != "undefined") {_RecordType("<279,291,18>",(testDefaults)); Inst15++; } } catch(e) {}
testDefaults(1);

try { if (Inst16 <= 1000 && typeof (testRest) != "undefined") {_RecordType("<306,314,20>",(testRest)); Inst16++; } } catch(e) {}
function testRest(a, ...rest) {
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<315,316,20>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (rest) != "undefined") {_RecordType("<321,325,20>",(rest)); Inst18++; } } catch(e) {}
  a = 3;
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<331,332,21>",(a)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<340,356,22>",(arguments.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<340,349,22>",(arguments)); Inst21++; } } catch(e) {}
  arguments.length;
  3;
try { if (Inst22 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<365,377,24>",(arguments[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<365,374,24>",(arguments)); Inst23++; } } catch(e) {}
  arguments[0];
  1;
try { if (Inst24 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<386,398,26>",(arguments[1])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<386,395,26>",(arguments)); Inst25++; } } catch(e) {}
  arguments[1];
  2;
  arguments[0] = 5;
try { if (Inst26 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<407,419,28>",(arguments[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<407,416,28>",(arguments)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<427,428,29>",(a)); Inst28++; } } catch(e) {}
  a;
  3;
  arguments[1] = 6;
try { if (Inst29 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<437,449,31>",(arguments[1])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<437,446,31>",(arguments)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<457,469,32>",(arguments[1])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<457,466,32>",(arguments)); Inst32++; } } catch(e) {}
  arguments[1];
  6;
try { if (Inst33 <= 1000 && typeof (rest.toString) != "undefined") {_RecordType("<478,491,34>",(rest.toString)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (rest) != "undefined") {_RecordType("<478,482,34>",(rest)); Inst34++; } } catch(e) {}
  rest.toString();
  "2,3";

}

try { if (Inst35 <= 1000 && typeof (testRest) != "undefined") {_RecordType("<508,516,39>",(testRest)); Inst35++; } } catch(e) {}
testRest(1, 2, 3);

try { if (Inst36 <= 1000 && typeof (testDestructuring) != "undefined") {_RecordType("<537,554,41>",(testDestructuring)); Inst36++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<562,565,42>",(foo)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (bar) != "undefined") {_RecordType("<569,572,43>",(bar)); Inst39++; } } catch(e) {}
function testDestructuring(a, {
  foo,
  bar
}, b) {
try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<555,556,41>",(a)); Inst37++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<576,577,44>",(b)); Inst40++; } } catch(e) {}
  a = 3;
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<583,584,45>",(a)); Inst41++; } } catch(e) {}
  bar = 4;
try { if (Inst42 <= 1000 && typeof (bar) != "undefined") {_RecordType("<592,595,46>",(bar)); Inst42++; } } catch(e) {}
  b = 1;
try { if (Inst43 <= 1000 && typeof (b) != "undefined") {_RecordType("<603,604,47>",(b)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<612,628,48>",(arguments.length)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<612,621,48>",(arguments)); Inst45++; } } catch(e) {}
  arguments.length;
  3;
try { if (Inst46 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<637,649,50>",(arguments[0])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<637,646,50>",(arguments)); Inst47++; } } catch(e) {}
  arguments[0];
  1;
try { if (Inst48 <= 1000 && typeof (arguments[1].bar) != "undefined") {_RecordType("<658,674,52>",(arguments[1].bar)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<658,670,52>",(arguments[1])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<658,667,52>",(arguments)); Inst50++; } } catch(e) {}
  arguments[1].bar;
  2;
try { if (Inst51 <= 1000 && typeof (arguments[2]) != "undefined") {_RecordType("<683,695,54>",(arguments[2])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<683,692,54>",(arguments)); Inst52++; } } catch(e) {}
  arguments[2];
  9;

}

try { if (Inst53 <= 1000 && typeof (testDestructuring) != "undefined") {_RecordType("<706,723,59>",(testDestructuring)); Inst53++; } } catch(e) {}
testDestructuring(1, {
  foo: 1,
  bar: 2
}, 9);

try { if (Inst54 <= 1000 && typeof (testStrict) != "undefined") {_RecordType("<765,775,64>",(testStrict)); Inst54++; } } catch(e) {}
function testStrict(a) {
try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<776,777,64>",(a)); Inst55++; } } catch(e) {}
  "use strict";

  a = 3;
try { if (Inst56 <= 1000 && typeof (a) != "undefined") {_RecordType("<800,801,67>",(a)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<809,821,68>",(arguments[0])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<809,818,68>",(arguments)); Inst58++; } } catch(e) {}
  arguments[0];
  1;
  arguments[0] = 8;
try { if (Inst59 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<830,842,70>",(arguments[0])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<830,839,70>",(arguments)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (a) != "undefined") {_RecordType("<850,851,71>",(a)); Inst61++; } } catch(e) {}
  a;
  3;

}

try { if (Inst62 <= 1000 && typeof (testStrict) != "undefined") {_RecordType("<862,872,76>",(testStrict)); Inst62++; } } catch(e) {}
testStrict(1, 2);

try { if (Inst63 <= 1000 && typeof (testMapped) != "undefined") {_RecordType("<890,900,78>",(testMapped)); Inst63++; } } catch(e) {}
function testMapped(a) {
try { if (Inst64 <= 1000 && typeof (a) != "undefined") {_RecordType("<901,902,78>",(a)); Inst64++; } } catch(e) {}
  a = 3;
try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<908,909,79>",(a)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<917,929,80>",(arguments[0])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<917,926,80>",(arguments)); Inst67++; } } catch(e) {}
  arguments[0];
  3;
  arguments[0] = 5;
try { if (Inst68 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<938,950,82>",(arguments[0])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<938,947,82>",(arguments)); Inst69++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (a) != "undefined") {_RecordType("<958,959,83>",(a)); Inst70++; } } catch(e) {}
  a;
  5;
try { if (Inst71 <= 1000 && typeof (arguments.callee) != "undefined") {_RecordType("<968,984,85>",(arguments.callee)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<968,977,85>",(arguments)); Inst72++; } } catch(e) {}
  arguments.callee;
try { if (Inst73 <= 1000 && typeof (testMapped) != "undefined") {_RecordType("<988,998,86>",(testMapped)); Inst73++; } } catch(e) {}
  testMapped();
}

try { if (Inst74 <= 1000 && typeof (testMapped) != "undefined") {_RecordType("<1005,1015,89>",(testMapped)); Inst74++; } } catch(e) {}
testMapped(1);

