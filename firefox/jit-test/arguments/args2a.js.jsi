var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = 'g,g,g,g,g,';
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (g) != "undefined") {_RecordType("<48,49,4>",(g)); Inst2++; } } catch(e) {}
function g() {
try { if (Inst3 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<56,70,5>",(appendToActual)); Inst3++; } } catch(e) {}
  appendToActual('g');
}

try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<89,90,8>",(f)); Inst4++; } } catch(e) {}
function f() {
try { if (Inst5 <= 1000 && typeof (g.apply) != "undefined") {_RecordType("<97,104,9>",(g.apply)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<97,98,9>",(g)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<111,120,9>",(arguments)); Inst7++; } } catch(e) {}
  g.apply(this, arguments);
}

for (var i = 0; i < 5; ++i) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<135,136,12>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<142,143,12>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,12>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<158,159,13>",(f)); Inst11++; } } catch(e) {}
  f();
}

try { if (Inst12 <= 1000 && typeof (actual) != "undefined") {_RecordType("<166,172,16>",(actual)); Inst12++; } } catch(e) {}
actual;
try { if (Inst13 <= 1000 && typeof (expected) != "undefined") {_RecordType("<174,182,17>",(expected)); Inst13++; } } catch(e) {}
expected;

