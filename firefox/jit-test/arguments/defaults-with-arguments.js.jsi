var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(a = 1, b = 2, c = 3) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<11,12,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<18,19,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<25,26,1>",(c)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<43,52,2>",(arguments)); Inst4++; } } catch(e) {}
  return arguments;
}

try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<68,69,5>",(f)); Inst6++; } } catch(e) {}
var args = f();
try { if (Inst5 <= 1000 && typeof (args) != "undefined") {_RecordType("<61,65,5>",(args)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<73,84,6>",(args.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (args) != "undefined") {_RecordType("<73,77,6>",(args)); Inst8++; } } catch(e) {}
args.length;
0;
try { if (Inst9 <= 1000 && typeof (args) != "undefined") {_RecordType("<96,100,8>",(args)); Inst9++; } } catch(e) {}
"0" in args;
false;
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<116,117,10>",(f)); Inst11++; } } catch(e) {}
args = f(5, 6);
try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<109,113,10>",(args)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<125,136,11>",(args.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (args) != "undefined") {_RecordType("<125,129,11>",(args)); Inst13++; } } catch(e) {}
args.length;
2;
try { if (Inst14 <= 1000 && typeof (args[1]) != "undefined") {_RecordType("<141,148,13>",(args[1])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (args) != "undefined") {_RecordType("<141,145,13>",(args)); Inst15++; } } catch(e) {}
args[1];
6;
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<160,161,15>",(f)); Inst17++; } } catch(e) {}
args = f(9, 8, 7, 6, 5);
try { if (Inst16 <= 1000 && typeof (args) != "undefined") {_RecordType("<153,157,15>",(args)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<178,189,16>",(args.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<178,182,16>",(args)); Inst19++; } } catch(e) {}
args.length;
5;
try { if (Inst20 <= 1000 && typeof (args[4]) != "undefined") {_RecordType("<194,201,18>",(args[4])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (args) != "undefined") {_RecordType("<194,198,18>",(args)); Inst21++; } } catch(e) {}
args[4];
5;

