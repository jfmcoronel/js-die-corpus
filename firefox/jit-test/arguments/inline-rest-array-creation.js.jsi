var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (zero) != "undefined") {_RecordType("<9,13,1>",(zero)); Inst0++; } } catch(e) {}
function zero(...rest) {
try { if (Inst1 <= 1000 && typeof (rest) != "undefined") {_RecordType("<17,21,1>",(rest)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<27,38,2>",(rest.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (rest) != "undefined") {_RecordType("<27,31,2>",(rest)); Inst3++; } } catch(e) {}
  rest.length;
  0;
  "zero rest wrong length";
}

try { if (Inst4 <= 1000 && typeof (tzero) != "undefined") {_RecordType("<85,90,7>",(tzero)); Inst4++; } } catch(e) {}
function tzero() {
try { if (Inst5 <= 1000 && typeof (zero) != "undefined") {_RecordType("<97,101,8>",(zero)); Inst5++; } } catch(e) {}
  zero();
}

try { if (Inst6 <= 1000 && typeof (tzero) != "undefined") {_RecordType("<108,113,11>",(tzero)); Inst6++; } } catch(e) {}
tzero();
try { if (Inst7 <= 1000 && typeof (tzero) != "undefined") {_RecordType("<117,122,12>",(tzero)); Inst7++; } } catch(e) {}
tzero();
try { if (Inst8 <= 1000 && typeof (tzero) != "undefined") {_RecordType("<126,131,13>",(tzero)); Inst8++; } } catch(e) {}
tzero();

try { if (Inst9 <= 1000 && typeof (one) != "undefined") {_RecordType("<145,148,15>",(one)); Inst9++; } } catch(e) {}
function one(...rest) {
try { if (Inst10 <= 1000 && typeof (rest) != "undefined") {_RecordType("<152,156,15>",(rest)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<162,173,16>",(rest.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (rest) != "undefined") {_RecordType("<162,166,16>",(rest)); Inst12++; } } catch(e) {}
  rest.length;
  1;
  "one rest wrong length";
}

try { if (Inst13 <= 1000 && typeof (tone) != "undefined") {_RecordType("<219,223,21>",(tone)); Inst13++; } } catch(e) {}
function tone() {
try { if (Inst14 <= 1000 && typeof (one) != "undefined") {_RecordType("<230,233,22>",(one)); Inst14++; } } catch(e) {}
  one(0);
}

try { if (Inst15 <= 1000 && typeof (tone) != "undefined") {_RecordType("<241,245,25>",(tone)); Inst15++; } } catch(e) {}
tone();
try { if (Inst16 <= 1000 && typeof (tone) != "undefined") {_RecordType("<249,253,26>",(tone)); Inst16++; } } catch(e) {}
tone();
try { if (Inst17 <= 1000 && typeof (tone) != "undefined") {_RecordType("<257,261,27>",(tone)); Inst17++; } } catch(e) {}
tone();

try { if (Inst18 <= 1000 && typeof (two) != "undefined") {_RecordType("<275,278,29>",(two)); Inst18++; } } catch(e) {}
function two(...rest) {
try { if (Inst19 <= 1000 && typeof (rest) != "undefined") {_RecordType("<282,286,29>",(rest)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<292,303,30>",(rest.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (rest) != "undefined") {_RecordType("<292,296,30>",(rest)); Inst21++; } } catch(e) {}
  rest.length;
  2;
  "two rest wrong length";
}

try { if (Inst22 <= 1000 && typeof (ttwo) != "undefined") {_RecordType("<349,353,35>",(ttwo)); Inst22++; } } catch(e) {}
function ttwo() {
try { if (Inst23 <= 1000 && typeof (two) != "undefined") {_RecordType("<360,363,36>",(two)); Inst23++; } } catch(e) {}
  two(0, 1);
}

try { if (Inst24 <= 1000 && typeof (ttwo) != "undefined") {_RecordType("<374,378,39>",(ttwo)); Inst24++; } } catch(e) {}
ttwo();
try { if (Inst25 <= 1000 && typeof (ttwo) != "undefined") {_RecordType("<382,386,40>",(ttwo)); Inst25++; } } catch(e) {}
ttwo();
try { if (Inst26 <= 1000 && typeof (ttwo) != "undefined") {_RecordType("<390,394,41>",(ttwo)); Inst26++; } } catch(e) {}
ttwo();

try { if (Inst27 <= 1000 && typeof (zeroWithLeading0) != "undefined") {_RecordType("<408,424,43>",(zeroWithLeading0)); Inst27++; } } catch(e) {}
function zeroWithLeading0(x, ...rest) {
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<425,426,43>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (rest) != "undefined") {_RecordType("<431,435,43>",(rest)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<441,452,44>",(rest.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (rest) != "undefined") {_RecordType("<441,445,44>",(rest)); Inst31++; } } catch(e) {}
  rest.length;
  0;
  "zeroWithLeading0 rest wrong length";
}

try { if (Inst32 <= 1000 && typeof (tzeroWithLeading0) != "undefined") {_RecordType("<511,528,49>",(tzeroWithLeading0)); Inst32++; } } catch(e) {}
function tzeroWithLeading0() {
try { if (Inst33 <= 1000 && typeof (zeroWithLeading0) != "undefined") {_RecordType("<535,551,50>",(zeroWithLeading0)); Inst33++; } } catch(e) {}
  zeroWithLeading0();
}

try { if (Inst34 <= 1000 && typeof (tzeroWithLeading0) != "undefined") {_RecordType("<558,575,53>",(tzeroWithLeading0)); Inst34++; } } catch(e) {}
tzeroWithLeading0();
try { if (Inst35 <= 1000 && typeof (tzeroWithLeading0) != "undefined") {_RecordType("<579,596,54>",(tzeroWithLeading0)); Inst35++; } } catch(e) {}
tzeroWithLeading0();
try { if (Inst36 <= 1000 && typeof (tzeroWithLeading0) != "undefined") {_RecordType("<600,617,55>",(tzeroWithLeading0)); Inst36++; } } catch(e) {}
tzeroWithLeading0();

try { if (Inst37 <= 1000 && typeof (zeroWithLeading1) != "undefined") {_RecordType("<631,647,57>",(zeroWithLeading1)); Inst37++; } } catch(e) {}
function zeroWithLeading1(x, ...rest) {
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<648,649,57>",(x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (rest) != "undefined") {_RecordType("<654,658,57>",(rest)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<664,675,58>",(rest.length)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (rest) != "undefined") {_RecordType("<664,668,58>",(rest)); Inst41++; } } catch(e) {}
  rest.length;
  0;
  "zeroWithLeading1 rest wrong length";
}

try { if (Inst42 <= 1000 && typeof (tzeroWithLeading1) != "undefined") {_RecordType("<734,751,63>",(tzeroWithLeading1)); Inst42++; } } catch(e) {}
function tzeroWithLeading1() {
try { if (Inst43 <= 1000 && typeof (zeroWithLeading1) != "undefined") {_RecordType("<758,774,64>",(zeroWithLeading1)); Inst43++; } } catch(e) {}
  zeroWithLeading1(0);
}

try { if (Inst44 <= 1000 && typeof (tzeroWithLeading1) != "undefined") {_RecordType("<782,799,67>",(tzeroWithLeading1)); Inst44++; } } catch(e) {}
tzeroWithLeading1();
try { if (Inst45 <= 1000 && typeof (tzeroWithLeading1) != "undefined") {_RecordType("<803,820,68>",(tzeroWithLeading1)); Inst45++; } } catch(e) {}
tzeroWithLeading1();
try { if (Inst46 <= 1000 && typeof (tzeroWithLeading1) != "undefined") {_RecordType("<824,841,69>",(tzeroWithLeading1)); Inst46++; } } catch(e) {}
tzeroWithLeading1();

try { if (Inst47 <= 1000 && typeof (oneWithLeading) != "undefined") {_RecordType("<855,869,71>",(oneWithLeading)); Inst47++; } } catch(e) {}
function oneWithLeading(x, ...rest) {
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<870,871,71>",(x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (rest) != "undefined") {_RecordType("<876,880,71>",(rest)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<886,897,72>",(rest.length)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (rest) != "undefined") {_RecordType("<886,890,72>",(rest)); Inst51++; } } catch(e) {}
  rest.length;
  1;
  "oneWithLeading rest wrong length";
}

try { if (Inst52 <= 1000 && typeof (toneWithLeading) != "undefined") {_RecordType("<954,969,77>",(toneWithLeading)); Inst52++; } } catch(e) {}
function toneWithLeading() {
try { if (Inst53 <= 1000 && typeof (oneWithLeading) != "undefined") {_RecordType("<976,990,78>",(oneWithLeading)); Inst53++; } } catch(e) {}
  oneWithLeading(0, 1);
}

try { if (Inst54 <= 1000 && typeof (toneWithLeading) != "undefined") {_RecordType("<1001,1016,81>",(toneWithLeading)); Inst54++; } } catch(e) {}
toneWithLeading();
try { if (Inst55 <= 1000 && typeof (toneWithLeading) != "undefined") {_RecordType("<1020,1035,82>",(toneWithLeading)); Inst55++; } } catch(e) {}
toneWithLeading();
try { if (Inst56 <= 1000 && typeof (toneWithLeading) != "undefined") {_RecordType("<1039,1054,83>",(toneWithLeading)); Inst56++; } } catch(e) {}
toneWithLeading();

try { if (Inst57 <= 1000 && typeof (twoWithLeading) != "undefined") {_RecordType("<1068,1082,85>",(twoWithLeading)); Inst57++; } } catch(e) {}
function twoWithLeading(x, ...rest) {
try { if (Inst58 <= 1000 && typeof (x) != "undefined") {_RecordType("<1083,1084,85>",(x)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (rest) != "undefined") {_RecordType("<1089,1093,85>",(rest)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<1099,1110,86>",(rest.length)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (rest) != "undefined") {_RecordType("<1099,1103,86>",(rest)); Inst61++; } } catch(e) {}
  rest.length;
  2;
  "twoWithLeading rest wrong length";
}

try { if (Inst62 <= 1000 && typeof (ttwoWithLeading) != "undefined") {_RecordType("<1167,1182,91>",(ttwoWithLeading)); Inst62++; } } catch(e) {}
function ttwoWithLeading() {
try { if (Inst63 <= 1000 && typeof (twoWithLeading) != "undefined") {_RecordType("<1189,1203,92>",(twoWithLeading)); Inst63++; } } catch(e) {}
  twoWithLeading(0, 1, 2);
}

try { if (Inst64 <= 1000 && typeof (ttwoWithLeading) != "undefined") {_RecordType("<1217,1232,95>",(ttwoWithLeading)); Inst64++; } } catch(e) {}
ttwoWithLeading();
try { if (Inst65 <= 1000 && typeof (ttwoWithLeading) != "undefined") {_RecordType("<1236,1251,96>",(ttwoWithLeading)); Inst65++; } } catch(e) {}
ttwoWithLeading();
try { if (Inst66 <= 1000 && typeof (ttwoWithLeading) != "undefined") {_RecordType("<1255,1270,97>",(ttwoWithLeading)); Inst66++; } } catch(e) {}
ttwoWithLeading();

