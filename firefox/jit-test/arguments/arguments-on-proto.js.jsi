var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (create) != "undefined") {_RecordType("<9,15,1>",(create)); Inst0++; } } catch(e) {}
function create() {
try { if (Inst1 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<29,42,2>",(Object.create)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<29,35,2>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<43,52,2>",(arguments)); Inst3++; } } catch(e) {}
  return Object.create(arguments, {
    2: {
      value: "shadowed"
    }
  });
}

try { if (Inst4 <= 1000 && typeof (createStrict) != "undefined") {_RecordType("<113,125,9>",(createStrict)); Inst4++; } } catch(e) {}
function createStrict() {
  "use strict";

try { if (Inst5 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<156,169,12>",(Object.create)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<156,162,12>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<170,179,12>",(arguments)); Inst7++; } } catch(e) {}
  return Object.create(arguments, {
    40: {
      value: "shadowed2"
    }
  });
}

try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<242,243,19>",(f)); Inst8++; } } catch(e) {}
function f() {
try { if (Inst10 <= 1000 && typeof (createStrict) != "undefined") {_RecordType("<262,274,20>",(createStrict)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (create) != "undefined") {_RecordType("<292,298,20>",(create)); Inst11++; } } catch(e) {}
  var args = [createStrict(10, 20, 30, 40), create(1, 2, 3)];
try { if (Inst9 <= 1000 && typeof (args) != "undefined") {_RecordType("<254,258,20>",(args)); Inst9++; } } catch(e) {}
  var threshold = 0x1000 + 101;
try { if (Inst12 <= 1000 && typeof (threshold) != "undefined") {_RecordType("<316,325,21>",(threshold)); Inst12++; } } catch(e) {}

  for (var i = 0; i < threshold; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<354,355,23>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<361,362,23>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (threshold) != "undefined") {_RecordType("<365,374,23>",(threshold)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<376,377,23>",(i)); Inst16++; } } catch(e) {}
    // We switch between different arguments objects, to make
    // sure the right IC is triggered.
try { if (Inst18 <= 1000 && typeof (args[i % 2]) != "undefined") {_RecordType("<496,507,26>",(args[i % 2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<496,500,26>",(args)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<501,502,26>",(i)); Inst20++; } } catch(e) {}
    var a = args[i % 2];
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<492,493,26>",(a)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<513,521,27>",(a.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<513,514,27>",(a)); Inst22++; } } catch(e) {}
    a.length;
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,28>",(i)); Inst23++; } } catch(e) {}
    i % 2 ? 3 : 4;
try { if (Inst24 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<546,550,29>",(a[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<546,547,29>",(a)); Inst25++; } } catch(e) {}
    a[0];
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<556,557,30>",(i)); Inst26++; } } catch(e) {}
    i % 2 ? 1 : 10;
try { if (Inst27 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<576,580,31>",(a[1])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<576,577,31>",(a)); Inst28++; } } catch(e) {}
    a[1];
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<586,587,32>",(i)); Inst29++; } } catch(e) {}
    i % 2 ? 2 : 20;
try { if (Inst30 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<606,610,33>",(a[2])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<606,607,33>",(a)); Inst31++; } } catch(e) {}
    a[2];
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<616,617,34>",(i)); Inst32++; } } catch(e) {}
    i % 2 ? "shadowed" : 30;
try { if (Inst33 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<645,649,35>",(a[3])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<645,646,35>",(a)); Inst34++; } } catch(e) {}
    a[3];
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<655,656,36>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<663,672,36>",(undefined)); Inst36++; } } catch(e) {}
    i % 2 ? undefined : 40;
  }
}

try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<686,687,40>",(f)); Inst37++; } } catch(e) {}
f();

