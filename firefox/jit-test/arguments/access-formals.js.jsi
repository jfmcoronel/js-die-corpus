var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (g1) != "undefined") {_RecordType("<9,11,1>",(g1)); Inst0++; } } catch(e) {}
function g1(x, args) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<12,13,1>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (args) != "undefined") {_RecordType("<15,19,1>",(args)); Inst2++; } } catch(e) {}
  args[0] = 88;
try { if (Inst3 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<25,32,2>",(args[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (args) != "undefined") {_RecordType("<25,29,2>",(args)); Inst4++; } } catch(e) {}
} // We assume we can optimize arguments access in |f|.
//
// Then the apply-call invalidates the arguments optimization,
// and creates a real arguments object.
//
// Test that x and y fetch the values from the args object when
// that happens.


try { if (Inst5 <= 1000 && typeof (f1) != "undefined") {_RecordType("<296,298,12>",(f1)); Inst5++; } } catch(e) {}
function f1(x, y, o) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<299,300,12>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<302,303,12>",(y)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<305,306,12>",(o)); Inst8++; } } catch(e) {}
  var res = 0;
try { if (Inst9 <= 1000 && typeof (res) != "undefined") {_RecordType("<316,319,13>",(res)); Inst9++; } } catch(e) {}

  for (var i = 0; i < 50; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,15>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,15>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<352,353,15>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<370,371,16>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<374,375,16>",(y)); Inst15++; } } catch(e) {}
    res += x + y;
try { if (Inst13 <= 1000 && typeof (res) != "undefined") {_RecordType("<363,366,16>",(res)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<386,387,18>",(i)); Inst16++; } } catch(e) {}
    if (i > 10) {
try { if (Inst17 <= 1000 && typeof (o.apply) != "undefined") {_RecordType("<402,409,19>",(o.apply)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<402,403,19>",(o)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<416,425,19>",(arguments)); Inst19++; } } catch(e) {}
      o.apply(null, arguments);
    }
  }

try { if (Inst20 <= 1000 && typeof (res) != "undefined") {_RecordType("<448,451,23>",(res)); Inst20++; } } catch(e) {}
  return res;
}

try { if (Inst22 <= 1000 && typeof (g1) != "undefined") {_RecordType("<476,478,27>",(g1)); Inst22++; } } catch(e) {}
var o1 = {
  apply: g1
};
try { if (Inst21 <= 1000 && typeof (o1) != "undefined") {_RecordType("<460,462,26>",(o1)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (f1) != "undefined") {_RecordType("<482,484,29>",(f1)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o1) != "undefined") {_RecordType("<491,493,29>",(o1)); Inst24++; } } catch(e) {}
f1(3, 5, o1);
3630;
try { if (Inst25 <= 1000 && typeof (f1) != "undefined") {_RecordType("<502,504,31>",(f1)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o1) != "undefined") {_RecordType("<511,513,31>",(o1)); Inst26++; } } catch(e) {}
f1(3, 5, o1);
3630;

// In strict mode, the arguments object does not alias formals.
try { if (Inst27 <= 1000 && typeof (g2) != "undefined") {_RecordType("<596,598,35>",(g2)); Inst27++; } } catch(e) {}
function g2(x, args) {
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<599,600,35>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (args) != "undefined") {_RecordType("<602,606,35>",(args)); Inst29++; } } catch(e) {}
  args[0] = 88;
try { if (Inst30 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<612,619,36>",(args[0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (args) != "undefined") {_RecordType("<612,616,36>",(args)); Inst31++; } } catch(e) {}
}

try { if (Inst32 <= 1000 && typeof (f2) != "undefined") {_RecordType("<638,640,39>",(f2)); Inst32++; } } catch(e) {}
function f2(x, y, o) {
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<641,642,39>",(x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (y) != "undefined") {_RecordType("<644,645,39>",(y)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<647,648,39>",(o)); Inst35++; } } catch(e) {}
  "use strict";

  var res = 0;
try { if (Inst36 <= 1000 && typeof (res) != "undefined") {_RecordType("<675,678,42>",(res)); Inst36++; } } catch(e) {}

  for (var i = 0; i < 50; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<696,697,44>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<703,704,44>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<711,712,44>",(i)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<729,730,45>",(x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<733,734,45>",(y)); Inst42++; } } catch(e) {}
    res += x + y;
try { if (Inst40 <= 1000 && typeof (res) != "undefined") {_RecordType("<722,725,45>",(res)); Inst40++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<745,746,47>",(i)); Inst43++; } } catch(e) {}
    if (i > 10) {
try { if (Inst44 <= 1000 && typeof (o.apply) != "undefined") {_RecordType("<761,768,48>",(o.apply)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<761,762,48>",(o)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<775,784,48>",(arguments)); Inst46++; } } catch(e) {}
      o.apply(null, arguments);
    }
  }

try { if (Inst47 <= 1000 && typeof (res) != "undefined") {_RecordType("<807,810,52>",(res)); Inst47++; } } catch(e) {}
  return res;
}

try { if (Inst49 <= 1000 && typeof (g2) != "undefined") {_RecordType("<835,837,56>",(g2)); Inst49++; } } catch(e) {}
var o2 = {
  apply: g2
};
try { if (Inst48 <= 1000 && typeof (o2) != "undefined") {_RecordType("<819,821,55>",(o2)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (f2) != "undefined") {_RecordType("<841,843,58>",(f2)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (o2) != "undefined") {_RecordType("<850,852,58>",(o2)); Inst51++; } } catch(e) {}
f2(3, 5, o2);
400;
try { if (Inst52 <= 1000 && typeof (f2) != "undefined") {_RecordType("<860,862,60>",(f2)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (o2) != "undefined") {_RecordType("<869,871,60>",(o2)); Inst53++; } } catch(e) {}
f2(3, 5, o2);
400;

