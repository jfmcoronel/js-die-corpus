var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Check JS::ubi::Node::size results for scripts. We don't attempt to check
// exact sizes in this test (deemed to difficult and non-deterministic), just
// some sanity checks.
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<186,188,4>",(f1)); Inst0++; } } catch(e) {}
function f1() {
  return 42;
}

try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<209,214,8>",(print)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (byteSizeOfScript) != "undefined") {_RecordType("<243,259,8>",(byteSizeOfScript)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f1) != "undefined") {_RecordType("<260,262,8>",(f1)); Inst3++; } } catch(e) {}
print("byteSizeOfScript(f1) = " + byteSizeOfScript(f1));
try { if (Inst4 <= 1000 && typeof (byteSizeOfScript) != "undefined") {_RecordType("<266,282,9>",(byteSizeOfScript)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f1) != "undefined") {_RecordType("<283,285,9>",(f1)); Inst5++; } } catch(e) {}
byteSizeOfScript(f1) > 1;
true;

try { if (Inst6 <= 1000 && typeof (f2) != "undefined") {_RecordType("<308,310,12>",(f2)); Inst6++; } } catch(e) {}
function f2(n) {
try { if (Inst7 <= 1000 && typeof (n) != "undefined") {_RecordType("<311,312,12>",(n)); Inst7++; } } catch(e) {}
  var obj = {
    x: 1,
    y: 2,
    z: 3
  };
try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<322,325,13>",(obj)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,19>",(i)); Inst9++; } } catch(e) {}
  if (i % 2 == 0) {
    for (var i = 0; i < n; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<398,399,20>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<405,406,20>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (n) != "undefined") {_RecordType("<409,410,20>",(n)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<412,413,20>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,21>",(i)); Inst15++; } } catch(e) {}
      this.x += i;
try { if (Inst14 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<425,431,21>",(this.x)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<444,449,22>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<450,456,22>",(uneval)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<457,458,22>",(i)); Inst18++; } } catch(e) {}
      print(uneval(i));
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<477,478,23>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<481,482,23>",(i)); Inst22++; } } catch(e) {}
      obj[i] = i * i;
try { if (Inst19 <= 1000 && typeof (obj[i]) != "undefined") {_RecordType("<468,474,23>",(obj[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<468,471,23>",(obj)); Inst20++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<495,496,25>",(i)); Inst23++; } } catch(e) {}
      if (i > 10) {
try { if (Inst24 <= 1000 && typeof (f2) != "undefined") {_RecordType("<513,515,26>",(f2)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<516,517,26>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f1) != "undefined") {_RecordType("<520,522,26>",(f1)); Inst26++; } } catch(e) {}
        f2(i / f1());
      }
    }
  }

try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<552,553,31>",(i)); Inst27++; } } catch(e) {}
  if (i % 3 == 0) {
    for (var i = 0; i < n; i++) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<579,580,32>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<586,587,32>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<590,591,32>",(n)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<593,594,32>",(i)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<616,617,33>",(i)); Inst33++; } } catch(e) {}
      this.x *= i;
try { if (Inst32 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<606,612,33>",(this.x)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<625,630,34>",(print)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<631,637,34>",(uneval)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<638,639,34>",(i)); Inst36++; } } catch(e) {}
      print(uneval(i));
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<658,659,35>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<662,663,35>",(i)); Inst40++; } } catch(e) {}
      obj[i] = i * i;
try { if (Inst37 <= 1000 && typeof (obj[i]) != "undefined") {_RecordType("<649,655,35>",(obj[i])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj) != "undefined") {_RecordType("<649,652,35>",(obj)); Inst38++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<676,677,37>",(i)); Inst41++; } } catch(e) {}
      if (i > 10) {
try { if (Inst42 <= 1000 && typeof (f2) != "undefined") {_RecordType("<694,696,38>",(f2)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<697,698,38>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (f1) != "undefined") {_RecordType("<701,703,38>",(f1)); Inst44++; } } catch(e) {}
        f2(i / f1());
      }
    }
  }

try { if (Inst45 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<736,742,43>",(this.x)); Inst45++; } } catch(e) {}
  return this.x;
}

try { if (Inst46 <= 1000 && typeof (print) != "undefined") {_RecordType("<747,752,46>",(print)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (byteSizeOfScript) != "undefined") {_RecordType("<781,797,46>",(byteSizeOfScript)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (f2) != "undefined") {_RecordType("<798,800,46>",(f2)); Inst48++; } } catch(e) {}
print("byteSizeOfScript(f2) = " + byteSizeOfScript(f2));
try { if (Inst49 <= 1000 && typeof (byteSizeOfScript) != "undefined") {_RecordType("<804,820,47>",(byteSizeOfScript)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (f2) != "undefined") {_RecordType("<821,823,47>",(f2)); Inst50++; } } catch(e) {}
byteSizeOfScript(f2) > 1;
true;
try { if (Inst51 <= 1000 && typeof (byteSizeOfScript) != "undefined") {_RecordType("<836,852,49>",(byteSizeOfScript)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (f2) != "undefined") {_RecordType("<853,855,49>",(f2)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (byteSizeOfScript) != "undefined") {_RecordType("<859,875,49>",(byteSizeOfScript)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (f1) != "undefined") {_RecordType("<876,878,49>",(f1)); Inst54++; } } catch(e) {}
byteSizeOfScript(f2) > byteSizeOfScript(f1);
true;

