var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Constructing calls should throw if !callee->isInterpretedConstructor().
// This tests the polymorphic call path.
for (var i = 0; i < 20; i++) {
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<125,126,3>",(i)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<132,133,3>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<140,141,3>",(i)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<149,167,4>",(Function.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Function) != "undefined") {_RecordType("<149,157,4>",(Function)); Inst4++; } } catch(e) {}
  Function.prototype();
}

try { if (Inst6 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<477,495,27>",(Function.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Function) != "undefined") {_RecordType("<477,485,27>",(Function)); Inst7++; } } catch(e) {}
var funs = [function () {
  return 1;
}, function () {
  return 2;
}, function () {
  return 3;
}, function () {
  return 4;
}, function () {
  return 5;
}, function () {
  return 6;
}, function () {
  return 7;
}, function () {
  return 8;
}, function () {
  return 9;
}, function () {
  return 10;
}, Function.prototype];
try { if (Inst5 <= 1000 && typeof (funs) != "undefined") {_RecordType("<178,182,7>",(funs)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<508,509,29>",(f)); Inst8++; } } catch(e) {}
function f(callee) {
try { if (Inst9 <= 1000 && typeof (callee) != "undefined") {_RecordType("<510,516,29>",(callee)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (callee) != "undefined") {_RecordType("<526,532,30>",(callee)); Inst10++; } } catch(e) {}
  new callee();
}

try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<548,549,33>",(g)); Inst11++; } } catch(e) {}
function g() {
  var c = 0;
try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<560,561,34>",(c)); Inst12++; } } catch(e) {}

  for (var i = 0; i < 50; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<579,580,36>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<586,587,36>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<594,595,36>",(i)); Inst15++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<656,657,39>",(e)); Inst22++; } } catch(e) {}
    try {
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<617,618,38>",(f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (funs[i % funs.length]) != "undefined") {_RecordType("<619,640,38>",(funs[i % funs.length])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (funs) != "undefined") {_RecordType("<619,623,38>",(funs)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<624,625,38>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (funs.length) != "undefined") {_RecordType("<628,639,38>",(funs.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (funs) != "undefined") {_RecordType("<628,632,38>",(funs)); Inst21++; } } catch(e) {}
      f(funs[i % funs.length]);
    } catch (e) {
try { if (Inst23 <= 1000 && typeof (e.message.includes) != "undefined") {_RecordType("<667,685,40>",(e.message.includes)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<667,676,40>",(e.message)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<667,668,40>",(e)); Inst25++; } } catch(e) {}
      e.message.includes("not a constructor");
      true;
try { if (Inst26 <= 1000 && typeof (c) != "undefined") {_RecordType("<726,727,42>",(c)); Inst26++; } } catch(e) {}
      c++;
    }
  }

try { if (Inst27 <= 1000 && typeof (c) != "undefined") {_RecordType("<744,745,46>",(c)); Inst27++; } } catch(e) {}
  c;
  4;
}

try { if (Inst28 <= 1000 && typeof (g) != "undefined") {_RecordType("<755,756,50>",(g)); Inst28++; } } catch(e) {}
g();

