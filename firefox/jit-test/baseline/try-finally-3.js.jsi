var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test optimized RetSub stubs.
var count = 0;
try { if (Inst0 <= 1000 && typeof (count) != "undefined") {_RecordType("<36,41,2>",(count)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<57,58,4>",(f)); Inst1++; } } catch(e) {}
function f(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<59,60,4>",(x)); Inst2++; } } catch(e) {}
  try {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<80,81,6>",(x)); Inst3++; } } catch(e) {}
    if (x < 0) {
      throw "negative";
    }

try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<128,129,10>",(x)); Inst4++; } } catch(e) {}
    if (x & 1) {
      return "odd";
    }

try { if (Inst5 <= 1000 && typeof (count) != "undefined") {_RecordType("<168,173,14>",(count)); Inst5++; } } catch(e) {}
    count++;
  } finally {
    count += 3;
try { if (Inst6 <= 1000 && typeof (count) != "undefined") {_RecordType("<195,200,16>",(count)); Inst6++; } } catch(e) {}
  }

  return "even";
}

for (var i = 0; i < 15; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<241,242,22>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<248,249,22>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<256,257,22>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<275,276,23>",(f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<277,278,23>",(i)); Inst12++; } } catch(e) {}
  var res = f(i);
try { if (Inst10 <= 1000 && typeof (res) != "undefined") {_RecordType("<269,272,23>",(res)); Inst10++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,25>",(i)); Inst13++; } } catch(e) {}
  if (i % 2 === 0) {
try { if (Inst14 <= 1000 && typeof (res) != "undefined") {_RecordType("<307,310,26>",(res)); Inst14++; } } catch(e) {}
    res;
    "even";
  } else {
try { if (Inst15 <= 1000 && typeof (res) != "undefined") {_RecordType("<339,342,29>",(res)); Inst15++; } } catch(e) {}
    res;
    "odd";
  }
}

try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<396,397,38>",(e)); Inst17++; } } catch(e) {}
try {
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<370,371,35>",(f)); Inst16++; } } catch(e) {}
  f(-1);
  0;
  1;
} catch (e) {
try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<403,404,39>",(e)); Inst18++; } } catch(e) {}
  e;
  "negative";
}

try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<423,428,43>",(count)); Inst19++; } } catch(e) {}
count;
56;

