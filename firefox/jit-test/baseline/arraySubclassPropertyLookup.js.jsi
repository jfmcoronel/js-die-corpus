var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(v, expected) {
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<11,12,1>",(v)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<14,22,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (v.prop) != "undefined") {_RecordType("<28,34,2>",(v.prop)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (v) != "undefined") {_RecordType("<28,29,2>",(v)); Inst4++; } } catch(e) {}
  v.prop;
try { if (Inst5 <= 1000 && typeof (expected) != "undefined") {_RecordType("<38,46,3>",(expected)); Inst5++; } } catch(e) {}
  expected;
}

;

try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<78,83,8>",(Array)); Inst7++; } } catch(e) {}
class SubArrayA extends Array {}
try { if (Inst6 <= 1000 && typeof (SubArrayA) != "undefined") {_RecordType("<60,69,8>",(SubArrayA)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<112,117,10>",(Array)); Inst9++; } } catch(e) {}
class SubArrayB extends Array {}
try { if (Inst8 <= 1000 && typeof (SubArrayB) != "undefined") {_RecordType("<94,103,10>",(SubArrayB)); Inst8++; } } catch(e) {}

SubArrayA.prototype.prop = "A";
try { if (Inst10 <= 1000 && typeof (SubArrayA.prototype.prop) != "undefined") {_RecordType("<122,146,12>",(SubArrayA.prototype.prop)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (SubArrayA.prototype) != "undefined") {_RecordType("<122,141,12>",(SubArrayA.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (SubArrayA) != "undefined") {_RecordType("<122,131,12>",(SubArrayA)); Inst12++; } } catch(e) {}
SubArrayB.prototype.prop = "B";
try { if (Inst13 <= 1000 && typeof (SubArrayB.prototype.prop) != "undefined") {_RecordType("<154,178,13>",(SubArrayB.prototype.prop)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (SubArrayB.prototype) != "undefined") {_RecordType("<154,173,13>",(SubArrayB.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (SubArrayB) != "undefined") {_RecordType("<154,163,13>",(SubArrayB)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (SubArrayA) != "undefined") {_RecordType("<198,207,14>",(SubArrayA)); Inst17++; } } catch(e) {}
var a = new SubArrayA();
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<190,191,14>",(a)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (SubArrayB) != "undefined") {_RecordType("<223,232,15>",(SubArrayB)); Inst19++; } } catch(e) {}
var b = new SubArrayB();
try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<215,216,15>",(b)); Inst18++; } } catch(e) {}

for (let i = 0; i < 10; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<246,247,17>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<253,254,17>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<261,262,17>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<270,271,18>",(f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<272,273,18>",(a)); Inst24++; } } catch(e) {}
  f(a, "A");
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<283,284,19>",(f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<285,286,19>",(b)); Inst26++; } } catch(e) {}
  f(b, "B");
}

