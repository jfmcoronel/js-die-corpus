var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testSplit1) != "undefined") {_RecordType("<9,19,1>",(testSplit1)); Inst0++; } } catch(e) {}
function testSplit1() {
try { if (Inst1 <= 1000 && typeof (split) != "undefined") {_RecordType("<35,40,2>",(split)); Inst1++; } } catch(e) {}
  function split(s, sep) {
try { if (Inst2 <= 1000 && typeof (s) != "undefined") {_RecordType("<41,42,2>",(s)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (sep) != "undefined") {_RecordType("<44,47,2>",(sep)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (s.split) != "undefined") {_RecordType("<62,69,3>",(s.split)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<62,63,3>",(s)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (sep) != "undefined") {_RecordType("<70,73,3>",(sep)); Inst6++; } } catch(e) {}
    return s.split(sep);
  }

  for (var i = 0; i < 10; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<92,93,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<99,100,6>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<107,108,6>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (split) != "undefined") {_RecordType("<128,133,7>",(split)); Inst11++; } } catch(e) {}
    var arr = split("a,,b", ",");
try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<122,125,7>",(arr)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<152,162,8>",(arr.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<152,155,8>",(arr)); Inst13++; } } catch(e) {}
    arr.length;
    3;
try { if (Inst14 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<175,181,10>",(arr[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<175,178,10>",(arr)); Inst15++; } } catch(e) {}
    arr[0];
    "a";
try { if (Inst16 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<196,202,12>",(arr[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<196,199,12>",(arr)); Inst17++; } } catch(e) {}
    arr[1];
    "";
try { if (Inst18 <= 1000 && typeof (arr[2]) != "undefined") {_RecordType("<216,222,14>",(arr[2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<216,219,14>",(arr)); Inst19++; } } catch(e) {}
    arr[2];
    "b";
  } // Now pass a different separator to the stub.


try { if (Inst21 <= 1000 && typeof (split) != "undefined") {_RecordType("<298,303,19>",(split)); Inst21++; } } catch(e) {}
  var arr = split("a,,b.c", ".");
try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<292,295,19>",(arr)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<322,332,20>",(arr.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr) != "undefined") {_RecordType("<322,325,20>",(arr)); Inst23++; } } catch(e) {}
  arr.length;
  2;
try { if (Inst24 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<341,347,22>",(arr[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<341,344,22>",(arr)); Inst25++; } } catch(e) {}
  arr[0];
  "a,,b";
try { if (Inst26 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<361,367,24>",(arr[1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<361,364,24>",(arr)); Inst27++; } } catch(e) {}
  arr[1];
  "c";
}

try { if (Inst28 <= 1000 && typeof (testSplit2) != "undefined") {_RecordType("<388,398,28>",(testSplit2)); Inst28++; } } catch(e) {}
function testSplit2() {
try { if (Inst29 <= 1000 && typeof (split) != "undefined") {_RecordType("<414,419,29>",(split)); Inst29++; } } catch(e) {}
  function split(s, sep) {
try { if (Inst30 <= 1000 && typeof (s) != "undefined") {_RecordType("<420,421,29>",(s)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (sep) != "undefined") {_RecordType("<423,426,29>",(sep)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (s.split) != "undefined") {_RecordType("<441,448,30>",(s.split)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (s) != "undefined") {_RecordType("<441,442,30>",(s)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (sep) != "undefined") {_RecordType("<449,452,30>",(sep)); Inst34++; } } catch(e) {}
    return s.split(sep);
  }

  for (var i = 0; i < 10; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,33>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<478,479,33>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,33>",(i)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (split) != "undefined") {_RecordType("<507,512,34>",(split)); Inst39++; } } catch(e) {}
    var arr = split("0101", 0);
try { if (Inst38 <= 1000 && typeof (arr) != "undefined") {_RecordType("<501,504,34>",(arr)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<529,539,35>",(arr.length)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (arr) != "undefined") {_RecordType("<529,532,35>",(arr)); Inst41++; } } catch(e) {}
    arr.length;
    3;
try { if (Inst42 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<552,558,37>",(arr[0])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arr) != "undefined") {_RecordType("<552,555,37>",(arr)); Inst43++; } } catch(e) {}
    arr[0];
    "";
try { if (Inst44 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<572,578,39>",(arr[1])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (arr) != "undefined") {_RecordType("<572,575,39>",(arr)); Inst45++; } } catch(e) {}
    arr[1];
    "1";
try { if (Inst46 <= 1000 && typeof (arr[2]) != "undefined") {_RecordType("<593,599,41>",(arr[2])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (arr) != "undefined") {_RecordType("<593,596,41>",(arr)); Inst47++; } } catch(e) {}
    arr[2];
    "1";
  } // Now pass a different separator to the stub.


try { if (Inst49 <= 1000 && typeof (split) != "undefined") {_RecordType("<675,680,46>",(split)); Inst49++; } } catch(e) {}
  var arr = split("0101", 1);
try { if (Inst48 <= 1000 && typeof (arr) != "undefined") {_RecordType("<669,672,46>",(arr)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<695,705,47>",(arr.length)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (arr) != "undefined") {_RecordType("<695,698,47>",(arr)); Inst51++; } } catch(e) {}
  arr.length;
  3;
try { if (Inst52 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<714,720,49>",(arr[0])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (arr) != "undefined") {_RecordType("<714,717,49>",(arr)); Inst53++; } } catch(e) {}
  arr[0];
  "0";
try { if (Inst54 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<731,737,51>",(arr[1])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (arr) != "undefined") {_RecordType("<731,734,51>",(arr)); Inst55++; } } catch(e) {}
  arr[1];
  "0";
try { if (Inst56 <= 1000 && typeof (arr[2]) != "undefined") {_RecordType("<748,754,53>",(arr[2])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (arr) != "undefined") {_RecordType("<748,751,53>",(arr)); Inst57++; } } catch(e) {}
  arr[2];
  "";
}

try { if (Inst58 <= 1000 && typeof (testSplit3) != "undefined") {_RecordType("<774,784,57>",(testSplit3)); Inst58++; } } catch(e) {}
function testSplit3() {
  for (var i = 0; i < 100; i++) {
try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<800,801,58>",(i)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<807,808,58>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<816,817,58>",(i)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof ("a|b|c".split) != "undefined") {_RecordType("<837,850,59>",("a|b|c".split)); Inst63++; } } catch(e) {}
    var arr = "a|b|c".split("|");
try { if (Inst62 <= 1000 && typeof (arr) != "undefined") {_RecordType("<831,834,59>",(arr)); Inst62++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<861,869,60>",(arr.push)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (arr) != "undefined") {_RecordType("<861,864,60>",(arr)); Inst65++; } } catch(e) {}
    arr.push("d");
try { if (Inst66 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<880,890,61>",(arr.length)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (arr) != "undefined") {_RecordType("<880,883,61>",(arr)); Inst67++; } } catch(e) {}
    arr.length;
    4;
  }
}

try { if (Inst68 <= 1000 && typeof (testSplit1) != "undefined") {_RecordType("<906,916,66>",(testSplit1)); Inst68++; } } catch(e) {}
testSplit1();
try { if (Inst69 <= 1000 && typeof (testSplit2) != "undefined") {_RecordType("<920,930,67>",(testSplit2)); Inst69++; } } catch(e) {}
testSplit2();
try { if (Inst70 <= 1000 && typeof (testSplit3) != "undefined") {_RecordType("<934,944,68>",(testSplit3)); Inst70++; } } catch(e) {}
testSplit3();

