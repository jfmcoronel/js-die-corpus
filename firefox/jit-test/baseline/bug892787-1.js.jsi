var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Constructing calls must throw if !callee->isInterpretedConstructor().
try { if (Inst0 <= 1000 && typeof ([0].some) != "undefined") {_RecordType("<73,81,2>",([0].some)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<82,100,2>",(Function.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Function) != "undefined") {_RecordType("<82,90,2>",(Function)); Inst2++; } } catch(e) {}
[0].some(Function.prototype);

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<113,114,4>",(f)); Inst3++; } } catch(e) {}
function f() {
try { if (Inst4 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<125,143,5>",(Function.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Function) != "undefined") {_RecordType("<125,133,5>",(Function)); Inst5++; } } catch(e) {}
  new Function.prototype();
}

try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<159,160,8>",(g)); Inst6++; } } catch(e) {}
function g() {
  var count = 0;
try { if (Inst7 <= 1000 && typeof (count) != "undefined") {_RecordType("<171,176,9>",(count)); Inst7++; } } catch(e) {}

  for (var i = 0; i < 3; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,11>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<201,202,11>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,11>",(i)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<249,250,14>",(e)); Inst12++; } } catch(e) {}
    try {
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<231,232,13>",(f)); Inst11++; } } catch(e) {}
      f();
    } catch (e) {
try { if (Inst13 <= 1000 && typeof (e.message.includes) != "undefined") {_RecordType("<260,278,15>",(e.message.includes)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<260,269,15>",(e.message)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<260,261,15>",(e)); Inst15++; } } catch(e) {}
      e.message.includes("is not a constructor");
      true;
try { if (Inst16 <= 1000 && typeof (count) != "undefined") {_RecordType("<322,327,17>",(count)); Inst16++; } } catch(e) {}
      count++;
    }
  }

try { if (Inst17 <= 1000 && typeof (count) != "undefined") {_RecordType("<344,349,21>",(count)); Inst17++; } } catch(e) {}
  count;
  3;
}

try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<359,360,25>",(g)); Inst18++; } } catch(e) {}
g();

