var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| skip-if: helperThreadCount() === 0
try { if (Inst0 <= 1000 && typeof (evalWithCacheLoadOffThread) != "undefined") {_RecordType("<58,84,2>",(evalWithCacheLoadOffThread)); Inst0++; } } catch(e) {}
function evalWithCacheLoadOffThread(code, ctx) {
try { if (Inst1 <= 1000 && typeof (code) != "undefined") {_RecordType("<85,89,2>",(code)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<91,94,2>",(ctx)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<106,109,3>",(ctx)); Inst4++; } } catch(e) {}
  ctx = ctx || {};
try { if (Inst3 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<100,103,3>",(ctx)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<125,138,4>",(Object.create)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<125,131,4>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<139,142,4>",(ctx)); Inst8++; } } catch(e) {}
  ctx = Object.create(ctx, {
    fileName: {
      value: "evalWithCacheCode.js"
    },
    lineNumber: {
      value: 0
    }
  });
try { if (Inst5 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<119,122,4>",(ctx)); Inst5++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (code) != "undefined") {_RecordType("<259,263,12>",(code)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<275,281,12>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (code) != "undefined") {_RecordType("<284,288,12>",(code)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (cacheEntry) != "undefined") {_RecordType("<291,301,12>",(cacheEntry)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (code) != "undefined") {_RecordType("<302,306,12>",(code)); Inst14++; } } catch(e) {}
  code = code instanceof Object ? code : cacheEntry(code);
try { if (Inst9 <= 1000 && typeof (code) != "undefined") {_RecordType("<252,256,12>",(code)); Inst9++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (ctx.incremental) != "undefined") {_RecordType("<329,344,13>",(ctx.incremental)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<329,332,13>",(ctx)); Inst17++; } } catch(e) {}
  var incremental = ctx.incremental || false; // We create a new global ...
try { if (Inst15 <= 1000 && typeof (incremental) != "undefined") {_RecordType("<315,326,13>",(incremental)); Inst15++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<406,409,15>",(ctx)); Inst18++; } } catch(e) {}
  if (!("global" in ctx)) {
try { if (Inst21 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<431,440,16>",(newGlobal)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (incremental) != "undefined") {_RecordType("<467,478,17>",(incremental)); Inst22++; } } catch(e) {}
    ctx.global = newGlobal({
      cloneSingletons: !incremental
    });
try { if (Inst19 <= 1000 && typeof (ctx.global) != "undefined") {_RecordType("<418,428,16>",(ctx.global)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<418,421,16>",(ctx)); Inst20++; } } catch(e) {}
  }

  var ctx_save;
try { if (Inst23 <= 1000 && typeof (ctx_save) != "undefined") {_RecordType("<498,506,21>",(ctx_save)); Inst23++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (incremental) != "undefined") {_RecordType("<515,526,23>",(incremental)); Inst24++; } } catch(e) {}
  if (incremental) {
try { if (Inst26 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<545,558,24>",(Object.create)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<545,551,24>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<559,562,24>",(ctx)); Inst28++; } } catch(e) {}
    ctx_save = Object.create(ctx, {
      saveIncrementalBytecode: {
        value: true
      }
    });
try { if (Inst25 <= 1000 && typeof (ctx_save) != "undefined") {_RecordType("<534,542,24>",(ctx_save)); Inst25++; } } catch(e) {}
  } else {
try { if (Inst30 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<661,674,30>",(Object.create)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<661,667,30>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<675,678,30>",(ctx)); Inst32++; } } catch(e) {}
    ctx_save = Object.create(ctx, {
      saveBytecode: {
        value: true
      }
    });
try { if (Inst29 <= 1000 && typeof (ctx_save) != "undefined") {_RecordType("<650,658,30>",(ctx_save)); Inst29++; } } catch(e) {}
  }

  ctx.global.generation = 0;
try { if (Inst33 <= 1000 && typeof (ctx.global.generation) != "undefined") {_RecordType("<747,768,37>",(ctx.global.generation)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ctx.global) != "undefined") {_RecordType("<747,757,37>",(ctx.global)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<747,750,37>",(ctx)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<776,784,38>",(evaluate)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (code) != "undefined") {_RecordType("<785,789,38>",(code)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (ctx_save) != "undefined") {_RecordType("<791,799,38>",(ctx_save)); Inst38++; } } catch(e) {}
  evaluate(code, ctx_save);
try { if (Inst39 <= 1000 && typeof (offThreadDecodeScript) != "undefined") {_RecordType("<804,825,39>",(offThreadDecodeScript)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (code) != "undefined") {_RecordType("<826,830,39>",(code)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<832,835,39>",(ctx)); Inst41++; } } catch(e) {}
  offThreadDecodeScript(code, ctx);
}

var test; // Decode a constant.
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<845,849,42>",(test)); Inst42++; } } catch(e) {}

test = `
  1;
`;
try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<874,878,44>",(test)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (evalWithCacheLoadOffThread) != "undefined") {_RecordType("<891,917,47>",(evalWithCacheLoadOffThread)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<918,922,47>",(test)); Inst45++; } } catch(e) {}
evalWithCacheLoadOffThread(test, {});
try { if (Inst46 <= 1000 && typeof (evalWithCacheLoadOffThread) != "undefined") {_RecordType("<929,955,48>",(evalWithCacheLoadOffThread)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<956,960,48>",(test)); Inst47++; } } catch(e) {}
evalWithCacheLoadOffThread(test, {
  incremental: true
}); // Decode object literals.

test = `
  var obj = { a: 1, b: 2 };
  obj.a++;
  assertEq(obj.a, 2);
`;
try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<1016,1020,52>",(test)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (evalWithCacheLoadOffThread) != "undefined") {_RecordType("<1089,1115,57>",(evalWithCacheLoadOffThread)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (test) != "undefined") {_RecordType("<1116,1120,57>",(test)); Inst50++; } } catch(e) {}
evalWithCacheLoadOffThread(test, {});
try { if (Inst51 <= 1000 && typeof (evalWithCacheLoadOffThread) != "undefined") {_RecordType("<1127,1153,58>",(evalWithCacheLoadOffThread)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (test) != "undefined") {_RecordType("<1154,1158,58>",(test)); Inst52++; } } catch(e) {}
evalWithCacheLoadOffThread(test, {
  incremental: true
}); // Decode functions.

test = `
  function g() {
    return function f() { return 1; };
  };
  assertEq(g()(), 1);
`;
try { if (Inst53 <= 1000 && typeof (test) != "undefined") {_RecordType("<1208,1212,62>",(test)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (evalWithCacheLoadOffThread) != "undefined") {_RecordType("<1303,1329,68>",(evalWithCacheLoadOffThread)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (test) != "undefined") {_RecordType("<1330,1334,68>",(test)); Inst55++; } } catch(e) {}
evalWithCacheLoadOffThread(test, {});
try { if (Inst56 <= 1000 && typeof (evalWithCacheLoadOffThread) != "undefined") {_RecordType("<1341,1367,69>",(evalWithCacheLoadOffThread)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (test) != "undefined") {_RecordType("<1368,1372,69>",(test)); Inst57++; } } catch(e) {}
evalWithCacheLoadOffThread(test, {
  incremental: true
});

