var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// ECMA262 9.4.5.2 [[HasProperty]]
try { if (Inst0 <= 1000 && typeof (check_in) != "undefined") {_RecordType("<44,52,2>",(check_in)); Inst0++; } } catch(e) {}
function check_in(x, a) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<53,54,2>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<56,57,2>",(a)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<70,71,3>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<75,76,3>",(a)); Inst4++; } } catch(e) {}
  return x in a;
}

try { if (Inst5 <= 1000 && typeof (check_has_own) != "undefined") {_RecordType("<90,103,6>",(check_has_own)); Inst5++; } } catch(e) {}
function check_has_own(x, a) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<104,105,6>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<107,108,6>",(a)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a.hasOwnProperty) != "undefined") {_RecordType("<121,137,7>",(a.hasOwnProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<121,122,7>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<138,139,7>",(x)); Inst10++; } } catch(e) {}
  return a.hasOwnProperty(x);
} //make sure baseline gets compiled


try { if (Inst11 <= 1000 && typeof (warmup) != "undefined") {_RecordType("<190,196,11>",(warmup)); Inst11++; } } catch(e) {}
function warmup(a) {
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<197,198,11>",(a)); Inst12++; } } catch(e) {}
  for (var i = 0; i < 1001; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<213,214,12>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<220,221,12>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<230,231,12>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (check_in) != "undefined") {_RecordType("<241,249,13>",(check_in)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<250,251,13>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<253,254,13>",(a)); Inst18++; } } catch(e) {}
    check_in(i, a);
try { if (Inst19 <= 1000 && typeof (check_has_own) != "undefined") {_RecordType("<261,274,14>",(check_has_own)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<275,276,14>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<278,279,14>",(a)); Inst21++; } } catch(e) {}
    check_has_own(i, a);
  }
}

try { if (Inst22 <= 1000 && typeof (check_assertions) != "undefined") {_RecordType("<298,314,18>",(check_assertions)); Inst22++; } } catch(e) {}
function check_assertions(a) {
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<315,316,18>",(a)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (check_in) != "undefined") {_RecordType("<322,330,19>",(check_in)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<334,335,19>",(a)); Inst25++; } } catch(e) {}
  check_in(1, a);
  true;
try { if (Inst26 <= 1000 && typeof (check_in) != "undefined") {_RecordType("<348,356,21>",(check_in)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<363,364,21>",(a)); Inst27++; } } catch(e) {}
  check_in("-0", a);
  false;
try { if (Inst28 <= 1000 && typeof (check_in) != "undefined") {_RecordType("<378,386,23>",(check_in)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<392,393,23>",(a)); Inst29++; } } catch(e) {}
  check_in(-10, a);
  false;
try { if (Inst30 <= 1000 && typeof (check_in) != "undefined") {_RecordType("<407,415,25>",(check_in)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<422,423,25>",(a)); Inst31++; } } catch(e) {}
  check_in(1012, a);
  false;
try { if (Inst32 <= 1000 && typeof (check_has_own) != "undefined") {_RecordType("<437,450,27>",(check_has_own)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<454,455,27>",(a)); Inst33++; } } catch(e) {}
  check_has_own(1, a);
  true;
try { if (Inst34 <= 1000 && typeof (check_has_own) != "undefined") {_RecordType("<468,481,29>",(check_has_own)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<488,489,29>",(a)); Inst35++; } } catch(e) {}
  check_has_own("-0", a);
  false;
try { if (Inst36 <= 1000 && typeof (check_has_own) != "undefined") {_RecordType("<503,516,31>",(check_has_own)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<522,523,31>",(a)); Inst37++; } } catch(e) {}
  check_has_own(-10, a);
  false;
try { if (Inst38 <= 1000 && typeof (check_has_own) != "undefined") {_RecordType("<537,550,33>",(check_has_own)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<557,558,33>",(a)); Inst39++; } } catch(e) {}
  check_has_own(1012, a);
  false;
}

try { if (Inst40 <= 1000 && typeof (test_with_no_protochain) != "undefined") {_RecordType("<582,605,37>",(test_with_no_protochain)); Inst40++; } } catch(e) {}
function test_with_no_protochain(a) {
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<606,607,37>",(a)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (new Int32Array(1000).fill) != "undefined") {_RecordType("<621,646,38>",(new Int32Array(1000).fill)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<625,635,38>",(Int32Array)); Inst44++; } } catch(e) {}
  var a = new Int32Array(1000).fill(1);
try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<617,618,38>",(a)); Inst42++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (warmup) != "undefined") {_RecordType("<653,659,39>",(warmup)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<660,661,39>",(a)); Inst46++; } } catch(e) {}
  warmup(a);
try { if (Inst47 <= 1000 && typeof (check_assertions) != "undefined") {_RecordType("<666,682,40>",(check_assertions)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<683,684,40>",(a)); Inst48++; } } catch(e) {}
  check_assertions(a);
} // Attempting to validate against this comment:
// https://bugzilla.mozilla.org/show_bug.cgi?id=1419372#c3
//
// "Out of bounds "in" or "hasOwnProperty" should always
// return false, and not consider the prototype chain at all"


try { if (Inst49 <= 1000 && typeof (test_with_protochain) != "undefined") {_RecordType("<929,949,48>",(test_with_protochain)); Inst49++; } } catch(e) {}
function test_with_protochain(a) {
try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<950,951,48>",(a)); Inst50++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (new Int32Array(1000).fill) != "undefined") {_RecordType("<965,990,49>",(new Int32Array(1000).fill)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<969,979,49>",(Int32Array)); Inst53++; } } catch(e) {}
  var a = new Int32Array(1000).fill(1);
try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<961,962,49>",(a)); Inst51++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (warmup) != "undefined") {_RecordType("<997,1003,50>",(warmup)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<1004,1005,50>",(a)); Inst55++; } } catch(e) {}
  warmup(a); // try to force the behaviour of 9.4.5.2

  Object.prototype["-0"] = "value";
try { if (Inst56 <= 1000 && typeof (Object.prototype["-0"]) != "undefined") {_RecordType("<1052,1074,52>",(Object.prototype["-0"])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1052,1068,52>",(Object.prototype)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1052,1058,52>",(Object)); Inst58++; } } catch(e) {}
  Object.prototype[-1] = "value";
try { if (Inst59 <= 1000 && typeof (Object.prototype[-1]) != "undefined") {_RecordType("<1088,1108,53>",(Object.prototype[-1])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1088,1104,53>",(Object.prototype)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1088,1094,53>",(Object)); Inst61++; } } catch(e) {}
  Object.prototype[-10] = "value";
try { if (Inst62 <= 1000 && typeof (Object.prototype[-10]) != "undefined") {_RecordType("<1122,1143,54>",(Object.prototype[-10])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1122,1138,54>",(Object.prototype)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1122,1128,54>",(Object)); Inst64++; } } catch(e) {}
  Object.prototype[1012] = "value";
try { if (Inst65 <= 1000 && typeof (Object.prototype[1012]) != "undefined") {_RecordType("<1157,1179,55>",(Object.prototype[1012])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1157,1173,55>",(Object.prototype)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1157,1163,55>",(Object)); Inst67++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (check_assertions) != "undefined") {_RecordType("<1193,1209,56>",(check_assertions)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (a) != "undefined") {_RecordType("<1210,1211,56>",(a)); Inst69++; } } catch(e) {}
  check_assertions(a);
}

try { if (Inst70 <= 1000 && typeof (test_with_no_protochain) != "undefined") {_RecordType("<1217,1240,59>",(test_with_no_protochain)); Inst70++; } } catch(e) {}
test_with_no_protochain();
try { if (Inst71 <= 1000 && typeof (test_with_protochain) != "undefined") {_RecordType("<1244,1264,60>",(test_with_protochain)); Inst71++; } } catch(e) {}
test_with_protochain();

