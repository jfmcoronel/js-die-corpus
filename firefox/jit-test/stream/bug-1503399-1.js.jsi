var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Don't assert if the wrapper that's the value of stream.[[reader]] gets nuked.
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<89,98,2>",(newGlobal)); Inst1++; } } catch(e) {}
let g = newGlobal({
  newCompartment: true
});
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<85,86,2>",(g)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (ReadableStream) != "undefined") {_RecordType("<145,159,5>",(ReadableStream)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (start) != "undefined") {_RecordType("<164,169,6>",(start)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (controller) != "undefined") {_RecordType("<170,180,6>",(controller)); Inst5++; } } catch(e) {}
let stream = new ReadableStream({
  start(controller) {
try { if (Inst6 <= 1000 && typeof (controller.enqueue) != "undefined") {_RecordType("<188,206,7>",(controller.enqueue)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (controller) != "undefined") {_RecordType("<188,198,7>",(controller)); Inst7++; } } catch(e) {}
    controller.enqueue("ponies");
try { if (Inst8 <= 1000 && typeof (controller.close) != "undefined") {_RecordType("<222,238,8>",(controller.close)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (controller) != "undefined") {_RecordType("<222,232,8>",(controller)); Inst9++; } } catch(e) {}
    controller.close();
  }

});
try { if (Inst2 <= 1000 && typeof (stream) != "undefined") {_RecordType("<132,138,5>",(stream)); Inst2++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (stream) != "undefined") {_RecordType("<262,268,12>",(stream)); Inst12++; } } catch(e) {}
g.stream = stream;
try { if (Inst10 <= 1000 && typeof (g.stream) != "undefined") {_RecordType("<251,259,12>",(g.stream)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<251,252,12>",(g)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<270,276,13>",(g.eval)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<270,271,13>",(g)); Inst14++; } } catch(e) {}
g.eval("var reader = ReadableStream.prototype.getReader.call(stream);");

try { if (Inst15 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<351,357,15>",(g.eval)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<351,352,15>",(g)); Inst16++; } } catch(e) {}
(() => g.eval("reader.read()"))();

try { if (Inst17 <= 1000 && typeof (g.TypeError) != "undefined") {_RecordType("<380,391,17>",(g.TypeError)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<380,381,17>",(g)); Inst18++; } } catch(e) {}
g.TypeError;
"can't access dead object";
try { if (Inst19 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<421,427,19>",(g.eval)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<421,422,19>",(g)); Inst20++; } } catch(e) {}
g.eval("reader.releaseLock();");

