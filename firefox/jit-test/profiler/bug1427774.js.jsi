var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (e) != "undefined") {_RecordType("<46,47,3>",(e)); Inst1++; } } catch(e) {}
try {
try { if (Inst0 <= 1000 && typeof (enableSingleStepProfiling) != "undefined") {_RecordType("<8,33,2>",(enableSingleStepProfiling)); Inst0++; } } catch(e) {}
  enableSingleStepProfiling();
} catch (e) {
try { if (Inst2 <= 1000 && typeof (quit) != "undefined") {_RecordType("<53,57,4>",(quit)); Inst2++; } } catch(e) {}
  quit();
}

try { if (Inst3 <= 1000 && typeof (removeAdd) != "undefined") {_RecordType("<73,82,7>",(removeAdd)); Inst3++; } } catch(e) {}
function removeAdd(dbg, g) {
try { if (Inst4 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<83,86,7>",(dbg)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (g) != "undefined") {_RecordType("<88,89,7>",(g)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (dbg.removeDebuggee) != "undefined") {_RecordType("<95,113,8>",(dbg.removeDebuggee)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<95,98,8>",(dbg)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<114,115,8>",(g)); Inst8++; } } catch(e) {}
  dbg.removeDebuggee(g);
}

try { if (Inst9 <= 1000 && typeof (newGlobalDebuggerPair) != "undefined") {_RecordType("<130,151,11>",(newGlobalDebuggerPair)); Inst9++; } } catch(e) {}
function newGlobalDebuggerPair(toggleSeq) {
try { if (Inst10 <= 1000 && typeof (toggleSeq) != "undefined") {_RecordType("<152,161,11>",(toggleSeq)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<175,184,12>",(newGlobal)); Inst12++; } } catch(e) {}
  var g = newGlobal({
    newCompartment: true
  });
try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<171,172,12>",(g)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Debugger) != "undefined") {_RecordType("<234,242,15>",(Debugger)); Inst14++; } } catch(e) {}
  var dbg = new Debugger();
try { if (Inst13 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<224,227,15>",(dbg)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (dbg.addDebuggee) != "undefined") {_RecordType("<248,263,16>",(dbg.addDebuggee)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<248,251,16>",(dbg)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<264,265,16>",(g)); Inst17++; } } catch(e) {}
  dbg.addDebuggee(g);
try { if (Inst18 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<270,276,17>",(g.eval)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<270,271,17>",(g)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<291,292,17>",(f)); Inst20++; } } catch(e) {}
  g.eval("" + function f() {
    return 100;
  });
try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<329,330,20>",(g)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<332,335,20>",(dbg)); Inst22++; } } catch(e) {}
  return [g, dbg];
}

try { if (Inst23 <= 1000 && typeof (testTrap) != "undefined") {_RecordType("<350,358,23>",(testTrap)); Inst23++; } } catch(e) {}
function testTrap(toggleSeq) {
try { if (Inst24 <= 1000 && typeof (toggleSeq) != "undefined") {_RecordType("<359,368,23>",(toggleSeq)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (newGlobalDebuggerPair) != "undefined") {_RecordType("<389,410,24>",(newGlobalDebuggerPair)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (toggleSeq) != "undefined") {_RecordType("<411,420,24>",(toggleSeq)); Inst28++; } } catch(e) {}
  var [g, dbg] = newGlobalDebuggerPair(toggleSeq);
try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<379,380,24>",(g)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<382,385,24>",(dbg)); Inst26++; } } catch(e) {}

  dbg.onEnterFrame = function (f) {
try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<455,456,26>",(f)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (f.script.setBreakpoint) != "undefined") {_RecordType("<464,486,27>",(f.script.setBreakpoint)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f.script) != "undefined") {_RecordType("<464,472,27>",(f.script)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<464,465,27>",(f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<487,502,27>",(Symbol.iterator)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<487,493,27>",(Symbol)); Inst36++; } } catch(e) {}
    f.script.setBreakpoint(Symbol.iterator == this ^ this, {
      hit: function () {
try { if (Inst37 <= 1000 && typeof (toggleSeq) != "undefined") {_RecordType("<554,563,29>",(toggleSeq)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<564,567,29>",(dbg)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (g) != "undefined") {_RecordType("<569,570,29>",(g)); Inst39++; } } catch(e) {}
        toggleSeq(dbg, g);
      }
    });
  };
try { if (Inst29 <= 1000 && typeof (dbg.onEnterFrame) != "undefined") {_RecordType("<426,442,26>",(dbg.onEnterFrame)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<426,429,26>",(dbg)); Inst30++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<597,600,34>",(g.f)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (g) != "undefined") {_RecordType("<597,598,34>",(g)); Inst41++; } } catch(e) {}
  g.f();
  100;
}

try { if (Inst42 <= 1000 && typeof (testTrap) != "undefined") {_RecordType("<614,622,38>",(testTrap)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (removeAdd) != "undefined") {_RecordType("<623,632,38>",(removeAdd)); Inst43++; } } catch(e) {}
testTrap(removeAdd);

