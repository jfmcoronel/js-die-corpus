var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// AutoEntryMonitor should catch all entry points into JavaScript.
try { if (Inst0 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<76,89,2>",(cold_and_warm)); Inst0++; } } catch(e) {}
function cold_and_warm(f, params, expected) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<90,91,2>",(f)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (params) != "undefined") {_RecordType("<93,99,2>",(params)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (expected) != "undefined") {_RecordType("<101,109,2>",(expected)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<115,120,3>",(print)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<121,127,3>",(uneval)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (params) != "undefined") {_RecordType("<128,134,3>",(params)); Inst6++; } } catch(e) {}
  print(uneval(params)); // Warm up the function a bit, so the JITs will compile it, and try again.

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<220,221,5>",(f)); Inst7++; } } catch(e) {}
  if (f) {
    for (i = 0; i < 10; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<234,235,6>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<241,242,6>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<249,250,6>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<262,263,7>",(f)); Inst11++; } } catch(e) {}
      f();
    }
  }
}

try { if (Inst12 <= 1000 && typeof (entry1) != "undefined") {_RecordType("<289,295,12>",(entry1)); Inst12++; } } catch(e) {}
function entry1() {
  ;
}

try { if (Inst13 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<307,320,16>",(cold_and_warm)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (entry1) != "undefined") {_RecordType("<321,327,16>",(entry1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (entry1) != "undefined") {_RecordType("<343,349,17>",(entry1)); Inst15++; } } catch(e) {}
cold_and_warm(entry1, {
  function: entry1
}, ["entry1"]);
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<385,386,20>",(x)); Inst17++; } } catch(e) {}
var getx = {
  get x() {
    ;
  }

};
try { if (Inst16 <= 1000 && typeof (getx) != "undefined") {_RecordType("<370,374,19>",(getx)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<405,418,25>",(cold_and_warm)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object.getOwnPropertyDescriptor(getx, 'x').get) != "undefined") {_RecordType("<419,465,25>",(Object.getOwnPropertyDescriptor(getx, 'x').get)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<419,450,25>",(Object.getOwnPropertyDescriptor)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<419,425,25>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (getx) != "undefined") {_RecordType("<451,455,25>",(getx)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (getx) != "undefined") {_RecordType("<479,483,26>",(getx)); Inst23++; } } catch(e) {}
cold_and_warm(Object.getOwnPropertyDescriptor(getx, 'x').get, {
  object: getx,
  property: 'x'
}, ["get x"]);
try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<535,536,30>",(y)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<537,538,30>",(v)); Inst26++; } } catch(e) {}
var sety = {
  set y(v) {
    ;
  }

};
try { if (Inst24 <= 1000 && typeof (sety) != "undefined") {_RecordType("<520,524,29>",(sety)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<556,569,35>",(cold_and_warm)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object.getOwnPropertyDescriptor(sety, 'y').set) != "undefined") {_RecordType("<570,616,35>",(Object.getOwnPropertyDescriptor(sety, 'y').set)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<570,601,35>",(Object.getOwnPropertyDescriptor)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<570,576,35>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (sety) != "undefined") {_RecordType("<602,606,35>",(sety)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (sety) != "undefined") {_RecordType("<630,634,36>",(sety)); Inst32++; } } catch(e) {}
cold_and_warm(Object.getOwnPropertyDescriptor(sety, 'y').set, {
  object: sety,
  property: 'y',
  value: 'glerk'
}, ["set y"]);
try { if (Inst33 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<685,698,40>",(cold_and_warm)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object.prototype.toString) != "undefined") {_RecordType("<699,724,40>",(Object.prototype.toString)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<699,715,40>",(Object.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<699,705,40>",(Object)); Inst36++; } } catch(e) {}
cold_and_warm(Object.prototype.toString, {
  ToString: {}
}, []);
try { if (Inst38 <= 1000 && typeof (myToString) != "undefined") {_RecordType("<784,794,44>",(myToString)); Inst38++; } } catch(e) {}
var toS = {
  toString: function myToString() {
    return "string";
  }
};
try { if (Inst37 <= 1000 && typeof (toS) != "undefined") {_RecordType("<755,758,43>",(toS)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<827,840,48>",(cold_and_warm)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (toS.toString) != "undefined") {_RecordType("<841,853,48>",(toS.toString)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (toS) != "undefined") {_RecordType("<841,844,48>",(toS)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (toS) != "undefined") {_RecordType("<869,872,49>",(toS)); Inst42++; } } catch(e) {}
cold_and_warm(toS.toString, {
  ToString: toS
}, ["myToString"]);
try { if (Inst43 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<893,906,51>",(cold_and_warm)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<907,916,51>",(undefined)); Inst44++; } } catch(e) {}
cold_and_warm(undefined, {
  ToNumber: 5
}, []);
try { if (Inst46 <= 1000 && typeof (myValueOf) != "undefined") {_RecordType("<974,983,55>",(myValueOf)); Inst46++; } } catch(e) {}
var vOf = {
  valueOf: function myValueOf() {
    return 42;
  }
};
try { if (Inst45 <= 1000 && typeof (vOf) != "undefined") {_RecordType("<946,949,54>",(vOf)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<1010,1023,59>",(cold_and_warm)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (vOf.valueOf) != "undefined") {_RecordType("<1024,1035,59>",(vOf.valueOf)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (vOf) != "undefined") {_RecordType("<1024,1027,59>",(vOf)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (vOf) != "undefined") {_RecordType("<1051,1054,60>",(vOf)); Inst50++; } } catch(e) {}
cold_and_warm(vOf.valueOf, {
  ToNumber: vOf
}, ["myValueOf"]);
try { if (Inst52 <= 1000 && typeof (relations) != "undefined") {_RecordType("<1110,1119,63>",(relations)); Inst52++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (wallpaper) != "undefined") {_RecordType("<1168,1177,66>",(wallpaper)); Inst54++; } } catch(e) {}
var toSvOf = {
  toString: function relations() {
try { if (Inst53 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1135,1141,64>",(Object)); Inst53++; } } catch(e) {}
    return Object;
  },
  valueOf: function wallpaper() {
    return 17;
  }
};
try { if (Inst51 <= 1000 && typeof (toSvOf) != "undefined") {_RecordType("<1078,1084,62>",(toSvOf)); Inst51++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<1204,1217,70>",(cold_and_warm)); Inst55++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (toSvOf) != "undefined") {_RecordType("<1284,1290,74>",(toSvOf)); Inst60++; } } catch(e) {}
cold_and_warm(() => {
try { if (Inst56 <= 1000 && typeof (toSvOf.toString) != "undefined") {_RecordType("<1228,1243,71>",(toSvOf.toString)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (toSvOf) != "undefined") {_RecordType("<1228,1234,71>",(toSvOf)); Inst57++; } } catch(e) {}
  toSvOf.toString();
try { if (Inst58 <= 1000 && typeof (toSvOf.valueOf) != "undefined") {_RecordType("<1249,1263,72>",(toSvOf.valueOf)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (toSvOf) != "undefined") {_RecordType("<1249,1255,72>",(toSvOf)); Inst59++; } } catch(e) {}
  toSvOf.valueOf();
}, {
  ToString: toSvOf
}, ["relations", "wallpaper"]);
try { if (Inst62 <= 1000 && typeof (ettes) != "undefined") {_RecordType("<1359,1364,77>",(ettes)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (deathBy) != "undefined") {_RecordType("<1423,1430,80>",(deathBy)); Inst63++; } } catch(e) {}
var vOftoS = {
  toString: function ettes() {
    return "6-inch lengths";
  },
  valueOf: function deathBy() {
try { if (Inst64 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1446,1450,81>",(Math)); Inst64++; } } catch(e) {}
    return Math;
  }
};
try { if (Inst61 <= 1000 && typeof (vOftoS) != "undefined") {_RecordType("<1327,1333,76>",(vOftoS)); Inst61++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<1459,1472,84>",(cold_and_warm)); Inst65++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (vOftoS) != "undefined") {_RecordType("<1539,1545,88>",(vOftoS)); Inst70++; } } catch(e) {}
cold_and_warm(() => {
try { if (Inst66 <= 1000 && typeof (vOftoS.valueOf) != "undefined") {_RecordType("<1483,1497,85>",(vOftoS.valueOf)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (vOftoS) != "undefined") {_RecordType("<1483,1489,85>",(vOftoS)); Inst67++; } } catch(e) {}
  vOftoS.valueOf();
try { if (Inst68 <= 1000 && typeof (vOftoS.toString) != "undefined") {_RecordType("<1503,1518,86>",(vOftoS.toString)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (vOftoS) != "undefined") {_RecordType("<1503,1509,86>",(vOftoS)); Inst69++; } } catch(e) {}
  vOftoS.toString();
}, {
  ToNumber: vOftoS
}, ["deathBy", "ettes"]);
try { if (Inst71 <= 1000 && typeof (cold_and_warm) != "undefined") {_RecordType("<1572,1585,90>",(cold_and_warm)); Inst71++; } } catch(e) {}
cold_and_warm(() => 0, {
  eval: "Math.atan2(1,1);"
}, ["eval:entryPoint eval"]);

