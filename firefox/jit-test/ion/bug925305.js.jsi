var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<9,29,1>",(testFloat32SetElemIC)); Inst0++; } } catch(e) {}
function testFloat32SetElemIC(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<30,31,1>",(a)); Inst1++; } } catch(e) {}
  for (var i = 0; i < a.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<46,47,2>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<53,54,2>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<57,65,2>",(a.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<57,58,2>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<67,68,2>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<86,97,3>",(Math.fround)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<86,90,3>",(Math)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<98,109,3>",(Math.random)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<98,102,3>",(Math)); Inst11++; } } catch(e) {}
    var r = Math.fround(Math.random());
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<82,83,3>",(r)); Inst7++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<125,126,4>",(r)); Inst14++; } } catch(e) {}
    a[i] = r;
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<118,122,4>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<118,119,4>",(a)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<132,136,5>",(a[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<132,133,5>",(a)); Inst16++; } } catch(e) {}
    a[i];
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<142,143,6>",(r)); Inst17++; } } catch(e) {}
    r;
  }
}

try { if (Inst18 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<152,172,10>",(testFloat32SetElemIC)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<177,182,10>",(Array)); Inst19++; } } catch(e) {}
testFloat32SetElemIC(new Array(2048));
try { if (Inst20 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<191,211,11>",(testFloat32SetElemIC)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<216,221,11>",(Array)); Inst21++; } } catch(e) {}
testFloat32SetElemIC(new Array(2048));
try { if (Inst22 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<230,250,12>",(testFloat32SetElemIC)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array) != "undefined") {_RecordType("<255,260,12>",(Array)); Inst23++; } } catch(e) {}
testFloat32SetElemIC(new Array(2048));
try { if (Inst24 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<269,289,13>",(testFloat32SetElemIC)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<294,306,13>",(Float64Array)); Inst25++; } } catch(e) {}
testFloat32SetElemIC(new Float64Array(2048));

