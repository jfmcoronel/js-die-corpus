var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// getJitCompilerOptions will always return array with zeros when JIT is
// disabled. Therefore we quit now.
try { if (Inst0 <= 1000 && typeof (inJit) != "undefined") {_RecordType("<113,118,3>",(inJit)); Inst0++; } } catch(e) {}
if (inJit() == 'Baseline is disabled.') {
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<153,158,4>",(print)); Inst1++; } } catch(e) {}
  print("JIT is disabled.");
try { if (Inst2 <= 1000 && typeof (quit) != "undefined") {_RecordType("<182,186,5>",(quit)); Inst2++; } } catch(e) {}
  quit();
}

var wait = 100;
try { if (Inst3 <= 1000 && typeof (wait) != "undefined") {_RecordType("<197,201,8>",(wait)); Inst3++; } } catch(e) {}

var method_A = function () {
  for (var t = 0; t < wait; ++t) {
try { if (Inst5 <= 1000 && typeof (t) != "undefined") {_RecordType("<250,251,11>",(t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<257,258,11>",(t)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (wait) != "undefined") {_RecordType("<261,265,11>",(wait)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (t) != "undefined") {_RecordType("<269,270,11>",(t)); Inst8++; } } catch(e) {}
    ;
  }
};
try { if (Inst4 <= 1000 && typeof (method_A) != "undefined") {_RecordType("<214,222,10>",(method_A)); Inst4++; } } catch(e) {}

var method_B = function () {
  for (var t = 0; t < wait; ++t) {
try { if (Inst10 <= 1000 && typeof (t) != "undefined") {_RecordType("<328,329,17>",(t)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (t) != "undefined") {_RecordType("<335,336,17>",(t)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (wait) != "undefined") {_RecordType("<339,343,17>",(wait)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (t) != "undefined") {_RecordType("<347,348,17>",(t)); Inst13++; } } catch(e) {}
    ;
  }
};
try { if (Inst9 <= 1000 && typeof (method_B) != "undefined") {_RecordType("<292,300,16>",(method_B)); Inst9++; } } catch(e) {}

var method_C = function () {
  for (var t = 0; t < wait; ++t) {
try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<406,407,23>",(t)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (t) != "undefined") {_RecordType("<413,414,23>",(t)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (wait) != "undefined") {_RecordType("<417,421,23>",(wait)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<425,426,23>",(t)); Inst18++; } } catch(e) {}
    ;
  }
};
try { if (Inst14 <= 1000 && typeof (method_C) != "undefined") {_RecordType("<370,378,22>",(method_C)); Inst14++; } } catch(e) {}

var method_D = function () {
  for (var t = 0; t < wait; ++t) {
try { if (Inst20 <= 1000 && typeof (t) != "undefined") {_RecordType("<484,485,29>",(t)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (t) != "undefined") {_RecordType("<491,492,29>",(t)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (wait) != "undefined") {_RecordType("<495,499,29>",(wait)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (t) != "undefined") {_RecordType("<503,504,29>",(t)); Inst23++; } } catch(e) {}
    ;
  }
};
try { if (Inst19 <= 1000 && typeof (method_D) != "undefined") {_RecordType("<448,456,28>",(method_D)); Inst19++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (method_A) != "undefined") {_RecordType("<534,542,34>",(method_A)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (method_B) != "undefined") {_RecordType("<544,552,34>",(method_B)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (method_C) != "undefined") {_RecordType("<554,562,34>",(method_C)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (method_D) != "undefined") {_RecordType("<564,572,34>",(method_D)); Inst28++; } } catch(e) {}
var func = [method_A, method_B, method_C, method_D];
try { if (Inst24 <= 1000 && typeof (func) != "undefined") {_RecordType("<526,530,34>",(func)); Inst24++; } } catch(e) {}

for (var n = 0; n < 4; ++n) {
try { if (Inst29 <= 1000 && typeof (n) != "undefined") {_RecordType("<585,586,36>",(n)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<592,593,36>",(n)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (n) != "undefined") {_RecordType("<601,602,36>",(n)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<631,632,39>",(e)); Inst32++; } } catch(e) {}
  try {
    ;
  } catch (e) {
try { if (Inst33 <= 1000 && typeof (e.toString().includes) != "undefined") {_RecordType("<644,665,40>",(e.toString().includes)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<644,654,40>",(e.toString)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<644,645,40>",(e)); Inst35++; } } catch(e) {}
    if (e.toString().includes("on the stack")) {
      continue;
    }

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<718,719,44>",(e)); Inst36++; } } catch(e) {}
    throw e;
  }

  for (var i = 0; i < 1001; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<737,738,47>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<744,745,47>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<756,757,47>",(i)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (func[n]) != "undefined") {_RecordType("<765,772,48>",(func[n])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (func) != "undefined") {_RecordType("<765,769,48>",(func)); Inst41++; } } catch(e) {}
    func[n]();
  }
}

