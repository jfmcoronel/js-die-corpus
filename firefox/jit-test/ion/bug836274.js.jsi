var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (dumpArgs6) != "undefined") {_RecordType("<9,18,1>",(dumpArgs6)); Inst0++; } } catch(e) {}
function dumpArgs6(i) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<19,20,1>",(i)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<30,31,2>",(i)); Inst2++; } } catch(e) {}
  if (i == 90) {
try { if (Inst3 <= 1000 && typeof (funapply6.arguments.length) != "undefined") {_RecordType("<52,78,3>",(funapply6.arguments.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (funapply6.arguments) != "undefined") {_RecordType("<52,71,3>",(funapply6.arguments)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (funapply6) != "undefined") {_RecordType("<52,61,3>",(funapply6)); Inst5++; } } catch(e) {}
    return funapply6.arguments.length;
  }

try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<95,96,6>",(i)); Inst6++; } } catch(e) {}
  return [i];
}

try { if (Inst7 <= 1000 && typeof (funapply6) != "undefined") {_RecordType("<111,120,9>",(funapply6)); Inst7++; } } catch(e) {}
function funapply6() {
try { if (Inst8 <= 1000 && typeof (dumpArgs6.apply) != "undefined") {_RecordType("<134,149,10>",(dumpArgs6.apply)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (dumpArgs6) != "undefined") {_RecordType("<134,143,10>",(dumpArgs6)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<154,163,10>",(arguments)); Inst10++; } } catch(e) {}
  return dumpArgs6.apply({}, arguments);
}

try { if (Inst11 <= 1000 && typeof (test6) != "undefined") {_RecordType("<178,183,13>",(test6)); Inst11++; } } catch(e) {}
function test6(i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<184,185,13>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (funapply6) != "undefined") {_RecordType("<198,207,14>",(funapply6)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,14>",(i)); Inst14++; } } catch(e) {}
  return funapply6(i, 1, 2, 3);
}

try { if (Inst15 <= 1000 && typeof (test6(89)[0]) != "undefined") {_RecordType("<224,236,17>",(test6(89)[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (test6) != "undefined") {_RecordType("<224,229,17>",(test6)); Inst16++; } } catch(e) {}
test6(89)[0];
try { if (Inst17 <= 1000 && typeof (test6) != "undefined") {_RecordType("<238,243,18>",(test6)); Inst17++; } } catch(e) {}
test6(0.2);

