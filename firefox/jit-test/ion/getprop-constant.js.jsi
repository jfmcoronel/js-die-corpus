var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| error: TypeError

/* GETPROP of a known constant where the lvalue may not be an object. */
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<114,117,4>",(foo)); Inst0++; } } catch(e) {}
function foo(ox) {
try { if (Inst1 <= 1000 && typeof (ox) != "undefined") {_RecordType("<118,120,4>",(ox)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (ox) != "undefined") {_RecordType("<134,136,5>",(ox)); Inst3++; } } catch(e) {}
  var x = ox;
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<130,131,5>",(x)); Inst2++; } } catch(e) {}
  var n = 0;
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<144,145,6>",(n)); Inst4++; } } catch(e) {}

  for (var i = 0; i < 90; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,8>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,8>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<178,179,8>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x.f.g) != "undefined") {_RecordType("<194,199,9>",(x.f.g)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<194,197,9>",(x.f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<194,195,9>",(x)); Inst11++; } } catch(e) {}
    n += x.f.g;
try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<189,190,9>",(n)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<210,211,11>",(i)); Inst12++; } } catch(e) {}
    if (i >= 80) {
try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<231,240,12>",(undefined)); Inst14++; } } catch(e) {}
      x = undefined;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<227,228,12>",(x)); Inst13++; } } catch(e) {}
    }
  }

try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<255,260,16>",(print)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (n) != "undefined") {_RecordType("<261,262,16>",(n)); Inst16++; } } catch(e) {}
  print(n);
}

var n = 1;
try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<272,273,19>",(n)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<289,290,21>",(f)); Inst18++; } } catch(e) {}
function f() {
  ;
}

try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<311,312,25>",(g)); Inst19++; } } catch(e) {}
function g() {
  ;
}

g.g = 1;
try { if (Inst20 <= 1000 && typeof (g.g) != "undefined") {_RecordType("<324,327,29>",(g.g)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<324,325,29>",(g)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<354,355,31>",(g)); Inst24++; } } catch(e) {}
f.prototype = {
  f: g
};
try { if (Inst22 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<333,344,30>",(f.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<333,334,30>",(f)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<359,362,33>",(foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<367,368,33>",(f)); Inst26++; } } catch(e) {}
foo(new f());

