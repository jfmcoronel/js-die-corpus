var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (trySetProperty) != "undefined") {_RecordType("<9,23,1>",(trySetProperty)); Inst0++; } } catch(e) {}
function trySetProperty(o, p, v, strict) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<24,25,1>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<27,28,1>",(p)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<30,31,1>",(v)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (strict) != "undefined") {_RecordType("<33,39,1>",(strict)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (strictSetProperty) != "undefined") {_RecordType("<54,71,2>",(strictSetProperty)); Inst5++; } } catch(e) {}
  function strictSetProperty() {
    "use strict";

try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<106,107,5>",(v)); Inst8++; } } catch(e) {}
    o[p] = v;
try { if (Inst6 <= 1000 && typeof (o[p]) != "undefined") {_RecordType("<99,103,5>",(o[p])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<99,100,5>",(o)); Inst7++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<158,159,10>",(e)); Inst10++; } } catch(e) {}
  try {
try { if (Inst9 <= 1000 && typeof (strictSetProperty) != "undefined") {_RecordType("<126,143,9>",(strictSetProperty)); Inst9++; } } catch(e) {}
    strictSetProperty();
  } catch (e) {
    return "throw";
  }
} //var objs = [[0], [1]];


var objs = [{
  a: 0
}, {
  a: 1
}];
try { if (Inst11 <= 1000 && typeof (objs) != "undefined") {_RecordType("<220,224,16>",(objs)); Inst11++; } } catch(e) {}

for (var i = 0, sz = objs.length; i < sz; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<263,264,22>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (sz) != "undefined") {_RecordType("<270,272,22>",(sz)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (objs.length) != "undefined") {_RecordType("<275,286,22>",(objs.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (objs) != "undefined") {_RecordType("<275,279,22>",(objs)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,22>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (sz) != "undefined") {_RecordType("<292,294,22>",(sz)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<296,297,22>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (objs[i]) != "undefined") {_RecordType("<313,320,23>",(objs[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (objs) != "undefined") {_RecordType("<313,317,23>",(objs)); Inst21++; } } catch(e) {}
  var o = objs[i];
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<309,310,23>",(o)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<333,357,24>",(Object.preventExtensions)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<333,339,24>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<358,359,24>",(o)); Inst25++; } } catch(e) {}
  var o2 = Object.preventExtensions(o);
try { if (Inst22 <= 1000 && typeof (o2) != "undefined") {_RecordType("<328,330,24>",(o2)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<364,369,25>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<370,371,25>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<381,382,25>",(o)); Inst28++; } } catch(e) {}
  print(i + '  ' + o);
try { if (Inst29 <= 1000 && typeof (trySetProperty) != "undefined") {_RecordType("<387,401,26>",(trySetProperty)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<402,403,26>",(o)); Inst30++; } } catch(e) {}
  trySetProperty(o, "baz", 17, true);
  "throw";
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,28>",(i)); Inst31++; } } catch(e) {}
  "object " + i;
}

