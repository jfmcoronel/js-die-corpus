var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// aaa is initially undefined. Make sure it's set to the
// correct value - we have to store the type tag, even though
// its known type is int32.
var aaa;
try { if (Inst0 <= 1000 && typeof (aaa) != "undefined") {_RecordType("<151,154,4>",(aaa)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<166,167,6>",(f)); Inst1++; } } catch(e) {}
function f() {
try { if (Inst2 <= 1000 && typeof (g) != "undefined") {_RecordType("<183,184,7>",(g)); Inst2++; } } catch(e) {}
  function g(x) {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<185,186,7>",(x)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<198,199,8>",(x)); Inst4++; } } catch(e) {}
    if (x) {
      aaa = 22;
try { if (Inst5 <= 1000 && typeof (aaa) != "undefined") {_RecordType("<209,212,9>",(aaa)); Inst5++; } } catch(e) {}
    }
  }

try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<232,233,13>",(g)); Inst6++; } } catch(e) {}
  g(10);

try { if (Inst7 <= 1000 && typeof (h) != "undefined") {_RecordType("<251,252,15>",(h)); Inst7++; } } catch(e) {}
  function h() {
    aaa = 22;
try { if (Inst8 <= 1000 && typeof (aaa) != "undefined") {_RecordType("<261,264,16>",(aaa)); Inst8++; } } catch(e) {}
  }

  for (var i = 0; i < 70; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,19>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<294,295,19>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,19>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (h) != "undefined") {_RecordType("<313,314,20>",(h)); Inst12++; } } catch(e) {}
    h();
  }

try { if (Inst13 <= 1000 && typeof (aaa) != "undefined") {_RecordType("<325,328,23>",(aaa)); Inst13++; } } catch(e) {}
  aaa;
  22;
}

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<339,340,27>",(f)); Inst14++; } } catch(e) {}
f();
x = 0;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<344,345,28>",(x)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (setX) != "undefined") {_RecordType("<361,365,30>",(setX)); Inst16++; } } catch(e) {}
function setX(i) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<366,367,30>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<377,378,31>",(i)); Inst19++; } } catch(e) {}
  x = i;
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<373,374,31>",(x)); Inst18++; } } catch(e) {}
}

for (var i = 0; i < 70; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<392,393,34>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<399,400,34>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,34>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (setX) != "undefined") {_RecordType("<416,420,35>",(setX)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<421,422,35>",(i)); Inst24++; } } catch(e) {}
  setX(i);
}

try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<428,429,38>",(x)); Inst25++; } } catch(e) {}
x;
69;
y = 3.14;
try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<435,436,40>",(y)); Inst26++; } } catch(e) {}
y = true;
try { if (Inst27 <= 1000 && typeof (y) != "undefined") {_RecordType("<445,446,41>",(y)); Inst27++; } } catch(e) {}
y = [];
try { if (Inst28 <= 1000 && typeof (y) != "undefined") {_RecordType("<455,456,42>",(y)); Inst28++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (setY) != "undefined") {_RecordType("<473,477,44>",(setY)); Inst29++; } } catch(e) {}
function setY(arg) {
try { if (Inst30 <= 1000 && typeof (arg) != "undefined") {_RecordType("<478,481,44>",(arg)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (arg) != "undefined") {_RecordType("<491,494,45>",(arg)); Inst32++; } } catch(e) {}
  y = arg;
try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<487,488,45>",(y)); Inst31++; } } catch(e) {}
}

for (var i = 0; i < 70; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<508,509,48>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<515,516,48>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<523,524,48>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (setY) != "undefined") {_RecordType("<532,536,49>",(setY)); Inst36++; } } catch(e) {}
  setY([1]);
}

try { if (Inst37 <= 1000 && typeof (setY) != "undefined") {_RecordType("<546,550,52>",(setY)); Inst37++; } } catch(e) {}
setY([1, 2, 3]);
try { if (Inst38 <= 1000 && typeof (y.length) != "undefined") {_RecordType("<563,571,53>",(y.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<563,564,53>",(y)); Inst39++; } } catch(e) {}
y.length;
3;
// z is non-configurable, but can be made non-writable.
var z = 10;
try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<636,637,56>",(z)); Inst40++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (testNonWritable) != "undefined") {_RecordType("<654,669,58>",(testNonWritable)); Inst41++; } } catch(e) {}
function testNonWritable() {
try { if (Inst42 <= 1000 && typeof (g) != "undefined") {_RecordType("<685,686,59>",(g)); Inst42++; } } catch(e) {}
  function g() {
    z = 11;
try { if (Inst43 <= 1000 && typeof (z) != "undefined") {_RecordType("<695,696,60>",(z)); Inst43++; } } catch(e) {}
  }

  for (var i = 0; i < 70; i++) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<719,720,63>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<726,727,63>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<734,735,63>",(i)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (g) != "undefined") {_RecordType("<745,746,64>",(g)); Inst47++; } } catch(e) {}
    g();
  }

try { if (Inst48 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<757,778,67>",(Object.defineProperty)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object) != "undefined") {_RecordType("<757,763,67>",(Object)); Inst49++; } } catch(e) {}
  Object.defineProperty(this, "z", {
    value: 1234,
    writable: false
  });
try { if (Inst50 <= 1000 && typeof (g) != "undefined") {_RecordType("<837,838,71>",(g)); Inst50++; } } catch(e) {}
  g();
try { if (Inst51 <= 1000 && typeof (z) != "undefined") {_RecordType("<844,845,72>",(z)); Inst51++; } } catch(e) {}
  z;
  1234;
}

try { if (Inst52 <= 1000 && typeof (testNonWritable) != "undefined") {_RecordType("<858,873,76>",(testNonWritable)); Inst52++; } } catch(e) {}
testNonWritable();

