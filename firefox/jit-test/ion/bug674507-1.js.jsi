var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (branchy) != "undefined") {_RecordType("<9,16,1>",(branchy)); Inst0++; } } catch(e) {}
function branchy(v0, v1) {
try { if (Inst1 <= 1000 && typeof (v0) != "undefined") {_RecordType("<17,19,1>",(v0)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (v1) != "undefined") {_RecordType("<21,23,1>",(v1)); Inst2++; } } catch(e) {}
  var result = 0;
try { if (Inst3 <= 1000 && typeof (result) != "undefined") {_RecordType("<33,39,2>",(result)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (v0) != "undefined") {_RecordType("<52,54,4>",(v0)); Inst4++; } } catch(e) {}
  if (v0) {
try { if (Inst5 <= 1000 && typeof (v0) != "undefined") {_RecordType("<66,68,5>",(v0)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v0) != "undefined") {_RecordType("<71,73,5>",(v0)); Inst6++; } } catch(e) {}
    if (v0 & v0) {
try { if (Inst7 <= 1000 && typeof (v1) != "undefined") {_RecordType("<87,89,6>",(v1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v0) != "undefined") {_RecordType("<92,94,6>",(v0)); Inst8++; } } catch(e) {}
      if (v1 & v0) {
        ;
      } else {
try { if (Inst10 <= 1000 && typeof (v0) != "undefined") {_RecordType("<140,142,9>",(v0)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (v0) != "undefined") {_RecordType("<145,147,9>",(v0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v1) != "undefined") {_RecordType("<150,152,9>",(v1)); Inst12++; } } catch(e) {}
        result = v0 & v0 & v1;
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<131,137,9>",(result)); Inst9++; } } catch(e) {}
      }
    } else {
try { if (Inst13 <= 1000 && typeof (v0) != "undefined") {_RecordType("<185,187,12>",(v0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (v0) != "undefined") {_RecordType("<190,192,12>",(v0)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v0) != "undefined") {_RecordType("<195,197,12>",(v0)); Inst15++; } } catch(e) {}
      if (v0 & v0 & v0) {
try { if (Inst17 <= 1000 && typeof (v1) != "undefined") {_RecordType("<218,220,13>",(v1)); Inst17++; } } catch(e) {}
        result = v1;
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<209,215,13>",(result)); Inst16++; } } catch(e) {}
      }
    }
  } else {
try { if (Inst18 <= 1000 && typeof (v0) != "undefined") {_RecordType("<255,257,17>",(v0)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v1) != "undefined") {_RecordType("<260,262,17>",(v1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v0) != "undefined") {_RecordType("<265,267,17>",(v0)); Inst20++; } } catch(e) {}
    if (v0 & v1 & v0) {
      ;
    }
  }

try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<299,305,22>",(result)); Inst21++; } } catch(e) {}
  return result;
}

try { if (Inst22 <= 1000 && typeof (branchy) != "undefined") {_RecordType("<310,317,25>",(branchy)); Inst22++; } } catch(e) {}
branchy(932, 256, 368);

