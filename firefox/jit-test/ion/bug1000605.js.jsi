var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<9,13,1>",(ceil)); Inst0++; } } catch(e) {}
function ceil(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<14,15,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<17,18,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Math.ceil) != "undefined") {_RecordType("<31,40,2>",(Math.ceil)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Math) != "undefined") {_RecordType("<31,35,2>",(Math)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<42,43,2>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<52,53,2>",(b)); Inst6++; } } catch(e) {}
  return Math.ceil((a | 0) / (b | 0)) | 0;
}

try { if (Inst7 <= 1000 && typeof (floor) != "undefined") {_RecordType("<77,82,5>",(floor)); Inst7++; } } catch(e) {}
function floor(a, b) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<83,84,5>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<86,87,5>",(b)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<100,110,6>",(Math.floor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<100,104,6>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<112,113,6>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<122,123,6>",(b)); Inst13++; } } catch(e) {}
  return Math.floor((a | 0) / (b | 0)) | 0;
}

try { if (Inst14 <= 1000 && typeof (round) != "undefined") {_RecordType("<147,152,9>",(round)); Inst14++; } } catch(e) {}
function round(a, b) {
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<153,154,9>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<156,157,9>",(b)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<170,180,10>",(Math.round)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<170,174,10>",(Math)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<182,183,10>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<192,193,10>",(b)); Inst20++; } } catch(e) {}
  return Math.round((a | 0) / (b | 0)) | 0;
}

try { if (Inst21 <= 1000 && typeof (intdiv) != "undefined") {_RecordType("<217,223,13>",(intdiv)); Inst21++; } } catch(e) {}
function intdiv(a, b) {
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<224,225,13>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<227,228,13>",(b)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<242,243,14>",(a)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (b) != "undefined") {_RecordType("<252,253,14>",(b)); Inst25++; } } catch(e) {}
  return (a | 0) / (b | 0) | 0;
} // Always rounds up.


try { if (Inst26 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<289,293,18>",(ceil)); Inst26++; } } catch(e) {}
ceil(5, 5);
1;
try { if (Inst27 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<304,308,20>",(ceil)); Inst27++; } } catch(e) {}
ceil(4, 3);
2;
try { if (Inst28 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<319,323,22>",(ceil)); Inst28++; } } catch(e) {}
ceil(5, 3);
2;
try { if (Inst29 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<334,338,24>",(ceil)); Inst29++; } } catch(e) {}
ceil(-4, 3);
-1;
try { if (Inst30 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<351,355,26>",(ceil)); Inst30++; } } catch(e) {}
ceil(-5, 3);
-1;
try { if (Inst31 <= 1000 && typeof (floor) != "undefined") {_RecordType("<368,373,28>",(floor)); Inst31++; } } catch(e) {}
floor(5, 5);
1;
try { if (Inst32 <= 1000 && typeof (floor) != "undefined") {_RecordType("<384,389,30>",(floor)); Inst32++; } } catch(e) {}
floor(4, 3);
1;
try { if (Inst33 <= 1000 && typeof (floor) != "undefined") {_RecordType("<400,405,32>",(floor)); Inst33++; } } catch(e) {}
floor(5, 3);
1;
try { if (Inst34 <= 1000 && typeof (floor) != "undefined") {_RecordType("<416,421,34>",(floor)); Inst34++; } } catch(e) {}
floor(-4, 3);
-2;
try { if (Inst35 <= 1000 && typeof (floor) != "undefined") {_RecordType("<434,439,36>",(floor)); Inst35++; } } catch(e) {}
floor(-5, 3);
-2;
try { if (Inst36 <= 1000 && typeof (round) != "undefined") {_RecordType("<452,457,38>",(round)); Inst36++; } } catch(e) {}
round(5, 5);
1;
try { if (Inst37 <= 1000 && typeof (round) != "undefined") {_RecordType("<468,473,40>",(round)); Inst37++; } } catch(e) {}
round(4, 3);
1;
try { if (Inst38 <= 1000 && typeof (round) != "undefined") {_RecordType("<484,489,42>",(round)); Inst38++; } } catch(e) {}
round(5, 3);
2;
try { if (Inst39 <= 1000 && typeof (round) != "undefined") {_RecordType("<500,505,44>",(round)); Inst39++; } } catch(e) {}
round(-4, 3);
-1;
try { if (Inst40 <= 1000 && typeof (round) != "undefined") {_RecordType("<518,523,46>",(round)); Inst40++; } } catch(e) {}
round(-5, 3);
-2;
try { if (Inst41 <= 1000 && typeof (intdiv) != "undefined") {_RecordType("<536,542,48>",(intdiv)); Inst41++; } } catch(e) {}
intdiv(5, 5);
1;
try { if (Inst42 <= 1000 && typeof (intdiv) != "undefined") {_RecordType("<553,559,50>",(intdiv)); Inst42++; } } catch(e) {}
intdiv(4, 3);
1;
try { if (Inst43 <= 1000 && typeof (intdiv) != "undefined") {_RecordType("<570,576,52>",(intdiv)); Inst43++; } } catch(e) {}
intdiv(5, 3);
1;
try { if (Inst44 <= 1000 && typeof (intdiv) != "undefined") {_RecordType("<587,593,54>",(intdiv)); Inst44++; } } catch(e) {}
intdiv(-4, 3);
-1;
try { if (Inst45 <= 1000 && typeof (intdiv) != "undefined") {_RecordType("<606,612,56>",(intdiv)); Inst45++; } } catch(e) {}
intdiv(-5, 3);
-1;

