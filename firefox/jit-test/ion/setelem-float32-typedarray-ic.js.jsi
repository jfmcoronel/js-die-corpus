var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<9,29,1>",(testFloat32SetElemIC)); Inst0++; } } catch(e) {}
function testFloat32SetElemIC(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<30,31,1>",(a)); Inst1++; } } catch(e) {}
  for (var i = 0; i < a.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<46,47,2>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<53,54,2>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<57,65,2>",(a.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<57,58,2>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<67,68,2>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<86,97,3>",(Math.fround)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<86,90,3>",(Math)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<98,109,3>",(Math.random)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<98,102,3>",(Math)); Inst11++; } } catch(e) {}
    var r = Math.fround(Math.random());
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<82,83,3>",(r)); Inst7++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<125,126,4>",(r)); Inst14++; } } catch(e) {}
    a[i] = r;
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<118,122,4>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<118,119,4>",(a)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<132,136,5>",(a[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<132,133,5>",(a)); Inst16++; } } catch(e) {}
    a[i];
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<142,143,6>",(r)); Inst17++; } } catch(e) {}
    r;
  }
}

try { if (Inst18 <= 1000 && typeof (testCompoundClamping) != "undefined") {_RecordType("<161,181,10>",(testCompoundClamping)); Inst18++; } } catch(e) {}
function testCompoundClamping(a, b) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<182,183,10>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<185,186,10>",(b)); Inst20++; } } catch(e) {}
  for (var i = 0; i < a.length; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<201,202,11>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,11>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<212,220,11>",(a.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<212,213,11>",(a)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<222,223,11>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<241,252,12>",(Math.random)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math) != "undefined") {_RecordType("<241,245,12>",(Math)); Inst28++; } } catch(e) {}
    var r = Math.random();
try { if (Inst26 <= 1000 && typeof (r) != "undefined") {_RecordType("<237,238,12>",(r)); Inst26++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (r) != "undefined") {_RecordType("<274,275,13>",(r)); Inst33++; } } catch(e) {}
    a[i] = b[i] = r;
try { if (Inst29 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<260,264,13>",(a[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<260,261,13>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<267,271,13>",(b[i])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<267,268,13>",(b)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<281,285,14>",(a[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<281,282,14>",(a)); Inst35++; } } catch(e) {}
    a[i];
try { if (Inst36 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<291,295,15>",(b[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<291,292,15>",(b)); Inst37++; } } catch(e) {}
    b[i];
  }
}

try { if (Inst38 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<304,324,19>",(testFloat32SetElemIC)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array) != "undefined") {_RecordType("<329,334,19>",(Array)); Inst39++; } } catch(e) {}
testFloat32SetElemIC(new Array(2048));
try { if (Inst40 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<343,363,20>",(testFloat32SetElemIC)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<368,380,20>",(Float64Array)); Inst41++; } } catch(e) {}
testFloat32SetElemIC(new Float64Array(2048));
try { if (Inst42 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<389,409,21>",(testFloat32SetElemIC)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<414,426,21>",(Float32Array)); Inst43++; } } catch(e) {}
testFloat32SetElemIC(new Float32Array(2048));
try { if (Inst44 <= 1000 && typeof (testCompoundClamping) != "undefined") {_RecordType("<435,455,22>",(testCompoundClamping)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Array) != "undefined") {_RecordType("<460,465,22>",(Array)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Array) != "undefined") {_RecordType("<477,482,22>",(Array)); Inst46++; } } catch(e) {}
testCompoundClamping(new Array(2048), new Array(2048));
try { if (Inst47 <= 1000 && typeof (testCompoundClamping) != "undefined") {_RecordType("<491,511,23>",(testCompoundClamping)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<516,526,23>",(Uint8Array)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<538,548,23>",(Uint8Array)); Inst49++; } } catch(e) {}
testCompoundClamping(new Uint8Array(2048), new Uint8Array(2048));
try { if (Inst50 <= 1000 && typeof (testCompoundClamping) != "undefined") {_RecordType("<557,577,24>",(testCompoundClamping)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<582,599,24>",(Uint8ClampedArray)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<611,628,24>",(Uint8ClampedArray)); Inst52++; } } catch(e) {}
testCompoundClamping(new Uint8ClampedArray(2048), new Uint8ClampedArray(2048));

