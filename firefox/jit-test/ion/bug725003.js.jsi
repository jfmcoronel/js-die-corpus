var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<9,17,1>",(TestCase)); Inst0++; } } catch(e) {}
function TestCase(n, d, e, a) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<18,19,1>",(n)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (d) != "undefined") {_RecordType("<21,22,1>",(d)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<24,25,1>",(e)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<27,28,1>",(a)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<46,47,2>",(n)); Inst6++; } } catch(e) {}
  this.name = n;
try { if (Inst5 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<34,43,2>",(this.name)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (d) != "undefined") {_RecordType("<70,71,3>",(d)); Inst8++; } } catch(e) {}
  this.description = d;
try { if (Inst7 <= 1000 && typeof (this.description) != "undefined") {_RecordType("<51,67,3>",(this.description)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<89,90,4>",(e)); Inst10++; } } catch(e) {}
  this.expect = e;
try { if (Inst9 <= 1000 && typeof (this.expect) != "undefined") {_RecordType("<75,86,4>",(this.expect)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<108,109,5>",(a)); Inst12++; } } catch(e) {}
  this.actual = a;
try { if (Inst11 <= 1000 && typeof (this.actual) != "undefined") {_RecordType("<94,105,5>",(this.actual)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (getTestCaseResult) != "undefined") {_RecordType("<127,144,6>",(getTestCaseResult)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<145,146,6>",(e)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<148,149,6>",(a)); Inst16++; } } catch(e) {}
  this.passed = getTestCaseResult(e, a);
try { if (Inst13 <= 1000 && typeof (this.passed) != "undefined") {_RecordType("<113,124,6>",(this.passed)); Inst13++; } } catch(e) {}
  this.reason = '';
try { if (Inst17 <= 1000 && typeof (this.reason) != "undefined") {_RecordType("<154,165,7>",(this.reason)); Inst17++; } } catch(e) {}
}

try { if (Inst18 <= 1000 && typeof (getTestCaseResult) != "undefined") {_RecordType("<184,201,10>",(getTestCaseResult)); Inst18++; } } catch(e) {}
function getTestCaseResult(expected, actual) {
try { if (Inst19 <= 1000 && typeof (expected) != "undefined") {_RecordType("<202,210,10>",(expected)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<212,218,10>",(actual)); Inst20++; } } catch(e) {}
  ;
}

try { if (Inst22 <= 1000 && typeof (Function) != "undefined") {_RecordType("<243,251,14>",(Function)); Inst22++; } } catch(e) {}
var obj = new Function();
try { if (Inst21 <= 1000 && typeof (obj) != "undefined") {_RecordType("<233,236,14>",(obj)); Inst21++; } } catch(e) {}

for (var i = 0; i < 100; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,16>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,16>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<281,282,16>",(i)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Array) != "undefined") {_RecordType("<306,311,17>",(Array)); Inst28++; } } catch(e) {}
  obj['-1'] = new Array();
try { if (Inst26 <= 1000 && typeof (obj['-1']) != "undefined") {_RecordType("<290,299,17>",(obj['-1'])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<290,293,17>",(obj)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (obj['-1']) != "undefined") {_RecordType("<317,326,18>",(obj['-1'])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj) != "undefined") {_RecordType("<317,320,18>",(obj)); Inst30++; } } catch(e) {}
  obj['-1'] == null;
  false;
try { if (Inst32 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<357,365,20>",(TestCase)); Inst32++; } } catch(e) {}
  obj = new TestCase();
try { if (Inst31 <= 1000 && typeof (obj) != "undefined") {_RecordType("<347,350,20>",(obj)); Inst31++; } } catch(e) {}
}

