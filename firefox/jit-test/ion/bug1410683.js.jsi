var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class C {}
try { if (Inst0 <= 1000 && typeof (C) != "undefined") {_RecordType("<6,7,1>",(C)); Inst0++; } } catch(e) {}

;
C.prototype.a = "a";
try { if (Inst1 <= 1000 && typeof (C.prototype.a) != "undefined") {_RecordType("<14,27,4>",(C.prototype.a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<14,25,4>",(C.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<14,15,4>",(C)); Inst3++; } } catch(e) {}
C.prototype.q = "q";
try { if (Inst4 <= 1000 && typeof (C.prototype.q) != "undefined") {_RecordType("<35,48,5>",(C.prototype.q)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<35,46,5>",(C.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (C) != "undefined") {_RecordType("<35,36,5>",(C)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<74,77,6>",(NaN)); Inst10++; } } catch(e) {}
C.prototype.NaN = NaN;
try { if (Inst7 <= 1000 && typeof (C.prototype.NaN) != "undefined") {_RecordType("<56,71,6>",(C.prototype.NaN)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<56,67,6>",(C.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<56,57,6>",(C)); Inst9++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (C) != "undefined") {_RecordType("<96,97,8>",(C)); Inst14++; } } catch(e) {}
class D extends C {
  foo(p) {
try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<106,107,9>",(p)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (super[p]) != "undefined") {_RecordType("<122,130,10>",(super[p])); Inst13++; } } catch(e) {}
    return super[p];
  }

}
try { if (Inst11 <= 1000 && typeof (D) != "undefined") {_RecordType("<86,87,8>",(D)); Inst11++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<149,150,15>",(f)); Inst15++; } } catch(e) {}
function f() {
try { if (Inst17 <= 1000 && typeof (D) != "undefined") {_RecordType("<169,170,16>",(D)); Inst17++; } } catch(e) {}
  var d = new D();
try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<161,162,16>",(d)); Inst16++; } } catch(e) {}

  for (let p in C.prototype) {
try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<186,187,18>",(p)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<191,202,18>",(C.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (C) != "undefined") {_RecordType("<191,192,18>",(C)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<210,211,19>",(p)); Inst21++; } } catch(e) {}
    p;
try { if (Inst22 <= 1000 && typeof (String) != "undefined") {_RecordType("<217,223,20>",(String)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.foo) != "undefined") {_RecordType("<224,229,20>",(d.foo)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<224,225,20>",(d)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (p) != "undefined") {_RecordType("<230,231,20>",(p)); Inst25++; } } catch(e) {}
    String(d.foo(p));
  }
}

try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<242,243,24>",(f)); Inst26++; } } catch(e) {}
f();
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<247,248,25>",(f)); Inst27++; } } catch(e) {}
f();

