var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<9,10,1>",(a)); Inst0++; } } catch(e) {}
function a(f, i) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<11,12,1>",(f)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<14,15,1>",(i)); Inst2++; } } catch(e) {}
  results = [];
try { if (Inst3 <= 1000 && typeof (results) != "undefined") {_RecordType("<21,28,2>",(results)); Inst3++; } } catch(e) {}

  for (var k = 0; k < 10; ++k) {
try { if (Inst4 <= 1000 && typeof (k) != "undefined") {_RecordType("<47,48,4>",(k)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (k) != "undefined") {_RecordType("<54,55,4>",(k)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (k) != "undefined") {_RecordType("<64,65,4>",(k)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (gc) != "undefined") {_RecordType("<73,75,5>",(gc)); Inst7++; } } catch(e) {}
    gc();

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<132,133,9>",(e)); Inst13++; } } catch(e) {}
    try {
try { if (Inst8 <= 1000 && typeof (results.push) != "undefined") {_RecordType("<96,108,8>",(results.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (results) != "undefined") {_RecordType("<96,103,8>",(results)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<109,110,8>",(f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i[k]) != "undefined") {_RecordType("<111,115,8>",(i[k])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<111,112,8>",(i)); Inst12++; } } catch(e) {}
      results.push(f(i[k]));
    } catch (e) {
try { if (Inst14 <= 1000 && typeof (results.push) != "undefined") {_RecordType("<143,155,10>",(results.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (results) != "undefined") {_RecordType("<143,150,10>",(results)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<156,157,10>",(e)); Inst16++; } } catch(e) {}
      results.push(e);
    }
  }
}

g = function (x, y) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<187,188,15>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<190,191,15>",(y)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<204,215,16>",(Math.fround)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<204,208,16>",(Math)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<217,218,16>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math.f) != "undefined") {_RecordType("<221,227,16>",(Math.f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math) != "undefined") {_RecordType("<221,225,16>",(Math)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (m0) != "undefined") {_RecordType("<230,232,16>",(m0)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (w) != "undefined") {_RecordType("<236,237,16>",(w)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<240,251,16>",(Math.fround)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math) != "undefined") {_RecordType("<240,244,16>",(Math)); Inst28++; } } catch(e) {}
  return Math.fround((x ? Math.f : m0) ? w : Math.fround());
};
try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<173,174,15>",(g)); Inst17++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<260,261,19>",(a)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (g) != "undefined") {_RecordType("<262,263,19>",(g)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<266,282,19>",(Number.MAX_VALUE)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number) != "undefined") {_RecordType("<266,272,19>",(Number)); Inst32++; } } catch(e) {}
a(g, [Number.MAX_VALUE]);

