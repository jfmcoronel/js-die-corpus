var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| skip-if: !('oomAtAllocation' in this)
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<69,74,2>",(Array)); Inst1++; } } catch(e) {}
var lfcode = new Array();
try { if (Inst0 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<56,62,2>",(lfcode)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (k) != "undefined") {_RecordType("<88,89,4>",(k)); Inst2++; } } catch(e) {}
function k(a, f_arg, b, c) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<90,91,4>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (f_arg) != "undefined") {_RecordType("<93,98,4>",(f_arg)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<100,101,4>",(b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<103,104,4>",(c)); Inst6++; } } catch(e) {}
  for (var i = 0; i < 5; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<119,120,5>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<126,127,5>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<135,136,5>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (f_arg) != "undefined") {_RecordType("<144,149,6>",(f_arg)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<150,151,6>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<154,155,6>",(a)); Inst12++; } } catch(e) {}
    f_arg(i + a);
  }
}

try { if (Inst13 <= 1000 && typeof (t) != "undefined") {_RecordType("<174,175,10>",(t)); Inst13++; } } catch(e) {}
function t() {
  var x = 2;
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<186,187,11>",(x)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (k) != "undefined") {_RecordType("<195,196,12>",(k)); Inst15++; } } catch(e) {}
  k(50, function (i) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<211,212,12>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<224,225,13>",(i)); Inst18++; } } catch(e) {}
    x = i;
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<220,221,13>",(x)); Inst17++; } } catch(e) {}
  }, 100, 200);
}

try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<275,276,20>",(e)); Inst21++; } } catch(e) {}
try {
try { if (Inst19 <= 1000 && typeof (t) != "undefined") {_RecordType("<254,255,18>",(t)); Inst19++; } } catch(e) {}
  t();
try { if (Inst20 <= 1000 && typeof (t) != "undefined") {_RecordType("<261,262,19>",(t)); Inst20++; } } catch(e) {}
  t();
} catch (e) {
  // ignore the exception
  ;
}

