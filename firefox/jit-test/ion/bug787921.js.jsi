var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| error: InternalError: too much recursion
try { if (Inst0 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<64,72,2>",(TestCase)); Inst0++; } } catch(e) {}
function TestCase(n, d, e, a) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<73,74,2>",(n)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (d) != "undefined") {_RecordType("<76,77,2>",(d)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<79,80,2>",(e)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<82,83,2>",(a)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (BUGNUMER) != "undefined") {_RecordType("<113,121,3>",(BUGNUMER)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<139,148,3>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  this.bugnumber = typeof BUGNUMER != 'undefined' ? BUGNUMBER : '';
try { if (Inst5 <= 1000 && typeof (this.bugnumber) != "undefined") {_RecordType("<89,103,3>",(this.bugnumber)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (window) != "undefined") {_RecordType("<176,182,4>",(window)); Inst9++; } } catch(e) {}
  this.type = typeof window == 'undefined' ? 'shell' : 'browser';
try { if (Inst8 <= 1000 && typeof (this.type) != "undefined") {_RecordType("<157,166,4>",(this.type)); Inst8++; } } catch(e) {}
  gTestcases[gTc++] = this;
try { if (Inst10 <= 1000 && typeof (gTestcases[gTc++]) != "undefined") {_RecordType("<223,240,5>",(gTestcases[gTc++])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (gTestcases) != "undefined") {_RecordType("<223,233,5>",(gTestcases)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (gTc) != "undefined") {_RecordType("<234,237,5>",(gTc)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (optionName) != "undefined") {_RecordType("<256,266,7>",(optionName)); Inst13++; } } catch(e) {}
  if (optionName) {
    ;
  }

  {
    ;
  }
  {
    ;
  }
  {
    ;
  } // Seems to be required to crash
}

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<368,369,22>",(f)); Inst14++; } } catch(e) {}
function f() {
  ;
}

try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<390,391,26>",(g)); Inst15++; } } catch(e) {}
function g(n, h) {
try { if (Inst16 <= 1000 && typeof (n) != "undefined") {_RecordType("<392,393,26>",(n)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (h) != "undefined") {_RecordType("<395,396,26>",(h)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<410,411,27>",(g)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (TestCase.toSource) != "undefined") {_RecordType("<412,429,27>",(TestCase.toSource)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<412,420,27>",(TestCase)); Inst21++; } } catch(e) {}
  var t = g(TestCase.toSource());
try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<406,407,27>",(t)); Inst18++; } } catch(e) {}
}

try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<437,438,30>",(g)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<443,444,30>",(f)); Inst23++; } } catch(e) {}
g(80, f);

