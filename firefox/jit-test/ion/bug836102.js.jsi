var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (t) != "undefined") {_RecordType("<9,10,1>",(t)); Inst0++; } } catch(e) {}
function t() {
  var x = 0x123456789abcd;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<21,22,2>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<48,49,3>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<52,53,3>",(x)); Inst4++; } } catch(e) {}
  x = x + x; // x = 640511947003802
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<44,45,3>",(x)); Inst2++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<85,86,5>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<89,90,5>",(x)); Inst7++; } } catch(e) {}
  x = x + x; // x = 1281023894007604
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<81,82,5>",(x)); Inst5++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<123,124,7>",(x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<127,128,7>",(x)); Inst10++; } } catch(e) {}
  x = x + x; // x = 2562047788015208
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<119,120,7>",(x)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<161,162,9>",(x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<165,166,9>",(x)); Inst13++; } } catch(e) {}
  x = x + x; // x = 5124095576030416
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<157,158,9>",(x)); Inst11++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<199,200,11>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<203,204,11>",(x)); Inst16++; } } catch(e) {}
  x = x + x; // x = 10248191152060832
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<195,196,11>",(x)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<234,235,13>",(x)); Inst17++; } } catch(e) {}
  x + 1 | 0;
  -248153696;
}

try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<262,263,17>",(t)); Inst18++; } } catch(e) {}
t();

try { if (Inst19 <= 1000 && typeof (t2) != "undefined") {_RecordType("<277,279,19>",(t2)); Inst19++; } } catch(e) {}
function t2() {
  var x = -0x123456789abcd;
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<290,291,20>",(x)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<318,319,21>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<322,323,21>",(x)); Inst23++; } } catch(e) {}
  x = x + x;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<314,315,21>",(x)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<331,332,22>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<335,336,22>",(x)); Inst26++; } } catch(e) {}
  x = x + x;
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<327,328,22>",(x)); Inst24++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<344,345,23>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<348,349,23>",(x)); Inst29++; } } catch(e) {}
  x = x + x;
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<340,341,23>",(x)); Inst27++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<357,358,24>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<361,362,24>",(x)); Inst32++; } } catch(e) {}
  x = x + x;
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<353,354,24>",(x)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<370,371,25>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<374,375,25>",(x)); Inst35++; } } catch(e) {}
  x = x + x;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<366,367,25>",(x)); Inst33++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<379,380,26>",(x)); Inst36++; } } catch(e) {}
  x + 7 | 0;
  248153704;
}

try { if (Inst37 <= 1000 && typeof (t2) != "undefined") {_RecordType("<406,408,30>",(t2)); Inst37++; } } catch(e) {}
t2();

try { if (Inst38 <= 1000 && typeof (t) != "undefined") {_RecordType("<422,423,32>",(t)); Inst38++; } } catch(e) {}
function t() {
  var x = 4294967296 + 1;
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<434,435,33>",(x)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<456,457,34>",(x)); Inst40++; } } catch(e) {}
  x | 0;
  1;
}

