var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Reduced from v8-raytrace.
var Class = {
  create: function () {
    return function () {
try { if (Inst1 <= 1000 && typeof (this.initialize.apply) != "undefined") {_RecordType("<98,119,5>",(this.initialize.apply)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (this.initialize) != "undefined") {_RecordType("<98,113,5>",(this.initialize)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<126,135,5>",(arguments)); Inst3++; } } catch(e) {}
      this.initialize.apply(this, arguments);
    };
  }
};
try { if (Inst0 <= 1000 && typeof (Class) != "undefined") {_RecordType("<33,38,2>",(Class)); Inst0++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Class.create) != "undefined") {_RecordType("<162,174,9>",(Class.create)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Class) != "undefined") {_RecordType("<162,167,9>",(Class)); Inst6++; } } catch(e) {}
var Bar = Class.create();
try { if (Inst4 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<156,159,9>",(Bar)); Inst4++; } } catch(e) {}
Bar.prototype = {
  // Compiled third.
  initialize: function () {
    ;
  }
};
try { if (Inst7 <= 1000 && typeof (Bar.prototype) != "undefined") {_RecordType("<178,191,10>",(Bar.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<178,181,10>",(Bar)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Class.create) != "undefined") {_RecordType("<268,280,16>",(Class.create)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Class) != "undefined") {_RecordType("<268,273,16>",(Class)); Inst11++; } } catch(e) {}
var Foo = Class.create();
try { if (Inst9 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<262,265,16>",(Foo)); Inst9++; } } catch(e) {}
Foo.prototype = {
  // Compiled second. Crashes when setting "bar". Uses LCallConstructor.
  initialize: function () {
try { if (Inst15 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<422,425,20>",(Bar)); Inst15++; } } catch(e) {}
    this.bar = new Bar();
try { if (Inst14 <= 1000 && typeof (this.bar) != "undefined") {_RecordType("<407,415,20>",(this.bar)); Inst14++; } } catch(e) {}
  } // Compiled first.

};
try { if (Inst12 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<284,297,17>",(Foo.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<284,287,17>",(Foo)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<466,467,25>",(f)); Inst16++; } } catch(e) {}
function f() {
  for (var i = 0; i < 100; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<483,484,26>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<490,491,26>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<499,500,26>",(i)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<524,527,27>",(Foo)); Inst21++; } } catch(e) {}
    var foo = new Foo();
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<514,517,27>",(foo)); Inst20++; } } catch(e) {}
  }
}

try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<538,539,31>",(f)); Inst22++; } } catch(e) {}
f();

