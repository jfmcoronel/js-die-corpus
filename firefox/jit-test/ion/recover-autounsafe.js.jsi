var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| --ion-eager; --ion-offthread-compile=off
// Some AutoUnsafeCallWithABI functions can be reached via recovery instructions.
// This testcase is designed to trigger all of the recovery paths that can reach
// AutoUnsafeCallWithABI functions, while an exception is being thrown.
(function () {
  inputs = [];
try { if (Inst0 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<307,313,6>",(inputs)); Inst0++; } } catch(e) {}

  f = function (x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<337,338,8>",(x)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<365,366,10>",(x)); Inst4++; } } catch(e) {}
    var o = {
      a: x
    };
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<350,351,9>",(o)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<393,394,12>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<417,418,12>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<440,441,12>",(x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<450,458,12>",(Math.max)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<450,454,12>",(Math)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<471,472,12>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<482,490,12>",(Math.min)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math) != "undefined") {_RecordType("<482,486,12>",(Math)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<500,501,12>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Math.atan2) != "undefined") {_RecordType("<511,521,12>",(Math.atan2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<511,515,12>",(Math)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<531,532,12>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<542,550,12>",(Math.sin)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<542,546,12>",(Math)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<551,552,12>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math.sqrt) != "undefined") {_RecordType("<562,571,12>",(Math.sqrt)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<562,566,12>",(Math)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<572,573,12>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math.hypot) != "undefined") {_RecordType("<583,593,12>",(Math.hypot)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math) != "undefined") {_RecordType("<583,587,12>",(Math)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<603,604,12>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math.ceil) != "undefined") {_RecordType("<614,623,12>",(Math.ceil)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<614,618,12>",(Math)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<625,626,12>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<643,653,12>",(Math.floor)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Math) != "undefined") {_RecordType("<643,647,12>",(Math)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<655,656,12>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math.trunc) != "undefined") {_RecordType("<673,683,12>",(Math.trunc)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<673,677,12>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<685,686,12>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<703,713,12>",(Math.round)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math) != "undefined") {_RecordType("<703,707,12>",(Math)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<715,716,12>",(x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<733,742,12>",(Math.sign)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math) != "undefined") {_RecordType("<733,737,12>",(Math)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<743,744,12>",(x)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math.log) != "undefined") {_RecordType("<754,762,12>",(Math.log)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Math) != "undefined") {_RecordType("<754,758,12>",(Math)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<763,764,12>",(x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o) != "undefined") {_RecordType("<775,776,12>",(o)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<779,790,12>",(Math.fround)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Math) != "undefined") {_RecordType("<779,783,12>",(Math)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (y) != "undefined") {_RecordType("<791,792,12>",(y)); Inst47++; } } catch(e) {}
    4294967297 ** (x >>> 0) * 4294967297 / x >>> 0 * 4294967297 % x >>> 0 * Math.max(4294967297, x >>> 0) * Math.min(4294967, x >>> 0) * Math.atan2(4294967, x >>> 0) * Math.sin(x >>> 0) * Math.sqrt(x >>> 0) * Math.hypot(4294967, x >>> 0) * Math.ceil((x >>> 0) * 0.5) * Math.floor((x >>> 0) * 0.5) * Math.trunc((x >>> 0) * 0.5) * Math.round((x >>> 0) * 0.5) * Math.sign(x >>> 0) * Math.log(x >>> 0) * !o * Math.fround(y); // Exception thrown here; y is not defined.
  };
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<323,324,8>",(f)); Inst1++; } } catch(e) {}

try { if (Inst48 <= 1000 && typeof (f) != "undefined") {_RecordType("<851,852,15>",(f)); Inst48++; } } catch(e) {}
  if (f) {
    for (var j = 0; j < 2; ++j) {
try { if (Inst49 <= 1000 && typeof (j) != "undefined") {_RecordType("<869,870,16>",(j)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (j) != "undefined") {_RecordType("<876,877,16>",(j)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (j) != "undefined") {_RecordType("<885,886,16>",(j)); Inst51++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (e) != "undefined") {_RecordType("<939,940,19>",(e)); Inst55++; } } catch(e) {}
      try {
try { if (Inst52 <= 1000 && typeof (f) != "undefined") {_RecordType("<910,911,18>",(f)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (inputs[0]) != "undefined") {_RecordType("<912,921,18>",(inputs[0])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<912,918,18>",(inputs)); Inst54++; } } catch(e) {}
        f(inputs[0]);
      } catch (e) {
        ;
      }
    }
  }
})();

