var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f() {
  var hits = 0;
try { if (Inst1 <= 1000 && typeof (hits) != "undefined") {_RecordType("<21,25,2>",(hits)); Inst1++; } } catch(e) {}

  for (var T of [Float32Array, Float64Array, Float32Array]) {
try { if (Inst2 <= 1000 && typeof (T) != "undefined") {_RecordType("<43,44,4>",(T)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<49,61,4>",(Float32Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<63,75,4>",(Float64Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<77,89,4>",(Float32Array)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (T) != "undefined") {_RecordType("<112,113,5>",(T)); Inst7++; } } catch(e) {}
    var arr = new T(1);
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<102,105,5>",(arr)); Inst6++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<174,175,9>",(e)); Inst12++; } } catch(e) {}
    try {
try { if (Inst10 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<144,159,8>",(Symbol.iterator)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<144,150,8>",(Symbol)); Inst11++; } } catch(e) {}
      arr[0] = Symbol.iterator;
try { if (Inst8 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<135,141,8>",(arr[0])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<135,138,8>",(arr)); Inst9++; } } catch(e) {}
    } catch (e) {
try { if (Inst13 <= 1000 && typeof (hits) != "undefined") {_RecordType("<185,189,10>",(hits)); Inst13++; } } catch(e) {}
      hits++;
    }
  }

  for (var T of [Int32Array, Int16Array, Int8Array]) {
try { if (Inst14 <= 1000 && typeof (T) != "undefined") {_RecordType("<215,216,14>",(T)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<221,231,14>",(Int32Array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<233,243,14>",(Int16Array)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<245,254,14>",(Int8Array)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (T) != "undefined") {_RecordType("<277,278,15>",(T)); Inst19++; } } catch(e) {}
    var arr = new T(1);
try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<267,270,15>",(arr)); Inst18++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<339,340,19>",(e)); Inst24++; } } catch(e) {}
    try {
try { if (Inst22 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<309,324,18>",(Symbol.iterator)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<309,315,18>",(Symbol)); Inst23++; } } catch(e) {}
      arr[0] = Symbol.iterator;
try { if (Inst20 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<300,306,18>",(arr[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<300,303,18>",(arr)); Inst21++; } } catch(e) {}
    } catch (e) {
try { if (Inst25 <= 1000 && typeof (hits) != "undefined") {_RecordType("<350,354,20>",(hits)); Inst25++; } } catch(e) {}
      hits++;
    }
  }

try { if (Inst26 <= 1000 && typeof (hits) != "undefined") {_RecordType("<371,375,24>",(hits)); Inst26++; } } catch(e) {}
  hits;
  6;
}

try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<385,386,28>",(f)); Inst27++; } } catch(e) {}
f();

