var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testBailout) != "undefined") {_RecordType("<9,20,1>",(testBailout)); Inst0++; } } catch(e) {}
function testBailout() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<36,37,2>",(f)); Inst1++; } } catch(e) {}
  function f(v, r) {
try { if (Inst2 <= 1000 && typeof (v) != "undefined") {_RecordType("<38,39,2>",(v)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (r) != "undefined") {_RecordType("<41,42,2>",(r)); Inst3++; } } catch(e) {}
    for (var i = 0; i < 50; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<59,60,3>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<66,67,3>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<76,77,3>",(i)); Inst6++; } } catch(e) {}
      // Ensure DCE and LICM don't eliminate calls to fromCodePoint in
      // case the input argument is not a valid code point.
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<222,223,6>",(i)); Inst7++; } } catch(e) {}
      if (i === 0) {
try { if (Inst8 <= 1000 && typeof (r) != "undefined") {_RecordType("<241,242,7>",(r)); Inst8++; } } catch(e) {}
        r();
      }

try { if (Inst9 <= 1000 && typeof (String.fromCodePoint) != "undefined") {_RecordType("<261,281,10>",(String.fromCodePoint)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (String) != "undefined") {_RecordType("<261,267,10>",(String)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (v) != "undefined") {_RecordType("<282,283,10>",(v)); Inst11++; } } catch(e) {}
      String.fromCodePoint(v);
try { if (Inst12 <= 1000 && typeof (String.fromCodePoint) != "undefined") {_RecordType("<292,312,11>",(String.fromCodePoint)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (String) != "undefined") {_RecordType("<292,298,11>",(String)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<313,314,11>",(v)); Inst14++; } } catch(e) {}
      String.fromCodePoint(v);
try { if (Inst15 <= 1000 && typeof (String.fromCodePoint) != "undefined") {_RecordType("<323,343,12>",(String.fromCodePoint)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (String) != "undefined") {_RecordType("<323,329,12>",(String)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<344,345,12>",(v)); Inst17++; } } catch(e) {}
      String.fromCodePoint(v);
    }
  }

  var result = [];
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<365,371,16>",(result)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (r) != "undefined") {_RecordType("<390,391,18>",(r)); Inst19++; } } catch(e) {}
  function r() {
try { if (Inst20 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<400,411,19>",(result.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<400,406,19>",(result)); Inst21++; } } catch(e) {}
    result.push("ok");
  }

try { if (Inst22 <= 1000 && typeof (inIon) != "undefined") {_RecordType("<592,597,35>",(inIon)); Inst22++; } } catch(e) {}
  do {
    result.length = 0;
try { if (Inst23 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<435,448,23>",(result.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<435,441,23>",(result)); Inst24++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<534,535,29>",(e)); Inst31++; } } catch(e) {}
    try {
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<471,472,26>",(f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (r) != "undefined") {_RecordType("<476,477,26>",(r)); Inst26++; } } catch(e) {}
      f(0, r);
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<486,487,27>",(f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<491,492,27>",(r)); Inst28++; } } catch(e) {}
      f(0, r);
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<501,502,28>",(f)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (r) != "undefined") {_RecordType("<517,518,28>",(r)); Inst30++; } } catch(e) {}
      f(0x10ffff + 1, r);
    } catch (e) {
      ;
    }

try { if (Inst32 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<558,571,33>",(result.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<558,564,33>",(result)); Inst33++; } } catch(e) {}
    result.length;
    3;
  } while (!inIon());
}

try { if (Inst34 <= 1000 && typeof (testBailout) != "undefined") {_RecordType("<605,616,38>",(testBailout)); Inst34++; } } catch(e) {}
testBailout();

