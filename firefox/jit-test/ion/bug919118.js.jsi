var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<14,26,1>",(Float32Array)); Inst1++; } } catch(e) {}
var f32 = new Float32Array(1);
try { if (Inst0 <= 1000 && typeof (f32) != "undefined") {_RecordType("<4,7,1>",(f32)); Inst0++; } } catch(e) {}
f32[0] = 13;
try { if (Inst2 <= 1000 && typeof (f32[0]) != "undefined") {_RecordType("<31,37,2>",(f32[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f32) != "undefined") {_RecordType("<31,34,2>",(f32)); Inst3++; } } catch(e) {}
var str = "CAN HAS cheezburger? OKTHXBYE";
try { if (Inst4 <= 1000 && typeof (str) != "undefined") {_RecordType("<48,51,3>",(str)); Inst4++; } } catch(e) {}
var c;
try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<91,92,4>",(c)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<104,105,6>",(f)); Inst6++; } } catch(e) {}
function f() {
try { if (Inst8 <= 1000 && typeof (str[f32[0]]) != "undefined") {_RecordType("<116,127,7>",(str[f32[0]])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (str) != "undefined") {_RecordType("<116,119,7>",(str)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f32[0]) != "undefined") {_RecordType("<120,126,7>",(f32[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f32) != "undefined") {_RecordType("<120,123,7>",(f32)); Inst11++; } } catch(e) {}
  c = str[f32[0]];
try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<112,113,7>",(c)); Inst7++; } } catch(e) {}
}

for (var n = 100; n; --n) {
try { if (Inst12 <= 1000 && typeof (n) != "undefined") {_RecordType("<141,142,10>",(n)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (n) != "undefined") {_RecordType("<150,151,10>",(n)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (n) != "undefined") {_RecordType("<155,156,10>",(n)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<162,163,11>",(f)); Inst15++; } } catch(e) {}
  f();
}

try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<170,175,14>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (c) != "undefined") {_RecordType("<176,177,14>",(c)); Inst17++; } } catch(e) {}
print(c);

