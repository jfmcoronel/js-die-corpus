var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<11,12,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<25,26,2>",(x)); Inst2++; } } catch(e) {}
  return x + 1;
}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<35,36,5>",(f)); Inst3++; } } catch(e) {}
f(1);
2;
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<44,45,7>",(f)); Inst4++; } } catch(e) {}
f(0.5);
1.5;

// warm-up == 2 => normaly compile with ion.
//                 invalidate for unexpect output.
try { if (Inst5 <= 1000 && typeof (normal) != "undefined") {_RecordType("<163,169,12>",(normal)); Inst5++; } } catch(e) {}
function normal() {
  ;
}

try { if (Inst6 <= 1000 && typeof (eager) != "undefined") {_RecordType("<190,195,16>",(eager)); Inst6++; } } catch(e) {}
function eager() {
  ;
}

try { if (Inst7 <= 1000 && typeof (h) != "undefined") {_RecordType("<216,217,20>",(h)); Inst7++; } } catch(e) {}
function h(x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<218,219,20>",(x)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<232,233,21>",(x)); Inst9++; } } catch(e) {}
  return x + 1;
}

try { if (Inst10 <= 1000 && typeof (g) != "undefined") {_RecordType("<251,252,24>",(g)); Inst10++; } } catch(e) {}
function g(x) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<253,254,24>",(x)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (normal) != "undefined") {_RecordType("<260,266,25>",(normal)); Inst12++; } } catch(e) {}
  normal();
try { if (Inst13 <= 1000 && typeof (h) != "undefined") {_RecordType("<279,280,26>",(h)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<281,282,26>",(x)); Inst14++; } } catch(e) {}
  return h(x) + 1;
}

try { if (Inst15 <= 1000 && typeof (normal) != "undefined") {_RecordType("<292,298,29>",(normal)); Inst15++; } } catch(e) {}
normal();

for (var i = 0; i < 10; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<312,313,31>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<319,320,31>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<327,328,31>",(i)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (eager) != "undefined") {_RecordType("<336,341,32>",(eager)); Inst19++; } } catch(e) {}
  eager();
try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<347,348,33>",(g)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<349,350,33>",(i)); Inst21++; } } catch(e) {}
  g(i);
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<355,356,34>",(i)); Inst22++; } } catch(e) {}
  i + 2;
} // Check for wrong arguments.


try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<428,429,41>",(x)); Inst23++; } } catch(e) {}
try {
  false;
  true;
} catch (x) {
  ;
}

try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<531,532,53>",(x)); Inst25++; } } catch(e) {}
try {
  var ion = {
    warmup: {
      trigger: null
    }
  };
try { if (Inst24 <= 1000 && typeof (ion) != "undefined") {_RecordType("<452,455,46>",(ion)); Inst24++; } } catch(e) {}
  false;
  true;
} catch (x) {
  ;
}

try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<575,576,60>",(x)); Inst26++; } } catch(e) {}
try {
  false;
  true;
} catch (x) {
  ;
}

