var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<9,20,1>",(printStatus)); Inst0++; } } catch(e) {}
function printStatus(msg) {
try { if (Inst1 <= 1000 && typeof (msg) != "undefined") {_RecordType("<21,24,1>",(msg)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (msg.split) != "undefined") {_RecordType("<42,51,2>",(msg.split)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (msg) != "undefined") {_RecordType("<42,45,2>",(msg)); Inst4++; } } catch(e) {}
  var lines = msg.split("\n");
try { if (Inst2 <= 1000 && typeof (lines) != "undefined") {_RecordType("<34,39,2>",(lines)); Inst2++; } } catch(e) {}

  for (var i = 0; i < lines.length; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<71,72,4>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<78,79,4>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (lines.length) != "undefined") {_RecordType("<82,94,4>",(lines.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (lines) != "undefined") {_RecordType("<82,87,4>",(lines)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<96,97,4>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (lines[i]) != "undefined") {_RecordType("<107,115,5>",(lines[i])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (lines) != "undefined") {_RecordType("<107,112,5>",(lines)); Inst11++; } } catch(e) {}
    lines[i];
  }
}

Object.prototype.length = function () {
  ;
};
try { if (Inst12 <= 1000 && typeof (Object.prototype.length) != "undefined") {_RecordType("<124,147,9>",(Object.prototype.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<124,140,9>",(Object.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<124,130,9>",(Object)); Inst14++; } } catch(e) {}

var summary = 'Do not assert: !OBJ_GET_PROTO(cx, ctor)';
try { if (Inst15 <= 1000 && typeof (summary) != "undefined") {_RecordType("<176,183,13>",(summary)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<229,240,14>",(printStatus)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (summary) != "undefined") {_RecordType("<241,248,14>",(summary)); Inst17++; } } catch(e) {}
printStatus(summary);

