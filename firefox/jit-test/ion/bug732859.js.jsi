var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<9,17,1>",(TestCase)); Inst0++; } } catch(e) {}
function TestCase(n, d, e, a) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<18,19,1>",(n)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (d) != "undefined") {_RecordType("<21,22,1>",(d)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<24,25,1>",(e)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<27,28,1>",(a)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (writeHeaderToLog) != "undefined") {_RecordType("<50,66,2>",(writeHeaderToLog)); Inst5++; } } catch(e) {}
  return function writeHeaderToLog(string) {
try { if (Inst6 <= 1000 && typeof (string) != "undefined") {_RecordType("<67,73,2>",(string)); Inst6++; } } catch(e) {}
    ;
  };
}

var SECTION = "15.1.2.4";
try { if (Inst7 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<95,102,7>",(SECTION)); Inst7++; } } catch(e) {}

for (var CHARCODE = 128; CHARCODE < 256; CHARCODE++) {
try { if (Inst8 <= 1000 && typeof (CHARCODE) != "undefined") {_RecordType("<127,135,9>",(CHARCODE)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (CHARCODE) != "undefined") {_RecordType("<143,151,9>",(CHARCODE)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (CHARCODE) != "undefined") {_RecordType("<159,167,9>",(CHARCODE)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<179,187,10>",(TestCase)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<188,195,10>",(SECTION)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ToHexString) != "undefined") {_RecordType("<203,214,10>",(ToHexString)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (CHARCODE) != "undefined") {_RecordType("<215,223,10>",(CHARCODE)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (escape) != "undefined") {_RecordType("<226,232,10>",(escape)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<233,252,10>",(String.fromCharCode)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<233,239,10>",(String)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (CHARCODE) != "undefined") {_RecordType("<253,261,10>",(CHARCODE)); Inst18++; } } catch(e) {}
  new TestCase(SECTION, "%" + ToHexString(CHARCODE), escape(String.fromCharCode(CHARCODE)));
}

try { if (Inst19 <= 1000 && typeof (ToHexString) != "undefined") {_RecordType("<278,289,13>",(ToHexString)); Inst19++; } } catch(e) {}
function ToHexString(n) {
try { if (Inst20 <= 1000 && typeof (n) != "undefined") {_RecordType("<290,291,13>",(n)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<311,316,14>",(Array)); Inst22++; } } catch(e) {}
  var hex = new Array();
try { if (Inst21 <= 1000 && typeof (hex) != "undefined") {_RecordType("<301,304,14>",(hex)); Inst21++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (n) != "undefined") {_RecordType("<340,341,15>",(n)); Inst27++; } } catch(e) {}
  hex[hex.length] = n % 16;
try { if (Inst23 <= 1000 && typeof (hex[hex.length]) != "undefined") {_RecordType("<322,337,15>",(hex[hex.length])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (hex) != "undefined") {_RecordType("<322,325,15>",(hex)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (hex.length) != "undefined") {_RecordType("<326,336,15>",(hex.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (hex) != "undefined") {_RecordType("<326,329,15>",(hex)); Inst26++; } } catch(e) {}
  var string = "";
try { if (Inst28 <= 1000 && typeof (string) != "undefined") {_RecordType("<354,360,16>",(string)); Inst28++; } } catch(e) {}

  for (var index = 0; index < hex.length; index++) {
try { if (Inst29 <= 1000 && typeof (index) != "undefined") {_RecordType("<379,384,18>",(index)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (index) != "undefined") {_RecordType("<390,395,18>",(index)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (hex.length) != "undefined") {_RecordType("<398,408,18>",(hex.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (hex) != "undefined") {_RecordType("<398,401,18>",(hex)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (index) != "undefined") {_RecordType("<410,415,18>",(index)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (hex[index]) != "undefined") {_RecordType("<433,443,19>",(hex[index])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (hex) != "undefined") {_RecordType("<433,436,19>",(hex)); Inst35++; } } catch(e) {}
    switch (hex[index]) {
      case 10:
        string += "A";
try { if (Inst36 <= 1000 && typeof (string) != "undefined") {_RecordType("<470,476,21>",(string)); Inst36++; } } catch(e) {}

      case 11:
    }
  }
}

