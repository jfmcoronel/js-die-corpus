var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
evalInFrame = function (global) {
try { if (Inst1 <= 1000 && typeof (global) != "undefined") {_RecordType("<24,30,1>",(global)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<48,57,2>",(newGlobal)); Inst3++; } } catch(e) {}
  dbgGlobal = newGlobal({
    newCompartment: true
  });
try { if (Inst2 <= 1000 && typeof (dbgGlobal) != "undefined") {_RecordType("<36,45,2>",(dbgGlobal)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (dbgGlobal.Debugger) != "undefined") {_RecordType("<103,121,5>",(dbgGlobal.Debugger)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (dbgGlobal) != "undefined") {_RecordType("<103,112,5>",(dbgGlobal)); Inst6++; } } catch(e) {}
  dbg = new dbgGlobal.Debugger();
try { if (Inst4 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<93,96,5>",(dbg)); Inst4++; } } catch(e) {}
  return function (upCount, code) {
try { if (Inst7 <= 1000 && typeof (upCount) != "undefined") {_RecordType("<144,151,6>",(upCount)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (code) != "undefined") {_RecordType("<153,157,6>",(code)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (dbg.addDebuggee) != "undefined") {_RecordType("<165,180,7>",(dbg.addDebuggee)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<165,168,7>",(dbg)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (global) != "undefined") {_RecordType("<181,187,7>",(global)); Inst11++; } } catch(e) {}
    dbg.addDebuggee(global);
try { if (Inst13 <= 1000 && typeof (dbg.getNewestFrame().older) != "undefined") {_RecordType("<206,232,8>",(dbg.getNewestFrame().older)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (dbg.getNewestFrame) != "undefined") {_RecordType("<206,224,8>",(dbg.getNewestFrame)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<206,209,8>",(dbg)); Inst15++; } } catch(e) {}
    var frame = dbg.getNewestFrame().older;
try { if (Inst12 <= 1000 && typeof (frame) != "undefined") {_RecordType("<198,203,8>",(frame)); Inst12++; } } catch(e) {}

    for (var i = 0; i < upCount; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<248,249,10>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<255,256,10>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (upCount) != "undefined") {_RecordType("<259,266,10>",(upCount)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<268,269,10>",(i)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (frame) != "undefined") {_RecordType("<286,291,11>",(frame)); Inst20++; } } catch(e) {}
      if (!frame) {
try { if (Inst22 <= 1000 && typeof (older) != "undefined") {_RecordType("<311,316,12>",(older)); Inst22++; } } catch(e) {}
        frame = older;
try { if (Inst21 <= 1000 && typeof (frame) != "undefined") {_RecordType("<303,308,12>",(frame)); Inst21++; } } catch(e) {}
      }
    }

try { if (Inst24 <= 1000 && typeof (frame.eval) != "undefined") {_RecordType("<350,360,16>",(frame.eval)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (frame) != "undefined") {_RecordType("<350,355,16>",(frame)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (code) != "undefined") {_RecordType("<361,365,16>",(code)); Inst26++; } } catch(e) {}
    completion = frame.eval(code);
try { if (Inst23 <= 1000 && typeof (completion) != "undefined") {_RecordType("<337,347,16>",(completion)); Inst23++; } } catch(e) {}
  };
}(this);
try { if (Inst0 <= 1000 && typeof (evalInFrame) != "undefined") {_RecordType("<0,11,1>",(evalInFrame)); Inst0++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (h) != "undefined") {_RecordType("<392,393,20>",(h)); Inst27++; } } catch(e) {}
function h() {
try { if (Inst28 <= 1000 && typeof (evalInFrame) != "undefined") {_RecordType("<400,411,21>",(evalInFrame)); Inst28++; } } catch(e) {}
  evalInFrame(0, "");
try { if (Inst29 <= 1000 && typeof (evalInFrame) != "undefined") {_RecordType("<422,433,22>",(evalInFrame)); Inst29++; } } catch(e) {}
  evalInFrame(0, "i");
try { if (Inst30 <= 1000 && typeof (evalInFrame) != "undefined") {_RecordType("<445,456,23>",(evalInFrame)); Inst30++; } } catch(e) {}
  evalInFrame(0, "a.push");
try { if (Inst31 <= 1000 && typeof (evalInFrame) != "undefined") {_RecordType("<473,484,24>",(evalInFrame)); Inst31++; } } catch(e) {}
  evalInFrame(1, "a.pushy");
}

try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<512,513,27>",(g)); Inst32++; } } catch(e) {}
function g() {
try { if (Inst33 <= 1000 && typeof (h) != "undefined") {_RecordType("<527,528,28>",(h)); Inst33++; } } catch(e) {}
  return h();
}

try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<544,545,31>",(f)); Inst34++; } } catch(e) {}
function f() {
try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<559,560,32>",(g)); Inst35++; } } catch(e) {}
  return g();
}

try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<567,568,35>",(f)); Inst36++; } } catch(e) {}
f();
try { if (Inst37 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<572,580,36>",(evaluate)); Inst37++; } } catch(e) {}
evaluate(`
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
g()
h()
`);

