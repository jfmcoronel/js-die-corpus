var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<8,20,1>",(Float32Array)); Inst1++; } } catch(e) {}
y = new Float32Array(11);
try { if (Inst0 <= 1000 && typeof (y) != "undefined") {_RecordType("<0,1,1>",(y)); Inst0++; } } catch(e) {}
x = [];
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<26,27,2>",(x)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<34,55,3>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<34,40,3>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<56,57,3>",(x)); Inst5++; } } catch(e) {}
Object.defineProperty(x, 18, {
  get: function () {
try { if (Inst6 <= 1000 && typeof (y.length) != "undefined") {_RecordType("<90,98,5>",(y.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<90,91,5>",(y)); Inst7++; } } catch(e) {}
    y.length;
  }
});
try { if (Inst8 <= 1000 && typeof (this.toSource) != "undefined") {_RecordType("<108,121,8>",(this.toSource)); Inst8++; } } catch(e) {}
this.toSource();
try { if (Inst10 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<129,138,9>",(undefined)); Inst10++; } } catch(e) {}
y = undefined; // The exact error message varies nondeterministically. Accept several
try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<125,126,9>",(y)); Inst9++; } } catch(e) {}
// variations on the theme.

var variations = [`y is undefined`, `can't access property "length" of undefined`, `undefined has no properties`];
try { if (Inst11 <= 1000 && typeof (variations) != "undefined") {_RecordType("<244,254,12>",(variations)); Inst11++; } } catch(e) {}
var hits = 0;
try { if (Inst12 <= 1000 && typeof (hits) != "undefined") {_RecordType("<359,363,13>",(hits)); Inst12++; } } catch(e) {}

for (var i = 0; i < 3; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<379,380,15>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<386,387,15>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,15>",(i)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<437,438,18>",(e)); Inst18++; } } catch(e) {}
  try {
try { if (Inst16 <= 1000 && typeof (x.toString) != "undefined") {_RecordType("<412,422,17>",(x.toString)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<412,413,17>",(x)); Inst17++; } } catch(e) {}
    x.toString();
  } catch (e) {
try { if (Inst19 <= 1000 && typeof (e.constructor.name) != "undefined") {_RecordType("<446,464,19>",(e.constructor.name)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (e.constructor) != "undefined") {_RecordType("<446,459,19>",(e.constructor)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<446,447,19>",(e)); Inst21++; } } catch(e) {}
    e.constructor.name;
    'TypeError';

try { if (Inst22 <= 1000 && typeof (variations.includes) != "undefined") {_RecordType("<493,512,22>",(variations.includes)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (variations) != "undefined") {_RecordType("<493,503,22>",(variations)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<513,522,22>",(e.message)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<513,514,22>",(e)); Inst25++; } } catch(e) {}
    if (!variations.includes(e.message)) {
try { if (Inst26 <= 1000 && typeof (Error) != "undefined") {_RecordType("<543,548,23>",(Error)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<568,574,23>",(uneval)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (variations) != "undefined") {_RecordType("<575,585,23>",(variations)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<595,601,23>",(uneval)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<602,611,23>",(e.message)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<602,603,23>",(e)); Inst31++; } } catch(e) {}
      throw new Error(`expected one of ${uneval(variations)}; got ${uneval(e.message)}`);
    }

try { if (Inst32 <= 1000 && typeof (hits) != "undefined") {_RecordType("<628,632,26>",(hits)); Inst32++; } } catch(e) {}
    hits++;
  }
}

try { if (Inst33 <= 1000 && typeof (hits) != "undefined") {_RecordType("<643,647,30>",(hits)); Inst33++; } } catch(e) {}
hits;
3;

