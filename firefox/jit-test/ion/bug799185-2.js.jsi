var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test(aLauncher) {
try { if (Inst1 <= 1000 && typeof (aLauncher) != "undefined") {_RecordType("<14,23,1>",(aLauncher)); Inst1++; } } catch(e) {}
  var result = null;
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<33,39,2>",(result)); Inst2++; } } catch(e) {}
  let prefs = 0;
try { if (Inst3 <= 1000 && typeof (prefs) != "undefined") {_RecordType("<54,59,3>",(prefs)); Inst3++; } } catch(e) {}
  let bundle = 1;
try { if (Inst4 <= 1000 && typeof (bundle) != "undefined") {_RecordType("<71,77,4>",(bundle)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (bundle) != "undefined") {_RecordType("<91,97,6>",(bundle)); Inst5++; } } catch(e) {}
  if (!bundle) {
    // Check to see if the user wishes to auto save to the default download
    // folder without prompting. Note that preference might not be set.
    let autodownload = false;
try { if (Inst6 <= 1000 && typeof (autodownload) != "undefined") {_RecordType("<257,269,9>",(autodownload)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<340,341,13>",(e)); Inst9++; } } catch(e) {}
    try {
try { if (Inst8 <= 1000 && typeof (autodownload) != "undefined") {_RecordType("<313,325,12>",(autodownload)); Inst8++; } } catch(e) {}
      autodownload = !!autodownload;
try { if (Inst7 <= 1000 && typeof (autodownload) != "undefined") {_RecordType("<296,308,12>",(autodownload)); Inst7++; } } catch(e) {}
    } catch (e) {
      ;
    }

try { if (Inst10 <= 1000 && typeof (autodownload) != "undefined") {_RecordType("<368,380,17>",(autodownload)); Inst10++; } } catch(e) {}
    if (autodownload) {
      // Retrieve the user's default download directory
      let dnldMgr = 2;
try { if (Inst11 <= 1000 && typeof (dnldMgr) != "undefined") {_RecordType("<450,457,19>",(dnldMgr)); Inst11++; } } catch(e) {}
      let defaultFolder = 3;
try { if (Inst12 <= 1000 && typeof (defaultFolder) != "undefined") {_RecordType("<473,486,20>",(defaultFolder)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (ex) != "undefined") {_RecordType("<541,543,24>",(ex)); Inst14++; } } catch(e) {}
      try {
        result = 42;
try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<513,519,23>",(result)); Inst13++; } } catch(e) {}
      } catch (ex) {
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<559,565,25>",(result)); Inst15++; } } catch(e) {}
        if (result == 12) {
          let prompter = 4;
try { if (Inst16 <= 1000 && typeof (prompter) != "undefined") {_RecordType("<589,597,26>",(prompter)); Inst16++; } } catch(e) {}
          return;
        }
      } // Check to make sure we have a valid directory, otherwise, prompt


try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<718,724,32>",(result)); Inst17++; } } catch(e) {}
      if (result) {
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<743,749,33>",(result)); Inst18++; } } catch(e) {}
        return result;
      }
    }
  } // Use file picker to show dialog.


  var picker = 0;
try { if (Inst19 <= 1000 && typeof (picker) != "undefined") {_RecordType("<812,818,39>",(picker)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (picker) != "undefined") {_RecordType("<831,837,41>",(picker)); Inst20++; } } catch(e) {}
  if (picker) {
    // aSuggestedFileExtension includes the period, so strip it
    picker = 1;
try { if (Inst21 <= 1000 && typeof (picker) != "undefined") {_RecordType("<909,915,43>",(picker)); Inst21++; } } catch(e) {}
  } else {
try { if (Inst26 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1007,1009,47>",(ex)); Inst26++; } } catch(e) {}
    try {
try { if (Inst23 <= 1000 && typeof (aLauncher.MIMEInfo.primaryExtension) != "undefined") {_RecordType("<957,992,46>",(aLauncher.MIMEInfo.primaryExtension)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (aLauncher.MIMEInfo) != "undefined") {_RecordType("<957,975,46>",(aLauncher.MIMEInfo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (aLauncher) != "undefined") {_RecordType("<957,966,46>",(aLauncher)); Inst25++; } } catch(e) {}
      picker = aLauncher.MIMEInfo.primaryExtension;
try { if (Inst22 <= 1000 && typeof (picker) != "undefined") {_RecordType("<948,954,46>",(picker)); Inst22++; } } catch(e) {}
    } catch (ex) {
      ;
    }
  }

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<1041,1047,52>",(result)); Inst27++; } } catch(e) {}
  return result;
}

try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<1052,1056,55>",(test)); Inst28++; } } catch(e) {}
test({});

