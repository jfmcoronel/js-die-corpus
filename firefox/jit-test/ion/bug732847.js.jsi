var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<19,20,3>",(x)); Inst0++; } } catch(e) {}
try {
  ;
} catch (x) {
  ;
}

var callStack = [];
try { if (Inst1 <= 1000 && typeof (callStack) != "undefined") {_RecordType("<35,44,7>",(callStack)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (currentFunc) != "undefined") {_RecordType("<61,72,9>",(currentFunc)); Inst2++; } } catch(e) {}
function currentFunc() {
try { if (Inst3 <= 1000 && typeof (callStack[0]) != "undefined") {_RecordType("<86,98,10>",(callStack[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (callStack) != "undefined") {_RecordType("<86,95,10>",(callStack)); Inst4++; } } catch(e) {}
  return callStack[0];
}

try { if (Inst5 <= 1000 && typeof (reportFailure) != "undefined") {_RecordType("<112,125,13>",(reportFailure)); Inst5++; } } catch(e) {}
function reportFailure() {
try { if (Inst7 <= 1000 && typeof (currentFunc) != "undefined") {_RecordType("<147,158,14>",(currentFunc)); Inst7++; } } catch(e) {}
  var funcName = currentFunc(); // play with the result to cause a SEGV.
try { if (Inst6 <= 1000 && typeof (funcName) != "undefined") {_RecordType("<136,144,14>",(funcName)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (funcName) != "undefined") {_RecordType("<219,227,16>",(funcName)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (funcName) != "undefined") {_RecordType("<230,238,16>",(funcName)); Inst10++; } } catch(e) {}
  var prefix = funcName ? funcName : ""; // Use OSR to compile the function at the end of the first run.
try { if (Inst8 <= 1000 && typeof (prefix) != "undefined") {_RecordType("<210,216,16>",(prefix)); Inst8++; } } catch(e) {}

  for (var i = 0; i < 50; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<321,322,18>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<328,329,18>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<336,337,18>",(i)); Inst13++; } } catch(e) {}
    ;
  }
}

callStack[0] = 'test'; // Run and compile with a string as result of currentFunc.
try { if (Inst14 <= 1000 && typeof (callStack[0]) != "undefined") {_RecordType("<356,368,23>",(callStack[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (callStack) != "undefined") {_RecordType("<356,365,23>",(callStack)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (reportFailure) != "undefined") {_RecordType("<439,452,25>",(reportFailure)); Inst16++; } } catch(e) {}
reportFailure();
try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<471,480,26>",(undefined)); Inst19++; } } catch(e) {}
callStack[0] = undefined; // Use previously compiled code with the string assumption.
try { if (Inst17 <= 1000 && typeof (callStack[0]) != "undefined") {_RecordType("<456,468,26>",(callStack[0])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (callStack) != "undefined") {_RecordType("<456,465,26>",(callStack)); Inst18++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (reportFailure) != "undefined") {_RecordType("<543,556,28>",(reportFailure)); Inst20++; } } catch(e) {}
reportFailure();

