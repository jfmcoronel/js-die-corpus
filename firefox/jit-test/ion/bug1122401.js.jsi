var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<11,12,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<25,35,2>",(Math.round)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<25,29,2>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<37,38,2>",(x)); Inst4++; } } catch(e) {}
  return Math.round((x >>> 0) / 2) >> 0;
}

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<60,61,5>",(f)); Inst5++; } } catch(e) {}
f(2);
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<66,67,6>",(f)); Inst6++; } } catch(e) {}
f(1);
1;

try { if (Inst7 <= 1000 && typeof (g) != "undefined") {_RecordType("<85,86,9>",(g)); Inst7++; } } catch(e) {}
function g(x, y) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<87,88,9>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<90,91,9>",(y)); Inst9++; } } catch(e) {}
  var x1 = 0;
try { if (Inst10 <= 1000 && typeof (x1) != "undefined") {_RecordType("<101,103,10>",(x1)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Math.tan) != "undefined") {_RecordType("<120,128,11>",(Math.tan)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<120,124,11>",(Math)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<129,130,11>",(y)); Inst14++; } } catch(e) {}
  var x2 = Math.tan(y);
try { if (Inst11 <= 1000 && typeof (x2) != "undefined") {_RecordType("<115,117,11>",(x2)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (x1) != "undefined") {_RecordType("<144,146,12>",(x1)); Inst16++; } } catch(e) {}
  var t1 = x1 >>> 0;
try { if (Inst15 <= 1000 && typeof (t1) != "undefined") {_RecordType("<139,141,12>",(t1)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x2) != "undefined") {_RecordType("<165,167,13>",(x2)); Inst18++; } } catch(e) {}
  var t2 = x2 >>> 0;
try { if (Inst17 <= 1000 && typeof (t2) != "undefined") {_RecordType("<160,162,13>",(t2)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (t1) != "undefined") {_RecordType("<185,187,14>",(t1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (t2) != "undefined") {_RecordType("<190,192,14>",(t2)); Inst21++; } } catch(e) {}
  var a = t1 / t2;
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<181,182,14>",(a)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<210,211,15>",(a)); Inst23++; } } catch(e) {}
  var sub = 1 - a;
try { if (Inst22 <= 1000 && typeof (sub) != "undefined") {_RecordType("<200,203,15>",(sub)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (sub) != "undefined") {_RecordType("<223,226,16>",(sub)); Inst25++; } } catch(e) {}
  var e = sub | 0;
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<219,220,16>",(e)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<241,242,17>",(e)); Inst26++; } } catch(e) {}
  return e;
}

try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<247,248,20>",(g)); Inst27++; } } catch(e) {}
g(8, 4);
try { if (Inst28 <= 1000 && typeof (g) != "undefined") {_RecordType("<256,257,21>",(g)); Inst28++; } } catch(e) {}
g(1, 0);
0;

