var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<9,13,1>",(ceil)); Inst0++; } } catch(e) {}
function ceil(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<14,15,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Math.ceil) != "undefined") {_RecordType("<28,37,2>",(Math.ceil)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<28,32,2>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<38,39,2>",(x)); Inst4++; } } catch(e) {}
  return Math.ceil(x);
} // Compiled as Ceil(double -> int32)


try { if (Inst5 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<83,87,6>",(ceil)); Inst5++; } } catch(e) {}
ceil(1.1);
2;
try { if (Inst6 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<97,101,8>",(ceil)); Inst6++; } } catch(e) {}
ceil(-1.1);
-1;
try { if (Inst7 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<113,117,10>",(ceil)); Inst7++; } } catch(e) {}
ceil(-3);
-3;
try { if (Inst8 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<127,131,12>",(ceil)); Inst8++; } } catch(e) {}
ceil(0);
0;
try { if (Inst9 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<139,143,14>",(ceil)); Inst9++; } } catch(e) {}
ceil(0);
0;
try { if (Inst10 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<151,155,16>",(ceil)); Inst10++; } } catch(e) {}
ceil(1.1);
2;
try { if (Inst11 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<165,169,18>",(ceil)); Inst11++; } } catch(e) {}
ceil(-1.1);
-1;
try { if (Inst12 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<181,185,20>",(ceil)); Inst12++; } } catch(e) {}
ceil(-3);
-3;
try { if (Inst13 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<195,199,22>",(ceil)); Inst13++; } } catch(e) {}
ceil(-0);
-0;
try { if (Inst14 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<209,213,24>",(ceil)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<214,222,24>",(Math.pow)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math) != "undefined") {_RecordType("<214,218,24>",(Math)); Inst16++; } } catch(e) {}
ceil(Math.pow(2, 32));
try { if (Inst17 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<232,240,25>",(Math.pow)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<232,236,25>",(Math)); Inst18++; } } catch(e) {}
Math.pow(2, 32);
try { if (Inst19 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<249,253,26>",(ceil)); Inst19++; } } catch(e) {}
ceil(-0);
-0;
try { if (Inst20 <= 1000 && typeof (ceil) != "undefined") {_RecordType("<263,267,28>",(ceil)); Inst20++; } } catch(e) {}
ceil(1.5);
2;

