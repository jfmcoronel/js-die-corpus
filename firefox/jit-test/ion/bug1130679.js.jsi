var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<11,12,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<25,26,2>",(x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math.imul) != "undefined") {_RecordType("<37,46,2>",(Math.imul)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Math) != "undefined") {_RecordType("<37,41,2>",(Math)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<50,51,2>",(x)); Inst5++; } } catch(e) {}
  return x >>> 0 !== Math.imul(1, x >>> 0);
}

try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<63,64,5>",(f)); Inst6++; } } catch(e) {}
f(0);
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<69,70,6>",(f)); Inst7++; } } catch(e) {}
f(-1);
true;

try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<92,93,9>",(g)); Inst8++; } } catch(e) {}
function g(x) {
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<94,95,9>",(x)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<121,122,10>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math.imul) != "undefined") {_RecordType("<127,136,10>",(Math.imul)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math) != "undefined") {_RecordType("<127,131,10>",(Math)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<153,154,10>",(x)); Inst13++; } } catch(e) {}
  return 2147483647 + x !== Math.imul(1, 2147483647 + x);
}

try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<160,161,13>",(g)); Inst14++; } } catch(e) {}
g(0);
try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<166,167,14>",(g)); Inst15++; } } catch(e) {}
g(1);
true;

try { if (Inst16 <= 1000 && typeof (h) != "undefined") {_RecordType("<188,189,17>",(h)); Inst16++; } } catch(e) {}
function h(x) {
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<190,191,17>",(x)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<214,215,18>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Math.imul) != "undefined") {_RecordType("<220,229,18>",(Math.imul)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math) != "undefined") {_RecordType("<220,224,18>",(Math)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<246,247,18>",(x)); Inst21++; } } catch(e) {}
  if (2147483647 + x !== Math.imul(1, 2147483647 + x)) {
    return true;
  }

try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<296,297,22>",(x)); Inst22++; } } catch(e) {}
  return 2147483647 + x | 0;
}

try { if (Inst23 <= 1000 && typeof (h) != "undefined") {_RecordType("<306,307,25>",(h)); Inst23++; } } catch(e) {}
h(0);
try { if (Inst24 <= 1000 && typeof (h) != "undefined") {_RecordType("<312,313,26>",(h)); Inst24++; } } catch(e) {}
h(1);
true;

try { if (Inst25 <= 1000 && typeof (i2) != "undefined") {_RecordType("<334,336,29>",(i2)); Inst25++; } } catch(e) {}
function i2(x) {
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<337,338,29>",(x)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<351,352,30>",(x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<357,358,30>",(x)); Inst28++; } } catch(e) {}
  return x === x;
}

try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<372,373,33>",(i)); Inst29++; } } catch(e) {}
function i(x) {
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<374,375,33>",(x)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (i2) != "undefined") {_RecordType("<388,390,34>",(i2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<395,404,34>",(Math.sign)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<395,399,34>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<405,406,34>",(x)); Inst34++; } } catch(e) {}
  return i2(0 / Math.sign(x > 0));
}

try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,37>",(i)); Inst35++; } } catch(e) {}
i(1);
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,38>",(i)); Inst36++; } } catch(e) {}
i(-1);
false;

