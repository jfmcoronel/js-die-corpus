var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Don't fail if code after try statement is unreachable.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<67,68,2>",(f)); Inst0++; } } catch(e) {}
function f() {
try { if (Inst1 <= 1000 && typeof (e) != "undefined") {_RecordType("<105,106,5>",(e)); Inst1++; } } catch(e) {}
  try {
    throw 1;
  } catch (e) {
    throw 5;
  } // Unreachable.


  0;
  2;
  var res = 0;
try { if (Inst2 <= 1000 && typeof (res) != "undefined") {_RecordType("<161,164,12>",(res)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<182,183,14>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<189,190,14>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,14>",(i)); Inst5++; } } catch(e) {}
    res += 2;
try { if (Inst6 <= 1000 && typeof (res) != "undefined") {_RecordType("<208,211,15>",(res)); Inst6++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (res) != "undefined") {_RecordType("<232,235,18>",(res)); Inst7++; } } catch(e) {}
  return res;
}

var c = 0;
try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<244,245,21>",(c)); Inst8++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<261,262,23>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<268,269,23>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<275,276,23>",(i)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<324,325,28>",(e)); Inst13++; } } catch(e) {}
  try {
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<294,295,25>",(f)); Inst12++; } } catch(e) {}
    f();
    0;
    1;
  } catch (e) {
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<338,339,29>",(e)); Inst15++; } } catch(e) {}
    c += e;
try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<333,334,29>",(c)); Inst14++; } } catch(e) {}
  }
}

try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<348,349,33>",(c)); Inst16++; } } catch(e) {}
c;
25;

