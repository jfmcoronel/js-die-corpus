var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (func1) != "undefined") {_RecordType("<9,14,1>",(func1)); Inst0++; } } catch(e) {}
function func1() {
  return "123";
}

try { if (Inst1 <= 1000 && typeof (func2) != "undefined") {_RecordType("<47,52,5>",(func2)); Inst1++; } } catch(e) {}
function func2(a, b, c, d, e) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<53,54,5>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<56,57,5>",(b)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (c) != "undefined") {_RecordType("<59,60,5>",(c)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<62,63,5>",(d)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<65,66,5>",(e)); Inst6++; } } catch(e) {}
  return "123";
}

try { if (Inst8 <= 1000 && typeof (func1) != "undefined") {_RecordType("<110,115,10>",(func1)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (func2) != "undefined") {_RecordType("<126,131,11>",(func2)); Inst9++; } } catch(e) {}
var imp = {
  func1: func1,
  func2: func2
};
try { if (Inst7 <= 1000 && typeof (imp) != "undefined") {_RecordType("<93,96,9>",(imp)); Inst7++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (FFI1) != "undefined") {_RecordType("<145,149,14>",(FFI1)); Inst10++; } } catch(e) {}
function FFI1(stdlib, foreign) {
try { if (Inst11 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<150,156,14>",(stdlib)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<158,165,14>",(foreign)); Inst12++; } } catch(e) {}
  "use asm";

try { if (Inst14 <= 1000 && typeof (foreign.func1) != "undefined") {_RecordType("<197,210,17>",(foreign.func1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<197,204,17>",(foreign)); Inst15++; } } catch(e) {}
  var func1 = foreign.func1;
try { if (Inst13 <= 1000 && typeof (func1) != "undefined") {_RecordType("<189,194,17>",(func1)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (foreign.func2) != "undefined") {_RecordType("<226,239,18>",(foreign.func2)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<226,233,18>",(foreign)); Inst18++; } } catch(e) {}
  var func2 = foreign.func2;
try { if (Inst16 <= 1000 && typeof (func2) != "undefined") {_RecordType("<218,223,18>",(func2)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<253,254,20>",(g)); Inst19++; } } catch(e) {}
  function g() {
try { if (Inst20 <= 1000 && typeof (func1) != "undefined") {_RecordType("<270,275,21>",(func1)); Inst20++; } } catch(e) {}
    return func1() | 0;
  }

try { if (Inst21 <= 1000 && typeof (h) != "undefined") {_RecordType("<299,300,24>",(h)); Inst21++; } } catch(e) {}
  function h() {
try { if (Inst22 <= 1000 && typeof (func2) != "undefined") {_RecordType("<316,321,25>",(func2)); Inst22++; } } catch(e) {}
    return func2() | 0;
  }

try { if (Inst23 <= 1000 && typeof (g) != "undefined") {_RecordType("<352,353,29>",(g)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (h) != "undefined") {_RecordType("<362,363,30>",(h)); Inst24++; } } catch(e) {}
  return {
    g: g,
    h: h
  };
}

try { if (Inst26 <= 1000 && typeof (FFI1) != "undefined") {_RecordType("<380,384,34>",(FFI1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (imp) != "undefined") {_RecordType("<391,394,34>",(imp)); Inst27++; } } catch(e) {}
var f = FFI1(this, imp); // produces AOT-compiled version
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<376,377,34>",(f)); Inst25++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (f.g) != "undefined") {_RecordType("<431,434,36>",(f.g)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<431,432,36>",(f)); Inst29++; } } catch(e) {}
f.g();
123;
try { if (Inst30 <= 1000 && typeof (f.g) != "undefined") {_RecordType("<443,446,38>",(f.g)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<443,444,38>",(f)); Inst31++; } } catch(e) {}
f.g();
123;
try { if (Inst32 <= 1000 && typeof (f.h) != "undefined") {_RecordType("<455,458,40>",(f.h)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<455,456,40>",(f)); Inst33++; } } catch(e) {}
f.h();
123;
try { if (Inst34 <= 1000 && typeof (f.h) != "undefined") {_RecordType("<467,470,42>",(f.h)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<467,468,42>",(f)); Inst35++; } } catch(e) {}
f.h();
123;

