var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
let singleton = {
  x: 1
};
try { if (Inst0 <= 1000 && typeof (singleton) != "undefined") {_RecordType("<4,13,1>",(singleton)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (singleton) != "undefined") {_RecordType("<56,65,5>",(singleton)); Inst2++; } } catch(e) {}
let holder = {
  sing_prop: singleton
};
try { if (Inst1 <= 1000 && typeof (holder) != "undefined") {_RecordType("<32,38,4>",(holder)); Inst1++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (makeChain) != "undefined") {_RecordType("<79,88,8>",(makeChain)); Inst3++; } } catch(e) {}
function makeChain(n, base) {
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<89,90,8>",(n)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (base) != "undefined") {_RecordType("<92,96,8>",(base)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (base) != "undefined") {_RecordType("<113,117,9>",(base)); Inst7++; } } catch(e) {}
  var curr = base;
try { if (Inst6 <= 1000 && typeof (curr) != "undefined") {_RecordType("<106,110,9>",(curr)); Inst6++; } } catch(e) {}

  for (var i = 0; i < n; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<131,132,11>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,11>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<142,143,11>",(n)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<145,146,11>",(i)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<163,176,12>",(Object.create)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<163,169,12>",(Object)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (curr) != "undefined") {_RecordType("<177,181,12>",(curr)); Inst15++; } } catch(e) {}
    curr = Object.create(curr);
try { if (Inst12 <= 1000 && typeof (curr) != "undefined") {_RecordType("<156,160,12>",(curr)); Inst12++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (curr) != "undefined") {_RecordType("<198,202,15>",(curr)); Inst16++; } } catch(e) {}
  return curr;
}

try { if (Inst18 <= 1000 && typeof (makeChain) != "undefined") {_RecordType("<219,228,18>",(makeChain)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (holder) != "undefined") {_RecordType("<235,241,18>",(holder)); Inst19++; } } catch(e) {}
let chain = makeChain(1000, holder);
try { if (Inst17 <= 1000 && typeof (chain) != "undefined") {_RecordType("<211,216,18>",(chain)); Inst17++; } } catch(e) {}
var x = 0;
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<248,249,19>",(x)); Inst20++; } } catch(e) {}

for (var i = 0; i < 1111; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,21>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,21>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<282,283,21>",(i)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (chain.sing_prop.x) != "undefined") {_RecordType("<296,313,22>",(chain.sing_prop.x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (chain.sing_prop) != "undefined") {_RecordType("<296,311,22>",(chain.sing_prop)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (chain) != "undefined") {_RecordType("<296,301,22>",(chain)); Inst27++; } } catch(e) {}
  x += chain.sing_prop.x;
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<291,292,22>",(x)); Inst24++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (singleton.x) != "undefined") {_RecordType("<332,343,23>",(singleton.x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (singleton) != "undefined") {_RecordType("<332,341,23>",(singleton)); Inst31++; } } catch(e) {}
  singleton.x = -singleton.x; // Don't want it to be a constant.
try { if (Inst28 <= 1000 && typeof (singleton.x) != "undefined") {_RecordType("<317,328,23>",(singleton.x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (singleton) != "undefined") {_RecordType("<317,326,23>",(singleton)); Inst29++; } } catch(e) {}
}

