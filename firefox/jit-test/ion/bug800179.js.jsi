var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| error: TypeError
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<288,289,20>",(e)); Inst14++; } } catch(e) {}
try {
  x = [];
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<39,40,3>",(x)); Inst0++; } } catch(e) {}

  y = function () {
    ;
  };
try { if (Inst1 <= 1000 && typeof (y) != "undefined") {_RecordType("<50,51,5>",(y)); Inst1++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<86,103,9>",(Uint8ClampedArray)); Inst3++; } } catch(e) {}
  t = Uint8ClampedArray;
try { if (Inst2 <= 1000 && typeof (t) != "undefined") {_RecordType("<82,83,9>",(t)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<107,128,10>",(Object.defineProperty)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<107,113,10>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<129,130,10>",(x)); Inst6++; } } catch(e) {}
  Object.defineProperty(x, 1, {
    get: function () {
      for (v of t) {
try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<171,172,12>",(v)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (t) != "undefined") {_RecordType("<176,177,12>",(t)); Inst8++; } } catch(e) {}
        ;
      }
    }
  });
try { if (Inst9 <= 1000 && typeof (Object.defineProperty(x, 8, {
    configurable: t
  }).reverse) != "undefined") {_RecordType("<213,275,17>",(Object.defineProperty(x, 8, {
    configurable: t
  }).reverse)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<213,234,17>",(Object.defineProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<213,219,17>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<235,236,17>",(x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (t) != "undefined") {_RecordType("<261,262,18>",(t)); Inst13++; } } catch(e) {}
  Object.defineProperty(x, 8, {
    configurable: t
  }).reverse();
} catch (e) {
  ;
}

try { if (Inst15 <= 1000 && typeof (Object.defineProperty([], 1, {
  configurable: true,
  get: function () {
    for (j = 0; j < 50; ++j) {
      y();
    }
  }
}).pop) != "undefined") {_RecordType("<300,432,24>",(Object.defineProperty([], 1, {
  configurable: true,
  get: function () {
    for (j = 0; j < 50; ++j) {
      y();
    }
  }
}).pop)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<300,321,24>",(Object.defineProperty)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<300,306,24>",(Object)); Inst17++; } } catch(e) {}
Object.defineProperty([], 1, {
  configurable: true,
  get: function () {
    for (j = 0; j < 50; ++j) {
try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<383,384,27>",(j)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (j) != "undefined") {_RecordType("<390,391,27>",(j)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<400,401,27>",(j)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<411,412,28>",(y)); Inst21++; } } catch(e) {}
      y();
    }
  }
}).pop();
try { if (Inst22 <= 1000 && typeof (x.map) != "undefined") {_RecordType("<436,441,32>",(x.map)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<436,437,32>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<442,443,32>",(y)); Inst24++; } } catch(e) {}
x.map(y);

