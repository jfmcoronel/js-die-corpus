var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<9,10,1>",(g)); Inst0++; } } catch(e) {}
function g() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<26,27,2>",(f)); Inst1++; } } catch(e) {}
  function f(v) {
try { if (Inst2 <= 1000 && typeof (v) != "undefined") {_RecordType("<28,29,2>",(v)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (v) != "undefined") {_RecordType("<42,43,3>",(v)); Inst4++; } } catch(e) {}
    v = +v;
try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<37,38,3>",(v)); Inst3++; } } catch(e) {}
    var infinity = 0.0;
try { if (Inst5 <= 1000 && typeof (infinity) != "undefined") {_RecordType("<53,61,4>",(infinity)); Inst5++; } } catch(e) {}
    var three = 0.0;
try { if (Inst6 <= 1000 && typeof (three) != "undefined") {_RecordType("<77,82,5>",(three)); Inst6++; } } catch(e) {}
    var nan = 0.;
try { if (Inst7 <= 1000 && typeof (nan) != "undefined") {_RecordType("<98,101,6>",(nan)); Inst7++; } } catch(e) {}
    var result = 0;
try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<116,122,7>",(result)); Inst8++; } } catch(e) {}
    infinity = 1.0 / 0.0;
try { if (Inst9 <= 1000 && typeof (infinity) != "undefined") {_RecordType("<132,140,8>",(infinity)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (v) != "undefined") {_RecordType("<166,167,9>",(v)); Inst11++; } } catch(e) {}
    three = v + 2.0;
try { if (Inst10 <= 1000 && typeof (three) != "undefined") {_RecordType("<158,163,9>",(three)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (infinity) != "undefined") {_RecordType("<185,193,10>",(infinity)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (three) != "undefined") {_RecordType("<196,201,10>",(three)); Inst14++; } } catch(e) {}
    nan = infinity % three;
try { if (Inst12 <= 1000 && typeof (nan) != "undefined") {_RecordType("<179,182,10>",(nan)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (nan) != "undefined") {_RecordType("<219,222,11>",(nan)); Inst16++; } } catch(e) {}
    result = ~~(nan + 42.0);
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<207,213,11>",(result)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<243,249,12>",(result)); Inst17++; } } catch(e) {}
    return result | 0;
  }

try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<269,270,15>",(f)); Inst18++; } } catch(e) {}
  return f;
}

try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<279,280,18>",(g)); Inst20++; } } catch(e) {}
g = g();
try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<275,276,18>",(g)); Inst19++; } } catch(e) {}
var x;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<288,289,19>",(x)); Inst21++; } } catch(e) {}

for (i = 0; i < 20000; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<297,298,21>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<304,305,21>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<317,318,21>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<328,329,22>",(g)); Inst26++; } } catch(e) {}
  x = g(1.0);
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<324,325,22>",(x)); Inst25++; } } catch(e) {}
}

try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<339,340,25>",(x)); Inst27++; } } catch(e) {}
x;
0;

