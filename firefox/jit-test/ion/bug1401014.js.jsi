var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Prevent optimizing top-level
with ({}) {
  ;
} // Unboxed object constructor candidate

try { if (Inst0 <= 1000 && typeof (Thing) != "undefined") {_RecordType("<100,105,6>",(Thing)); Inst0++; } } catch(e) {}
function Thing() {
  this.a = {}; // Object || null
try { if (Inst1 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<112,118,7>",(this.a)); Inst1++; } } catch(e) {}

  this.b = {}; // Object || null
try { if (Inst2 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<146,152,9>",(this.b)); Inst2++; } } catch(e) {}
}

try { if (Inst3 <= 1000 && typeof (Thing) != "undefined") {_RecordType("<184,189,12>",(Thing)); Inst3++; } } catch(e) {}
new Thing();
new Thing().a = null;
try { if (Inst4 <= 1000 && typeof (new Thing().a) != "undefined") {_RecordType("<193,206,13>",(new Thing().a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Thing) != "undefined") {_RecordType("<197,202,13>",(Thing)); Inst5++; } } catch(e) {}
new Thing().b = null;
try { if (Inst6 <= 1000 && typeof (new Thing().b) != "undefined") {_RecordType("<215,228,14>",(new Thing().b)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Thing) != "undefined") {_RecordType("<219,224,14>",(Thing)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<251,256,15>",(Array)); Inst9++; } } catch(e) {}
var arr = new Array(1000);
try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<241,244,15>",(arr)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<264,270,16>",(arr[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<264,267,16>",(arr)); Inst11++; } } catch(e) {}
arr[0];
try { if (Inst13 <= 1000 && typeof (Thing) != "undefined") {_RecordType("<286,291,17>",(Thing)); Inst13++; } } catch(e) {}
var ctx = new Thing();
try { if (Inst12 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<276,279,17>",(ctx)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (funPsh) != "undefined") {_RecordType("<305,311,19>",(funPsh)); Inst14++; } } catch(e) {}
function funPsh(t, x) {
try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<312,313,19>",(t)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<315,316,19>",(x)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<328,329,20>",(x)); Inst19++; } } catch(e) {}
  t.a = x;
try { if (Inst17 <= 1000 && typeof (t.a) != "undefined") {_RecordType("<322,325,20>",(t.a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<322,323,20>",(t)); Inst18++; } } catch(e) {}
}

try { if (Inst20 <= 1000 && typeof (funBug) != "undefined") {_RecordType("<343,349,23>",(funBug)); Inst20++; } } catch(e) {}
function funBug(t, i) {
try { if (Inst21 <= 1000 && typeof (t) != "undefined") {_RecordType("<350,351,23>",(t)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<353,354,23>",(i)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (t.a) != "undefined") {_RecordType("<366,369,24>",(t.a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (t) != "undefined") {_RecordType("<366,367,24>",(t)); Inst26++; } } catch(e) {}
  t.b = t.a; // GETPROP t.a
try { if (Inst23 <= 1000 && typeof (t.b) != "undefined") {_RecordType("<360,363,24>",(t.b)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (t) != "undefined") {_RecordType("<360,361,24>",(t)); Inst24++; } } catch(e) {}

  t.a = null; // SETPROP t.a
try { if (Inst27 <= 1000 && typeof (t.a) != "undefined") {_RecordType("<389,392,26>",(t.a)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (t) != "undefined") {_RecordType("<389,390,26>",(t)); Inst28++; } } catch(e) {}

  arr[i] = 0; // Bailout on uninitialized elements
try { if (Inst29 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<419,425,28>",(arr[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arr) != "undefined") {_RecordType("<419,422,28>",(arr)); Inst30++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (t.b) != "undefined") {_RecordType("<478,481,30>",(t.b)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (t) != "undefined") {_RecordType("<478,479,30>",(t)); Inst32++; } } catch(e) {}
  return t.b;
} // Ion compile


for (var i = 0; i < 20000; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<511,512,34>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<518,519,34>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<531,532,34>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (funBug) != "undefined") {_RecordType("<538,544,35>",(funBug)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<545,548,35>",(ctx)); Inst37++; } } catch(e) {}
  funBug(ctx, 0);
try { if (Inst38 <= 1000 && typeof (funPsh) != "undefined") {_RecordType("<556,562,36>",(funPsh)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<563,566,36>",(ctx)); Inst39++; } } catch(e) {}
  funPsh(ctx, {});
} // Invalidate


let tmp = {
  a: null,
  b: {}
};
try { if (Inst40 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<595,598,40>",(tmp)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (funBug) != "undefined") {_RecordType("<625,631,44>",(funBug)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<632,635,44>",(tmp)); Inst42++; } } catch(e) {}
funBug(tmp, 0); // Ion compile

for (var i = 0; i < 20000; ++i) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<666,667,46>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<673,674,46>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<686,687,46>",(i)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (funBug) != "undefined") {_RecordType("<693,699,47>",(funBug)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<700,703,47>",(ctx)); Inst47++; } } catch(e) {}
  funBug(ctx, 0);
try { if (Inst48 <= 1000 && typeof (funPsh) != "undefined") {_RecordType("<711,717,48>",(funPsh)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<718,721,48>",(ctx)); Inst49++; } } catch(e) {}
  funPsh(ctx, {});
} // Trigger bailout


try { if (Inst51 <= 1000 && typeof (funBug) != "undefined") {_RecordType("<761,767,52>",(funBug)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<768,771,52>",(ctx)); Inst52++; } } catch(e) {}
let res = funBug(ctx, 500); // Result should not be clobbered by |t.a = null|
try { if (Inst50 <= 1000 && typeof (res) != "undefined") {_RecordType("<755,758,52>",(res)); Inst50++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (res) != "undefined") {_RecordType("<830,833,54>",(res)); Inst53++; } } catch(e) {}
res === null;
false;

