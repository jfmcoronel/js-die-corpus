var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test Math.floor() for IonMonkey.
// Requires --ion-eager to enter at the top of each loop.
try { if (Inst1 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<359,367,3>",(Infinity)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<370,378,3>",(Infinity)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<382,390,3>",(Infinity)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<392,400,3>",(Infinity)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<404,407,3>",(NaN)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<409,412,3>",(NaN)); Inst6++; } } catch(e) {}
var floorDTests = [[-0, -0], [0.49999999999999997, 0], [0.5, 0], [1.0, 1], [1.5, 1], [792.8, 792], [-0.1, -1], [-1.0001, -2], [-3.14, -4], [2137483649.5, 2137483649], [2137483648.5, 2137483648], [2137483647.1, 2137483647], [900000000000, 900000000000], [-0, -0], [-Infinity, -Infinity], [Infinity, Infinity], [NaN, NaN], [-2147483648.8, -2147483649], [-2147483649.8, -2147483650]];
try { if (Inst0 <= 1000 && typeof (floorDTests) != "undefined") {_RecordType("<98,109,3>",(floorDTests)); Inst0++; } } catch(e) {}
var floorITests = [[0, 0], [4, 4], [-1, -1], [-7, -7], [2147483648, 2147483648], [-2147483649, -2147483649]]; // Typed functions to be compiled by Ion.
try { if (Inst7 <= 1000 && typeof (floorITests) != "undefined") {_RecordType("<480,491,4>",(floorITests)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (floorD) != "undefined") {_RecordType("<638,644,6>",(floorD)); Inst8++; } } catch(e) {}
function floorD(x) {
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<645,646,6>",(x)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<659,669,7>",(Math.floor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<659,663,7>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<670,671,7>",(x)); Inst12++; } } catch(e) {}
  return Math.floor(x);
}

try { if (Inst13 <= 1000 && typeof (floorI) != "undefined") {_RecordType("<686,692,10>",(floorI)); Inst13++; } } catch(e) {}
function floorI(x) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<693,694,10>",(x)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<707,717,11>",(Math.floor)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math) != "undefined") {_RecordType("<707,711,11>",(Math)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<718,719,11>",(x)); Inst17++; } } catch(e) {}
  return Math.floor(x);
}

try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<734,738,14>",(test)); Inst18++; } } catch(e) {}
function test() {
  // Always run this function in the interpreter.
  with ({}) {
    ;
  }

  for (var i = 0; i < floorDTests.length; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<829,830,20>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<836,837,20>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (floorDTests.length) != "undefined") {_RecordType("<840,858,20>",(floorDTests.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (floorDTests) != "undefined") {_RecordType("<840,851,20>",(floorDTests)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<860,861,20>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (floorD) != "undefined") {_RecordType("<871,877,21>",(floorD)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (floorDTests[i][0]) != "undefined") {_RecordType("<878,895,21>",(floorDTests[i][0])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (floorDTests[i]) != "undefined") {_RecordType("<878,892,21>",(floorDTests[i])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (floorDTests) != "undefined") {_RecordType("<878,889,21>",(floorDTests)); Inst27++; } } catch(e) {}
    floorD(floorDTests[i][0]);
try { if (Inst28 <= 1000 && typeof (floorDTests[i][1]) != "undefined") {_RecordType("<902,919,22>",(floorDTests[i][1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (floorDTests[i]) != "undefined") {_RecordType("<902,916,22>",(floorDTests[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (floorDTests) != "undefined") {_RecordType("<902,913,22>",(floorDTests)); Inst30++; } } catch(e) {}
    floorDTests[i][1];
  }

  for (var i = 0; i < floorITests.length; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<937,938,25>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<944,945,25>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (floorITests.length) != "undefined") {_RecordType("<948,966,25>",(floorITests.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (floorITests) != "undefined") {_RecordType("<948,959,25>",(floorITests)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<968,969,25>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (floorI) != "undefined") {_RecordType("<979,985,26>",(floorI)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (floorITests[i][0]) != "undefined") {_RecordType("<986,1003,26>",(floorITests[i][0])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (floorITests[i]) != "undefined") {_RecordType("<986,1000,26>",(floorITests[i])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (floorITests) != "undefined") {_RecordType("<986,997,26>",(floorITests)); Inst39++; } } catch(e) {}
    floorI(floorITests[i][0]);
try { if (Inst40 <= 1000 && typeof (floorITests[i][1]) != "undefined") {_RecordType("<1010,1027,27>",(floorITests[i][1])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (floorITests[i]) != "undefined") {_RecordType("<1010,1024,27>",(floorITests[i])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (floorITests) != "undefined") {_RecordType("<1010,1021,27>",(floorITests)); Inst42++; } } catch(e) {}
    floorITests[i][1];
  }
}

for (var i = 0; i < 40; i++) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<1045,1046,31>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<1052,1053,31>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<1060,1061,31>",(i)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1069,1073,32>",(test)); Inst46++; } } catch(e) {}
  test();
}

