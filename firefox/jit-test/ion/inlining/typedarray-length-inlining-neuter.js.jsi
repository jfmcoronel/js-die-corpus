var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var INLINE_INT8_AMOUNT = 4;
try { if (Inst0 <= 1000 && typeof (INLINE_INT8_AMOUNT) != "undefined") {_RecordType("<4,22,1>",(INLINE_INT8_AMOUNT)); Inst0++; } } catch(e) {}
var OUT_OF_LINE_INT8_AMOUNT = 237; // Small and inline
try { if (Inst1 <= 1000 && typeof (OUT_OF_LINE_INT8_AMOUNT) != "undefined") {_RecordType("<32,55,2>",(OUT_OF_LINE_INT8_AMOUNT)); Inst1++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<98,109,4>",(ArrayBuffer)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (INLINE_INT8_AMOUNT) != "undefined") {_RecordType("<110,128,4>",(INLINE_INT8_AMOUNT)); Inst4++; } } catch(e) {}
var ab1 = new ArrayBuffer(INLINE_INT8_AMOUNT);
try { if (Inst2 <= 1000 && typeof (ab1) != "undefined") {_RecordType("<88,91,4>",(ab1)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<145,154,5>",(Int8Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ab1) != "undefined") {_RecordType("<155,158,5>",(ab1)); Inst7++; } } catch(e) {}
var ta1 = new Int8Array(ab1);
try { if (Inst5 <= 1000 && typeof (ta1) != "undefined") {_RecordType("<135,138,5>",(ta1)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (q1) != "undefined") {_RecordType("<171,173,7>",(q1)); Inst8++; } } catch(e) {}
function q1() {
try { if (Inst9 <= 1000 && typeof (ta1.length) != "undefined") {_RecordType("<187,197,8>",(ta1.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ta1) != "undefined") {_RecordType("<187,190,8>",(ta1)); Inst10++; } } catch(e) {}
  return ta1.length;
}

try { if (Inst11 <= 1000 && typeof (q1) != "undefined") {_RecordType("<202,204,11>",(q1)); Inst11++; } } catch(e) {}
q1();
try { if (Inst12 <= 1000 && typeof (q1) != "undefined") {_RecordType("<208,210,12>",(q1)); Inst12++; } } catch(e) {}
q1();
try { if (Inst13 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<214,231,13>",(detachArrayBuffer)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ab1) != "undefined") {_RecordType("<232,235,13>",(ab1)); Inst14++; } } catch(e) {}
detachArrayBuffer(ab1);
try { if (Inst15 <= 1000 && typeof (q1) != "undefined") {_RecordType("<238,240,14>",(q1)); Inst15++; } } catch(e) {}
q1();
0;
// Large and out-of-line
try { if (Inst17 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<286,297,17>",(ArrayBuffer)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (OUT_OF_LINE_INT8_AMOUNT) != "undefined") {_RecordType("<298,321,17>",(OUT_OF_LINE_INT8_AMOUNT)); Inst18++; } } catch(e) {}
var ab2 = new ArrayBuffer(OUT_OF_LINE_INT8_AMOUNT);
try { if (Inst16 <= 1000 && typeof (ab2) != "undefined") {_RecordType("<276,279,17>",(ab2)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<338,347,18>",(Int8Array)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ab2) != "undefined") {_RecordType("<348,351,18>",(ab2)); Inst21++; } } catch(e) {}
var ta2 = new Int8Array(ab2);
try { if (Inst19 <= 1000 && typeof (ta2) != "undefined") {_RecordType("<328,331,18>",(ta2)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (q2) != "undefined") {_RecordType("<364,366,20>",(q2)); Inst22++; } } catch(e) {}
function q2() {
try { if (Inst23 <= 1000 && typeof (ta2.length) != "undefined") {_RecordType("<380,390,21>",(ta2.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ta2) != "undefined") {_RecordType("<380,383,21>",(ta2)); Inst24++; } } catch(e) {}
  return ta2.length;
}

try { if (Inst25 <= 1000 && typeof (q2) != "undefined") {_RecordType("<395,397,24>",(q2)); Inst25++; } } catch(e) {}
q2();
try { if (Inst26 <= 1000 && typeof (q2) != "undefined") {_RecordType("<401,403,25>",(q2)); Inst26++; } } catch(e) {}
q2();
try { if (Inst27 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<407,424,26>",(detachArrayBuffer)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ab2) != "undefined") {_RecordType("<425,428,26>",(ab2)); Inst28++; } } catch(e) {}
detachArrayBuffer(ab2);
try { if (Inst29 <= 1000 && typeof (q2) != "undefined") {_RecordType("<431,433,27>",(q2)); Inst29++; } } catch(e) {}
q2();
0;

