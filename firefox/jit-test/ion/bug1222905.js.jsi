var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var i = 0; i < 90; ++i) {
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<9,10,1>",(i)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<16,17,1>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<26,27,1>",(i)); Inst2++; } } catch(e) {}
  y = {
    x: 1
  };
try { if (Inst3 <= 1000 && typeof (y) != "undefined") {_RecordType("<33,34,2>",(y)); Inst3++; } } catch(e) {}
}

try { if (Inst4 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<56,77,7>",(Object.defineProperty)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<56,62,7>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<78,94,7>",(Object.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<78,84,7>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<111,112,8>",(v)); Inst8++; } } catch(e) {}
Object.defineProperty(Object.prototype, "zz", {
  set: v => 1
});

try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<132,133,11>",(f)); Inst9++; } } catch(e) {}
function f() {
  for (var i = 0; i < 1500; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<149,150,12>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<156,157,12>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<166,167,12>",(i)); Inst12++; } } catch(e) {}
    y[0] = 0;
try { if (Inst13 <= 1000 && typeof (y[0]) != "undefined") {_RecordType("<177,181,13>",(y[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<177,178,13>",(y)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<196,197,15>",(i)); Inst15++; } } catch(e) {}
    if (i > 1400) {
      y.zz = 3;
try { if (Inst16 <= 1000 && typeof (y.zz) != "undefined") {_RecordType("<214,218,16>",(y.zz)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<214,215,16>",(y)); Inst17++; } } catch(e) {}
    }
  }
}

try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<237,238,21>",(f)); Inst18++; } } catch(e) {}
f();

