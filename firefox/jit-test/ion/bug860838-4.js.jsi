var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (DiagModule) != "undefined") {_RecordType("<9,19,1>",(DiagModule)); Inst0++; } } catch(e) {}
function DiagModule(stdlib, foreign) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<20,26,1>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<28,35,1>",(foreign)); Inst2++; } } catch(e) {}
  "use asm";

try { if (Inst4 <= 1000 && typeof (stdlib.Math.sqrt) != "undefined") {_RecordType("<66,82,4>",(stdlib.Math.sqrt)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<66,77,4>",(stdlib.Math)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<66,72,4>",(stdlib)); Inst6++; } } catch(e) {}
  var sqrt = stdlib.Math.sqrt;
try { if (Inst3 <= 1000 && typeof (sqrt) != "undefined") {_RecordType("<59,63,4>",(sqrt)); Inst3++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (foreign.test) != "undefined") {_RecordType("<97,109,5>",(foreign.test)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<97,104,5>",(foreign)); Inst9++; } } catch(e) {}
  var test = foreign.test;
try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<90,94,5>",(test)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (foreign.foo) != "undefined") {_RecordType("<123,134,6>",(foreign.foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<123,130,6>",(foreign)); Inst12++; } } catch(e) {}
  var foo = foreign.foo;
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<117,120,6>",(foo)); Inst10++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (square) != "undefined") {_RecordType("<148,154,8>",(square)); Inst13++; } } catch(e) {}
  function square(x) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<155,156,8>",(x)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<168,169,9>",(x)); Inst16++; } } catch(e) {}
    x = x | 0;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<164,165,9>",(x)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<187,188,10>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<197,198,10>",(x)); Inst18++; } } catch(e) {}
    return (x | 0) + (x | 0) | 0;
  }

try { if (Inst19 <= 1000 && typeof (diag) != "undefined") {_RecordType("<225,229,13>",(diag)); Inst19++; } } catch(e) {}
  function diag() {
    var x = 0.0;
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<242,243,14>",(x)); Inst20++; } } catch(e) {}

    while (1) {
try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<274,278,17>",(test)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<282,283,17>",(x)); Inst22++; } } catch(e) {}
      test(1, x);
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<296,297,18>",(x)); Inst24++; } } catch(e) {}
      x = x + 1.0;
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<292,293,18>",(x)); Inst23++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<316,317,20>",(x)); Inst25++; } } catch(e) {}
      if (x > 15.0) {
        return 0;
      }
    }

    return 0;
  }

try { if (Inst26 <= 1000 && typeof (diag_1) != "undefined") {_RecordType("<391,397,28>",(diag_1)); Inst26++; } } catch(e) {}
  function diag_1() {
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<406,409,29>",(foo)); Inst27++; } } catch(e) {}
    foo();
    return 0;
  }

try { if (Inst28 <= 1000 && typeof (diag) != "undefined") {_RecordType("<453,457,34>",(diag)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (diag_1) != "undefined") {_RecordType("<471,477,35>",(diag_1)); Inst29++; } } catch(e) {}
  return {
    diag: diag,
    diag_1: diag_1
  };
}

var foreign = {
  test: function (a, b) {
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<520,521,40>",(a)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<523,524,40>",(b)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<532,537,41>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<538,539,41>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<548,549,41>",(b)); Inst35++; } } catch(e) {}
    print(a + ":" + b);
    var c = [0.0];
try { if (Inst36 <= 1000 && typeof (c) != "undefined") {_RecordType("<560,561,42>",(c)); Inst36++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<580,581,44>",(b)); Inst37++; } } catch(e) {}
    if (b > 10) {
try { if (Inst38 <= 1000 && typeof (c[1]) != "undefined") {_RecordType("<603,607,45>",(c[1])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (c) != "undefined") {_RecordType("<603,604,45>",(c)); Inst39++; } } catch(e) {}
      return c[1];
    }

try { if (Inst40 <= 1000 && typeof (c[0]) != "undefined") {_RecordType("<627,631,48>",(c[0])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (c) != "undefined") {_RecordType("<627,628,48>",(c)); Inst41++; } } catch(e) {}
    return c[0];
  },
  foo: function () {
    with ({}) {
      ;
    }
    ;
try { if (Inst42 <= 1000 && typeof (gc) != "undefined") {_RecordType("<699,701,55>",(gc)); Inst42++; } } catch(e) {}
    gc();
  } // make sure foreign is compiled

};
try { if (Inst30 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<490,497,39>",(foreign)); Inst30++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (DiagModule) != "undefined") {_RecordType("<757,767,59>",(DiagModule)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<774,781,59>",(foreign)); Inst45++; } } catch(e) {}
var fast = DiagModule(this, foreign); // produces AOT-compiled version
try { if (Inst43 <= 1000 && typeof (fast) != "undefined") {_RecordType("<750,754,59>",(fast)); Inst43++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (print) != "undefined") {_RecordType("<818,823,61>",(print)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (fast.diag_1) != "undefined") {_RecordType("<824,835,61>",(fast.diag_1)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (fast) != "undefined") {_RecordType("<824,828,61>",(fast)); Inst48++; } } catch(e) {}
print(fast.diag_1()); // 5

try { if (Inst49 <= 1000 && typeof (gc) != "undefined") {_RecordType("<846,848,63>",(gc)); Inst49++; } } catch(e) {}
gc();
try { if (Inst50 <= 1000 && typeof (print) != "undefined") {_RecordType("<852,857,64>",(print)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (fast.diag) != "undefined") {_RecordType("<858,867,64>",(fast.diag)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (fast) != "undefined") {_RecordType("<858,862,64>",(fast)); Inst52++; } } catch(e) {}
print(fast.diag()); // 5

