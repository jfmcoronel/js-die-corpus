var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test various ways of changing the behavior of |typedArray.length|.
try { if (Inst0 <= 1000 && typeof (addLengthProperty) != "undefined") {_RecordType("<79,96,2>",(addLengthProperty)); Inst0++; } } catch(e) {}
function addLengthProperty() {
try { if (Inst2 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<115,126,3>",(Uint16Array)); Inst2++; } } catch(e) {}
  var x = new Uint16Array();
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<107,108,3>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<132,153,4>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<132,138,4>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<154,155,4>",(x)); Inst5++; } } catch(e) {}
  Object.defineProperty(x, "length", {
    value: 1
  });

  for (var i = 0; i < 5; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,8>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,8>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,8>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<225,233,9>",(x.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<225,226,9>",(x)); Inst10++; } } catch(e) {}
    x.length;
    1;
  }
}

try { if (Inst11 <= 1000 && typeof (addLengthProperty) != "undefined") {_RecordType("<249,266,14>",(addLengthProperty)); Inst11++; } } catch(e) {}
addLengthProperty();

try { if (Inst12 <= 1000 && typeof (changePrototype) != "undefined") {_RecordType("<280,295,16>",(changePrototype)); Inst12++; } } catch(e) {}
function changePrototype() {
try { if (Inst14 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<314,325,17>",(Uint16Array)); Inst14++; } } catch(e) {}
  var x = new Uint16Array();
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<306,307,17>",(x)); Inst13++; } } catch(e) {}
  x.__proto__ = [0];
try { if (Inst15 <= 1000 && typeof (x.__proto__) != "undefined") {_RecordType("<331,342,18>",(x.__proto__)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<331,332,18>",(x)); Inst16++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<362,363,20>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,20>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<376,377,20>",(i)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<387,395,21>",(x.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<387,388,21>",(x)); Inst21++; } } catch(e) {}
    x.length;
    1;
  }
}

try { if (Inst22 <= 1000 && typeof (changePrototype) != "undefined") {_RecordType("<411,426,26>",(changePrototype)); Inst22++; } } catch(e) {}
changePrototype();

try { if (Inst23 <= 1000 && typeof (redefineLengthProperty) != "undefined") {_RecordType("<440,462,28>",(redefineLengthProperty)); Inst23++; } } catch(e) {}
function redefineLengthProperty() {
try { if (Inst25 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<481,492,29>",(Uint16Array)); Inst25++; } } catch(e) {}
  var x = new Uint16Array();
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<473,474,29>",(x)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<498,519,30>",(Object.defineProperty)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<498,504,30>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Uint16Array.prototype) != "undefined") {_RecordType("<520,541,30>",(Uint16Array.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<520,531,30>",(Uint16Array)); Inst29++; } } catch(e) {}
  Object.defineProperty(Uint16Array.prototype, "length", {
    value: 1
  });

  for (var i = 0; i < 5; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<586,587,34>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<593,594,34>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<600,601,34>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<611,619,35>",(x.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<611,612,35>",(x)); Inst34++; } } catch(e) {}
    x.length;
    1;
  }
}

try { if (Inst35 <= 1000 && typeof (redefineLengthProperty) != "undefined") {_RecordType("<635,657,40>",(redefineLengthProperty)); Inst35++; } } catch(e) {}
redefineLengthProperty();

