var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var OMIT = {};
try { if (Inst0 <= 1000 && typeof (OMIT) != "undefined") {_RecordType("<4,8,1>",(OMIT)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (OMIT) != "undefined") {_RecordType("<45,49,2>",(OMIT)); Inst2++; } } catch(e) {}
var WRITABLES = [true, false, OMIT];
try { if (Inst1 <= 1000 && typeof (WRITABLES) != "undefined") {_RecordType("<19,28,2>",(WRITABLES)); Inst1++; } } catch(e) {}
{
  var desc = {};
try { if (Inst3 <= 1000 && typeof (desc) != "undefined") {_RecordType("<60,64,4>",(desc)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (put) != "undefined") {_RecordType("<83,86,6>",(put)); Inst4++; } } catch(e) {}
  function put(field, value) {
try { if (Inst5 <= 1000 && typeof (field) != "undefined") {_RecordType("<87,92,6>",(field)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (value) != "undefined") {_RecordType("<94,99,6>",(value)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<128,133,7>",(value)); Inst9++; } } catch(e) {}
    return desc[field] = value;
try { if (Inst7 <= 1000 && typeof (desc[field]) != "undefined") {_RecordType("<114,125,7>",(desc[field])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (desc) != "undefined") {_RecordType("<114,118,7>",(desc)); Inst8++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (WRITABLES.forEach) != "undefined") {_RecordType("<142,159,10>",(WRITABLES.forEach)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (WRITABLES) != "undefined") {_RecordType("<142,151,10>",(WRITABLES)); Inst11++; } } catch(e) {}
  WRITABLES.forEach(function (writable) {
try { if (Inst12 <= 1000 && typeof (writable) != "undefined") {_RecordType("<170,178,10>",(writable)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (put) != "undefined") {_RecordType("<186,189,11>",(put)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (writable) != "undefined") {_RecordType("<202,210,11>",(writable)); Inst14++; } } catch(e) {}
    put("writable", writable);
  });
}
;

