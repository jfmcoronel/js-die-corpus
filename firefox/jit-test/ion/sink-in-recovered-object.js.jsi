var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var arr = [];
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<4,7,1>",(arr)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<24,25,3>",(f)); Inst1++; } } catch(e) {}
function f(cond, a) {
try { if (Inst2 <= 1000 && typeof (cond) != "undefined") {_RecordType("<26,30,3>",(cond)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<32,33,3>",(a)); Inst3++; } } catch(e) {}
  var obj = {
    a: 0
  };
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<43,46,4>",(obj)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<79,80,7>",(a)); Inst6++; } } catch(e) {}
  var x = 2 * a + 1;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<71,72,7>",(x)); Inst5++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (cond) != "undefined") {_RecordType("<93,97,9>",(cond)); Inst7++; } } catch(e) {}
  if (cond) {
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<113,114,10>",(x)); Inst10++; } } catch(e) {}
    obj.a = x;
try { if (Inst8 <= 1000 && typeof (obj.a) != "undefined") {_RecordType("<105,110,10>",(obj.a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<105,108,10>",(obj)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<120,128,11>",(arr.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<120,123,11>",(arr)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj.a) != "undefined") {_RecordType("<129,134,11>",(obj.a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<129,132,11>",(obj)); Inst14++; } } catch(e) {}
    arr.push(obj.a);
    obj.a = 1;
try { if (Inst15 <= 1000 && typeof (obj.a) != "undefined") {_RecordType("<141,146,12>",(obj.a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<141,144,12>",(obj)); Inst16++; } } catch(e) {}
  } else {
    obj.a = 1;
try { if (Inst17 <= 1000 && typeof (obj.a) != "undefined") {_RecordType("<167,172,14>",(obj.a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<167,170,14>",(obj)); Inst18++; } } catch(e) {}
  }

try { if (Inst19 <= 1000 && typeof (obj.a) != "undefined") {_RecordType("<192,197,17>",(obj.a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<192,195,17>",(obj)); Inst20++; } } catch(e) {}
  return obj.a;
}

for (var i = 0; i < 100; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<211,212,20>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<218,219,20>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<227,228,20>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<236,237,21>",(f)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<238,239,21>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,21>",(i)); Inst26++; } } catch(e) {}
  f(i % 2, i);
  1;
}

