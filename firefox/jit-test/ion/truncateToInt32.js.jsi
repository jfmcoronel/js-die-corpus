var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// vim: set ts=8 sts=4 et sw=4 tw=99:
try { if (Inst0 <= 1000 && typeof (w) != "undefined") {_RecordType("<47,48,2>",(w)); Inst0++; } } catch(e) {}
function w(y) {
try { if (Inst1 <= 1000 && typeof (y) != "undefined") {_RecordType("<49,50,2>",(y)); Inst1++; } } catch(e) {}
  var x = 23.5;
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<60,61,3>",(x)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<79,80,4>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<83,84,4>",(y)); Inst4++; } } catch(e) {}
  return x & y;
}

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<98,99,7>",(f)); Inst5++; } } catch(e) {}
function f(x, y) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<100,101,7>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<103,104,7>",(y)); Inst7++; } } catch(e) {}
  // Confuse the type analysis to not know the type of x.
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<182,183,9>",(x)); Inst9++; } } catch(e) {}
  var t = 3.5 + x;
try { if (Inst8 <= 1000 && typeof (t) != "undefined") {_RecordType("<172,173,9>",(t)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (t) != "undefined") {_RecordType("<187,188,10>",(t)); Inst10++; } } catch(e) {}
  t + 3.5;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<205,206,11>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<209,210,11>",(y)); Inst12++; } } catch(e) {}
  return x & y;
}

try { if (Inst13 <= 1000 && typeof (g_bool) != "undefined") {_RecordType("<224,230,14>",(g_bool)); Inst13++; } } catch(e) {}
function g_bool(x, y) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<231,232,14>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<234,235,14>",(y)); Inst15++; } } catch(e) {}
  var t;
try { if (Inst16 <= 1000 && typeof (t) != "undefined") {_RecordType("<245,246,15>",(t)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<255,256,17>",(x)); Inst17++; } } catch(e) {}
  if (x + 0) {
    t = true;
try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<268,269,18>",(t)); Inst18++; } } catch(e) {}
  } else {
    t = false;
try { if (Inst19 <= 1000 && typeof (t) != "undefined") {_RecordType("<293,294,20>",(t)); Inst19++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (t) != "undefined") {_RecordType("<318,319,23>",(t)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<322,323,23>",(y)); Inst21++; } } catch(e) {}
  return t & y;
}

try { if (Inst22 <= 1000 && typeof (g_null) != "undefined") {_RecordType("<337,343,26>",(g_null)); Inst22++; } } catch(e) {}
function g_null(x) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<344,345,26>",(x)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<365,366,27>",(x)); Inst24++; } } catch(e) {}
  return null & x;
}

var obj = {
  valueOf: function () {
    return 5;
  }
};
try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<375,378,30>",(obj)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (w) != "undefined") {_RecordType("<429,430,35>",(w)); Inst26++; } } catch(e) {}
w(93);
21;
try { if (Inst27 <= 1000 && typeof (g_bool) != "undefined") {_RecordType("<440,446,37>",(g_bool)); Inst27++; } } catch(e) {}
g_bool(1, 3);
1;
try { if (Inst28 <= 1000 && typeof (g_bool) != "undefined") {_RecordType("<457,463,39>",(g_bool)); Inst28++; } } catch(e) {}
g_bool(0, 3);
0;
try { if (Inst29 <= 1000 && typeof (g_null) != "undefined") {_RecordType("<474,480,41>",(g_null)); Inst29++; } } catch(e) {}
g_null(2);
0;
try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<488,489,43>",(f)); Inst30++; } } catch(e) {}
f(1, 7);
1;
try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<500,501,45>",(f)); Inst31++; } } catch(e) {}
f(true, 7);
1;
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<515,516,47>",(f)); Inst32++; } } catch(e) {}
f(false, 7);
0;
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<531,532,49>",(f)); Inst33++; } } catch(e) {}
f("3", 7);
3;
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<545,546,51>",(f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<547,550,51>",(obj)); Inst35++; } } catch(e) {}
f(obj, 7);
5;
try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<559,560,53>",(f)); Inst36++; } } catch(e) {}
f(3.5, 7);
3;
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<573,574,55>",(f)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<575,584,55>",(undefined)); Inst38++; } } catch(e) {}
f(undefined, 7);
0;
try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<593,594,57>",(f)); Inst39++; } } catch(e) {}
f(null, 7);
0;
try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<608,609,59>",(f)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math.NaN) != "undefined") {_RecordType("<610,618,59>",(Math.NaN)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Math) != "undefined") {_RecordType("<610,614,59>",(Math)); Inst42++; } } catch(e) {}
f(Math.NaN, 7);
0;

