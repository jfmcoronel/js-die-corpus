var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<9,14,1>",(test1)); Inst0++; } } catch(e) {}
function test1() {
  for (var i = 0; i <= 90; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<30,31,2>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<37,38,2>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<46,47,2>",(i)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<65,66,3>",(i)); Inst5++; } } catch(e) {}
    var x = i / 10.0;
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<61,62,3>",(x)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<84,94,5>",(Math.round)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<84,88,5>",(Math)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<95,96,5>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<102,112,5>",(Math.floor)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math) != "undefined") {_RecordType("<102,106,5>",(Math)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<113,114,5>",(x)); Inst11++; } } catch(e) {}
    if (Math.round(x) !== Math.floor(x + 0.5)) {
      0;
      1;
    }
  }
}

try { if (Inst12 <= 1000 && typeof (test1) != "undefined") {_RecordType("<156,161,12>",(test1)); Inst12++; } } catch(e) {}
test1();

try { if (Inst13 <= 1000 && typeof (test2) != "undefined") {_RecordType("<175,180,14>",(test2)); Inst13++; } } catch(e) {}
function test2() {
  for (var i = -5; i >= -90; i--) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<196,197,15>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,15>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<229,230,16>",(i)); Inst17++; } } catch(e) {}
    if (i === -5) {
      x = -0.500000000000001;
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<247,248,17>",(x)); Inst18++; } } catch(e) {}
    } else {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<294,295,19>",(i)); Inst20++; } } catch(e) {}
      x = i / 10.0;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<290,291,19>",(x)); Inst19++; } } catch(e) {}
    }

try { if (Inst21 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<319,329,22>",(Math.round)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<319,323,22>",(Math)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<330,331,22>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<337,347,22>",(Math.floor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<337,341,22>",(Math)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<348,349,22>",(x)); Inst26++; } } catch(e) {}
    if (Math.round(x) !== Math.floor(x + 0.5)) {
      0;
      1;
    }
  }
}

try { if (Inst27 <= 1000 && typeof (test2) != "undefined") {_RecordType("<391,396,29>",(test2)); Inst27++; } } catch(e) {}
test2();

