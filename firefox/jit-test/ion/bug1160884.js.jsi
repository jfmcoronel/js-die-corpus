var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(date) {
try { if (Inst1 <= 1000 && typeof (date) != "undefined") {_RecordType("<13,17,1>",(date)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (date.split) != "undefined") {_RecordType("<31,41,2>",(date.split)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (date) != "undefined") {_RecordType("<31,35,2>",(date)); Inst4++; } } catch(e) {}
  var F = date.split(" ");
try { if (Inst2 <= 1000 && typeof (F) != "undefined") {_RecordType("<27,28,2>",(F)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (F[0].split) != "undefined") {_RecordType("<58,68,3>",(F[0].split)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (F[0]) != "undefined") {_RecordType("<58,62,3>",(F[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (F) != "undefined") {_RecordType("<58,59,3>",(F)); Inst8++; } } catch(e) {}
  var D = F[0].split("-");
try { if (Inst5 <= 1000 && typeof (D) != "undefined") {_RecordType("<54,55,3>",(D)); Inst5++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (F[1].split) != "undefined") {_RecordType("<85,95,4>",(F[1].split)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (F[1]) != "undefined") {_RecordType("<85,89,4>",(F[1])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (F) != "undefined") {_RecordType("<85,86,4>",(F)); Inst12++; } } catch(e) {}
  var C = F[1].split(":");
try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<81,82,4>",(C)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Date) != "undefined") {_RecordType("<115,119,5>",(Date)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (D[0]) != "undefined") {_RecordType("<120,124,5>",(D[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (D) != "undefined") {_RecordType("<120,121,5>",(D)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (D[1]) != "undefined") {_RecordType("<126,130,5>",(D[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (D) != "undefined") {_RecordType("<126,127,5>",(D)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (D[2]) != "undefined") {_RecordType("<132,136,5>",(D[2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (D) != "undefined") {_RecordType("<132,133,5>",(D)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (C[0]) != "undefined") {_RecordType("<138,142,5>",(C[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (C) != "undefined") {_RecordType("<138,139,5>",(C)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (C[1]) != "undefined") {_RecordType("<144,148,5>",(C[1])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (C) != "undefined") {_RecordType("<144,145,5>",(C)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (C[2]) != "undefined") {_RecordType("<150,154,5>",(C[2])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (C) != "undefined") {_RecordType("<150,151,5>",(C)); Inst25++; } } catch(e) {}
  return new Date(D[0], D[1], D[2], C[0], C[1], C[2]);
}

try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<169,173,8>",(test)); Inst26++; } } catch(e) {}
function test() {
  with (this) {
    ;
  }
  ;

  for (var i = 0; i < 1200; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<220,221,14>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<227,228,14>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<237,238,14>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<248,251,15>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<273,274,15>",(i)); Inst31++; } } catch(e) {}
    foo("13-5-2015 18:30:" + i);
  }
}

try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<284,288,19>",(test)); Inst32++; } } catch(e) {}
test();

