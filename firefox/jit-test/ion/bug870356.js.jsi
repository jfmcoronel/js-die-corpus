var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<9,11,1>",(f1)); Inst0++; } } catch(e) {}
function f1(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<12,13,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<26,36,2>",(Math.round)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<26,30,2>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<37,38,2>",(x)); Inst4++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst5 <= 1000 && typeof (f1) != "undefined") {_RecordType("<44,46,5>",(f1)); Inst5++; } } catch(e) {}
f1(3.3);
3;
try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<56,58,7>",(f1)); Inst6++; } } catch(e) {}
f1(-2.842170943040401e-14);
-0;

try { if (Inst7 <= 1000 && typeof (f2) != "undefined") {_RecordType("<98,100,10>",(f2)); Inst7++; } } catch(e) {}
function f2(x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<101,102,10>",(x)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<115,125,11>",(Math.round)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math) != "undefined") {_RecordType("<115,119,11>",(Math)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<126,127,11>",(x)); Inst11++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst12 <= 1000 && typeof (f2) != "undefined") {_RecordType("<133,135,14>",(f2)); Inst12++; } } catch(e) {}
f2(3.3);
3;
try { if (Inst13 <= 1000 && typeof (f2) != "undefined") {_RecordType("<145,147,16>",(f2)); Inst13++; } } catch(e) {}
f2(-1.3);
-1;
try { if (Inst14 <= 1000 && typeof (f2) != "undefined") {_RecordType("<159,161,18>",(f2)); Inst14++; } } catch(e) {}
f2(-1.8);
-2;
try { if (Inst15 <= 1000 && typeof (f2) != "undefined") {_RecordType("<173,175,20>",(f2)); Inst15++; } } catch(e) {}
f2(-0.9);
-1;
try { if (Inst16 <= 1000 && typeof (f2) != "undefined") {_RecordType("<187,189,22>",(f2)); Inst16++; } } catch(e) {}
f2(-0.6);
-1;
try { if (Inst17 <= 1000 && typeof (f2) != "undefined") {_RecordType("<201,203,24>",(f2)); Inst17++; } } catch(e) {}
f2(-0.4);
-0;

try { if (Inst18 <= 1000 && typeof (f3) != "undefined") {_RecordType("<225,227,27>",(f3)); Inst18++; } } catch(e) {}
function f3(x) {
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<228,229,27>",(x)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<242,252,28>",(Math.round)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<242,246,28>",(Math)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<253,254,28>",(x)); Inst22++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst23 <= 1000 && typeof (f3) != "undefined") {_RecordType("<260,262,31>",(f3)); Inst23++; } } catch(e) {}
f3(0.1);
0;
try { if (Inst24 <= 1000 && typeof (f3) != "undefined") {_RecordType("<272,274,33>",(f3)); Inst24++; } } catch(e) {}
f3(-0.5);
-0;

try { if (Inst25 <= 1000 && typeof (f4) != "undefined") {_RecordType("<296,298,36>",(f4)); Inst25++; } } catch(e) {}
function f4(x) {
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<299,300,36>",(x)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<313,323,37>",(Math.round)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math) != "undefined") {_RecordType("<313,317,37>",(Math)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<324,325,37>",(x)); Inst29++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst30 <= 1000 && typeof (f4) != "undefined") {_RecordType("<331,333,40>",(f4)); Inst30++; } } catch(e) {}
f4(0.1);
0;
try { if (Inst31 <= 1000 && typeof (f4) != "undefined") {_RecordType("<343,345,42>",(f4)); Inst31++; } } catch(e) {}
f4(-0);
-0;

try { if (Inst32 <= 1000 && typeof (f5) != "undefined") {_RecordType("<365,367,45>",(f5)); Inst32++; } } catch(e) {}
function f5(x) {
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<368,369,45>",(x)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<382,392,46>",(Math.round)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math) != "undefined") {_RecordType("<382,386,46>",(Math)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<393,394,46>",(x)); Inst36++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst37 <= 1000 && typeof (f5) != "undefined") {_RecordType("<400,402,49>",(f5)); Inst37++; } } catch(e) {}
f5(2.9);
3;
try { if (Inst38 <= 1000 && typeof (f5) != "undefined") {_RecordType("<412,414,51>",(f5)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<415,418,51>",(NaN)); Inst39++; } } catch(e) {}
f5(NaN);
try { if (Inst40 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<421,424,52>",(NaN)); Inst40++; } } catch(e) {}
NaN;

