var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o, trigger) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<16,23,1>",(trigger)); Inst2++; } } catch(e) {}
  bar = function () {
try { if (Inst4 <= 1000 && typeof (o.getY) != "undefined") {_RecordType("<60,66,3>",(o.getY)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<60,61,3>",(o)); Inst5++; } } catch(e) {}
    return o.getY();
  };
try { if (Inst3 <= 1000 && typeof (bar) != "undefined") {_RecordType("<29,32,2>",(bar)); Inst3++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<82,89,6>",(trigger)); Inst6++; } } catch(e) {}
  if (trigger) {
try { if (Inst7 <= 1000 && typeof (bar) != "undefined") {_RecordType("<97,100,7>",(bar)); Inst7++; } } catch(e) {}
    bar();
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<108,117,8>",(undefined)); Inst8++; } } catch(e) {}
    undefined;
  }

  return 1;
}

try { if (Inst9 <= 1000 && typeof (O) != "undefined") {_RecordType("<148,149,14>",(O)); Inst9++; } } catch(e) {}
function O(o, trigger) {
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<150,151,14>",(o)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<153,160,14>",(trigger)); Inst11++; } } catch(e) {}
  this.a1 = 1;
try { if (Inst12 <= 1000 && typeof (this.a1) != "undefined") {_RecordType("<166,173,15>",(this.a1)); Inst12++; } } catch(e) {}
  this.a2 = 2;
try { if (Inst13 <= 1000 && typeof (this.a2) != "undefined") {_RecordType("<181,188,16>",(this.a2)); Inst13++; } } catch(e) {}
  this.a3 = 3;
try { if (Inst14 <= 1000 && typeof (this.a3) != "undefined") {_RecordType("<196,203,17>",(this.a3)); Inst14++; } } catch(e) {}
  this.a4 = 4;
try { if (Inst15 <= 1000 && typeof (this.a4) != "undefined") {_RecordType("<211,218,18>",(this.a4)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<235,238,19>",(foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<245,252,19>",(trigger)); Inst18++; } } catch(e) {}
  this.x = foo(this, trigger);
try { if (Inst16 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<226,232,19>",(this.x)); Inst16++; } } catch(e) {}
}

O.prototype.getY = function () {
try { if (Inst22 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<300,306,23>",(this.x)); Inst22++; } } catch(e) {}
  return this.x;
};
try { if (Inst19 <= 1000 && typeof (O.prototype.getY) != "undefined") {_RecordType("<258,274,22>",(O.prototype.getY)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (O.prototype) != "undefined") {_RecordType("<258,269,22>",(O.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (O) != "undefined") {_RecordType("<258,259,22>",(O)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<321,325,26>",(test)); Inst23++; } } catch(e) {}
function test() {
  with (this) {
    ;
  }
  ; // No Ion.

  var arr = [];
try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<378,381,32>",(arr)); Inst24++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,34>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,34>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,34>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<427,435,35>",(arr.push)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arr) != "undefined") {_RecordType("<427,430,35>",(arr)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (O) != "undefined") {_RecordType("<440,441,35>",(O)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<453,454,36>",(i)); Inst31++; } } catch(e) {}
    arr.push(new O({
      y: i
    }, false));
  }

  for (var i = 0; i < 100; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<487,488,40>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<494,495,40>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<503,504,40>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (bar) != "undefined") {_RecordType("<514,517,41>",(bar)); Inst35++; } } catch(e) {}
    bar();
  }

  for (var i = 0; i < 300; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<537,538,44>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<544,545,44>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<553,554,44>",(i)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<564,572,45>",(arr.push)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (arr) != "undefined") {_RecordType("<564,567,45>",(arr)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (O) != "undefined") {_RecordType("<577,578,45>",(O)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<590,591,46>",(i)); Inst42++; } } catch(e) {}
    arr.push(new O({
      y: i
    }, true));
  }
}

try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<614,618,51>",(test)); Inst43++; } } catch(e) {}
test();

