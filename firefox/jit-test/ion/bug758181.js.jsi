var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Ld) != "undefined") {_RecordType("<9,11,1>",(Ld)); Inst0++; } } catch(e) {}
function Ld(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<12,13,1>",(a)); Inst1++; } } catch(e) {}
  var sum = 0;
try { if (Inst2 <= 1000 && typeof (sum) != "undefined") {_RecordType("<23,26,2>",(sum)); Inst2++; } } catch(e) {}

  for (var d = 5; 0 <= d; d--) {
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<44,45,4>",(d)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (d) != "undefined") {_RecordType("<56,57,4>",(d)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<59,60,4>",(d)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a[d]) != "undefined") {_RecordType("<77,81,5>",(a[d])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<77,78,5>",(a)); Inst8++; } } catch(e) {}
    sum += a[d];
try { if (Inst6 <= 1000 && typeof (sum) != "undefined") {_RecordType("<70,73,5>",(sum)); Inst6++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (sum) != "undefined") {_RecordType("<97,100,8>",(sum)); Inst9++; } } catch(e) {}
  return sum;
}

var arr = [0, 1, 2, 3, 4, 5, 6];
try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<109,112,11>",(arr)); Inst10++; } } catch(e) {}

for (var i = 0; i < 50; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<148,149,13>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<155,156,13>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,13>",(i)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Ld) != "undefined") {_RecordType("<172,174,14>",(Ld)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<175,178,14>",(arr)); Inst15++; } } catch(e) {}
  Ld(arr);
  15;
}

var arr2 = [0, 1, 2, 3];
try { if (Inst16 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<194,198,18>",(arr2)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Ld) != "undefined") {_RecordType("<215,217,19>",(Ld)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<218,222,19>",(arr2)); Inst18++; } } catch(e) {}
Ld(arr2);
try { if (Inst19 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<225,228,20>",(NaN)); Inst19++; } } catch(e) {}
NaN;

