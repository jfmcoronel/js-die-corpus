var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test Math.sign() for IonMonkey.
// Requires --ion-eager to enter at the top of each loop.
try { if (Inst1 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<251,259,3>",(Infinity)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<267,275,3>",(Infinity)); Inst2++; } } catch(e) {}
var signDITests = [[0.49999999999999997, 1], [0.5, 1], [1.0, 1], [1.5, 1], [792.8, 1], [-0.1, -1], [-1.0001, -1], [-3.14, -1], [900000000000, 1], [+0, +0], [-Infinity, -1], [Infinity, 1]];
try { if (Inst0 <= 1000 && typeof (signDITests) != "undefined") {_RecordType("<97,108,3>",(signDITests)); Inst0++; } } catch(e) {}
var signDITests_bailout = [// Add a few 'double -> int' tests before the bailout.
...function* () {
  for (var i = 0; i < 50; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<410,411,6>",(i)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (signDITests) != "undefined") {_RecordType("<426,437,7>",(signDITests)); Inst7++; } } catch(e) {}
    yield* signDITests;
  }
}(), // Trigger bailout for negative zero.
[-0, -0]];
try { if (Inst3 <= 1000 && typeof (signDITests_bailout) != "undefined") {_RecordType("<286,305,4>",(signDITests_bailout)); Inst3++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<674,682,11>",(Infinity)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<690,698,11>",(Infinity)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<705,708,11>",(NaN)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<710,713,11>",(NaN)); Inst12++; } } catch(e) {}
var signDTests = [[-0, -0], [0.49999999999999997, 1], [0.5, 1], [1.0, 1], [1.5, 1], [792.8, 1], [-0.1, -1], [-1.0001, -1], [-3.14, -1], [900000000000, 1], [-0, -0], [+0, +0], [-Infinity, -1], [Infinity, 1], [NaN, NaN]];
try { if (Inst8 <= 1000 && typeof (signDTests) != "undefined") {_RecordType("<501,511,11>",(signDTests)); Inst8++; } } catch(e) {}
var signITests = [[0, 0], [4, 1], [-1, -1], [-7, -1], [2147483647, 1], [-2147483648, -1]]; // Typed functions to be compiled by Ion.
try { if (Inst13 <= 1000 && typeof (signITests) != "undefined") {_RecordType("<721,731,12>",(signITests)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (signDI) != "undefined") {_RecordType("<860,866,14>",(signDI)); Inst14++; } } catch(e) {}
function signDI(x) {
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<867,868,14>",(x)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<881,890,15>",(Math.sign)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<881,885,15>",(Math)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<891,892,15>",(x)); Inst18++; } } catch(e) {}
  return Math.sign(x);
}

try { if (Inst19 <= 1000 && typeof (signDI_bailout) != "undefined") {_RecordType("<907,921,18>",(signDI_bailout)); Inst19++; } } catch(e) {}
function signDI_bailout(x) {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<922,923,18>",(x)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<936,945,19>",(Math.sign)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<936,940,19>",(Math)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<946,947,19>",(x)); Inst23++; } } catch(e) {}
  return Math.sign(x);
}

try { if (Inst24 <= 1000 && typeof (signD) != "undefined") {_RecordType("<962,967,22>",(signD)); Inst24++; } } catch(e) {}
function signD(x) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<968,969,22>",(x)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<982,991,23>",(Math.sign)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<982,986,23>",(Math)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<992,993,23>",(x)); Inst28++; } } catch(e) {}
  return Math.sign(x);
}

try { if (Inst29 <= 1000 && typeof (signI) != "undefined") {_RecordType("<1008,1013,26>",(signI)); Inst29++; } } catch(e) {}
function signI(x) {
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<1014,1015,26>",(x)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<1028,1037,27>",(Math.sign)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1028,1032,27>",(Math)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<1038,1039,27>",(x)); Inst33++; } } catch(e) {}
  return Math.sign(x);
}

try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<1054,1058,30>",(test)); Inst34++; } } catch(e) {}
function test() {
  // Always run this function in the interpreter.
  with ({}) {
    ;
  }

  for (var i = 0; i < signDITests.length; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1149,1150,36>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<1156,1157,36>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (signDITests.length) != "undefined") {_RecordType("<1160,1178,36>",(signDITests.length)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (signDITests) != "undefined") {_RecordType("<1160,1171,36>",(signDITests)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1180,1181,36>",(i)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (signDI) != "undefined") {_RecordType("<1191,1197,37>",(signDI)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (signDITests[i][0]) != "undefined") {_RecordType("<1198,1215,37>",(signDITests[i][0])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (signDITests[i]) != "undefined") {_RecordType("<1198,1212,37>",(signDITests[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (signDITests) != "undefined") {_RecordType("<1198,1209,37>",(signDITests)); Inst43++; } } catch(e) {}
    signDI(signDITests[i][0]);
try { if (Inst44 <= 1000 && typeof (signDITests[i][1]) != "undefined") {_RecordType("<1222,1239,38>",(signDITests[i][1])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (signDITests[i]) != "undefined") {_RecordType("<1222,1236,38>",(signDITests[i])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (signDITests) != "undefined") {_RecordType("<1222,1233,38>",(signDITests)); Inst46++; } } catch(e) {}
    signDITests[i][1];
  }

  for (var i = 0; i < signDITests_bailout.length; i++) {
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1257,1258,41>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1264,1265,41>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (signDITests_bailout.length) != "undefined") {_RecordType("<1268,1294,41>",(signDITests_bailout.length)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (signDITests_bailout) != "undefined") {_RecordType("<1268,1287,41>",(signDITests_bailout)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<1296,1297,41>",(i)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (signDI_bailout) != "undefined") {_RecordType("<1307,1321,42>",(signDI_bailout)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (signDITests_bailout[i][0]) != "undefined") {_RecordType("<1322,1347,42>",(signDITests_bailout[i][0])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (signDITests_bailout[i]) != "undefined") {_RecordType("<1322,1344,42>",(signDITests_bailout[i])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (signDITests_bailout) != "undefined") {_RecordType("<1322,1341,42>",(signDITests_bailout)); Inst55++; } } catch(e) {}
    signDI_bailout(signDITests_bailout[i][0]);
try { if (Inst56 <= 1000 && typeof (signDITests_bailout[i][1]) != "undefined") {_RecordType("<1354,1379,43>",(signDITests_bailout[i][1])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (signDITests_bailout[i]) != "undefined") {_RecordType("<1354,1376,43>",(signDITests_bailout[i])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (signDITests_bailout) != "undefined") {_RecordType("<1354,1373,43>",(signDITests_bailout)); Inst58++; } } catch(e) {}
    signDITests_bailout[i][1];
  }

  for (var i = 0; i < signDTests.length; i++) {
try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<1397,1398,46>",(i)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1404,1405,46>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (signDTests.length) != "undefined") {_RecordType("<1408,1425,46>",(signDTests.length)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (signDTests) != "undefined") {_RecordType("<1408,1418,46>",(signDTests)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1427,1428,46>",(i)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (signD) != "undefined") {_RecordType("<1438,1443,47>",(signD)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (signDTests[i][0]) != "undefined") {_RecordType("<1444,1460,47>",(signDTests[i][0])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (signDTests[i]) != "undefined") {_RecordType("<1444,1457,47>",(signDTests[i])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (signDTests) != "undefined") {_RecordType("<1444,1454,47>",(signDTests)); Inst67++; } } catch(e) {}
    signD(signDTests[i][0]);
try { if (Inst68 <= 1000 && typeof (signDTests[i][1]) != "undefined") {_RecordType("<1467,1483,48>",(signDTests[i][1])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (signDTests[i]) != "undefined") {_RecordType("<1467,1480,48>",(signDTests[i])); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (signDTests) != "undefined") {_RecordType("<1467,1477,48>",(signDTests)); Inst70++; } } catch(e) {}
    signDTests[i][1];
  }

  for (var i = 0; i < signITests.length; i++) {
try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<1501,1502,51>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<1508,1509,51>",(i)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (signITests.length) != "undefined") {_RecordType("<1512,1529,51>",(signITests.length)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (signITests) != "undefined") {_RecordType("<1512,1522,51>",(signITests)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1531,1532,51>",(i)); Inst75++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (signI) != "undefined") {_RecordType("<1542,1547,52>",(signI)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (signITests[i][0]) != "undefined") {_RecordType("<1548,1564,52>",(signITests[i][0])); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (signITests[i]) != "undefined") {_RecordType("<1548,1561,52>",(signITests[i])); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (signITests) != "undefined") {_RecordType("<1548,1558,52>",(signITests)); Inst79++; } } catch(e) {}
    signI(signITests[i][0]);
try { if (Inst80 <= 1000 && typeof (signITests[i][1]) != "undefined") {_RecordType("<1571,1587,53>",(signITests[i][1])); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (signITests[i]) != "undefined") {_RecordType("<1571,1584,53>",(signITests[i])); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (signITests) != "undefined") {_RecordType("<1571,1581,53>",(signITests)); Inst82++; } } catch(e) {}
    signITests[i][1];
  }
}

for (var i = 0; i < 40; i++) {
try { if (Inst83 <= 1000 && typeof (i) != "undefined") {_RecordType("<1605,1606,57>",(i)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (i) != "undefined") {_RecordType("<1612,1613,57>",(i)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (i) != "undefined") {_RecordType("<1620,1621,57>",(i)); Inst85++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (test) != "undefined") {_RecordType("<1629,1633,58>",(test)); Inst86++; } } catch(e) {}
  test();
}

