var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<9,14,1>",(test1)); Inst0++; } } catch(e) {}
function test1() {
try { if (Inst1 <= 1000 && typeof (h) != "undefined") {_RecordType("<30,31,2>",(h)); Inst1++; } } catch(e) {}
  function h(node) {
try { if (Inst2 <= 1000 && typeof (node) != "undefined") {_RecordType("<32,36,2>",(node)); Inst2++; } } catch(e) {}
    var x = 0.1;
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<48,49,3>",(x)); Inst3++; } } catch(e) {}

    for (var i = 0; i < 100; i++) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<71,72,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<78,79,5>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<87,88,5>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (node.parent) != "undefined") {_RecordType("<105,116,6>",(node.parent)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (node) != "undefined") {_RecordType("<105,109,6>",(node)); Inst9++; } } catch(e) {}
      x += node.parent;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<100,101,6>",(x)); Inst7++; } } catch(e) {}
    }

try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<136,137,9>",(x)); Inst10++; } } catch(e) {}
    return x;
  }

try { if (Inst11 <= 1000 && typeof (build) != "undefined") {_RecordType("<155,160,12>",(build)); Inst11++; } } catch(e) {}
  function build(depth) {
try { if (Inst12 <= 1000 && typeof (depth) != "undefined") {_RecordType("<161,166,12>",(depth)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (depth) != "undefined") {_RecordType("<178,183,13>",(depth)); Inst13++; } } catch(e) {}
    if (depth > 10) {
      return {
        parent: 3.3
      };
    }

try { if (Inst14 <= 1000 && typeof (build) != "undefined") {_RecordType("<273,278,20>",(build)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (depth) != "undefined") {_RecordType("<279,284,20>",(depth)); Inst15++; } } catch(e) {}
    return {
      __proto__: build(depth + 1)
    };
  }

try { if (Inst17 <= 1000 && typeof (build) != "undefined") {_RecordType("<315,320,24>",(build)); Inst17++; } } catch(e) {}
  var tree = build(0);
try { if (Inst16 <= 1000 && typeof (tree) != "undefined") {_RecordType("<308,312,24>",(tree)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (h) != "undefined") {_RecordType("<327,328,25>",(h)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (tree) != "undefined") {_RecordType("<329,333,25>",(tree)); Inst19++; } } catch(e) {}
  h(tree) | 0;
  330;
}

try { if (Inst20 <= 1000 && typeof (test1) != "undefined") {_RecordType("<350,355,29>",(test1)); Inst20++; } } catch(e) {}
test1();

try { if (Inst21 <= 1000 && typeof (test2) != "undefined") {_RecordType("<369,374,31>",(test2)); Inst21++; } } catch(e) {}
function test2() {
try { if (Inst22 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<390,393,32>",(Foo)); Inst22++; } } catch(e) {}
  function Foo() {
    ;
  }

  ;
  Foo.prototype.x = 3.3;
try { if (Inst23 <= 1000 && typeof (Foo.prototype.x) != "undefined") {_RecordType("<415,430,37>",(Foo.prototype.x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<415,428,37>",(Foo.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<415,418,37>",(Foo)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<452,455,38>",(Foo)); Inst27++; } } catch(e) {}
  var o = new Foo();
try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<444,445,38>",(o)); Inst26++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,40>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<478,479,40>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<487,488,40>",(i)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<498,501,41>",(o.x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<498,499,41>",(o)); Inst32++; } } catch(e) {}
    o.x;
    3.3;
  }
}

try { if (Inst33 <= 1000 && typeof (test2) != "undefined") {_RecordType("<519,524,46>",(test2)); Inst33++; } } catch(e) {}
test2();

