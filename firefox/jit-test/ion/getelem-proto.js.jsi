var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var a = [1,, 2];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<4,5,1>",(a)); Inst0++; } } catch(e) {}
Array.prototype[1] = 3;
try { if (Inst1 <= 1000 && typeof (Array.prototype[1]) != "undefined") {_RecordType("<17,35,2>",(Array.prototype[1])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<17,32,2>",(Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<17,22,2>",(Array)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<51,52,4>",(f)); Inst4++; } } catch(e) {}
function f(arr) {
try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<53,56,4>",(arr)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<69,75,5>",(arr[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<69,72,5>",(arr)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<78,84,5>",(arr[1])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<78,81,5>",(arr)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arr[2]) != "undefined") {_RecordType("<87,93,5>",(arr[2])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<87,90,5>",(arr)); Inst11++; } } catch(e) {}
  return arr[0] + arr[1] + arr[2];
}

for (var i = 0; i < 70; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<107,108,8>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<114,115,8>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<122,123,8>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<131,132,9>",(f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<133,134,9>",(a)); Inst16++; } } catch(e) {}
  f(a);
  6;
}

try { if (Inst17 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<145,166,13>",(Object.defineProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<145,151,13>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<167,182,13>",(Array.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<167,172,13>",(Array)); Inst20++; } } catch(e) {}
Object.defineProperty(Array.prototype, "1", {
  get: function () {
    return 1234;
  }
});
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<237,238,18>",(f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<239,240,18>",(a)); Inst22++; } } catch(e) {}
f(a);
1237;
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<249,250,20>",(f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<251,252,20>",(a)); Inst24++; } } catch(e) {}
f(a);
1237;

