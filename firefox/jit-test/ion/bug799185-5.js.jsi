var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(aObject) {
try { if (Inst1 <= 1000 && typeof (aObject) != "undefined") {_RecordType("<13,20,1>",(aObject)); Inst1++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (ex) != "undefined") {_RecordType("<228,230,16>",(ex)); Inst9++; } } catch(e) {}
  try {
try { if (Inst3 <= 1000 && typeof (ex) != "undefined") {_RecordType("<101,103,7>",(ex)); Inst3++; } } catch(e) {}
    try {
try { if (Inst2 <= 1000 && typeof (aObject) != "undefined") {_RecordType("<53,60,4>",(aObject)); Inst2++; } } catch(e) {}
      if (!aObject) {
        return;
      }
    } catch (ex) {
try { if (Inst4 <= 1000 && typeof (ex.name) != "undefined") {_RecordType("<117,124,8>",(ex.name)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ex) != "undefined") {_RecordType("<117,119,8>",(ex)); Inst5++; } } catch(e) {}
      if (ex.name != "TypeError") {
try { if (Inst6 <= 1000 && typeof (ex) != "undefined") {_RecordType("<157,159,9>",(ex)); Inst6++; } } catch(e) {}
        throw ex;
      }
    } finally {
      ;
    }

try { if (Inst7 <= 1000 && typeof (undefined.x) != "undefined") {_RecordType("<204,215,15>",(undefined.x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<204,213,15>",(undefined)); Inst8++; } } catch(e) {}
    undefined.x;
  } catch (ex) {
try { if (Inst10 <= 1000 && typeof (ex.name) != "undefined") {_RecordType("<242,249,17>",(ex.name)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ex) != "undefined") {_RecordType("<242,244,17>",(ex)); Inst11++; } } catch(e) {}
    if (ex.name != "TypeError") {
try { if (Inst12 <= 1000 && typeof (ex) != "undefined") {_RecordType("<280,282,18>",(ex)); Inst12++; } } catch(e) {}
      throw ex;
    }

try { if (Inst13 <= 1000 && typeof (ex.name) != "undefined") {_RecordType("<299,306,21>",(ex.name)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ex) != "undefined") {_RecordType("<299,301,21>",(ex)); Inst14++; } } catch(e) {}
    if (ex.name != "TypeError") {
try { if (Inst15 <= 1000 && typeof (ex) != "undefined") {_RecordType("<337,339,22>",(ex)); Inst15++; } } catch(e) {}
      throw ex;
    }
  } finally {
    ;
  }
}

try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<374,377,29>",(foo)); Inst16++; } } catch(e) {}
foo(true);

