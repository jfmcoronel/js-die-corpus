var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<21,26,1>",(Array)); Inst1++; } } catch(e) {}
var gTestcases = new Array();
try { if (Inst0 <= 1000 && typeof (gTestcases) != "undefined") {_RecordType("<4,14,1>",(gTestcases)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<40,48,3>",(TestCase)); Inst2++; } } catch(e) {}
function TestCase(n, d, e, a) {
try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<49,50,3>",(n)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (d) != "undefined") {_RecordType("<52,53,3>",(d)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<55,56,3>",(e)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<58,59,3>",(a)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<77,78,4>",(n)); Inst8++; } } catch(e) {}
  this.name = n;
try { if (Inst7 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<65,74,4>",(this.name)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (d) != "undefined") {_RecordType("<101,102,5>",(d)); Inst10++; } } catch(e) {}
  this.description = d;
try { if (Inst9 <= 1000 && typeof (this.description) != "undefined") {_RecordType("<82,98,5>",(this.description)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<120,121,6>",(e)); Inst12++; } } catch(e) {}
  this.expect = e;
try { if (Inst11 <= 1000 && typeof (this.expect) != "undefined") {_RecordType("<106,117,6>",(this.expect)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<139,140,7>",(a)); Inst14++; } } catch(e) {}
  this.actual = a;
try { if (Inst13 <= 1000 && typeof (this.actual) != "undefined") {_RecordType("<125,136,7>",(this.actual)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (getTestCaseResult) != "undefined") {_RecordType("<158,175,8>",(getTestCaseResult)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<176,177,8>",(e)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<179,180,8>",(a)); Inst18++; } } catch(e) {}
  this.passed = getTestCaseResult(e, a);
try { if (Inst15 <= 1000 && typeof (this.passed) != "undefined") {_RecordType("<144,155,8>",(this.passed)); Inst15++; } } catch(e) {}
  options.stackvalues = [];
try { if (Inst19 <= 1000 && typeof (options.stackvalues) != "undefined") {_RecordType("<185,204,9>",(options.stackvalues)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (options) != "undefined") {_RecordType("<185,192,9>",(options)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (getTestCaseResult) != "undefined") {_RecordType("<223,240,11>",(getTestCaseResult)); Inst21++; } } catch(e) {}
  function getTestCaseResult(expected, actual) {
try { if (Inst22 <= 1000 && typeof (expected) != "undefined") {_RecordType("<241,249,11>",(expected)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<251,257,11>",(actual)); Inst23++; } } catch(e) {}
    ;
  }
}

try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<291,296,16>",(Array)); Inst25++; } } catch(e) {}
var lfcode = new Array();
try { if (Inst24 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<278,284,16>",(lfcode)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<300,311,17>",(lfcode.push)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<300,306,17>",(lfcode)); Inst27++; } } catch(e) {}
lfcode.push("3");
try { if (Inst28 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<318,329,18>",(lfcode.push)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<318,324,18>",(lfcode)); Inst29++; } } catch(e) {}
lfcode.push("var statusitems = [];\
var actualvalues = [];\
var expectedvalues = [];\
actual = '$a$^'.replace(/\\$\\^/, '--');\
actual = 'ababc'.replace(/abc/, '--');\
actual = 'ababc'.replace(/abc/g, '--');\
");
try { if (Inst30 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<531,542,25>",(lfcode.push)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<531,537,25>",(lfcode)); Inst31++; } } catch(e) {}
lfcode.push("\
var SECTION = \"15.4.4.3-1\";\
new TestCase( SECTION, \"Array.prototype.join.length\",           1,      Array.prototype.join.length );\
new TestCase( SECTION, \"delete Array.prototype.join.length\",    false,  delete Array.prototype.join.length );\
new TestCase( SECTION, \"delete Array.prototype.join.length; Array.prototype.join.length\",    1, eval(\"delete Array.prototype.join.length; Array.prototype.join.length\") );\
new TestCase(   SECTION, eval(\"var TEST_ARRAY = new Array(); TEST_ARRAY.join()\") );\
new TestCase(   SECTION, eval(\"var TEST_ARRAY = new Array(); TEST_ARRAY.join(' ')\") );\
new TestCase(   SECTION, eval(\"var TEST_ARRAY = new Array(null, void 0, true, false, 123, new Object(), new Boolean(true) ); TEST_ARRAY.join('&')\") );\
new TestCase(   SECTION, eval(\"var TEST_ARRAY = new Array(null, void 0, true, false, 123, new Object(), new Boolean(true) ); TEST_ARRAY.join('')\") );\
new TestCase(   SECTION, eval(\"var TEST_ARRAY = new Array(null, void 0, true, false, 123, new Object(), new Boolean(true) ); TEST_ARRAY.join(void 0)\") );\
new TestCase(   SECTION, eval(\"var TEST_ARRAY = new Array(null, void 0, true, false, 123, new Object(), new Boolean(true) ); TEST_ARRAY.join()\") );\
new TestCase(   SECTION, eval(\"var TEST_ARRAY = new Array(true); TEST_ARRAY.join('\\v')\") );\
SEPARATOR = \"\\t\";\
new TestCase( SECTION,TEST_ARRAY.join( SEPARATOR ) );\
");
try { if (Inst32 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<1941,1952,40>",(lfcode.push)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<1941,1947,40>",(lfcode)); Inst33++; } } catch(e) {}
lfcode.push("new TestCase( assertEq,   \"String.prototype.toString()\",        \"\",     String.prototype.toString() );\
new TestCase( SECTION,   \"(new String()).toString()\",          \"\",     (new String()).toString() );\
new TestCase( SECTION,   \"(new String(\\\"\\\")).toString()\",      \"\",     (new String(\"\")).toString() );\
new TestCase( SECTION,   \"(new String( String() )).toString()\",\"\",    (new String(String())).toString() );\
gczeal(4);\
new TestCase( SECTION,   \"(new String( 0 )).toString()\",       \"0\",    (new String((1))).toString() );\
");

while (true) {
try { if (Inst35 <= 1000 && typeof (lfcode.shift) != "undefined") {_RecordType("<2545,2557,49>",(lfcode.shift)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<2545,2551,49>",(lfcode)); Inst36++; } } catch(e) {}
  var file = lfcode.shift();
try { if (Inst34 <= 1000 && typeof (file) != "undefined") {_RecordType("<2538,2542,49>",(file)); Inst34++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (file) != "undefined") {_RecordType("<2568,2572,51>",(file)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2576,2585,51>",(undefined)); Inst38++; } } catch(e) {}
  if (file == undefined) {
    break;
  }

try { if (Inst39 <= 1000 && typeof (loadFile) != "undefined") {_RecordType("<2607,2615,55>",(loadFile)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (file) != "undefined") {_RecordType("<2616,2620,55>",(file)); Inst40++; } } catch(e) {}
  loadFile(file);
}

try { if (Inst41 <= 1000 && typeof (loadFile) != "undefined") {_RecordType("<2635,2643,58>",(loadFile)); Inst41++; } } catch(e) {}
function loadFile(lfVarx) {
try { if (Inst42 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<2644,2650,58>",(lfVarx)); Inst42++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (lfVare) != "undefined") {_RecordType("<2909,2915,72>",(lfVare)); Inst52++; } } catch(e) {}
  try {
try { if (Inst43 <= 1000 && typeof (lfVarx.substr) != "undefined") {_RecordType("<2670,2683,60>",(lfVarx.substr)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<2670,2676,60>",(lfVarx)); Inst44++; } } catch(e) {}
    if (lfVarx.substr(-3) == ".js") {
      ;
    } else {
try { if (Inst45 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<2732,2737,63>",(isNaN)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<2738,2744,63>",(lfVarx)); Inst46++; } } catch(e) {}
      if (!isNaN(lfVarx)) {
try { if (Inst48 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<2771,2777,64>",(lfVarx)); Inst48++; } } catch(e) {}
        lfRunTypeId = lfVarx;
try { if (Inst47 <= 1000 && typeof (lfRunTypeId) != "undefined") {_RecordType("<2757,2768,64>",(lfRunTypeId)); Inst47++; } } catch(e) {}
      } else {
try { if (Inst49 <= 1000 && typeof (lfRunTypeId) != "undefined") {_RecordType("<2810,2821,66>",(lfRunTypeId)); Inst49++; } } catch(e) {}
        switch (lfRunTypeId) {
          default:
try { if (Inst50 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<2856,2864,68>",(evaluate)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<2865,2871,68>",(lfVarx)); Inst51++; } } catch(e) {}
            evaluate(lfVarx);
        }
      }
    }
  } catch (lfVare) {
    ;
  }
}

