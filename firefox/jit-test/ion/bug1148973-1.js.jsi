var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<0,21,1>",(Object.defineProperty)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<0,6,1>",(Object)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (decodeURI) != "undefined") {_RecordType("<42,51,2>",(decodeURI)); Inst2++; } } catch(e) {}
Object.defineProperty(this, "x", {
  get: decodeURI,
  configurable: true
});

try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<203,204,14>",(e)); Inst10++; } } catch(e) {}
try {
try { if (Inst3 <= 1000 && typeof (String) != "undefined") {_RecordType("<87,93,7>",(String)); Inst3++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<102,107,7>",(Proxy)); Inst5++; } } catch(e) {}
  String(b = new Proxy(function () {
    ;
  }, {
    get: function (r, z) {
try { if (Inst6 <= 1000 && typeof (r) != "undefined") {_RecordType("<154,155,10>",(r)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (z) != "undefined") {_RecordType("<157,158,10>",(z)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x[z]) != "undefined") {_RecordType("<175,179,11>",(x[z])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<175,176,11>",(x)); Inst9++; } } catch(e) {}
      return x[z];
    }
  }));
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<94,95,7>",(b)); Inst4++; } } catch(e) {}
} catch (e) {
  ;
}

;
var log = "";
try { if (Inst11 <= 1000 && typeof (log) != "undefined") {_RecordType("<221,224,19>",(log)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<231,239,20>",(evaluate)); Inst12++; } } catch(e) {}
evaluate(`
try {
    function x() {}
    assertEq(String(b), "function () {}");
} catch (e) { log += "e"; }
`);
try { if (Inst13 <= 1000 && typeof (log) != "undefined") {_RecordType("<343,346,26>",(log)); Inst13++; } } catch(e) {}
log;
"e";

