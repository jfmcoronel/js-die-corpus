var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (toLiteralSource) != "undefined") {_RecordType("<9,24,1>",(toLiteralSource)); Inst0++; } } catch(e) {}
function toLiteralSource(value) {
try { if (Inst1 <= 1000 && typeof (value) != "undefined") {_RecordType("<25,30,1>",(value)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<40,45,2>",(value)); Inst2++; } } catch(e) {}
  if (value === null) {
    return 'null';
  }

try { if (Inst3 <= 1000 && typeof (value) != "undefined") {_RecordType("<95,100,6>",(value)); Inst3++; } } catch(e) {}
  if (typeof value === 'string') {
try { if (Inst4 <= 1000 && typeof (escapeString) != "undefined") {_RecordType("<128,140,7>",(escapeString)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<141,146,7>",(value)); Inst5++; } } catch(e) {}
    return escapeString(value);
  }

try { if (Inst6 <= 1000 && typeof (value) != "undefined") {_RecordType("<167,172,10>",(value)); Inst6++; } } catch(e) {}
  if (typeof value === 'number') {
try { if (Inst7 <= 1000 && typeof (generateNumber) != "undefined") {_RecordType("<200,214,11>",(generateNumber)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<215,220,11>",(value)); Inst8++; } } catch(e) {}
    return generateNumber(value);
  }

try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<241,246,14>",(value)); Inst9++; } } catch(e) {}
  if (typeof value === 'boolean') {
try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<275,280,15>",(value)); Inst10++; } } catch(e) {}
    return value ? 'true' : 'false';
  }

try { if (Inst11 <= 1000 && typeof (value.test) != "undefined") {_RecordType("<308,318,18>",(value.test)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (value) != "undefined") {_RecordType("<308,313,18>",(value)); Inst12++; } } catch(e) {}
  value.test();
}

try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<334,338,21>",(test)); Inst13++; } } catch(e) {}
function test(x) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<339,340,21>",(x)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<354,355,22>",(x)); Inst16++; } } catch(e) {}
  var b = x ? true : {};
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<350,351,22>",(b)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (toLiteralSource) != "undefined") {_RecordType("<378,393,23>",(toLiteralSource)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<394,395,23>",(b)); Inst18++; } } catch(e) {}
  return toLiteralSource(b);
}

var output = true;
try { if (Inst19 <= 1000 && typeof (output) != "undefined") {_RecordType("<405,411,26>",(output)); Inst19++; } } catch(e) {}

for (var i = 0; i < 1000; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<430,431,28>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<437,438,28>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<447,448,28>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<465,469,29>",(test)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (output) != "undefined") {_RecordType("<470,476,29>",(output)); Inst25++; } } catch(e) {}
  output = test(output) == 'true';
try { if (Inst23 <= 1000 && typeof (output) != "undefined") {_RecordType("<456,462,29>",(output)); Inst23++; } } catch(e) {}
}

