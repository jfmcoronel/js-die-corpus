var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (addRemove) != "undefined") {_RecordType("<9,18,1>",(addRemove)); Inst0++; } } catch(e) {}
function addRemove() {
  ;
}

try { if (Inst1 <= 1000 && typeof (removeAdd) != "undefined") {_RecordType("<39,48,5>",(removeAdd)); Inst1++; } } catch(e) {}
function removeAdd() {
  ;
}

try { if (Inst2 <= 1000 && typeof (testInterrupt) != "undefined") {_RecordType("<69,82,9>",(testInterrupt)); Inst2++; } } catch(e) {}
function testInterrupt() {
try { if (Inst4 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<93,102,10>",(newGlobal)); Inst4++; } } catch(e) {}
  g = newGlobal({
    newCompartment: true
  });
try { if (Inst3 <= 1000 && typeof (g) != "undefined") {_RecordType("<89,90,10>",(g)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<138,144,13>",(g.eval)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<138,139,13>",(g)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<159,160,13>",(f)); Inst7++; } } catch(e) {}
  g.eval("" + function f() {
try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<176,177,14>",(g)); Inst8++; } } catch(e) {}
    return g();
  });
try { if (Inst9 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<189,195,16>",(g.eval)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (g) != "undefined") {_RecordType("<189,190,16>",(g)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<210,211,16>",(g)); Inst11++; } } catch(e) {}
  g.eval("" + function g() {
try { if (Inst12 <= 1000 && typeof (h) != "undefined") {_RecordType("<227,228,17>",(h)); Inst12++; } } catch(e) {}
    return h();
  });
try { if (Inst13 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<240,246,19>",(g.eval)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<240,241,19>",(g)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (h) != "undefined") {_RecordType("<261,262,19>",(h)); Inst15++; } } catch(e) {}
  g.eval("" + function h() {
    for (var i = 0; i < 100; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,20>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,20>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<296,297,20>",(i)); Inst18++; } } catch(e) {}
      ;
    }
  });
try { if (Inst19 <= 1000 && typeof (setInterruptCallback) != "undefined") {_RecordType("<325,345,24>",(setInterruptCallback)); Inst19++; } } catch(e) {}
  setInterruptCallback(function () {
try { if (Inst20 <= 1000 && typeof (toggleSeq) != "undefined") {_RecordType("<364,373,25>",(toggleSeq)); Inst20++; } } catch(e) {}
    toggleSeq();
    return true;
  });
try { if (Inst21 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<402,405,28>",(g.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<402,403,28>",(g)); Inst22++; } } catch(e) {}
  g.f();
}

try { if (Inst24 <= 1000 && typeof (addRemove) != "undefined") {_RecordType("<424,433,31>",(addRemove)); Inst24++; } } catch(e) {}
toggleSeq = addRemove;
try { if (Inst23 <= 1000 && typeof (toggleSeq) != "undefined") {_RecordType("<412,421,31>",(toggleSeq)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (testInterrupt) != "undefined") {_RecordType("<435,448,32>",(testInterrupt)); Inst25++; } } catch(e) {}
testInterrupt();
try { if (Inst27 <= 1000 && typeof (removeAdd) != "undefined") {_RecordType("<464,473,33>",(removeAdd)); Inst27++; } } catch(e) {}
toggleSeq = removeAdd;
try { if (Inst26 <= 1000 && typeof (toggleSeq) != "undefined") {_RecordType("<452,461,33>",(toggleSeq)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (testInterrupt) != "undefined") {_RecordType("<475,488,34>",(testInterrupt)); Inst28++; } } catch(e) {}
testInterrupt();

