var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f56) != "undefined") {_RecordType("<9,12,1>",(f56)); Inst0++; } } catch(e) {}
function f56(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<13,14,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<28,29,2>",(x)); Inst3++; } } catch(e) {}
  var a = x >>> 0; // Range = [0 .. UINT32_MAX] (bits = 32)
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<24,25,2>",(a)); Inst2++; } } catch(e) {}

  var b = 0x800000; // == 2^23 (bits = 24)
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<85,86,4>",(b)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<129,130,6>",(a)); Inst5++; } } catch(e) {}
  if (a > 0) {
    // Beta node: Range [1 .. UINT32_MAX] (bits = 32)
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<204,205,8>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<208,209,8>",(b)); Inst8++; } } catch(e) {}
    var c = a * b; // Range = [0 .. +inf] (bits = a.bits + b.bits - 1 = 55)
try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<200,201,8>",(c)); Inst6++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<281,282,10>",(c)); Inst10++; } } catch(e) {}
    var d = c + 1; // Range = [0 .. +inf] (bits = c.bits + 1 = 56)
try { if (Inst9 <= 1000 && typeof (d) != "undefined") {_RecordType("<277,278,10>",(d)); Inst9++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<349,350,12>",(d)); Inst11++; } } catch(e) {}
    return (d | 0) & 1;
  } else {
    return 1;
  }
}

try { if (Inst12 <= 1000 && typeof (f55) != "undefined") {_RecordType("<402,405,18>",(f55)); Inst12++; } } catch(e) {}
function f55(x) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<406,407,18>",(x)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<421,422,19>",(x)); Inst15++; } } catch(e) {}
  var a = x >>> 0; // Range = [0 .. UINT32_MAX] (bits = 32)
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<417,418,19>",(a)); Inst14++; } } catch(e) {}

  var b = 0x400000; // == 2^22 (bits = 23)
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<478,479,21>",(b)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<522,523,23>",(a)); Inst17++; } } catch(e) {}
  if (a > 0) {
    // Beta node: Range [1 .. UINT32_MAX] (bits = 32)
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<597,598,25>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<601,602,25>",(b)); Inst20++; } } catch(e) {}
    var c = a * b; // Range = [0 .. +inf] (bits = a.bits + b.bits - 1 = 54)
try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<593,594,25>",(c)); Inst18++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<674,675,27>",(c)); Inst22++; } } catch(e) {}
    var d = c + 1; // Range = [0 .. +inf] (bits = c.bits + 1 = 55)
try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<670,671,27>",(d)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (d) != "undefined") {_RecordType("<742,743,29>",(d)); Inst23++; } } catch(e) {}
    return (d | 0) & 1;
  } else {
    return 1;
  }
} // Still returns 1, because the top-level bit is not represented.


try { if (Inst24 <= 1000 && typeof (f54) != "undefined") {_RecordType("<862,865,36>",(f54)); Inst24++; } } catch(e) {}
function f54(x) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<866,867,36>",(x)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<881,882,37>",(x)); Inst27++; } } catch(e) {}
  var a = x >>> 0; // Range = [0 .. UINT32_MAX] (bits = 32)
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<877,878,37>",(a)); Inst26++; } } catch(e) {}

  var b = 0x200000; // == 2^21 (bits = 22)
try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<938,939,39>",(b)); Inst28++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<982,983,41>",(a)); Inst29++; } } catch(e) {}
  if (a > 0) {
    // Beta node: Range [1 .. UINT32_MAX] (bits = 32)
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<1057,1058,43>",(a)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<1061,1062,43>",(b)); Inst32++; } } catch(e) {}
    var c = a * b; // Range = [0 .. +inf] (bits = a.bits + b.bits - 1 = 53)
try { if (Inst30 <= 1000 && typeof (c) != "undefined") {_RecordType("<1053,1054,43>",(c)); Inst30++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (c) != "undefined") {_RecordType("<1134,1135,45>",(c)); Inst34++; } } catch(e) {}
    var d = c + 1; // Range = [1 .. +inf] (bits = c.bits + 1 = 54)
try { if (Inst33 <= 1000 && typeof (d) != "undefined") {_RecordType("<1130,1131,45>",(d)); Inst33++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (d) != "undefined") {_RecordType("<1202,1203,47>",(d)); Inst35++; } } catch(e) {}
    return (d | 0) & 1;
  } else {
    return 1;
  }
} // Can safely truncate after these operations. (the mantissa has 53 bits)


try { if (Inst36 <= 1000 && typeof (f53) != "undefined") {_RecordType("<1330,1333,54>",(f53)); Inst36++; } } catch(e) {}
function f53(x) {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<1334,1335,54>",(x)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<1349,1350,55>",(x)); Inst39++; } } catch(e) {}
  var a = x >>> 0; // Range = [0 .. UINT32_MAX] (bits = 32)
try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<1345,1346,55>",(a)); Inst38++; } } catch(e) {}

  var b = 0x100000; // == 2^20 (bits = 21)
try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<1406,1407,57>",(b)); Inst40++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<1450,1451,59>",(a)); Inst41++; } } catch(e) {}
  if (a > 0) {
    // Beta node: Range [1 .. UINT32_MAX] (bits = 32)
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1525,1526,61>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<1529,1530,61>",(b)); Inst44++; } } catch(e) {}
    var c = a * b; // Range = [0 .. +inf] (bits = a.bits + b.bits - 1 = 52)
try { if (Inst42 <= 1000 && typeof (c) != "undefined") {_RecordType("<1521,1522,61>",(c)); Inst42++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (c) != "undefined") {_RecordType("<1602,1603,63>",(c)); Inst46++; } } catch(e) {}
    var d = c + 1; // Range = [1 .. +inf] (bits = c.bits + 1 = 53)
try { if (Inst45 <= 1000 && typeof (d) != "undefined") {_RecordType("<1598,1599,63>",(d)); Inst45++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (d) != "undefined") {_RecordType("<1670,1671,65>",(d)); Inst47++; } } catch(e) {}
    return (d | 0) & 1;
  } else {
    return 1;
  }
}

try { if (Inst48 <= 1000 && typeof (f52) != "undefined") {_RecordType("<1723,1726,71>",(f52)); Inst48++; } } catch(e) {}
function f52(x) {
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<1727,1728,71>",(x)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<1742,1743,72>",(x)); Inst51++; } } catch(e) {}
  var a = x >>> 0; // Range = [0 .. UINT32_MAX] (bits = 32)
try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<1738,1739,72>",(a)); Inst50++; } } catch(e) {}

  var b = 0x80000; // == 2^19 (bits = 20)
try { if (Inst52 <= 1000 && typeof (b) != "undefined") {_RecordType("<1799,1800,74>",(b)); Inst52++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<1842,1843,76>",(a)); Inst53++; } } catch(e) {}
  if (a > 0) {
    // Beta node: Range [1 .. UINT32_MAX] (bits = 32)
try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<1917,1918,78>",(a)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (b) != "undefined") {_RecordType("<1921,1922,78>",(b)); Inst56++; } } catch(e) {}
    var c = a * b; // Range = [0 .. +inf] (bits = a.bits + b.bits - 1 = 51)
try { if (Inst54 <= 1000 && typeof (c) != "undefined") {_RecordType("<1913,1914,78>",(c)); Inst54++; } } catch(e) {}

try { if (Inst58 <= 1000 && typeof (c) != "undefined") {_RecordType("<1994,1995,80>",(c)); Inst58++; } } catch(e) {}
    var d = c + 1; // Range = [1 .. +inf] (bits = c.bits + 1 = 52)
try { if (Inst57 <= 1000 && typeof (d) != "undefined") {_RecordType("<1990,1991,80>",(d)); Inst57++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (d) != "undefined") {_RecordType("<2062,2063,82>",(d)); Inst59++; } } catch(e) {}
    return (d | 0) & 1;
  } else {
    return 1;
  }
}

try { if (Inst60 <= 1000 && typeof (f51) != "undefined") {_RecordType("<2115,2118,88>",(f51)); Inst60++; } } catch(e) {}
function f51(x) {
try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<2119,2120,88>",(x)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (x) != "undefined") {_RecordType("<2134,2135,89>",(x)); Inst63++; } } catch(e) {}
  var a = x >>> 0; // Range = [0 .. UINT32_MAX] (bits = 32)
try { if (Inst62 <= 1000 && typeof (a) != "undefined") {_RecordType("<2130,2131,89>",(a)); Inst62++; } } catch(e) {}

  var b = 0x40000; // == 2^18 (bits = 19)
try { if (Inst64 <= 1000 && typeof (b) != "undefined") {_RecordType("<2191,2192,91>",(b)); Inst64++; } } catch(e) {}

try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<2234,2235,93>",(a)); Inst65++; } } catch(e) {}
  if (a > 0) {
    // Beta node: Range [1 .. UINT32_MAX] (bits = 32)
try { if (Inst67 <= 1000 && typeof (a) != "undefined") {_RecordType("<2309,2310,95>",(a)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (b) != "undefined") {_RecordType("<2313,2314,95>",(b)); Inst68++; } } catch(e) {}
    var c = a * b; // Range = [0 .. +inf] (bits = a.bits + b.bits - 1 = 50)
try { if (Inst66 <= 1000 && typeof (c) != "undefined") {_RecordType("<2305,2306,95>",(c)); Inst66++; } } catch(e) {}

try { if (Inst70 <= 1000 && typeof (c) != "undefined") {_RecordType("<2386,2387,97>",(c)); Inst70++; } } catch(e) {}
    var d = c + 1; // Range = [1 .. +inf] (bits = c.bits + 1 = 51)
try { if (Inst69 <= 1000 && typeof (d) != "undefined") {_RecordType("<2382,2383,97>",(d)); Inst69++; } } catch(e) {}

try { if (Inst71 <= 1000 && typeof (d) != "undefined") {_RecordType("<2454,2455,99>",(d)); Inst71++; } } catch(e) {}
    return (d | 0) & 1;
  } else {
    return 1;
  }
}

try { if (Inst73 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<2506,2514,105>",(Math.pow)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2506,2510,105>",(Math)); Inst74++; } } catch(e) {}
var e = Math.pow(2, 32);
try { if (Inst72 <= 1000 && typeof (e) != "undefined") {_RecordType("<2502,2503,105>",(e)); Inst72++; } } catch(e) {}

for (var i = 1; i < e; i = i * 1.5) {
try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<2533,2534,107>",(i)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<2540,2541,107>",(i)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (e) != "undefined") {_RecordType("<2544,2545,107>",(e)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (i) != "undefined") {_RecordType("<2547,2548,107>",(i)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (i) != "undefined") {_RecordType("<2551,2552,107>",(i)); Inst79++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<2572,2573,108>",(i)); Inst81++; } } catch(e) {}
  var x = i >>> 0;
try { if (Inst80 <= 1000 && typeof (x) != "undefined") {_RecordType("<2568,2569,108>",(x)); Inst80++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (f56) != "undefined") {_RecordType("<2583,2586,109>",(f56)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (x) != "undefined") {_RecordType("<2587,2588,109>",(x)); Inst83++; } } catch(e) {}
  f56(x);
try { if (Inst84 <= 1000 && typeof (x) != "undefined") {_RecordType("<2593,2594,110>",(x)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<2598,2606,110>",(Math.pow)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2598,2602,110>",(Math)); Inst86++; } } catch(e) {}
  x >= Math.pow(2, 30) ? 0 : 1;
try { if (Inst87 <= 1000 && typeof (f55) != "undefined") {_RecordType("<2625,2628,111>",(f55)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (x) != "undefined") {_RecordType("<2629,2630,111>",(x)); Inst88++; } } catch(e) {}
  f55(x);
try { if (Inst89 <= 1000 && typeof (x) != "undefined") {_RecordType("<2635,2636,112>",(x)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<2640,2648,112>",(Math.pow)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2640,2644,112>",(Math)); Inst91++; } } catch(e) {}
  x >= Math.pow(2, 31) ? 0 : 1;
try { if (Inst92 <= 1000 && typeof (f54) != "undefined") {_RecordType("<2667,2670,113>",(f54)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (x) != "undefined") {_RecordType("<2671,2672,113>",(x)); Inst93++; } } catch(e) {}
  f54(x);
  1;
try { if (Inst94 <= 1000 && typeof (f53) != "undefined") {_RecordType("<2682,2685,115>",(f53)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (x) != "undefined") {_RecordType("<2686,2687,115>",(x)); Inst95++; } } catch(e) {}
  f53(x);
  1;
try { if (Inst96 <= 1000 && typeof (f52) != "undefined") {_RecordType("<2697,2700,117>",(f52)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (x) != "undefined") {_RecordType("<2701,2702,117>",(x)); Inst97++; } } catch(e) {}
  f52(x);
  1;
try { if (Inst98 <= 1000 && typeof (f51) != "undefined") {_RecordType("<2712,2715,119>",(f51)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (x) != "undefined") {_RecordType("<2716,2717,119>",(x)); Inst99++; } } catch(e) {}
  f51(x);
  1;
}

