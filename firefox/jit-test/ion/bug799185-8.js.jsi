var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| error: TypeError
try { if (Inst0 <= 1000 && typeof (testBitOrInconvertibleObjectInconvertibleObject) != "undefined") {_RecordType("<40,87,2>",(testBitOrInconvertibleObjectInconvertibleObject)); Inst0++; } } catch(e) {}
function testBitOrInconvertibleObjectInconvertibleObject() {
  var o1 = {};
try { if (Inst1 <= 1000 && typeof (o1) != "undefined") {_RecordType("<98,100,3>",(o1)); Inst1++; } } catch(e) {}
  var count2 = 0;
try { if (Inst2 <= 1000 && typeof (count2) != "undefined") {_RecordType("<113,119,4>",(count2)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (toString2) != "undefined") {_RecordType("<137,146,6>",(toString2)); Inst3++; } } catch(e) {}
  function toString2() {
try { if (Inst4 <= 1000 && typeof (count2) != "undefined") {_RecordType("<157,163,7>",(count2)); Inst4++; } } catch(e) {}
    ++count2;

try { if (Inst5 <= 1000 && typeof (count2) != "undefined") {_RecordType("<174,180,9>",(count2)); Inst5++; } } catch(e) {}
    if (count2 == 95) {
      return {};
    }
  }

try { if (Inst7 <= 1000 && typeof (toString2) != "undefined") {_RecordType("<245,254,15>",(toString2)); Inst7++; } } catch(e) {}
  var o2 = {
    toString: toString2
  };
try { if (Inst6 <= 1000 && typeof (o2) != "undefined") {_RecordType("<224,226,14>",(o2)); Inst6++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<345,346,22>",(e)); Inst14++; } } catch(e) {}
  try {
    for (var i = 0; i < 100; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<282,283,19>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<289,290,19>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<298,299,19>",(i)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (o1) != "undefined") {_RecordType("<319,321,20>",(o1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o2) != "undefined") {_RecordType("<324,326,20>",(o2)); Inst13++; } } catch(e) {}
      var q = o1 | o2;
try { if (Inst11 <= 1000 && typeof (q) != "undefined") {_RecordType("<315,316,20>",(q)); Inst11++; } } catch(e) {}
    }
  } catch (e) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,23>",(i)); Inst15++; } } catch(e) {}
    if (i !== 94) {
try { if (Inst16 <= 1000 && typeof (gc) != "undefined") {_RecordType("<383,385,24>",(gc)); Inst16++; } } catch(e) {}
      return gc();
    }

try { if (Inst17 <= 1000 && typeof (this.bar.foo) != "undefined") {_RecordType("<400,412,27>",(this.bar.foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (this.bar) != "undefined") {_RecordType("<400,408,27>",(this.bar)); Inst18++; } } catch(e) {}
    this.bar.foo ^ this;
  }
}

try { if (Inst19 <= 1000 && typeof (testBitOrInconvertibleObjectInconvertibleObject) != "undefined") {_RecordType("<428,475,31>",(testBitOrInconvertibleObjectInconvertibleObject)); Inst19++; } } catch(e) {}
testBitOrInconvertibleObjectInconvertibleObject();

