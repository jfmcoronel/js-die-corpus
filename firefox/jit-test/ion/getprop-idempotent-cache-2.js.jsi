var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<11,12,1>",(o)); Inst1++; } } catch(e) {}
  var res = 0;
try { if (Inst2 <= 1000 && typeof (res) != "undefined") {_RecordType("<22,25,2>",(res)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 110; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<43,44,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<50,51,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<59,60,4>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<77,80,5>",(o.x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<77,78,5>",(o)); Inst8++; } } catch(e) {}
    res += o.x;
try { if (Inst6 <= 1000 && typeof (res) != "undefined") {_RecordType("<70,73,5>",(res)); Inst6++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (res) != "undefined") {_RecordType("<96,99,8>",(res)); Inst9++; } } catch(e) {}
  return res;
}

try { if (Inst10 <= 1000 && typeof (O) != "undefined") {_RecordType("<113,114,11>",(O)); Inst10++; } } catch(e) {}
function O(x) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<115,116,11>",(x)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof ([].length) != "undefined") {_RecordType("<126,135,12>",([].length)); Inst12++; } } catch(e) {}
  if ([].length == 0) {
    // Thwart definite slot analysis.
    this.x = 10;
try { if (Inst13 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<186,192,14>",(this.x)); Inst13++; } } catch(e) {}
  }
}

try { if (Inst15 <= 1000 && typeof (O) != "undefined") {_RecordType("<218,219,18>",(O)); Inst15++; } } catch(e) {}
var o = new O(true);
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<210,211,18>",(o)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<227,228,19>",(f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<229,230,19>",(o)); Inst17++; } } catch(e) {}
f(o); // Add a getter, this should invalidate the script containing the idempotent cache.

var res = 0;
try { if (Inst18 <= 1000 && typeof (res) != "undefined") {_RecordType("<322,325,21>",(res)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (o.__defineGetter__) != "undefined") {_RecordType("<332,350,23>",(o.__defineGetter__)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<332,333,23>",(o)); Inst20++; } } catch(e) {}
o.__defineGetter__("x", function () {
try { if (Inst21 <= 1000 && typeof (res) != "undefined") {_RecordType("<372,375,24>",(res)); Inst21++; } } catch(e) {}
  res++;
});

try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<384,385,27>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<386,387,27>",(o)); Inst23++; } } catch(e) {}
f(o);
try { if (Inst24 <= 1000 && typeof (res) != "undefined") {_RecordType("<390,393,28>",(res)); Inst24++; } } catch(e) {}
res;
110;

