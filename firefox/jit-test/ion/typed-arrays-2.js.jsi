var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<9,14,1>",(test1)); Inst0++; } } catch(e) {}
function test1() {
try { if (Inst2 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<35,46,2>",(Uint32Array)); Inst2++; } } catch(e) {}
  var arr = new Uint32Array(100);
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<25,28,2>",(arr)); Inst1++; } } catch(e) {}
  Object.prototype[105] = true;
try { if (Inst3 <= 1000 && typeof (Object.prototype[105]) != "undefined") {_RecordType("<55,76,3>",(Object.prototype[105])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<55,71,3>",(Object.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<55,61,3>",(Object)); Inst5++; } } catch(e) {}
  arr[50] = 0xffffee00;
try { if (Inst6 <= 1000 && typeof (arr[50]) != "undefined") {_RecordType("<87,94,4>",(arr[50])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<87,90,4>",(arr)); Inst7++; } } catch(e) {}
  arr[84] = 444;
try { if (Inst8 <= 1000 && typeof (arr[84]) != "undefined") {_RecordType("<111,118,5>",(arr[84])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<111,114,5>",(arr)); Inst9++; } } catch(e) {}
  var res = 0;
try { if (Inst10 <= 1000 && typeof (res) != "undefined") {_RecordType("<132,135,6>",(res)); Inst10++; } } catch(e) {}

  for (var i = 0; i < 200; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<153,154,8>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<160,161,8>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<169,170,8>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<186,192,9>",(arr[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<186,189,9>",(arr)); Inst16++; } } catch(e) {}
    res = arr[i];
try { if (Inst14 <= 1000 && typeof (res) != "undefined") {_RecordType("<180,183,9>",(res)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<203,204,11>",(i)); Inst17++; } } catch(e) {}
    if (i == 50) {
try { if (Inst18 <= 1000 && typeof (res) != "undefined") {_RecordType("<220,223,12>",(res)); Inst18++; } } catch(e) {}
      res;
      0xffffee00;
    } else {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<266,267,15>",(i)); Inst19++; } } catch(e) {}
      if (i == 84) {
try { if (Inst20 <= 1000 && typeof (res) != "undefined") {_RecordType("<285,288,16>",(res)); Inst20++; } } catch(e) {}
        res;
        444;
      } else {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<330,331,19>",(i)); Inst21++; } } catch(e) {}
        if (i >= 100) {
try { if (Inst22 <= 1000 && typeof (res) != "undefined") {_RecordType("<352,355,20>",(res)); Inst22++; } } catch(e) {}
          res;
try { if (Inst23 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<367,376,21>",(undefined)); Inst23++; } } catch(e) {}
          undefined;
        }
      }
    }
  }
}

try { if (Inst24 <= 1000 && typeof (test1) != "undefined") {_RecordType("<409,414,28>",(test1)); Inst24++; } } catch(e) {}
test1();

