var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Don't die a float32-related death.
try { if (Inst0 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<47,67,2>",(testFloat32SetElemIC)); Inst0++; } } catch(e) {}
function testFloat32SetElemIC(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<68,69,2>",(a)); Inst1++; } } catch(e) {}
  for (var i = 0; i < a.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<84,85,3>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<91,92,3>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<95,103,3>",(a.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<95,96,3>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<105,106,3>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<124,135,4>",(Math.fround)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<124,128,4>",(Math)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<136,147,4>",(Math.random)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<136,140,4>",(Math)); Inst11++; } } catch(e) {}
    var r = Math.fround(Math.random());
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<120,121,4>",(r)); Inst7++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<163,164,5>",(r)); Inst14++; } } catch(e) {}
    a[i] = r;
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<156,160,5>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<156,157,5>",(a)); Inst13++; } } catch(e) {}
  }
}

try { if (Inst15 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<173,193,9>",(testFloat32SetElemIC)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<198,203,9>",(Array)); Inst16++; } } catch(e) {}
testFloat32SetElemIC(new Array(2048));
try { if (Inst17 <= 1000 && typeof (testFloat32SetElemIC) != "undefined") {_RecordType("<212,232,10>",(testFloat32SetElemIC)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<237,254,10>",(Uint8ClampedArray)); Inst18++; } } catch(e) {}
testFloat32SetElemIC(new Uint8ClampedArray(2048));

