var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// RegExp.exec -> RegExp.test optimization should use the builtin test method.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<88,89,2>",(f)); Inst0++; } } catch(e) {}
function f() {
  var res = 0;
try { if (Inst1 <= 1000 && typeof (res) != "undefined") {_RecordType("<100,103,3>",(res)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<121,122,5>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<128,129,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<137,138,5>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (/a/.exec) != "undefined") {_RecordType("<152,160,6>",(/a/.exec)); Inst5++; } } catch(e) {}
    if (/a/.exec("a")) {
try { if (Inst6 <= 1000 && typeof (res) != "undefined") {_RecordType("<175,178,7>",(res)); Inst6++; } } catch(e) {}
      res++;
    }
  }

try { if (Inst7 <= 1000 && typeof (res) != "undefined") {_RecordType("<195,198,11>",(res)); Inst7++; } } catch(e) {}
  res;
  100;
}

try { if (Inst8 <= 1000 && typeof (RegExp.prototype.test) != "undefined") {_RecordType("<217,238,15>",(RegExp.prototype.test)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<217,233,15>",(RegExp.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<217,223,15>",(RegExp)); Inst10++; } } catch(e) {}
delete RegExp.prototype.test;
try { if (Inst11 <= 1000 && typeof (gc) != "undefined") {_RecordType("<240,242,16>",(gc)); Inst11++; } } catch(e) {}
gc();
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<246,247,17>",(f)); Inst12++; } } catch(e) {}
f();

RegExp.prototype.test = function () {
  0;
  1;
};
try { if (Inst13 <= 1000 && typeof (RegExp.prototype.test) != "undefined") {_RecordType("<252,273,19>",(RegExp.prototype.test)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<252,268,19>",(RegExp.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<252,258,19>",(RegExp)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (gc) != "undefined") {_RecordType("<304,306,24>",(gc)); Inst16++; } } catch(e) {}
gc();
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<310,311,25>",(f)); Inst17++; } } catch(e) {}
f();
try { if (Inst18 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<315,336,26>",(Object.defineProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<315,321,26>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<337,353,26>",(RegExp.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<337,343,26>",(RegExp)); Inst21++; } } catch(e) {}
Object.defineProperty(RegExp.prototype, "test", {
  get: function () {
    0;
    1;
  }
});
try { if (Inst22 <= 1000 && typeof (gc) != "undefined") {_RecordType("<408,410,32>",(gc)); Inst22++; } } catch(e) {}
gc();
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<414,415,33>",(f)); Inst23++; } } catch(e) {}
f();

