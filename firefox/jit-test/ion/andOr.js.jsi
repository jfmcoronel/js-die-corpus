var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testBooleans) != "undefined") {_RecordType("<9,21,1>",(testBooleans)); Inst0++; } } catch(e) {}
function testBooleans(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<22,23,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<25,26,1>",(b)); Inst2++; } } catch(e) {}
  var res = 0;
try { if (Inst3 <= 1000 && typeof (res) != "undefined") {_RecordType("<36,39,2>",(res)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<52,53,4>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<57,58,4>",(b)); Inst5++; } } catch(e) {}
  if (a && b) {
    res += 2;
try { if (Inst6 <= 1000 && typeof (res) != "undefined") {_RecordType("<66,69,5>",(res)); Inst6++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<87,88,8>",(b)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<92,93,8>",(a)); Inst8++; } } catch(e) {}
  if (b || a) {
    res += 1;
try { if (Inst9 <= 1000 && typeof (res) != "undefined") {_RecordType("<101,104,9>",(res)); Inst9++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (res) != "undefined") {_RecordType("<125,128,12>",(res)); Inst10++; } } catch(e) {}
  return res;
}

try { if (Inst11 <= 1000 && typeof (testBooleans) != "undefined") {_RecordType("<133,145,15>",(testBooleans)); Inst11++; } } catch(e) {}
testBooleans(false, false);
0;
try { if (Inst12 <= 1000 && typeof (testBooleans) != "undefined") {_RecordType("<164,176,17>",(testBooleans)); Inst12++; } } catch(e) {}
testBooleans(false, true);
1;
try { if (Inst13 <= 1000 && typeof (testBooleans) != "undefined") {_RecordType("<194,206,19>",(testBooleans)); Inst13++; } } catch(e) {}
testBooleans(true, false);
1;
try { if (Inst14 <= 1000 && typeof (testBooleans) != "undefined") {_RecordType("<224,236,21>",(testBooleans)); Inst14++; } } catch(e) {}
testBooleans(true, true);
3;

try { if (Inst15 <= 1000 && typeof (testShortCircuit) != "undefined") {_RecordType("<263,279,24>",(testShortCircuit)); Inst15++; } } catch(e) {}
function testShortCircuit(a) {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<280,281,24>",(a)); Inst16++; } } catch(e) {}
  var b = 0;
try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<291,292,25>",(b)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<302,303,26>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<307,308,26>",(a)); Inst19++; } } catch(e) {}
  ++a && a++;
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<314,315,27>",(a)); Inst20++; } } catch(e) {}
  a || (b = 100);
try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<320,321,27>",(b)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<339,340,28>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<343,344,28>",(b)); Inst23++; } } catch(e) {}
  return a + b;
}

try { if (Inst24 <= 1000 && typeof (testShortCircuit) != "undefined") {_RecordType("<349,365,31>",(testShortCircuit)); Inst24++; } } catch(e) {}
testShortCircuit(0);
2;
try { if (Inst25 <= 1000 && typeof (testShortCircuit) != "undefined") {_RecordType("<373,389,33>",(testShortCircuit)); Inst25++; } } catch(e) {}
testShortCircuit(-2);
100;
try { if (Inst26 <= 1000 && typeof (testShortCircuit) != "undefined") {_RecordType("<400,416,35>",(testShortCircuit)); Inst26++; } } catch(e) {}
testShortCircuit(-1);
100;

try { if (Inst27 <= 1000 && typeof (testValues) != "undefined") {_RecordType("<437,447,38>",(testValues)); Inst27++; } } catch(e) {}
function testValues(a, b) {
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<448,449,38>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<451,452,38>",(b)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<462,463,39>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<467,468,39>",(b)); Inst31++; } } catch(e) {}
  if (a && b) {
    return 2;
  }

try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<497,498,43>",(b)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<502,503,43>",(a)); Inst33++; } } catch(e) {}
  if (b || a) {
    return 1;
  }

  return 0;
}

try { if (Inst34 <= 1000 && typeof (testValues) != "undefined") {_RecordType("<541,551,50>",(testValues)); Inst34++; } } catch(e) {}
testValues(false, true);
1;
try { if (Inst35 <= 1000 && typeof (testValues) != "undefined") {_RecordType("<569,579,52>",(testValues)); Inst35++; } } catch(e) {}
testValues("foo", 22);
2;
try { if (Inst36 <= 1000 && typeof (testValues) != "undefined") {_RecordType("<595,605,54>",(testValues)); Inst36++; } } catch(e) {}
testValues(null, "");
0;
try { if (Inst37 <= 1000 && typeof (testValues) != "undefined") {_RecordType("<620,630,56>",(testValues)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<631,638,56>",(Math.PI)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math) != "undefined") {_RecordType("<631,635,56>",(Math)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<640,649,56>",(undefined)); Inst40++; } } catch(e) {}
testValues(Math.PI, undefined);
1;
try { if (Inst41 <= 1000 && typeof (testValues) != "undefined") {_RecordType("<655,665,58>",(testValues)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<666,674,58>",(Math.abs)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math) != "undefined") {_RecordType("<666,670,58>",(Math)); Inst43++; } } catch(e) {}
testValues(Math.abs, 2.2);
2;

