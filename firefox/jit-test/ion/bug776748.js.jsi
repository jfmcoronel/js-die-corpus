var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var eCount = 0;
try { if (Inst0 <= 1000 && typeof (eCount) != "undefined") {_RecordType("<4,10,1>",(eCount)); Inst0++; } } catch(e) {}
var funs = [function () {
  ;
}, function () {
  ;
}];
try { if (Inst1 <= 1000 && typeof (funs) != "undefined") {_RecordType("<20,24,2>",(funs)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (someElement) != "undefined") {_RecordType("<81,92,8>",(someElement)); Inst2++; } } catch(e) {}
function someElement(a) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<93,94,8>",(a)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (eCount) != "undefined") {_RecordType("<102,108,9>",(eCount)); Inst4++; } } catch(e) {}
  ++eCount;
try { if (Inst6 <= 1000 && typeof (eCount) != "undefined") {_RecordType("<120,126,10>",(eCount)); Inst6++; } } catch(e) {}
  var i = eCount >= 8 ? 1 : 0;
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<116,117,10>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<150,154,11>",(a[i])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<150,151,11>",(a)); Inst8++; } } catch(e) {}
  return a[i];
}

var recursionGuard = 0;
try { if (Inst9 <= 1000 && typeof (recursionGuard) != "undefined") {_RecordType("<163,177,14>",(recursionGuard)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (recursiveThing) != "undefined") {_RecordType("<193,207,16>",(recursiveThing)); Inst10++; } } catch(e) {}
function recursiveThing() {
try { if (Inst11 <= 1000 && typeof (someElement) != "undefined") {_RecordType("<214,225,17>",(someElement)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (funs) != "undefined") {_RecordType("<226,230,17>",(funs)); Inst12++; } } catch(e) {}
  someElement(funs);

try { if (Inst13 <= 1000 && typeof (recursionGuard) != "undefined") {_RecordType("<242,256,19>",(recursionGuard)); Inst13++; } } catch(e) {}
  if (++recursionGuard % 2) {
try { if (Inst14 <= 1000 && typeof (e1) != "undefined") {_RecordType("<268,270,20>",(e1)); Inst14++; } } catch(e) {}
    e1();
  }
}

try { if (Inst15 <= 1000 && typeof (e1) != "undefined") {_RecordType("<290,292,24>",(e1)); Inst15++; } } catch(e) {}
function e1() {
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<322,323,27>",(e)); Inst16++; } } catch(e) {}
  try {
    ;
  } catch (e) {
    ;
  }

try { if (Inst17 <= 1000 && typeof (someElement) != "undefined") {_RecordType("<340,351,31>",(someElement)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (funs) != "undefined") {_RecordType("<352,356,31>",(funs)); Inst18++; } } catch(e) {}
  someElement(funs);
try { if (Inst19 <= 1000 && typeof (recursiveThing) != "undefined") {_RecordType("<361,375,32>",(recursiveThing)); Inst19++; } } catch(e) {}
  recursiveThing();
}

try { if (Inst20 <= 1000 && typeof (recursiveThing) != "undefined") {_RecordType("<382,396,35>",(recursiveThing)); Inst20++; } } catch(e) {}
recursiveThing();
try { if (Inst21 <= 1000 && typeof (gc) != "undefined") {_RecordType("<400,402,36>",(gc)); Inst21++; } } catch(e) {}
gc();
try { if (Inst22 <= 1000 && typeof (recursiveThing) != "undefined") {_RecordType("<406,420,37>",(recursiveThing)); Inst22++; } } catch(e) {}
recursiveThing();
try { if (Inst23 <= 1000 && typeof (recursiveThing) != "undefined") {_RecordType("<424,438,38>",(recursiveThing)); Inst23++; } } catch(e) {}
recursiveThing();

