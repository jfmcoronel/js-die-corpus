var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Note: This test produces a link error which is required to reproduce the
// original issue.
try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<398,403,17>",(Array)); Inst25++; } } catch(e) {}
m = function (stdlib, n, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<109,115,3>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<117,118,3>",(n)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<120,124,3>",(heap)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (stdlib.Float64Array) != "undefined") {_RecordType("<171,190,6>",(stdlib.Float64Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<171,177,6>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (heap) != "undefined") {_RecordType("<191,195,6>",(heap)); Inst7++; } } catch(e) {}
  var Float64ArrayView = new stdlib.Float64Array(heap);
try { if (Inst4 <= 1000 && typeof (Float64ArrayView) != "undefined") {_RecordType("<148,164,6>",(Float64ArrayView)); Inst4++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (stdlib.Int16Array) != "undefined") {_RecordType("<225,242,7>",(stdlib.Int16Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<225,231,7>",(stdlib)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (heap) != "undefined") {_RecordType("<243,247,7>",(heap)); Inst11++; } } catch(e) {}
  var Int16ArrayView = new stdlib.Int16Array(heap);
try { if (Inst8 <= 1000 && typeof (Int16ArrayView) != "undefined") {_RecordType("<204,218,7>",(Int16ArrayView)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<262,263,9>",(f)); Inst12++; } } catch(e) {}
  function f(i0) {
try { if (Inst13 <= 1000 && typeof (i0) != "undefined") {_RecordType("<264,266,9>",(i0)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (i0) != "undefined") {_RecordType("<279,281,10>",(i0)); Inst15++; } } catch(e) {}
    i0 = i0 | 0;
try { if (Inst14 <= 1000 && typeof (i0) != "undefined") {_RecordType("<274,276,10>",(i0)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (i0) != "undefined") {_RecordType("<296,298,11>",(i0)); Inst17++; } } catch(e) {}
    i0 = i0 | 0;
try { if (Inst16 <= 1000 && typeof (i0) != "undefined") {_RecordType("<291,293,11>",(i0)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (i0) != "undefined") {_RecordType("<329,331,12>",(i0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i0) != "undefined") {_RecordType("<340,342,12>",(i0)); Inst21++; } } catch(e) {}
    Int16ArrayView[0] = (i0 << 0) + i0;
try { if (Inst18 <= 1000 && typeof (Int16ArrayView[0]) != "undefined") {_RecordType("<308,325,12>",(Int16ArrayView[0])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Int16ArrayView) != "undefined") {_RecordType("<308,322,12>",(Int16ArrayView)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Float64ArrayView[0]) != "undefined") {_RecordType("<348,367,13>",(Float64ArrayView[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Float64ArrayView) != "undefined") {_RecordType("<348,364,13>",(Float64ArrayView)); Inst23++; } } catch(e) {}
    Float64ArrayView[0];
  }

try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<383,384,16>",(f)); Inst24++; } } catch(e) {}
  return f;
}(this, {}, Array);
try { if (Inst0 <= 1000 && typeof (m) != "undefined") {_RecordType("<95,96,3>",(m)); Inst0++; } } catch(e) {}

for (var j = 0; j < 9; j++) {
try { if (Inst26 <= 1000 && typeof (j) != "undefined") {_RecordType("<416,417,19>",(j)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<423,424,19>",(j)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (j) != "undefined") {_RecordType("<430,431,19>",(j)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (m) != "undefined") {_RecordType("<439,440,20>",(m)); Inst29++; } } catch(e) {}
  m();
}

