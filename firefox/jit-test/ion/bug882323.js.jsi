var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<15,24,1>",(Int8Array)); Inst1++; } } catch(e) {}
var ints = new Int8Array(16);
try { if (Inst0 <= 1000 && typeof (ints) != "undefined") {_RecordType("<4,8,1>",(ints)); Inst0++; } } catch(e) {}
ints[0] = 42;
try { if (Inst2 <= 1000 && typeof (ints[0]) != "undefined") {_RecordType("<30,37,2>",(ints[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ints) != "undefined") {_RecordType("<30,34,2>",(ints)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (intElementAt) != "undefined") {_RecordType("<54,66,4>",(intElementAt)); Inst4++; } } catch(e) {}
function intElementAt(index) {
try { if (Inst5 <= 1000 && typeof (index) != "undefined") {_RecordType("<67,72,4>",(index)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (ints[index]) != "undefined") {_RecordType("<85,96,5>",(ints[index])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ints) != "undefined") {_RecordType("<85,89,5>",(ints)); Inst7++; } } catch(e) {}
  return ints[index];
}

try { if (Inst8 <= 1000 && typeof (intElementAt) != "undefined") {_RecordType("<101,113,8>",(intElementAt)); Inst8++; } } catch(e) {}
intElementAt(16);
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<119,128,9>",(undefined)); Inst9++; } } catch(e) {}
undefined;
try { if (Inst10 <= 1000 && typeof (intElementAt) != "undefined") {_RecordType("<130,142,10>",(intElementAt)); Inst10++; } } catch(e) {}
intElementAt(0);
42;
try { if (Inst12 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<168,180,12>",(Float64Array)); Inst12++; } } catch(e) {}
var floats = new Float64Array(16);
try { if (Inst11 <= 1000 && typeof (floats) != "undefined") {_RecordType("<155,161,12>",(floats)); Inst11++; } } catch(e) {}
floats[0] = 3.14;
try { if (Inst13 <= 1000 && typeof (floats[0]) != "undefined") {_RecordType("<186,195,13>",(floats[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (floats) != "undefined") {_RecordType("<186,192,13>",(floats)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (floatElementAt) != "undefined") {_RecordType("<214,228,15>",(floatElementAt)); Inst15++; } } catch(e) {}
function floatElementAt(index) {
try { if (Inst16 <= 1000 && typeof (index) != "undefined") {_RecordType("<229,234,15>",(index)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (floats[index]) != "undefined") {_RecordType("<247,260,16>",(floats[index])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (floats) != "undefined") {_RecordType("<247,253,16>",(floats)); Inst18++; } } catch(e) {}
  return floats[index];
}

try { if (Inst19 <= 1000 && typeof (floatElementAt) != "undefined") {_RecordType("<265,279,19>",(floatElementAt)); Inst19++; } } catch(e) {}
floatElementAt(16);
try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<285,294,20>",(undefined)); Inst20++; } } catch(e) {}
undefined;
try { if (Inst21 <= 1000 && typeof (floatElementAt) != "undefined") {_RecordType("<296,310,21>",(floatElementAt)); Inst21++; } } catch(e) {}
floatElementAt(0);
3.14;
try { if (Inst23 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<337,348,23>",(Uint32Array)); Inst23++; } } catch(e) {}
var uints = new Uint32Array(16);
try { if (Inst22 <= 1000 && typeof (uints) != "undefined") {_RecordType("<325,330,23>",(uints)); Inst22++; } } catch(e) {}
uints[0] = 123;
try { if (Inst24 <= 1000 && typeof (uints[0]) != "undefined") {_RecordType("<354,362,24>",(uints[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (uints) != "undefined") {_RecordType("<354,359,24>",(uints)); Inst25++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (uintElementAt) != "undefined") {_RecordType("<380,393,26>",(uintElementAt)); Inst26++; } } catch(e) {}
function uintElementAt(index) {
try { if (Inst27 <= 1000 && typeof (index) != "undefined") {_RecordType("<394,399,26>",(index)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (uints[index]) != "undefined") {_RecordType("<412,424,27>",(uints[index])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (uints) != "undefined") {_RecordType("<412,417,27>",(uints)); Inst29++; } } catch(e) {}
  return uints[index];
}

try { if (Inst30 <= 1000 && typeof (uintElementAt) != "undefined") {_RecordType("<429,442,30>",(uintElementAt)); Inst30++; } } catch(e) {}
uintElementAt(16);
try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<448,457,31>",(undefined)); Inst31++; } } catch(e) {}
undefined;
try { if (Inst32 <= 1000 && typeof (uintElementAt) != "undefined") {_RecordType("<459,472,32>",(uintElementAt)); Inst32++; } } catch(e) {}
uintElementAt(0);
123;

