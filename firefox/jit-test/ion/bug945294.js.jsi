var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| error:is not a function
var arr = [];
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<42,45,2>",(arr)); Inst0++; } } catch(e) {}

var C = function () {
  ;
};
try { if (Inst1 <= 1000 && typeof (C) != "undefined") {_RecordType("<57,58,4>",(C)); Inst1++; } } catch(e) {}

C.prototype.dump = function () {
  ;
};
try { if (Inst2 <= 1000 && typeof (C.prototype.dump) != "undefined") {_RecordType("<83,99,8>",(C.prototype.dump)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<83,94,8>",(C.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (C) != "undefined") {_RecordType("<83,84,8>",(C)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (C) != "undefined") {_RecordType("<137,138,12>",(C)); Inst7++; } } catch(e) {}
arr[0] = new C();
try { if (Inst5 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<124,130,12>",(arr[0])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<124,127,12>",(arr)); Inst6++; } } catch(e) {}

C = function () {
  ;
};
try { if (Inst8 <= 1000 && typeof (C) != "undefined") {_RecordType("<143,144,14>",(C)); Inst8++; } } catch(e) {}

C.prototype.dump = this;
try { if (Inst9 <= 1000 && typeof (C.prototype.dump) != "undefined") {_RecordType("<169,185,18>",(C.prototype.dump)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<169,180,18>",(C.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (C) != "undefined") {_RecordType("<169,170,18>",(C)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (C) != "undefined") {_RecordType("<207,208,19>",(C)); Inst14++; } } catch(e) {}
arr[1] = new C();
try { if (Inst12 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<194,200,19>",(arr[1])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<194,197,19>",(arr)); Inst13++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<222,223,21>",(f)); Inst15++; } } catch(e) {}
function f() {
  for (var i = 0; i < arr.length; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<239,240,22>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<246,247,22>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<250,260,22>",(arr.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<250,253,22>",(arr)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<262,263,22>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (arr[i].dump) != "undefined") {_RecordType("<273,284,23>",(arr[i].dump)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<273,279,23>",(arr[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr) != "undefined") {_RecordType("<273,276,23>",(arr)); Inst23++; } } catch(e) {}
    arr[i].dump();
  }
}

try { if (Inst25 <= 1000 && typeof (exc) != "undefined") {_RecordType("<317,320,29>",(exc)); Inst25++; } } catch(e) {}
try {
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<303,304,28>",(f)); Inst24++; } } catch(e) {}
  f();
} catch (exc) {
try { if (Inst26 <= 1000 && typeof (exc.message.includes) != "undefined") {_RecordType("<326,346,30>",(exc.message.includes)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (exc.message) != "undefined") {_RecordType("<326,337,30>",(exc.message)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (exc) != "undefined") {_RecordType("<326,329,30>",(exc)); Inst28++; } } catch(e) {}
  exc.message.includes("is not a function");
  true;
}

try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<380,381,34>",(f)); Inst29++; } } catch(e) {}
f();

