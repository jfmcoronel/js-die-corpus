var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (ff) != "undefined") {_RecordType("<9,11,1>",(ff)); Inst0++; } } catch(e) {}
function ff(parsedTypeName, defaultContext) {
try { if (Inst1 <= 1000 && typeof (parsedTypeName) != "undefined") {_RecordType("<12,26,1>",(parsedTypeName)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (defaultContext) != "undefined") {_RecordType("<28,42,1>",(defaultContext)); Inst2++; } } catch(e) {}
  var context = null;
try { if (Inst3 <= 1000 && typeof (context) != "undefined") {_RecordType("<52,59,2>",(context)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (context) != "undefined") {_RecordType("<75,82,4>",(context)); Inst4++; } } catch(e) {}
  if (context === null) {
try { if (Inst6 <= 1000 && typeof (defaultContext) != "undefined") {_RecordType("<109,123,5>",(defaultContext)); Inst6++; } } catch(e) {}
    context = defaultContext;
try { if (Inst5 <= 1000 && typeof (context) != "undefined") {_RecordType("<99,106,5>",(context)); Inst5++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (parsedTypeName.genericArguments) != "undefined") {_RecordType("<136,167,8>",(parsedTypeName.genericArguments)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (parsedTypeName) != "undefined") {_RecordType("<136,150,8>",(parsedTypeName)); Inst8++; } } catch(e) {}
  if (parsedTypeName.genericArguments !== null) {
    for (var i = 0; i < 0; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<193,194,9>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,9>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,9>",(i)); Inst11++; } } catch(e) {}
      ;
    }
  }

try { if (Inst13 <= 1000 && typeof (parsedTypeName.type) != "undefined") {_RecordType("<245,264,14>",(parsedTypeName.type)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (parsedTypeName) != "undefined") {_RecordType("<245,259,14>",(parsedTypeName)); Inst14++; } } catch(e) {}
  var foo = parsedTypeName.type;
try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<239,242,14>",(foo)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (context) != "undefined") {_RecordType("<275,282,15>",(context)); Inst15++; } } catch(e) {}
  typeof context;
  "object";
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<305,308,17>",(foo)); Inst16++; } } catch(e) {}
  return foo;
}

try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<322,326,20>",(test)); Inst17++; } } catch(e) {}
function test() {
  var parsedTypeName = {
    genericArguments: null
  };
try { if (Inst18 <= 1000 && typeof (parsedTypeName) != "undefined") {_RecordType("<337,351,21>",(parsedTypeName)); Inst18++; } } catch(e) {}

  for (var i = 0; i < 140; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,25>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,25>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,25>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<431,432,26>",(i)); Inst22++; } } catch(e) {}
    if (i > 100) {
      parsedTypeName.x = {};
try { if (Inst23 <= 1000 && typeof (parsedTypeName.x) != "undefined") {_RecordType("<448,464,27>",(parsedTypeName.x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (parsedTypeName) != "undefined") {_RecordType("<448,462,27>",(parsedTypeName)); Inst24++; } } catch(e) {}
    }

try { if (Inst25 <= 1000 && typeof (ff) != "undefined") {_RecordType("<482,484,30>",(ff)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (parsedTypeName) != "undefined") {_RecordType("<485,499,30>",(parsedTypeName)); Inst26++; } } catch(e) {}
    ff(parsedTypeName, {});
  }
}

try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<513,517,34>",(test)); Inst27++; } } catch(e) {}
test();

