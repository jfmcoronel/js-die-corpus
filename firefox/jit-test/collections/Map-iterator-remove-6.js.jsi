var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Removing many Map entries does not cause a live iterator to skip any of the
// entries that were not removed. (Compacting a Map must not be observable to
// script.)
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<183,186,4>",(Map)); Inst1++; } } catch(e) {}
var map = new Map();
try { if (Inst0 <= 1000 && typeof (map) != "undefined") {_RecordType("<173,176,4>",(map)); Inst0++; } } catch(e) {}

for (var i = 0; i < 32; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,6>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,6>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<215,216,6>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<224,231,7>",(map.set)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (map) != "undefined") {_RecordType("<224,227,7>",(map)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<232,233,7>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<235,236,7>",(i)); Inst8++; } } catch(e) {}
  map.set(i, i);
}

try { if (Inst10 <= 1000 && typeof (map[Symbol.iterator]) != "undefined") {_RecordType("<253,273,10>",(map[Symbol.iterator])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (map) != "undefined") {_RecordType("<253,256,10>",(map)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<257,272,10>",(Symbol.iterator)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<257,263,10>",(Symbol)); Inst13++; } } catch(e) {}
var iter = map[Symbol.iterator]();
try { if (Inst9 <= 1000 && typeof (iter) != "undefined") {_RecordType("<246,250,10>",(iter)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (iter) != "undefined") {_RecordType("<277,281,11>",(iter)); Inst14++; } } catch(e) {}
iter;
[0, 0];

for (var i = 0; i < 30; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<301,302,14>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<308,309,14>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,14>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (map.delete) != "undefined") {_RecordType("<325,335,15>",(map.delete)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (map) != "undefined") {_RecordType("<325,328,15>",(map)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<336,337,15>",(i)); Inst20++; } } catch(e) {}
  map.delete(i);
}

try { if (Inst21 <= 1000 && typeof (map.size) != "undefined") {_RecordType("<343,351,18>",(map.size)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (map) != "undefined") {_RecordType("<343,346,18>",(map)); Inst22++; } } catch(e) {}
map.size;
2;

for (var i = 32; i < 100; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<366,367,21>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<374,375,21>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<383,384,21>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<392,399,22>",(map.set)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (map) != "undefined") {_RecordType("<392,395,22>",(map)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,22>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<403,404,22>",(i)); Inst29++; } } catch(e) {}
  map.set(i, i);
} // eventually triggers compaction


for (var i = 30; i < 100; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<454,455,26>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,26>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,26>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (iter) != "undefined") {_RecordType("<480,484,27>",(iter)); Inst33++; } } catch(e) {}
  iter;
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<489,490,28>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<492,493,28>",(i)); Inst35++; } } catch(e) {}
  [i, i];
}

try { if (Inst36 <= 1000 && typeof (iter) != "undefined") {_RecordType("<499,503,31>",(iter)); Inst36++; } } catch(e) {}
iter;
try { if (Inst37 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<505,514,32>",(undefined)); Inst37++; } } catch(e) {}
undefined;

