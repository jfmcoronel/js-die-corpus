var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Iterators of different collection types have different prototypes.
try { if (Inst1 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<83,104,2>",(Object.getPrototypeOf)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<83,89,2>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array()[Symbol.iterator]) != "undefined") {_RecordType("<105,129,2>",(Array()[Symbol.iterator])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<105,110,2>",(Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<113,128,2>",(Symbol.iterator)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<113,119,2>",(Symbol)); Inst6++; } } catch(e) {}
var aproto = Object.getPrototypeOf(Array()[Symbol.iterator]());
try { if (Inst0 <= 1000 && typeof (aproto) != "undefined") {_RecordType("<74,80,2>",(aproto)); Inst0++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<147,168,3>",(Object.getPrototypeOf)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<147,153,3>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (new Map()[Symbol.iterator]) != "undefined") {_RecordType("<169,195,3>",(new Map()[Symbol.iterator])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Map) != "undefined") {_RecordType("<173,176,3>",(Map)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<179,194,3>",(Symbol.iterator)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<179,185,3>",(Symbol)); Inst13++; } } catch(e) {}
var mproto = Object.getPrototypeOf(new Map()[Symbol.iterator]());
try { if (Inst7 <= 1000 && typeof (mproto) != "undefined") {_RecordType("<138,144,3>",(mproto)); Inst7++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<213,234,4>",(Object.getPrototypeOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<213,219,4>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (new Set()[Symbol.iterator]) != "undefined") {_RecordType("<235,261,4>",(new Set()[Symbol.iterator])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Set) != "undefined") {_RecordType("<239,242,4>",(Set)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<245,260,4>",(Symbol.iterator)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<245,251,4>",(Symbol)); Inst20++; } } catch(e) {}
var sproto = Object.getPrototypeOf(new Set()[Symbol.iterator]());
try { if (Inst14 <= 1000 && typeof (sproto) != "undefined") {_RecordType("<204,210,4>",(sproto)); Inst14++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (aproto) != "undefined") {_RecordType("<266,272,5>",(aproto)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (mproto) != "undefined") {_RecordType("<277,283,5>",(mproto)); Inst22++; } } catch(e) {}
aproto !== mproto;
true;
try { if (Inst23 <= 1000 && typeof (aproto) != "undefined") {_RecordType("<291,297,7>",(aproto)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (sproto) != "undefined") {_RecordType("<302,308,7>",(sproto)); Inst24++; } } catch(e) {}
aproto !== sproto;
true;
try { if (Inst25 <= 1000 && typeof (mproto) != "undefined") {_RecordType("<316,322,9>",(mproto)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (sproto) != "undefined") {_RecordType("<327,333,9>",(sproto)); Inst26++; } } catch(e) {}
mproto !== sproto;
true;
try { if (Inst27 <= 1000 && typeof (aproto.next) != "undefined") {_RecordType("<341,352,11>",(aproto.next)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (aproto) != "undefined") {_RecordType("<341,347,11>",(aproto)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (mproto.next) != "undefined") {_RecordType("<357,368,11>",(mproto.next)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (mproto) != "undefined") {_RecordType("<357,363,11>",(mproto)); Inst30++; } } catch(e) {}
aproto.next !== mproto.next;
true;
try { if (Inst31 <= 1000 && typeof (aproto.next) != "undefined") {_RecordType("<376,387,13>",(aproto.next)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (aproto) != "undefined") {_RecordType("<376,382,13>",(aproto)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (sproto.next) != "undefined") {_RecordType("<392,403,13>",(sproto.next)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (sproto) != "undefined") {_RecordType("<392,398,13>",(sproto)); Inst34++; } } catch(e) {}
aproto.next !== sproto.next;
true;
try { if (Inst35 <= 1000 && typeof (mproto.next) != "undefined") {_RecordType("<411,422,15>",(mproto.next)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (mproto) != "undefined") {_RecordType("<411,417,15>",(mproto)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (sproto.next) != "undefined") {_RecordType("<427,438,15>",(sproto.next)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (sproto) != "undefined") {_RecordType("<427,433,15>",(sproto)); Inst38++; } } catch(e) {}
mproto.next !== sproto.next;
true;

