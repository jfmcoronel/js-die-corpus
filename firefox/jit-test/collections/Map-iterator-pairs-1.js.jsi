var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// mapiter.next() returns an actual array.
var key = {};
try { if (Inst0 <= 1000 && typeof (key) != "undefined") {_RecordType("<47,50,2>",(key)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Map) != "undefined") {_RecordType("<71,74,3>",(Map)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (key) != "undefined") {_RecordType("<77,80,3>",(key)); Inst3++; } } catch(e) {}
var map = new Map([[key, 'value']]);
try { if (Inst1 <= 1000 && typeof (map) != "undefined") {_RecordType("<61,64,3>",(map)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (map[Symbol.iterator]().next().value) != "undefined") {_RecordType("<106,141,4>",(map[Symbol.iterator]().next().value)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (map[Symbol.iterator]().next) != "undefined") {_RecordType("<106,133,4>",(map[Symbol.iterator]().next)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (map[Symbol.iterator]) != "undefined") {_RecordType("<106,126,4>",(map[Symbol.iterator])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (map) != "undefined") {_RecordType("<106,109,4>",(map)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<110,125,4>",(Symbol.iterator)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<110,116,4>",(Symbol)); Inst10++; } } catch(e) {}
var entry = map[Symbol.iterator]().next().value;
try { if (Inst4 <= 1000 && typeof (entry) != "undefined") {_RecordType("<98,103,4>",(entry)); Inst4++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<143,156,5>",(Array.isArray)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<143,148,5>",(Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (entry) != "undefined") {_RecordType("<157,162,5>",(entry)); Inst13++; } } catch(e) {}
Array.isArray(entry);
true;
try { if (Inst14 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<171,192,7>",(Object.getPrototypeOf)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<171,177,7>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (entry) != "undefined") {_RecordType("<193,198,7>",(entry)); Inst16++; } } catch(e) {}
Object.getPrototypeOf(entry);
try { if (Inst17 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<201,216,8>",(Array.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<201,206,8>",(Array)); Inst18++; } } catch(e) {}
Array.prototype;
try { if (Inst19 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<218,237,9>",(Object.isExtensible)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<218,224,9>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (entry) != "undefined") {_RecordType("<238,243,9>",(entry)); Inst21++; } } catch(e) {}
Object.isExtensible(entry);
true;
try { if (Inst22 <= 1000 && typeof (entry.length) != "undefined") {_RecordType("<252,264,11>",(entry.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (entry) != "undefined") {_RecordType("<252,257,11>",(entry)); Inst23++; } } catch(e) {}
entry.length;
2;
try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyNames(entry).sort) != "undefined") {_RecordType("<281,319,13>",(Object.getOwnPropertyNames(entry).sort)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<281,307,13>",(Object.getOwnPropertyNames)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<281,287,13>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (entry) != "undefined") {_RecordType("<308,313,13>",(entry)); Inst28++; } } catch(e) {}
var names = Object.getOwnPropertyNames(entry).sort();
try { if (Inst24 <= 1000 && typeof (names) != "undefined") {_RecordType("<273,278,13>",(names)); Inst24++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (names.length) != "undefined") {_RecordType("<323,335,14>",(names.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (names) != "undefined") {_RecordType("<323,328,14>",(names)); Inst30++; } } catch(e) {}
names.length;
3;
try { if (Inst31 <= 1000 && typeof (names.join) != "undefined") {_RecordType("<340,350,16>",(names.join)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (names) != "undefined") {_RecordType("<340,345,16>",(names)); Inst32++; } } catch(e) {}
names.join(",");
"0,1,length";
try { if (Inst33 <= 1000 && typeof (entry[0]) != "undefined") {_RecordType("<371,379,18>",(entry[0])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (entry) != "undefined") {_RecordType("<371,376,18>",(entry)); Inst34++; } } catch(e) {}
entry[0];
try { if (Inst35 <= 1000 && typeof (key) != "undefined") {_RecordType("<381,384,19>",(key)); Inst35++; } } catch(e) {}
key;
try { if (Inst36 <= 1000 && typeof (entry[1]) != "undefined") {_RecordType("<386,394,20>",(entry[1])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (entry) != "undefined") {_RecordType("<386,391,20>",(entry)); Inst37++; } } catch(e) {}
entry[1];
'value';

