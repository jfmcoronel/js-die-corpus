var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// map.iterator() and iter.next() are non-generic but work on cross-compartment wrappers.
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<98,107,2>",(newGlobal)); Inst1++; } } catch(e) {}
var g = newGlobal();
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<94,95,2>",(g)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Map.prototype[Symbol.iterator]) != "undefined") {_RecordType("<129,159,3>",(Map.prototype[Symbol.iterator])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<129,142,3>",(Map.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Map) != "undefined") {_RecordType("<129,132,3>",(Map)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<143,158,3>",(Symbol.iterator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<143,149,3>",(Symbol)); Inst7++; } } catch(e) {}
var iterator_fn = Map.prototype[Symbol.iterator];
try { if (Inst2 <= 1000 && typeof (iterator_fn) != "undefined") {_RecordType("<115,126,3>",(iterator_fn)); Inst2++; } } catch(e) {}

(function () {
try { if (Inst8 <= 1000 && typeof (iterator_fn.call) != "undefined") {_RecordType("<179,195,6>",(iterator_fn.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (iterator_fn) != "undefined") {_RecordType("<179,190,6>",(iterator_fn)); Inst9++; } } catch(e) {}
  iterator_fn.call({});
})();

try { if (Inst10 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<208,217,9>",(TypeError)); Inst10++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst11 <= 1000 && typeof (iterator_fn.call) != "undefined") {_RecordType("<237,253,12>",(iterator_fn.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (iterator_fn) != "undefined") {_RecordType("<237,248,12>",(iterator_fn)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Set) != "undefined") {_RecordType("<258,261,12>",(Set)); Inst13++; } } catch(e) {}
  iterator_fn.call(new Set());
})();

try { if (Inst14 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<273,282,15>",(TypeError)); Inst14++; } } catch(e) {}
TypeError;
try { if (Inst16 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<295,301,16>",(g.eval)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<295,296,16>",(g)); Inst17++; } } catch(e) {}
var mapw = g.eval("new Map([['x', 1], ['y', 2]])");
try { if (Inst15 <= 1000 && typeof (mapw) != "undefined") {_RecordType("<288,292,16>",(mapw)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (iterator_fn.call(mapw).next().value) != "undefined") {_RecordType("<336,371,17>",(iterator_fn.call(mapw).next().value)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (iterator_fn.call(mapw).next) != "undefined") {_RecordType("<336,363,17>",(iterator_fn.call(mapw).next)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (iterator_fn.call) != "undefined") {_RecordType("<336,352,17>",(iterator_fn.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (iterator_fn) != "undefined") {_RecordType("<336,347,17>",(iterator_fn)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (mapw) != "undefined") {_RecordType("<353,357,17>",(mapw)); Inst22++; } } catch(e) {}
iterator_fn.call(mapw).next().value;
["x", 1];
try { if (Inst24 <= 1000 && typeof (new Map()[Symbol.iterator]().next) != "undefined") {_RecordType("<397,430,19>",(new Map()[Symbol.iterator]().next)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (new Map()[Symbol.iterator]) != "undefined") {_RecordType("<397,423,19>",(new Map()[Symbol.iterator])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Map) != "undefined") {_RecordType("<401,404,19>",(Map)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<407,422,19>",(Symbol.iterator)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<407,413,19>",(Symbol)); Inst28++; } } catch(e) {}
var next_fn = new Map()[Symbol.iterator]().next;
try { if (Inst23 <= 1000 && typeof (next_fn) != "undefined") {_RecordType("<387,394,19>",(next_fn)); Inst23++; } } catch(e) {}

(function () {
try { if (Inst29 <= 1000 && typeof (next_fn.call) != "undefined") {_RecordType("<450,462,22>",(next_fn.call)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (next_fn) != "undefined") {_RecordType("<450,457,22>",(next_fn)); Inst30++; } } catch(e) {}
  next_fn.call({});
})();

try { if (Inst31 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<475,484,25>",(TypeError)); Inst31++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst32 <= 1000 && typeof (next_fn.call) != "undefined") {_RecordType("<504,516,28>",(next_fn.call)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (next_fn) != "undefined") {_RecordType("<504,511,28>",(next_fn)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (new Set()[Symbol.iterator]) != "undefined") {_RecordType("<517,543,28>",(new Set()[Symbol.iterator])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Set) != "undefined") {_RecordType("<521,524,28>",(Set)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<527,542,28>",(Symbol.iterator)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<527,533,28>",(Symbol)); Inst37++; } } catch(e) {}
  next_fn.call(new Set()[Symbol.iterator]());
})();

try { if (Inst38 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<555,564,31>",(TypeError)); Inst38++; } } catch(e) {}
TypeError;
try { if (Inst40 <= 1000 && typeof (mapw[Symbol.iterator]) != "undefined") {_RecordType("<578,599,32>",(mapw[Symbol.iterator])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (mapw) != "undefined") {_RecordType("<578,582,32>",(mapw)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<583,598,32>",(Symbol.iterator)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<583,589,32>",(Symbol)); Inst43++; } } catch(e) {}
var iterw = mapw[Symbol.iterator]();
try { if (Inst39 <= 1000 && typeof (iterw) != "undefined") {_RecordType("<570,575,32>",(iterw)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (next_fn.call(iterw).value) != "undefined") {_RecordType("<603,628,33>",(next_fn.call(iterw).value)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (next_fn.call) != "undefined") {_RecordType("<603,615,33>",(next_fn.call)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (next_fn) != "undefined") {_RecordType("<603,610,33>",(next_fn)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (iterw) != "undefined") {_RecordType("<616,621,33>",(iterw)); Inst47++; } } catch(e) {}
next_fn.call(iterw).value;
["x", 1];
try { if (Inst48 <= 1000 && typeof (next_fn.call(iterw).value) != "undefined") {_RecordType("<640,665,35>",(next_fn.call(iterw).value)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (next_fn.call) != "undefined") {_RecordType("<640,652,35>",(next_fn.call)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (next_fn) != "undefined") {_RecordType("<640,647,35>",(next_fn)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (iterw) != "undefined") {_RecordType("<653,658,35>",(iterw)); Inst51++; } } catch(e) {}
next_fn.call(iterw).value;
["y", 2];
try { if (Inst52 <= 1000 && typeof (next_fn.call(iterw).done) != "undefined") {_RecordType("<677,701,37>",(next_fn.call(iterw).done)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (next_fn.call) != "undefined") {_RecordType("<677,689,37>",(next_fn.call)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (next_fn) != "undefined") {_RecordType("<677,684,37>",(next_fn)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (iterw) != "undefined") {_RecordType("<690,695,37>",(iterw)); Inst55++; } } catch(e) {}
next_fn.call(iterw).done;
true;

