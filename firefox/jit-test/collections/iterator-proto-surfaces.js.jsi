var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Iterator prototype surfaces.
var iterProto = null;
try { if (Inst0 <= 1000 && typeof (iterProto) != "undefined") {_RecordType("<36,45,2>",(iterProto)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<64,68,4>",(test)); Inst1++; } } catch(e) {}
function test(constructor) {
try { if (Inst2 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<69,80,4>",(constructor)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (new constructor()[Symbol.iterator]) != "undefined") {_RecordType("<97,131,5>",(new constructor()[Symbol.iterator])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<101,112,5>",(constructor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<115,130,5>",(Symbol.iterator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<115,121,5>",(Symbol)); Inst7++; } } catch(e) {}
  var iter = new constructor()[Symbol.iterator]();
try { if (Inst3 <= 1000 && typeof (iter) != "undefined") {_RecordType("<90,94,5>",(iter)); Inst3++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<137,152,6>",(Reflect.ownKeys)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<137,144,6>",(Reflect)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (iter) != "undefined") {_RecordType("<153,157,6>",(iter)); Inst10++; } } catch(e) {}
  Reflect.ownKeys(iter);
  [];
  // Iterator prototypes only have a .next and @@toStringTag property.
try { if (Inst12 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<252,273,9>",(Object.getPrototypeOf)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<252,258,9>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (iter) != "undefined") {_RecordType("<274,278,9>",(iter)); Inst14++; } } catch(e) {}
  var proto1 = Object.getPrototypeOf(iter);
try { if (Inst11 <= 1000 && typeof (proto1) != "undefined") {_RecordType("<243,249,9>",(proto1)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<283,298,10>",(Reflect.ownKeys)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<283,290,10>",(Reflect)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (proto1) != "undefined") {_RecordType("<299,305,10>",(proto1)); Inst17++; } } catch(e) {}
  Reflect.ownKeys(proto1);
try { if (Inst18 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<319,337,11>",(Symbol.toStringTag)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<319,325,11>",(Symbol)); Inst19++; } } catch(e) {}
  ['next', Symbol.toStringTag];
try { if (Inst21 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<353,384,12>",(Object.getOwnPropertyDescriptor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<353,359,12>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (proto1) != "undefined") {_RecordType("<385,391,12>",(proto1)); Inst23++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(proto1, 'next');
try { if (Inst20 <= 1000 && typeof (desc) != "undefined") {_RecordType("<346,350,12>",(desc)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<404,421,13>",(desc.configurable)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (desc) != "undefined") {_RecordType("<404,408,13>",(desc)); Inst25++; } } catch(e) {}
  desc.configurable;
  true;
try { if (Inst26 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<433,448,15>",(desc.enumerable)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (desc) != "undefined") {_RecordType("<433,437,15>",(desc)); Inst27++; } } catch(e) {}
  desc.enumerable;
  false;
try { if (Inst28 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<461,474,17>",(desc.writable)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (desc) != "undefined") {_RecordType("<461,465,17>",(desc)); Inst29++; } } catch(e) {}
  desc.writable;
  true;
  // %IteratorPrototype%
try { if (Inst31 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<524,545,20>",(Object.getPrototypeOf)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<524,530,20>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (proto1) != "undefined") {_RecordType("<546,552,20>",(proto1)); Inst33++; } } catch(e) {}
  var proto2 = Object.getPrototypeOf(proto1);
try { if (Inst30 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<515,521,20>",(proto2)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<557,578,21>",(Object.getPrototypeOf)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Object) != "undefined") {_RecordType("<557,563,21>",(Object)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<579,585,21>",(proto2)); Inst36++; } } catch(e) {}
  Object.getPrototypeOf(proto2);
try { if (Inst37 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<590,606,22>",(Object.prototype)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Object) != "undefined") {_RecordType("<590,596,22>",(Object)); Inst38++; } } catch(e) {}
  Object.prototype;
try { if (Inst39 <= 1000 && typeof (Object.prototype.toString.call) != "undefined") {_RecordType("<610,640,23>",(Object.prototype.toString.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object.prototype.toString) != "undefined") {_RecordType("<610,635,23>",(Object.prototype.toString)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<610,626,23>",(Object.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<610,616,23>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<641,647,23>",(proto2)); Inst43++; } } catch(e) {}
  Object.prototype.toString.call(proto2);
  "[object Object]";
try { if (Inst44 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<673,688,25>",(Reflect.ownKeys)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<673,680,25>",(Reflect)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<689,695,25>",(proto2)); Inst46++; } } catch(e) {}
  Reflect.ownKeys(proto2);
try { if (Inst47 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<701,716,26>",(Symbol.iterator)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<701,707,26>",(Symbol)); Inst48++; } } catch(e) {}
  [Symbol.iterator];
try { if (Inst49 <= 1000 && typeof (proto2[Symbol.iterator]) != "undefined") {_RecordType("<721,744,27>",(proto2[Symbol.iterator])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<721,727,27>",(proto2)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<728,743,27>",(Symbol.iterator)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<728,734,27>",(Symbol)); Inst52++; } } catch(e) {}
  proto2[Symbol.iterator]();
try { if (Inst53 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<750,756,28>",(proto2)); Inst53++; } } catch(e) {}
  proto2;

  // Check there's a single %IteratorPrototype% object.
try { if (Inst54 <= 1000 && typeof (iterProto) != "undefined") {_RecordType("<821,830,31>",(iterProto)); Inst54++; } } catch(e) {}
  if (iterProto === null) {
try { if (Inst56 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<859,865,32>",(proto2)); Inst56++; } } catch(e) {}
    iterProto = proto2;
try { if (Inst55 <= 1000 && typeof (iterProto) != "undefined") {_RecordType("<847,856,32>",(iterProto)); Inst55++; } } catch(e) {}
  } else {
try { if (Inst57 <= 1000 && typeof (iterProto) != "undefined") {_RecordType("<882,891,34>",(iterProto)); Inst57++; } } catch(e) {}
    iterProto;
try { if (Inst58 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<897,903,35>",(proto2)); Inst58++; } } catch(e) {}
    proto2;
  }
}

try { if (Inst59 <= 1000 && typeof (test) != "undefined") {_RecordType("<912,916,39>",(test)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Array) != "undefined") {_RecordType("<917,922,39>",(Array)); Inst60++; } } catch(e) {}
test(Array);
try { if (Inst61 <= 1000 && typeof (test) != "undefined") {_RecordType("<925,929,40>",(test)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (String) != "undefined") {_RecordType("<930,936,40>",(String)); Inst62++; } } catch(e) {}
test(String);
try { if (Inst63 <= 1000 && typeof (test) != "undefined") {_RecordType("<939,943,41>",(test)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Map) != "undefined") {_RecordType("<944,947,41>",(Map)); Inst64++; } } catch(e) {}
test(Map);
try { if (Inst65 <= 1000 && typeof (test) != "undefined") {_RecordType("<950,954,42>",(test)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Set) != "undefined") {_RecordType("<955,958,42>",(Set)); Inst66++; } } catch(e) {}
test(Set);

