var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The argument to Map can be a generator.
var done = false;
try { if (Inst0 <= 1000 && typeof (done) != "undefined") {_RecordType("<47,51,2>",(done)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (data) != "undefined") {_RecordType("<72,76,4>",(data)); Inst1++; } } catch(e) {}
function* data(n) {
try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<77,78,4>",(n)); Inst2++; } } catch(e) {}
  var s = '';
try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<88,89,5>",(s)); Inst3++; } } catch(e) {}

  for (var i = 0; i < n; i++) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<108,109,7>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<115,116,7>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<119,120,7>",(n)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<122,123,7>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<140,141,8>",(s)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<143,144,8>",(i)); Inst9++; } } catch(e) {}
    yield [s, i];
    s += '.';
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<151,152,9>",(s)); Inst10++; } } catch(e) {}
  }

  done = true;
try { if (Inst11 <= 1000 && typeof (done) != "undefined") {_RecordType("<168,172,12>",(done)); Inst11++; } } catch(e) {}
}

try { if (Inst13 <= 1000 && typeof (Map) != "undefined") {_RecordType("<196,199,15>",(Map)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (data) != "undefined") {_RecordType("<200,204,15>",(data)); Inst14++; } } catch(e) {}
var m = new Map(data(50));
try { if (Inst12 <= 1000 && typeof (m) != "undefined") {_RecordType("<188,189,15>",(m)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (done) != "undefined") {_RecordType("<211,215,16>",(done)); Inst15++; } } catch(e) {}
done;
true;
try { if (Inst16 <= 1000 && typeof (m.size) != "undefined") {_RecordType("<223,229,18>",(m.size)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (m) != "undefined") {_RecordType("<223,224,18>",(m)); Inst17++; } } catch(e) {}
m.size;
50;
try { if (Inst18 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<235,240,20>",(m.get)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (m) != "undefined") {_RecordType("<235,236,20>",(m)); Inst19++; } } catch(e) {}
m.get("");
0;
try { if (Inst20 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<249,254,22>",(m.get)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (m) != "undefined") {_RecordType("<249,250,22>",(m)); Inst21++; } } catch(e) {}
m.get(".....");
5;
try { if (Inst22 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<268,273,24>",(m.get)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (m) != "undefined") {_RecordType("<268,269,24>",(m)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array(49 + 1).join) != "undefined") {_RecordType("<274,292,24>",(Array(49 + 1).join)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<274,279,24>",(Array)); Inst25++; } } catch(e) {}
m.get(Array(49 + 1).join("."));
49;
try { if (Inst26 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<304,309,26>",(m.has)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (m) != "undefined") {_RecordType("<304,305,26>",(m)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<310,319,26>",(undefined)); Inst28++; } } catch(e) {}
m.has(undefined);
false;

