var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Multiple live iterators on the same Map can cope with removing entries.
// Make a map.
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<104,107,3>",(Map)); Inst1++; } } catch(e) {}
var map = new Map();
try { if (Inst0 <= 1000 && typeof (map) != "undefined") {_RecordType("<94,97,3>",(map)); Inst0++; } } catch(e) {}
var SIZE = 7;
try { if (Inst2 <= 1000 && typeof (SIZE) != "undefined") {_RecordType("<115,119,4>",(SIZE)); Inst2++; } } catch(e) {}

for (var j = 0; j < SIZE; j++) {
try { if (Inst3 <= 1000 && typeof (j) != "undefined") {_RecordType("<135,136,6>",(j)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (j) != "undefined") {_RecordType("<142,143,6>",(j)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (SIZE) != "undefined") {_RecordType("<146,150,6>",(SIZE)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (j) != "undefined") {_RecordType("<152,153,6>",(j)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<161,168,7>",(map.set)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (map) != "undefined") {_RecordType("<161,164,7>",(map)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<169,170,7>",(j)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<172,173,7>",(j)); Inst10++; } } catch(e) {}
  map.set(j, j);
} // Make lots of iterators pointing to entry 2 of the map.


var NITERS = 5;
try { if (Inst11 <= 1000 && typeof (NITERS) != "undefined") {_RecordType("<242,248,11>",(NITERS)); Inst11++; } } catch(e) {}
var iters = [];
try { if (Inst12 <= 1000 && typeof (iters) != "undefined") {_RecordType("<258,263,12>",(iters)); Inst12++; } } catch(e) {}

for (var i = 0; i < NITERS; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,14>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,14>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (NITERS) != "undefined") {_RecordType("<291,297,14>",(NITERS)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<299,300,14>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (map[Symbol.iterator]) != "undefined") {_RecordType("<319,339,15>",(map[Symbol.iterator])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (map) != "undefined") {_RecordType("<319,322,15>",(map)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<323,338,15>",(Symbol.iterator)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<323,329,15>",(Symbol)); Inst21++; } } catch(e) {}
  var iter = map[Symbol.iterator]();
try { if (Inst17 <= 1000 && typeof (iter) != "undefined") {_RecordType("<312,316,15>",(iter)); Inst17++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (iter) != "undefined") {_RecordType("<345,349,16>",(iter)); Inst22++; } } catch(e) {}
  iter;
  [0, 0];
try { if (Inst23 <= 1000 && typeof (iter) != "undefined") {_RecordType("<363,367,18>",(iter)); Inst23++; } } catch(e) {}
  iter;
  [1, 1];
try { if (Inst26 <= 1000 && typeof (iter) != "undefined") {_RecordType("<392,396,20>",(iter)); Inst26++; } } catch(e) {}
  iters[i] = iter;
try { if (Inst24 <= 1000 && typeof (iters[i]) != "undefined") {_RecordType("<381,389,20>",(iters[i])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (iters) != "undefined") {_RecordType("<381,386,20>",(iters)); Inst25++; } } catch(e) {}
} // Remove half of the map entries.


for (var j = 0; j < SIZE; j += 2) {
try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<446,447,24>",(j)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (j) != "undefined") {_RecordType("<453,454,24>",(j)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (SIZE) != "undefined") {_RecordType("<457,461,24>",(SIZE)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (j) != "undefined") {_RecordType("<463,464,24>",(j)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (map.delete) != "undefined") {_RecordType("<475,485,25>",(map.delete)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (map) != "undefined") {_RecordType("<475,478,25>",(map)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (j) != "undefined") {_RecordType("<486,487,25>",(j)); Inst33++; } } catch(e) {}
  map.delete(j);
} // Make sure all the iterators still work.


for (var i = 0; i < NITERS; i++) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<546,547,29>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<553,554,29>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (NITERS) != "undefined") {_RecordType("<557,563,29>",(NITERS)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<565,566,29>",(i)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (iters[i]) != "undefined") {_RecordType("<585,593,30>",(iters[i])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (iters) != "undefined") {_RecordType("<585,590,30>",(iters)); Inst40++; } } catch(e) {}
  var iter = iters[i];
try { if (Inst38 <= 1000 && typeof (iter) != "undefined") {_RecordType("<578,582,30>",(iter)); Inst38++; } } catch(e) {}

  for (var j = 3; j < SIZE; j += 2) {
try { if (Inst41 <= 1000 && typeof (j) != "undefined") {_RecordType("<607,608,32>",(j)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (j) != "undefined") {_RecordType("<614,615,32>",(j)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (SIZE) != "undefined") {_RecordType("<618,622,32>",(SIZE)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (j) != "undefined") {_RecordType("<624,625,32>",(j)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (iter) != "undefined") {_RecordType("<638,642,33>",(iter)); Inst45++; } } catch(e) {}
    iter;
try { if (Inst46 <= 1000 && typeof (j) != "undefined") {_RecordType("<649,650,34>",(j)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (j) != "undefined") {_RecordType("<652,653,34>",(j)); Inst47++; } } catch(e) {}
    [j, j];
  }

try { if (Inst48 <= 1000 && typeof (iter) != "undefined") {_RecordType("<663,667,37>",(iter)); Inst48++; } } catch(e) {}
  iter;
try { if (Inst49 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<671,680,38>",(undefined)); Inst49++; } } catch(e) {}
  undefined;
}

