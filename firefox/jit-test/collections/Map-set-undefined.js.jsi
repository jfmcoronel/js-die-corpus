var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Setting a Map key to undefined, or a missing argument, isn't the same as deleting it.
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<101,104,2>",(Map)); Inst1++; } } catch(e) {}
var m = new Map();
try { if (Inst0 <= 1000 && typeof (m) != "undefined") {_RecordType("<93,94,2>",(m)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<108,113,3>",(m.set)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (m) != "undefined") {_RecordType("<108,109,3>",(m)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<118,127,3>",(undefined)); Inst4++; } } catch(e) {}
m.set(42, undefined);
try { if (Inst5 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<130,135,4>",(m.has)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (m) != "undefined") {_RecordType("<130,131,4>",(m)); Inst6++; } } catch(e) {}
m.has(42);
true;
try { if (Inst7 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<147,152,6>",(m.get)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (m) != "undefined") {_RecordType("<147,148,6>",(m)); Inst8++; } } catch(e) {}
m.get(42);
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<158,167,7>",(undefined)); Inst9++; } } catch(e) {}
undefined;
try { if (Inst10 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<169,174,8>",(m.set)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (m) != "undefined") {_RecordType("<169,170,8>",(m)); Inst11++; } } catch(e) {}
m.set(42, "wrong");
try { if (Inst12 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<189,194,9>",(m.set)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (m) != "undefined") {_RecordType("<189,190,9>",(m)); Inst13++; } } catch(e) {}
m.set(42);
try { if (Inst14 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<200,205,10>",(m.has)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (m) != "undefined") {_RecordType("<200,201,10>",(m)); Inst15++; } } catch(e) {}
m.has(42);
true;
try { if (Inst16 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<217,222,12>",(m.get)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (m) != "undefined") {_RecordType("<217,218,12>",(m)); Inst17++; } } catch(e) {}
m.get(42);
try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<228,237,13>",(undefined)); Inst18++; } } catch(e) {}
undefined;
try { if (Inst19 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<239,244,14>",(m.set)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (m) != "undefined") {_RecordType("<239,240,14>",(m)); Inst20++; } } catch(e) {}
m.set();
try { if (Inst21 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<248,253,15>",(m.has)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (m) != "undefined") {_RecordType("<248,249,15>",(m)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<254,263,15>",(undefined)); Inst23++; } } catch(e) {}
m.has(undefined);
true;
try { if (Inst24 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<272,277,17>",(m.get)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (m) != "undefined") {_RecordType("<272,273,17>",(m)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<278,287,17>",(undefined)); Inst26++; } } catch(e) {}
m.get(undefined);
try { if (Inst27 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<290,299,18>",(undefined)); Inst27++; } } catch(e) {}
undefined;

