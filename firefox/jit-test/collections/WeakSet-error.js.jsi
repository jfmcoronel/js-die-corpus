var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testMethod) != "undefined") {_RecordType("<9,19,1>",(testMethod)); Inst0++; } } catch(e) {}
function testMethod(name) {
try { if (Inst1 <= 1000 && typeof (name) != "undefined") {_RecordType("<20,24,1>",(name)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (WeakSet.prototype[name]) != "undefined") {_RecordType("<43,66,2>",(WeakSet.prototype[name])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (WeakSet.prototype) != "undefined") {_RecordType("<43,60,2>",(WeakSet.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<43,50,2>",(WeakSet)); Inst5++; } } catch(e) {}
  var method = WeakSet.prototype[name];
try { if (Inst2 <= 1000 && typeof (method) != "undefined") {_RecordType("<34,40,2>",(method)); Inst2++; } } catch(e) {}

  (function () {
try { if (Inst6 <= 1000 && typeof (method.call) != "undefined") {_RecordType("<90,101,5>",(method.call)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (method) != "undefined") {_RecordType("<90,96,5>",(method)); Inst7++; } } catch(e) {}
    method.call(1);
  })();

try { if (Inst8 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<117,126,8>",(TypeError)); Inst8++; } } catch(e) {}
  TypeError;

  (function () {
try { if (Inst9 <= 1000 && typeof (method.call) != "undefined") {_RecordType("<150,161,11>",(method.call)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (method) != "undefined") {_RecordType("<150,156,11>",(method)); Inst10++; } } catch(e) {}
    method.call({});
  })();

try { if (Inst11 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<178,187,14>",(TypeError)); Inst11++; } } catch(e) {}
  TypeError;

  (function () {
try { if (Inst12 <= 1000 && typeof (method.call) != "undefined") {_RecordType("<211,222,17>",(method.call)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (method) != "undefined") {_RecordType("<211,217,17>",(method)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<227,234,17>",(WeakMap)); Inst14++; } } catch(e) {}
    method.call(new WeakMap());
  })();

try { if (Inst15 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<250,259,20>",(TypeError)); Inst15++; } } catch(e) {}
  TypeError;

  (function () {
try { if (Inst16 <= 1000 && typeof (method.call) != "undefined") {_RecordType("<283,294,23>",(method.call)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (method) != "undefined") {_RecordType("<283,289,23>",(method)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (WeakSet.prototype) != "undefined") {_RecordType("<295,312,23>",(WeakSet.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<295,302,23>",(WeakSet)); Inst19++; } } catch(e) {}
    method.call(WeakSet.prototype);
  })();

try { if (Inst20 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<326,335,26>",(TypeError)); Inst20++; } } catch(e) {}
  TypeError;
}

try { if (Inst21 <= 1000 && typeof (testMethod) != "undefined") {_RecordType("<340,350,29>",(testMethod)); Inst21++; } } catch(e) {}
testMethod("has");
try { if (Inst22 <= 1000 && typeof (testMethod) != "undefined") {_RecordType("<359,369,30>",(testMethod)); Inst22++; } } catch(e) {}
testMethod("add");
try { if (Inst23 <= 1000 && typeof (testMethod) != "undefined") {_RecordType("<378,388,31>",(testMethod)); Inst23++; } } catch(e) {}
testMethod("delete");
try { if (Inst24 <= 1000 && typeof (testMethod) != "undefined") {_RecordType("<400,410,32>",(testMethod)); Inst24++; } } catch(e) {}
testMethod("clear");

(function () {
try { if (Inst26 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<452,459,35>",(WeakSet)); Inst26++; } } catch(e) {}
  var ws = new WeakSet();
try { if (Inst25 <= 1000 && typeof (ws) != "undefined") {_RecordType("<443,445,35>",(ws)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (ws.add) != "undefined") {_RecordType("<465,471,36>",(ws.add)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ws) != "undefined") {_RecordType("<465,467,36>",(ws)); Inst28++; } } catch(e) {}
  ws.add(1);
})();

try { if (Inst29 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<483,492,39>",(TypeError)); Inst29++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst30 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<516,523,42>",(WeakSet)); Inst30++; } } catch(e) {}
  new WeakSet({
    [Symbol.iterator]: 2
  });
})();

try { if (Inst31 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<564,573,47>",(TypeError)); Inst31++; } } catch(e) {}
TypeError;
try { if (Inst32 <= 1000 && typeof ([][Symbol.iterator]) != "undefined") {_RecordType("<582,601,48>",([][Symbol.iterator])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<585,600,48>",(Symbol.iterator)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<585,591,48>",(Symbol)); Inst34++; } } catch(e) {}
typeof [][Symbol.iterator];
"function";

(function () {
try { if (Inst35 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<633,640,52>",(WeakSet)); Inst35++; } } catch(e) {}
  WeakSet();
})();

try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<651,660,55>",(TypeError)); Inst36++; } } catch(e) {}
TypeError;

