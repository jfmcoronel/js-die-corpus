var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Array.of does not trigger prototype setters.
// (It defines elements rather than assigning to them.)
var status = "pass";
try { if (Inst0 <= 1000 && typeof (status) != "undefined") {_RecordType("<108,114,3>",(status)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<125,146,4>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<125,131,4>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<147,162,4>",(Array.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<147,152,4>",(Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<178,179,5>",(v)); Inst5++; } } catch(e) {}
Object.defineProperty(Array.prototype, "0", {
  set: v => status = "FAIL 1"
});
try { if (Inst6 <= 1000 && typeof (status) != "undefined") {_RecordType("<183,189,5>",(status)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Array.of(1)[0]) != "undefined") {_RecordType("<205,219,7>",(Array.of(1)[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<205,213,7>",(Array.of)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<205,210,7>",(Array)); Inst9++; } } catch(e) {}
Array.of(1)[0];
1;
try { if (Inst10 <= 1000 && typeof (status) != "undefined") {_RecordType("<224,230,9>",(status)); Inst10++; } } catch(e) {}
status;
"pass";

try { if (Inst11 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<250,253,12>",(Bag)); Inst11++; } } catch(e) {}
function Bag() {
  ;
}

try { if (Inst14 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<274,282,16>",(Array.of)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<274,279,16>",(Array)); Inst15++; } } catch(e) {}
Bag.of = Array.of;
try { if (Inst12 <= 1000 && typeof (Bag.of) != "undefined") {_RecordType("<265,271,16>",(Bag.of)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<265,268,16>",(Bag)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<284,305,17>",(Object.defineProperty)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<284,290,17>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Bag.prototype) != "undefined") {_RecordType("<306,319,17>",(Bag.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<306,309,17>",(Bag)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v) != "undefined") {_RecordType("<335,336,18>",(v)); Inst20++; } } catch(e) {}
Object.defineProperty(Bag.prototype, "0", {
  set: v => status = "FAIL 2"
});
try { if (Inst21 <= 1000 && typeof (status) != "undefined") {_RecordType("<340,346,18>",(status)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Bag.of(1)[0]) != "undefined") {_RecordType("<362,374,20>",(Bag.of(1)[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Bag.of) != "undefined") {_RecordType("<362,368,20>",(Bag.of)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<362,365,20>",(Bag)); Inst24++; } } catch(e) {}
Bag.of(1)[0];
1;
try { if (Inst25 <= 1000 && typeof (status) != "undefined") {_RecordType("<379,385,22>",(status)); Inst25++; } } catch(e) {}
status;
"pass";

