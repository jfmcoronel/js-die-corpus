var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The argument to WeakMap can be a generator.
var k1 = {};
try { if (Inst0 <= 1000 && typeof (k1) != "undefined") {_RecordType("<51,53,2>",(k1)); Inst0++; } } catch(e) {}
var v1 = 42;
try { if (Inst1 <= 1000 && typeof (v1) != "undefined") {_RecordType("<64,66,3>",(v1)); Inst1++; } } catch(e) {}
var k2 = {};
try { if (Inst2 <= 1000 && typeof (k2) != "undefined") {_RecordType("<77,79,4>",(k2)); Inst2++; } } catch(e) {}
var v2 = 43;
try { if (Inst3 <= 1000 && typeof (v2) != "undefined") {_RecordType("<90,92,5>",(v2)); Inst3++; } } catch(e) {}
var k3 = {};
try { if (Inst4 <= 1000 && typeof (k3) != "undefined") {_RecordType("<103,105,6>",(k3)); Inst4++; } } catch(e) {}
var done = false;
try { if (Inst5 <= 1000 && typeof (done) != "undefined") {_RecordType("<116,120,7>",(done)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (data) != "undefined") {_RecordType("<141,145,9>",(data)); Inst6++; } } catch(e) {}
function* data() {
try { if (Inst7 <= 1000 && typeof (k1) != "undefined") {_RecordType("<159,161,10>",(k1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v1) != "undefined") {_RecordType("<163,165,10>",(v1)); Inst8++; } } catch(e) {}
  yield [k1, v1];
try { if (Inst9 <= 1000 && typeof (k2) != "undefined") {_RecordType("<177,179,11>",(k2)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v2) != "undefined") {_RecordType("<181,183,11>",(v2)); Inst10++; } } catch(e) {}
  yield [k2, v2];
  done = true;
try { if (Inst11 <= 1000 && typeof (done) != "undefined") {_RecordType("<188,192,12>",(done)); Inst11++; } } catch(e) {}
}

;
try { if (Inst13 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<214,221,16>",(WeakMap)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (data) != "undefined") {_RecordType("<222,226,16>",(data)); Inst14++; } } catch(e) {}
m = new WeakMap(data());
try { if (Inst12 <= 1000 && typeof (m) != "undefined") {_RecordType("<206,207,16>",(m)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (done) != "undefined") {_RecordType("<231,235,17>",(done)); Inst15++; } } catch(e) {}
done;
true;
try { if (Inst16 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<243,248,19>",(m.has)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (m) != "undefined") {_RecordType("<243,244,19>",(m)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (k1) != "undefined") {_RecordType("<249,251,19>",(k1)); Inst18++; } } catch(e) {}
m.has(k1);
true;
try { if (Inst19 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<260,265,21>",(m.has)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (m) != "undefined") {_RecordType("<260,261,21>",(m)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (k2) != "undefined") {_RecordType("<266,268,21>",(k2)); Inst21++; } } catch(e) {}
m.has(k2);
true;
try { if (Inst22 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<277,282,23>",(m.has)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (m) != "undefined") {_RecordType("<277,278,23>",(m)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (k3) != "undefined") {_RecordType("<283,285,23>",(k3)); Inst24++; } } catch(e) {}
m.has(k3);
false;
try { if (Inst25 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<295,300,25>",(m.get)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (m) != "undefined") {_RecordType("<295,296,25>",(m)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (k1) != "undefined") {_RecordType("<301,303,25>",(k1)); Inst27++; } } catch(e) {}
m.get(k1);
try { if (Inst28 <= 1000 && typeof (v1) != "undefined") {_RecordType("<306,308,26>",(v1)); Inst28++; } } catch(e) {}
v1;
try { if (Inst29 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<310,315,27>",(m.get)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (m) != "undefined") {_RecordType("<310,311,27>",(m)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (k2) != "undefined") {_RecordType("<316,318,27>",(k2)); Inst31++; } } catch(e) {}
m.get(k2);
try { if (Inst32 <= 1000 && typeof (v2) != "undefined") {_RecordType("<321,323,28>",(v2)); Inst32++; } } catch(e) {}
v2;
try { if (Inst33 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<325,330,29>",(m.get)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (m) != "undefined") {_RecordType("<325,326,29>",(m)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (k3) != "undefined") {_RecordType("<331,333,29>",(k3)); Inst35++; } } catch(e) {}
m.get(k3);
try { if (Inst36 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<336,345,30>",(undefined)); Inst36++; } } catch(e) {}
undefined;

