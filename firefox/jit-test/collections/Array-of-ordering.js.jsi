var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Order of Array.of operations.
var log;
try { if (Inst0 <= 1000 && typeof (log) != "undefined") {_RecordType("<37,40,2>",(log)); Inst0++; } } catch(e) {}
var dstdata = [];
try { if (Inst1 <= 1000 && typeof (dstdata) != "undefined") {_RecordType("<46,53,3>",(dstdata)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<74,79,4>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (dstdata) != "undefined") {_RecordType("<80,87,4>",(dstdata)); Inst4++; } } catch(e) {}
var dst = new Proxy(dstdata, {
  defineProperty: function (t, name, desc) {
try { if (Inst5 <= 1000 && typeof (t) != "undefined") {_RecordType("<119,120,5>",(t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (name) != "undefined") {_RecordType("<122,126,5>",(name)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (desc) != "undefined") {_RecordType("<128,132,5>",(desc)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<140,148,6>",(log.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (log) != "undefined") {_RecordType("<140,143,6>",(log)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (name) != "undefined") {_RecordType("<157,161,6>",(name)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (desc.value) != "undefined") {_RecordType("<163,173,6>",(desc.value)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (desc) != "undefined") {_RecordType("<163,167,6>",(desc)); Inst12++; } } catch(e) {}
    log.push(["def", name, desc.value]);
    return true;
  },
  set: function (t, name, value) {
try { if (Inst13 <= 1000 && typeof (t) != "undefined") {_RecordType("<216,217,9>",(t)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (name) != "undefined") {_RecordType("<219,223,9>",(name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (value) != "undefined") {_RecordType("<225,230,9>",(value)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<238,246,10>",(log.push)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (log) != "undefined") {_RecordType("<238,241,10>",(log)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (name) != "undefined") {_RecordType("<255,259,10>",(name)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<261,266,10>",(value)); Inst19++; } } catch(e) {}
    log.push(["set", name, value]);
    return true;
  }
});
try { if (Inst2 <= 1000 && typeof (dst) != "undefined") {_RecordType("<64,67,4>",(dst)); Inst2++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (Troop) != "undefined") {_RecordType("<305,310,15>",(Troop)); Inst20++; } } catch(e) {}
function Troop() {
try { if (Inst21 <= 1000 && typeof (dst) != "undefined") {_RecordType("<324,327,16>",(dst)); Inst21++; } } catch(e) {}
  return dst;
}

try { if (Inst24 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<343,351,19>",(Array.of)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<343,348,19>",(Array)); Inst25++; } } catch(e) {}
Troop.of = Array.of;
try { if (Inst22 <= 1000 && typeof (Troop.of) != "undefined") {_RecordType("<332,340,19>",(Troop.of)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Troop) != "undefined") {_RecordType("<332,337,19>",(Troop)); Inst23++; } } catch(e) {}
log = [];
try { if (Inst26 <= 1000 && typeof (log) != "undefined") {_RecordType("<353,356,20>",(log)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Troop.of) != "undefined") {_RecordType("<363,371,21>",(Troop.of)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Troop) != "undefined") {_RecordType("<363,368,21>",(Troop)); Inst28++; } } catch(e) {}
Troop.of("monkeys", "baboons", "kangaroos");
try { if (Inst29 <= 1000 && typeof (dst) != "undefined") {_RecordType("<408,411,22>",(dst)); Inst29++; } } catch(e) {}
dst;
try { if (Inst30 <= 1000 && typeof (log) != "undefined") {_RecordType("<413,416,23>",(log)); Inst30++; } } catch(e) {}
log;
[["def", "0", "monkeys"], ["def", "1", "baboons"], ["def", "2", "kangaroos"], ["set", "length", 3]];

