var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<8,17,1>",(newGlobal)); Inst1++; } } catch(e) {}
var g = newGlobal({
  newCompartment: true
});
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<4,5,1>",(g)); Inst0++; } } catch(e) {}

for (var cls of [Map, Set]) {
try { if (Inst2 <= 1000 && typeof (cls) != "undefined") {_RecordType("<57,60,5>",(cls)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Map) != "undefined") {_RecordType("<65,68,5>",(Map)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Set) != "undefined") {_RecordType("<70,73,5>",(Set)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.getOwnPropertyDescriptor(cls.prototype, "size").get) != "undefined") {_RecordType("<93,151,6>",(Object.getOwnPropertyDescriptor(cls.prototype, "size").get)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<93,124,6>",(Object.getOwnPropertyDescriptor)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<93,99,6>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (cls.prototype) != "undefined") {_RecordType("<125,138,6>",(cls.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (cls) != "undefined") {_RecordType("<125,128,6>",(cls)); Inst10++; } } catch(e) {}
  var getter = Object.getOwnPropertyDescriptor(cls.prototype, "size").get;
try { if (Inst5 <= 1000 && typeof (getter) != "undefined") {_RecordType("<84,90,6>",(getter)); Inst5++; } } catch(e) {}

  (function () {
try { if (Inst11 <= 1000 && typeof (getter.apply) != "undefined") {_RecordType("<175,187,9>",(getter.apply)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (getter) != "undefined") {_RecordType("<175,181,9>",(getter)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<188,189,9>",(g)); Inst13++; } } catch(e) {}
    getter.apply(g, []);
  })();

try { if (Inst14 <= 1000 && typeof (g.TypeError) != "undefined") {_RecordType("<207,218,12>",(g.TypeError)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<207,208,12>",(g)); Inst15++; } } catch(e) {}
  g.TypeError;
}

