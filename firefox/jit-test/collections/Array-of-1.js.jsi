var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Array.of makes real arrays.
try { if (Inst0 <= 1000 && typeof (check) != "undefined") {_RecordType("<40,45,2>",(check)); Inst0++; } } catch(e) {}
function check(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<46,47,2>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<53,74,3>",(Object.getPrototypeOf)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<53,59,3>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<75,76,3>",(a)); Inst4++; } } catch(e) {}
  Object.getPrototypeOf(a);
try { if (Inst5 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<81,96,4>",(Array.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<81,86,4>",(Array)); Inst6++; } } catch(e) {}
  Array.prototype;
try { if (Inst7 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<100,113,5>",(Array.isArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<100,105,5>",(Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<114,115,5>",(a)); Inst9++; } } catch(e) {}
  Array.isArray(a);
  true;
  a[9] = 9;
try { if (Inst10 <= 1000 && typeof (a[9]) != "undefined") {_RecordType("<128,132,7>",(a[9])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<128,129,7>",(a)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<140,148,8>",(a.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<140,141,8>",(a)); Inst13++; } } catch(e) {}
  a.length;
  10;
}

try { if (Inst14 <= 1000 && typeof (check) != "undefined") {_RecordType("<159,164,12>",(check)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<165,173,12>",(Array.of)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<165,170,12>",(Array)); Inst16++; } } catch(e) {}
check(Array.of());
try { if (Inst17 <= 1000 && typeof (check) != "undefined") {_RecordType("<178,183,13>",(check)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<184,192,13>",(Array.of)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<184,189,13>",(Array)); Inst19++; } } catch(e) {}
check(Array.of(0));
try { if (Inst20 <= 1000 && typeof (check) != "undefined") {_RecordType("<198,203,14>",(check)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<204,212,14>",(Array.of)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<204,209,14>",(Array)); Inst22++; } } catch(e) {}
check(Array.of(0, 1, 2));
try { if (Inst24 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<232,240,15>",(Array.of)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<232,237,15>",(Array)); Inst25++; } } catch(e) {}
var f = Array.of;
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<228,229,15>",(f)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (check) != "undefined") {_RecordType("<242,247,16>",(check)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<248,249,16>",(f)); Inst27++; } } catch(e) {}
check(f());

