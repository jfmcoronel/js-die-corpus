var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Map.prototype.delete works whether the key is present or not.
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<77,80,2>",(Map)); Inst1++; } } catch(e) {}
var m = new Map();
try { if (Inst0 <= 1000 && typeof (m) != "undefined") {_RecordType("<69,70,2>",(m)); Inst0++; } } catch(e) {}
var key = {}; // when the map is new
try { if (Inst2 <= 1000 && typeof (key) != "undefined") {_RecordType("<88,91,3>",(key)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (m.delete) != "undefined") {_RecordType("<122,130,5>",(m.delete)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (m) != "undefined") {_RecordType("<122,123,5>",(m)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (key) != "undefined") {_RecordType("<131,134,5>",(key)); Inst5++; } } catch(e) {}
m.delete(key);
false;
try { if (Inst6 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<144,149,7>",(m.has)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (m) != "undefined") {_RecordType("<144,145,7>",(m)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (key) != "undefined") {_RecordType("<150,153,7>",(key)); Inst8++; } } catch(e) {}
m.has(key);
false;
try { if (Inst9 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<163,168,9>",(m.set)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (m) != "undefined") {_RecordType("<163,164,9>",(m)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (key) != "undefined") {_RecordType("<169,172,9>",(key)); Inst11++; } } catch(e) {}
m.set(key, 'x');
try { if (Inst12 <= 1000 && typeof (m) != "undefined") {_RecordType("<180,181,10>",(m)); Inst12++; } } catch(e) {}
m;
try { if (Inst13 <= 1000 && typeof (m.delete) != "undefined") {_RecordType("<183,191,11>",(m.delete)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (m) != "undefined") {_RecordType("<183,184,11>",(m)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (key) != "undefined") {_RecordType("<192,195,11>",(key)); Inst15++; } } catch(e) {}
m.delete(key);
true;
try { if (Inst16 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<204,209,13>",(m.has)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (m) != "undefined") {_RecordType("<204,205,13>",(m)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (key) != "undefined") {_RecordType("<210,213,13>",(key)); Inst18++; } } catch(e) {}
m.has(key);
false;
try { if (Inst19 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<223,228,15>",(m.get)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (m) != "undefined") {_RecordType("<223,224,15>",(m)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (key) != "undefined") {_RecordType("<229,232,15>",(key)); Inst21++; } } catch(e) {}
m.get(key);
try { if (Inst22 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<235,244,16>",(undefined)); Inst22++; } } catch(e) {}
undefined;
try { if (Inst23 <= 1000 && typeof (m.delete) != "undefined") {_RecordType("<246,254,17>",(m.delete)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (m) != "undefined") {_RecordType("<246,247,17>",(m)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (key) != "undefined") {_RecordType("<255,258,17>",(key)); Inst25++; } } catch(e) {}
m.delete(key);
false;
try { if (Inst26 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<268,273,19>",(m.has)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (m) != "undefined") {_RecordType("<268,269,19>",(m)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (key) != "undefined") {_RecordType("<274,277,19>",(key)); Inst28++; } } catch(e) {}
m.has(key);
false;

