var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// All iterators of the same collection type share their immediate prototype.
// Those prototype objects in turn inherit directly from %IteratorPrototype%.
// Get %IteratorPrototype%.
try { if (Inst1 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<200,221,4>",(Object.getPrototypeOf)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<200,206,4>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<222,243,4>",(Object.getPrototypeOf)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<222,228,4>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof ([][Symbol.iterator]) != "undefined") {_RecordType("<244,263,4>",([][Symbol.iterator])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<247,262,4>",(Symbol.iterator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<247,253,4>",(Symbol)); Inst7++; } } catch(e) {}
var iterProto = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
try { if (Inst0 <= 1000 && typeof (iterProto) != "undefined") {_RecordType("<188,197,4>",(iterProto)); Inst0++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (test) != "undefined") {_RecordType("<279,283,6>",(test)); Inst8++; } } catch(e) {}
function test(obj0, obj1) {
try { if (Inst9 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<284,288,6>",(obj0)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<290,294,6>",(obj1)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (obj0[Symbol.iterator]) != "undefined") {_RecordType("<312,333,7>",(obj0[Symbol.iterator])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<312,316,7>",(obj0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<317,332,7>",(Symbol.iterator)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<317,323,7>",(Symbol)); Inst15++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj1[Symbol.iterator]) != "undefined") {_RecordType("<351,372,8>",(obj1[Symbol.iterator])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<351,355,8>",(obj1)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<356,371,8>",(Symbol.iterator)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<356,362,8>",(Symbol)); Inst20++; } } catch(e) {}
  var iter0 = obj0[Symbol.iterator](),
      iter1 = obj1[Symbol.iterator]();
try { if (Inst11 <= 1000 && typeof (iter0) != "undefined") {_RecordType("<304,309,7>",(iter0)); Inst11++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (iter1) != "undefined") {_RecordType("<343,348,8>",(iter1)); Inst16++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<390,411,9>",(Object.getPrototypeOf)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<390,396,9>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (iter0) != "undefined") {_RecordType("<412,417,9>",(iter0)); Inst24++; } } catch(e) {}
  var proto = Object.getPrototypeOf(iter0);
try { if (Inst21 <= 1000 && typeof (proto) != "undefined") {_RecordType("<382,387,9>",(proto)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<422,443,10>",(Object.getPrototypeOf)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<422,428,10>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (iter1) != "undefined") {_RecordType("<444,449,10>",(iter1)); Inst27++; } } catch(e) {}
  Object.getPrototypeOf(iter1);
try { if (Inst28 <= 1000 && typeof (proto) != "undefined") {_RecordType("<454,459,11>",(proto)); Inst28++; } } catch(e) {}
  proto;
try { if (Inst29 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<463,484,12>",(Object.getPrototypeOf)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<463,469,12>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (proto) != "undefined") {_RecordType("<485,490,12>",(proto)); Inst31++; } } catch(e) {}
  Object.getPrototypeOf(proto);
try { if (Inst32 <= 1000 && typeof (iterProto) != "undefined") {_RecordType("<495,504,13>",(iterProto)); Inst32++; } } catch(e) {}
  iterProto;
}

try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<509,513,16>",(test)); Inst33++; } } catch(e) {}
test([], [1]);
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<524,528,17>",(test)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Map) != "undefined") {_RecordType("<533,536,17>",(Map)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Map) != "undefined") {_RecordType("<544,547,17>",(Map)); Inst36++; } } catch(e) {}
test(new Map(), new Map([[1, 1]]));
try { if (Inst37 <= 1000 && typeof (test) != "undefined") {_RecordType("<560,564,18>",(test)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Set) != "undefined") {_RecordType("<569,572,18>",(Set)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Set) != "undefined") {_RecordType("<580,583,18>",(Set)); Inst39++; } } catch(e) {}
test(new Set(), new Set([1]));

