var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// map.iterator() is live: entries added during iteration are visited.
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<85,88,2>",(Map)); Inst1++; } } catch(e) {}
var map = new Map();
try { if (Inst0 <= 1000 && typeof (map) != "undefined") {_RecordType("<75,78,2>",(map)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (force) != "undefined") {_RecordType("<102,107,4>",(force)); Inst2++; } } catch(e) {}
function force(k) {
try { if (Inst3 <= 1000 && typeof (k) != "undefined") {_RecordType("<108,109,4>",(k)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (map.has) != "undefined") {_RecordType("<120,127,5>",(map.has)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (map) != "undefined") {_RecordType("<120,123,5>",(map)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (k) != "undefined") {_RecordType("<128,129,5>",(k)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (k) != "undefined") {_RecordType("<134,135,5>",(k)); Inst7++; } } catch(e) {}
  if (!map.has(k) && k >= 0) {
try { if (Inst8 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<148,155,6>",(map.set)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (map) != "undefined") {_RecordType("<148,151,6>",(map)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (k) != "undefined") {_RecordType("<156,157,6>",(k)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (k) != "undefined") {_RecordType("<159,160,6>",(k)); Inst11++; } } catch(e) {}
    map.set(k, k - 1);
  }
}

try { if (Inst12 <= 1000 && typeof (force) != "undefined") {_RecordType("<174,179,10>",(force)); Inst12++; } } catch(e) {}
force(5);
var log = '';
try { if (Inst13 <= 1000 && typeof (log) != "undefined") {_RecordType("<188,191,11>",(log)); Inst13++; } } catch(e) {}

for (let [k, v] of map) {
try { if (Inst14 <= 1000 && typeof (k) != "undefined") {_RecordType("<209,210,13>",(k)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v) != "undefined") {_RecordType("<212,213,13>",(v)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (map) != "undefined") {_RecordType("<218,221,13>",(map)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (k) != "undefined") {_RecordType("<234,235,14>",(k)); Inst18++; } } catch(e) {}
  log += k + ';';
try { if (Inst17 <= 1000 && typeof (log) != "undefined") {_RecordType("<227,230,14>",(log)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (force) != "undefined") {_RecordType("<245,250,15>",(force)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v) != "undefined") {_RecordType("<251,252,15>",(v)); Inst20++; } } catch(e) {}
  force(v);
}

try { if (Inst21 <= 1000 && typeof (log) != "undefined") {_RecordType("<258,261,18>",(log)); Inst21++; } } catch(e) {}
log;
'5;4;3;2;1;0;';
try { if (Inst22 <= 1000 && typeof (map.size) != "undefined") {_RecordType("<279,287,20>",(map.size)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (map) != "undefined") {_RecordType("<279,282,20>",(map)); Inst23++; } } catch(e) {}
map.size;
6;

