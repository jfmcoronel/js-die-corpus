var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// mapiter.next() returns a fresh array each time.
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<65,68,2>",(Map)); Inst1++; } } catch(e) {}
var map = new Map([['a', 1], ['b', 2]]);
try { if (Inst0 <= 1000 && typeof (map) != "undefined") {_RecordType("<55,58,2>",(map)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (map[Symbol.iterator]) != "undefined") {_RecordType("<103,123,3>",(map[Symbol.iterator])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (map) != "undefined") {_RecordType("<103,106,3>",(map)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<107,122,3>",(Symbol.iterator)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<107,113,3>",(Symbol)); Inst6++; } } catch(e) {}
var iter = map[Symbol.iterator]();
try { if (Inst2 <= 1000 && typeof (iter) != "undefined") {_RecordType("<96,100,3>",(iter)); Inst2++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<135,144,4>",(iter.next)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (iter) != "undefined") {_RecordType("<135,139,4>",(iter)); Inst9++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<156,165,5>",(iter.next)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (iter) != "undefined") {_RecordType("<156,160,5>",(iter)); Inst12++; } } catch(e) {}
var a = iter.next(),
    b = iter.next();
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<131,132,4>",(a)); Inst7++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<152,153,5>",(b)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<169,170,6>",(a)); Inst13++; } } catch(e) {}
a;
['a', 1];
false;
try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<189,190,9>",(b)); Inst14++; } } catch(e) {}
b;
['b', 2];
false;
try { if (Inst15 <= 1000 && typeof (a.value) != "undefined") {_RecordType("<209,216,12>",(a.value)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<209,210,12>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b.value) != "undefined") {_RecordType("<221,228,12>",(b.value)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<221,222,12>",(b)); Inst18++; } } catch(e) {}
a.value !== b.value;
true;
try { if (Inst20 <= 1000 && typeof (map[Symbol.iterator]) != "undefined") {_RecordType("<245,265,14>",(map[Symbol.iterator])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (map) != "undefined") {_RecordType("<245,248,14>",(map)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<249,264,14>",(Symbol.iterator)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<249,255,14>",(Symbol)); Inst23++; } } catch(e) {}
var a1 = map[Symbol.iterator]();
try { if (Inst19 <= 1000 && typeof (a1) != "undefined") {_RecordType("<240,242,14>",(a1)); Inst19++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (a1) != "undefined") {_RecordType("<269,271,15>",(a1)); Inst24++; } } catch(e) {}
a1;
['a', 1];
try { if (Inst25 <= 1000 && typeof (a.value) != "undefined") {_RecordType("<283,290,17>",(a.value)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<283,284,17>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a1.value) != "undefined") {_RecordType("<295,303,17>",(a1.value)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a1) != "undefined") {_RecordType("<295,297,17>",(a1)); Inst28++; } } catch(e) {}
a.value !== a1.value;
true;

