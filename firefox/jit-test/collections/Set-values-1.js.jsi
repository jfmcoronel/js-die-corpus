var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// set.keys(), .values(), and .entries() on an empty set produce empty iterators
try { if (Inst1 <= 1000 && typeof (Set) != "undefined") {_RecordType("<93,96,2>",(Set)); Inst1++; } } catch(e) {}
var s = new Set();
try { if (Inst0 <= 1000 && typeof (s) != "undefined") {_RecordType("<85,86,2>",(s)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (s.keys) != "undefined") {_RecordType("<109,115,3>",(s.keys)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (s) != "undefined") {_RecordType("<109,110,3>",(s)); Inst4++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (s.values) != "undefined") {_RecordType("<128,136,4>",(s.values)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (s) != "undefined") {_RecordType("<128,129,4>",(s)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (s.entries) != "undefined") {_RecordType("<149,158,5>",(s.entries)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<149,150,5>",(s)); Inst10++; } } catch(e) {}
var ki = s.keys(),
    vi = s.values(),
    ei = s.entries();
try { if (Inst2 <= 1000 && typeof (ki) != "undefined") {_RecordType("<104,106,3>",(ki)); Inst2++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (vi) != "undefined") {_RecordType("<123,125,4>",(vi)); Inst5++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ei) != "undefined") {_RecordType("<144,146,5>",(ei)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<170,191,6>",(Object.getPrototypeOf)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<170,176,6>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ki) != "undefined") {_RecordType("<192,194,6>",(ki)); Inst14++; } } catch(e) {}
var p = Object.getPrototypeOf(ki);
try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<166,167,6>",(p)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<197,218,7>",(Object.getPrototypeOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<197,203,7>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (vi) != "undefined") {_RecordType("<219,221,7>",(vi)); Inst17++; } } catch(e) {}
Object.getPrototypeOf(vi);
try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<224,225,8>",(p)); Inst18++; } } catch(e) {}
p;
try { if (Inst19 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<227,248,9>",(Object.getPrototypeOf)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<227,233,9>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ei) != "undefined") {_RecordType("<249,251,9>",(ei)); Inst21++; } } catch(e) {}
Object.getPrototypeOf(ei);
try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<254,255,10>",(p)); Inst22++; } } catch(e) {}
p;

for (let k of ki) {
try { if (Inst23 <= 1000 && typeof (k) != "undefined") {_RecordType("<267,268,12>",(k)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ki) != "undefined") {_RecordType("<272,274,12>",(ki)); Inst24++; } } catch(e) {}
  throw "FAIL";
}

for (let v of vi) {
try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<306,307,16>",(v)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (vi) != "undefined") {_RecordType("<311,313,16>",(vi)); Inst26++; } } catch(e) {}
  throw "FAIL";
}

for (let [k, v] of ei) {
try { if (Inst27 <= 1000 && typeof (k) != "undefined") {_RecordType("<346,347,20>",(k)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<349,350,20>",(v)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ei) != "undefined") {_RecordType("<355,357,20>",(ei)); Inst29++; } } catch(e) {}
  throw "FAIL";
}

