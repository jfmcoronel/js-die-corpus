var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Different representations of the same number or string are treated as the same Map key.
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<103,106,2>",(Map)); Inst1++; } } catch(e) {}
var m = new Map();
try { if (Inst0 <= 1000 && typeof (m) != "undefined") {_RecordType("<95,96,2>",(m)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<131,135,4>",(test)); Inst3++; } } catch(e) {}
var test = function test(a, b) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<136,137,4>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<139,140,4>",(b)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<146,151,5>",(m.set)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (m) != "undefined") {_RecordType("<146,147,5>",(m)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<152,153,5>",(a)); Inst8++; } } catch(e) {}
  m.set(a, 'secret');
try { if (Inst9 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<168,173,6>",(m.get)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (m) != "undefined") {_RecordType("<168,169,6>",(m)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<174,175,6>",(b)); Inst11++; } } catch(e) {}
  m.get(b);
  'secret';
try { if (Inst12 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<192,197,8>",(m.set)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (m) != "undefined") {_RecordType("<192,193,8>",(m)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<198,199,8>",(b)); Inst14++; } } catch(e) {}
  m.set(b, 'password');
try { if (Inst15 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<216,221,9>",(m.get)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (m) != "undefined") {_RecordType("<216,217,9>",(m)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<222,223,9>",(a)); Inst17++; } } catch(e) {}
  m.get(a);
  'password';
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<242,243,11>",(a)); Inst18++; } } catch(e) {}
  a;
try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<247,248,12>",(b)); Inst19++; } } catch(e) {}
  b;
}; // Float and integer representations of the same number are the same key.
try { if (Inst2 <= 1000 && typeof (test) != "undefined") {_RecordType("<115,119,4>",(test)); Inst2++; } } catch(e) {}


try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<329,333,16>",(test)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math.sqrt) != "undefined") {_RecordType("<337,346,16>",(Math.sqrt)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<337,341,16>",(Math)); Inst22++; } } catch(e) {}
test(9, Math.sqrt(81)); // Ordinary strings and ropes are the same key.

try { if (Inst24 <= 1000 && typeof (Array(1001).join) != "undefined") {_RecordType("<410,426,18>",(Array(1001).join)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<410,415,18>",(Array)); Inst25++; } } catch(e) {}
var a = Array(1001).join('x');
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<406,407,18>",(a)); Inst23++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Array(501).join) != "undefined") {_RecordType("<441,456,19>",(Array(501).join)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array) != "undefined") {_RecordType("<441,446,19>",(Array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array(501).join) != "undefined") {_RecordType("<464,479,19>",(Array(501).join)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Array) != "undefined") {_RecordType("<464,469,19>",(Array)); Inst30++; } } catch(e) {}
var b = Array(501).join('x') + Array(501).join('x');
try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<437,438,19>",(b)); Inst26++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<486,490,20>",(test)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<491,492,20>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<494,495,20>",(b)); Inst33++; } } catch(e) {}
test(a, b); // Two structurally different ropes with the same characters are the same key.

a = "";
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<578,579,22>",(a)); Inst34++; } } catch(e) {}
b = "";
try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<586,587,23>",(b)); Inst35++; } } catch(e) {}

for (var i = 0; i < 10; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<604,605,25>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<611,612,25>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<619,620,25>",(i)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Array(501).join) != "undefined") {_RecordType("<632,647,26>",(Array(501).join)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Array) != "undefined") {_RecordType("<632,637,26>",(Array)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<655,656,26>",(a)); Inst42++; } } catch(e) {}
  a = Array(501).join('x') + a;
try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<628,629,26>",(a)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<664,665,27>",(b)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Array(501).join) != "undefined") {_RecordType("<668,683,27>",(Array(501).join)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Array) != "undefined") {_RecordType("<668,673,27>",(Array)); Inst46++; } } catch(e) {}
  b = b + Array(501).join('x');
try { if (Inst43 <= 1000 && typeof (b) != "undefined") {_RecordType("<660,661,27>",(b)); Inst43++; } } catch(e) {}
}

try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<693,697,30>",(test)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<698,699,30>",(a)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (b) != "undefined") {_RecordType("<701,702,30>",(b)); Inst49++; } } catch(e) {}
test(a, b);

