var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Removing a Map entry already visited by an iterator does not cause any
// entries to be skipped.
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<114,117,3>",(Map)); Inst1++; } } catch(e) {}
var map = new Map();
try { if (Inst0 <= 1000 && typeof (map) != "undefined") {_RecordType("<104,107,3>",(map)); Inst0++; } } catch(e) {}

for (var i = 0; i < 20; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<131,132,5>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<146,147,5>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<155,162,6>",(map.set)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (map) != "undefined") {_RecordType("<155,158,6>",(map)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<163,182,6>",(String.fromCharCode)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (String) != "undefined") {_RecordType("<163,169,6>",(String)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof ('A'.charCodeAt) != "undefined") {_RecordType("<183,197,6>",('A'.charCodeAt)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<203,204,6>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,6>",(i)); Inst11++; } } catch(e) {}
  map.set(String.fromCharCode('A'.charCodeAt(0) + i), i);
}

var log = '';
try { if (Inst12 <= 1000 && typeof (log) != "undefined") {_RecordType("<218,221,9>",(log)); Inst12++; } } catch(e) {}

for (var [k, v] of map) {
try { if (Inst13 <= 1000 && typeof (k) != "undefined") {_RecordType("<239,240,11>",(k)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<242,243,11>",(v)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (map) != "undefined") {_RecordType("<248,251,11>",(map)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (k) != "undefined") {_RecordType("<264,265,12>",(k)); Inst17++; } } catch(e) {}
  log += k;
try { if (Inst16 <= 1000 && typeof (log) != "undefined") {_RecordType("<257,260,12>",(log)); Inst16++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (v) != "undefined") {_RecordType("<274,275,14>",(v)); Inst18++; } } catch(e) {}
  if (v % 5 === 4) {
    // Delete all entries preceding this one.
    for (let [k1, v1] of map) {
try { if (Inst19 <= 1000 && typeof (k1) != "undefined") {_RecordType("<349,351,16>",(k1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v1) != "undefined") {_RecordType("<353,355,16>",(v1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (map) != "undefined") {_RecordType("<360,363,16>",(map)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (k1) != "undefined") {_RecordType("<377,379,17>",(k1)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (k) != "undefined") {_RecordType("<384,385,17>",(k)); Inst23++; } } catch(e) {}
      if (k1 === k) {
        break;
      }

try { if (Inst24 <= 1000 && typeof (map.delete) != "undefined") {_RecordType("<419,429,21>",(map.delete)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (map) != "undefined") {_RecordType("<419,422,21>",(map)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (k1) != "undefined") {_RecordType("<430,432,21>",(k1)); Inst26++; } } catch(e) {}
      map.delete(k1);
    }
  }
}

try { if (Inst27 <= 1000 && typeof (log) != "undefined") {_RecordType("<448,451,26>",(log)); Inst27++; } } catch(e) {}
log;
'ABCDEFGHIJKLMNOPQRST';
try { if (Inst28 <= 1000 && typeof (map.size) != "undefined") {_RecordType("<477,485,28>",(map.size)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (map) != "undefined") {_RecordType("<477,480,28>",(map)); Inst29++; } } catch(e) {}
map.size;
1;
try { if (Inst30 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<490,497,30>",(map.get)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (map) != "undefined") {_RecordType("<490,493,30>",(map)); Inst31++; } } catch(e) {}
map.get('T');
19;

