var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// for-in loops on Maps and Sets enumerate properties.
try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<75,79,2>",(test)); Inst1++; } } catch(e) {}
var test = function test(obj) {
try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<80,83,2>",(obj)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.keys(obj).length) != "undefined") {_RecordType("<89,112,3>",(Object.keys(obj).length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<89,100,3>",(Object.keys)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<89,95,3>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<101,104,3>",(obj)); Inst6++; } } catch(e) {}
  Object.keys(obj).length;
  0;
  var i = 0,
      v;
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<125,126,5>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<138,139,6>",(v)); Inst8++; } } catch(e) {}

  for (v in obj) {
try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<149,150,8>",(v)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<154,157,8>",(obj)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<165,166,9>",(i)); Inst11++; } } catch(e) {}
    i++;
  }

try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<177,178,12>",(i)); Inst12++; } } catch(e) {}
  i;
  0;
  obj.ownProp = 1;
try { if (Inst13 <= 1000 && typeof (obj.ownProp) != "undefined") {_RecordType("<187,198,14>",(obj.ownProp)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<187,190,14>",(obj)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.keys(obj).join) != "undefined") {_RecordType("<206,227,15>",(Object.keys(obj).join)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<206,217,15>",(Object.keys)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<206,212,15>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<218,221,15>",(obj)); Inst18++; } } catch(e) {}
  Object.keys(obj).join();
  "ownProp";

  for (v in obj) {
try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<252,253,18>",(v)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<257,260,18>",(obj)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<268,269,19>",(i)); Inst21++; } } catch(e) {}
    i++;
  }

try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,22>",(i)); Inst22++; } } catch(e) {}
  i;
  1;
try { if (Inst23 <= 1000 && typeof (v) != "undefined") {_RecordType("<290,291,24>",(v)); Inst23++; } } catch(e) {}
  v;
  "ownProp";
try { if (Inst24 <= 1000 && typeof (obj.ownProp) != "undefined") {_RecordType("<315,326,26>",(obj.ownProp)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<315,318,26>",(obj)); Inst25++; } } catch(e) {}
  delete obj.ownProp;
};
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<59,63,2>",(test)); Inst0++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<332,336,29>",(test)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<337,350,29>",(Map.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Map) != "undefined") {_RecordType("<337,340,29>",(Map)); Inst28++; } } catch(e) {}
test(Map.prototype);
try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<353,357,30>",(test)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Map) != "undefined") {_RecordType("<362,365,30>",(Map)); Inst30++; } } catch(e) {}
test(new Map());
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<370,374,31>",(test)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Set.prototype) != "undefined") {_RecordType("<375,388,31>",(Set.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Set) != "undefined") {_RecordType("<375,378,31>",(Set)); Inst33++; } } catch(e) {}
test(Set.prototype);
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<391,395,32>",(test)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Set) != "undefined") {_RecordType("<400,403,32>",(Set)); Inst35++; } } catch(e) {}
test(new Set());

