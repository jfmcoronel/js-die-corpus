var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// new WeakMap(arr) throws if arr contains holes (or undefined values).
var k1 = {};
try { if (Inst0 <= 1000 && typeof (k1) != "undefined") {_RecordType("<76,78,2>",(k1)); Inst0++; } } catch(e) {}
var v1 = 42;
try { if (Inst1 <= 1000 && typeof (v1) != "undefined") {_RecordType("<89,91,3>",(v1)); Inst1++; } } catch(e) {}
var k2 = {};
try { if (Inst2 <= 1000 && typeof (k2) != "undefined") {_RecordType("<102,104,4>",(k2)); Inst2++; } } catch(e) {}
var v2 = 43;
try { if (Inst3 <= 1000 && typeof (v2) != "undefined") {_RecordType("<115,117,5>",(v2)); Inst3++; } } catch(e) {}
var k3 = {};
try { if (Inst4 <= 1000 && typeof (k3) != "undefined") {_RecordType("<128,130,6>",(k3)); Inst4++; } } catch(e) {}
var v3 = {};
try { if (Inst5 <= 1000 && typeof (v3) != "undefined") {_RecordType("<141,143,7>",(v3)); Inst5++; } } catch(e) {}

(function () {
try { if (Inst6 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<172,179,10>",(WeakMap)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<181,190,10>",(undefined)); Inst7++; } } catch(e) {}
  new WeakMap([undefined]);
})();

try { if (Inst8 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<201,210,13>",(TypeError)); Inst8++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst9 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<234,241,16>",(WeakMap)); Inst9++; } } catch(e) {}
  new WeakMap([null]);
})();

try { if (Inst10 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<258,267,19>",(TypeError)); Inst10++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst11 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<291,298,22>",(WeakMap)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (k1) != "undefined") {_RecordType("<301,303,22>",(k1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v1) != "undefined") {_RecordType("<305,307,22>",(v1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (k2) != "undefined") {_RecordType("<311,313,22>",(k2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v2) != "undefined") {_RecordType("<315,317,22>",(v2)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (k3) != "undefined") {_RecordType("<322,324,22>",(k3)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (k3) != "undefined") {_RecordType("<326,328,22>",(k3)); Inst17++; } } catch(e) {}
  new WeakMap([[k1, v1], [k2, v2],, [k3, k3]]);
})();

try { if (Inst18 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<340,349,25>",(TypeError)); Inst18++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst19 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<373,380,28>",(WeakMap)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (k1) != "undefined") {_RecordType("<383,385,28>",(k1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v1) != "undefined") {_RecordType("<387,389,28>",(v1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k2) != "undefined") {_RecordType("<393,395,28>",(k2)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (v2) != "undefined") {_RecordType("<397,399,28>",(v2)); Inst23++; } } catch(e) {}
  new WeakMap([[k1, v1], [k2, v2],,]);
})();

try { if (Inst24 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<413,422,31>",(TypeError)); Inst24++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst25 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<446,453,34>",(WeakMap)); Inst25++; } } catch(e) {}
  new WeakMap([1, 2, 3]);
})();

try { if (Inst26 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<473,482,37>",(TypeError)); Inst26++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst28 <= 1000 && typeof (Set) != "undefined") {_RecordType("<514,517,40>",(Set)); Inst28++; } } catch(e) {}
  let s = new Set([1, 2, "abc"]);
try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<506,507,40>",(s)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<540,547,41>",(WeakMap)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (s) != "undefined") {_RecordType("<548,549,41>",(s)); Inst30++; } } catch(e) {}
  new WeakMap(s);
})();

try { if (Inst31 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<559,568,44>",(TypeError)); Inst31++; } } catch(e) {}
TypeError;

