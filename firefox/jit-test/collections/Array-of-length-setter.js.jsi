var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Array.of calls a "length" setter if one is present.
var hits = 0;
try { if (Inst0 <= 1000 && typeof (hits) != "undefined") {_RecordType("<59,63,2>",(hits)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<103,112,4>",(undefined)); Inst3++; } } catch(e) {}
var lastObj = null,
    lastVal = undefined;
try { if (Inst1 <= 1000 && typeof (lastObj) != "undefined") {_RecordType("<73,80,3>",(lastObj)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (lastVal) != "undefined") {_RecordType("<93,100,4>",(lastVal)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (setter) != "undefined") {_RecordType("<124,130,6>",(setter)); Inst4++; } } catch(e) {}
function setter(v) {
try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<131,132,6>",(v)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (hits) != "undefined") {_RecordType("<138,142,7>",(hits)); Inst6++; } } catch(e) {}
  hits++;
  lastObj = this;
try { if (Inst7 <= 1000 && typeof (lastObj) != "undefined") {_RecordType("<148,155,8>",(lastObj)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<176,177,9>",(v)); Inst9++; } } catch(e) {}
  lastVal = v;
try { if (Inst8 <= 1000 && typeof (lastVal) != "undefined") {_RecordType("<166,173,9>",(lastVal)); Inst8++; } } catch(e) {}
} // when the setter is on the new object


try { if (Inst10 <= 1000 && typeof (Pack) != "undefined") {_RecordType("<232,236,13>",(Pack)); Inst10++; } } catch(e) {}
function Pack() {
try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<243,264,14>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<243,249,14>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (setter) != "undefined") {_RecordType("<292,298,15>",(setter)); Inst13++; } } catch(e) {}
  Object.defineProperty(this, "length", {
    set: setter
  });
}

try { if (Inst16 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<318,326,19>",(Array.of)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<318,323,19>",(Array)); Inst17++; } } catch(e) {}
Pack.of = Array.of;
try { if (Inst14 <= 1000 && typeof (Pack.of) != "undefined") {_RecordType("<308,315,19>",(Pack.of)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Pack) != "undefined") {_RecordType("<308,312,19>",(Pack)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Pack.of) != "undefined") {_RecordType("<339,346,20>",(Pack.of)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Pack) != "undefined") {_RecordType("<339,343,20>",(Pack)); Inst20++; } } catch(e) {}
var pack = Pack.of("wolves", "cards", "cigarettes", "lies");
try { if (Inst18 <= 1000 && typeof (pack) != "undefined") {_RecordType("<332,336,20>",(pack)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (lastObj) != "undefined") {_RecordType("<389,396,21>",(lastObj)); Inst21++; } } catch(e) {}
lastObj;
try { if (Inst22 <= 1000 && typeof (pack) != "undefined") {_RecordType("<398,402,22>",(pack)); Inst22++; } } catch(e) {}
pack;
try { if (Inst23 <= 1000 && typeof (lastVal) != "undefined") {_RecordType("<404,411,23>",(lastVal)); Inst23++; } } catch(e) {}
lastVal;
4;

// when the setter is on the new object's prototype
try { if (Inst24 <= 1000 && typeof (Bevy) != "undefined") {_RecordType("<478,482,27>",(Bevy)); Inst24++; } } catch(e) {}
function Bevy() {
  ;
}

try { if (Inst25 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<494,515,31>",(Object.defineProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<494,500,31>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Bevy.prototype) != "undefined") {_RecordType("<516,530,31>",(Bevy.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Bevy) != "undefined") {_RecordType("<516,520,31>",(Bevy)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (setter) != "undefined") {_RecordType("<551,557,32>",(setter)); Inst29++; } } catch(e) {}
Object.defineProperty(Bevy.prototype, "length", {
  set: setter
});
try { if (Inst32 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<572,580,34>",(Array.of)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Array) != "undefined") {_RecordType("<572,577,34>",(Array)); Inst33++; } } catch(e) {}
Bevy.of = Array.of;
try { if (Inst30 <= 1000 && typeof (Bevy.of) != "undefined") {_RecordType("<562,569,34>",(Bevy.of)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Bevy) != "undefined") {_RecordType("<562,566,34>",(Bevy)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Bevy.of) != "undefined") {_RecordType("<593,600,35>",(Bevy.of)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Bevy) != "undefined") {_RecordType("<593,597,35>",(Bevy)); Inst36++; } } catch(e) {}
var bevy = Bevy.of("quail");
try { if (Inst34 <= 1000 && typeof (bevy) != "undefined") {_RecordType("<586,590,35>",(bevy)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (lastObj) != "undefined") {_RecordType("<611,618,36>",(lastObj)); Inst37++; } } catch(e) {}
lastObj;
try { if (Inst38 <= 1000 && typeof (bevy) != "undefined") {_RecordType("<620,624,37>",(bevy)); Inst38++; } } catch(e) {}
bevy;
try { if (Inst39 <= 1000 && typeof (lastVal) != "undefined") {_RecordType("<626,633,38>",(lastVal)); Inst39++; } } catch(e) {}
lastVal;
1;

