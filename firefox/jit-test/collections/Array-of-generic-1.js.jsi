var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Array.of can be transplanted to other classes.
var hits = 0;
try { if (Inst0 <= 1000 && typeof (hits) != "undefined") {_RecordType("<54,58,2>",(hits)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<74,77,4>",(Bag)); Inst1++; } } catch(e) {}
function Bag() {
try { if (Inst2 <= 1000 && typeof (hits) != "undefined") {_RecordType("<84,88,5>",(hits)); Inst2++; } } catch(e) {}
  hits++;
}

try { if (Inst5 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<104,112,8>",(Array.of)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<104,109,8>",(Array)); Inst6++; } } catch(e) {}
Bag.of = Array.of;
try { if (Inst3 <= 1000 && typeof (Bag.of) != "undefined") {_RecordType("<95,101,8>",(Bag.of)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<95,98,8>",(Bag)); Inst4++; } } catch(e) {}
hits = 0;
try { if (Inst7 <= 1000 && typeof (hits) != "undefined") {_RecordType("<114,118,9>",(hits)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Bag.of) != "undefined") {_RecordType("<137,143,10>",(Bag.of)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<137,140,10>",(Bag)); Inst10++; } } catch(e) {}
var actual = Bag.of("zero", "one");
try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<128,134,10>",(actual)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (hits) != "undefined") {_RecordType("<160,164,11>",(hits)); Inst11++; } } catch(e) {}
hits;
1;
try { if (Inst13 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<188,191,13>",(Bag)); Inst13++; } } catch(e) {}
var expected = new Bag();
try { if (Inst12 <= 1000 && typeof (expected) != "undefined") {_RecordType("<173,181,13>",(expected)); Inst12++; } } catch(e) {}
expected[0] = "zero";
try { if (Inst14 <= 1000 && typeof (expected[0]) != "undefined") {_RecordType("<195,206,14>",(expected[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<195,203,14>",(expected)); Inst15++; } } catch(e) {}
expected[1] = "one";
try { if (Inst16 <= 1000 && typeof (expected[1]) != "undefined") {_RecordType("<217,228,15>",(expected[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (expected) != "undefined") {_RecordType("<217,225,15>",(expected)); Inst17++; } } catch(e) {}
expected.length = 2;
try { if (Inst18 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<238,253,16>",(expected.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (expected) != "undefined") {_RecordType("<238,246,16>",(expected)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<259,265,17>",(actual)); Inst20++; } } catch(e) {}
actual;
try { if (Inst21 <= 1000 && typeof (expected) != "undefined") {_RecordType("<267,275,18>",(expected)); Inst21++; } } catch(e) {}
expected;
hits = 0;
try { if (Inst22 <= 1000 && typeof (hits) != "undefined") {_RecordType("<277,281,19>",(hits)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<296,309,20>",(Array.of.call)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<296,304,20>",(Array.of)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<296,301,20>",(Array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<310,313,20>",(Bag)); Inst27++; } } catch(e) {}
actual = Array.of.call(Bag, "zero", "one");
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<287,293,20>",(actual)); Inst23++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (hits) != "undefined") {_RecordType("<331,335,21>",(hits)); Inst28++; } } catch(e) {}
hits;
1;
try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<340,346,23>",(actual)); Inst29++; } } catch(e) {}
actual;
try { if (Inst30 <= 1000 && typeof (expected) != "undefined") {_RecordType("<348,356,24>",(expected)); Inst30++; } } catch(e) {}
expected;

