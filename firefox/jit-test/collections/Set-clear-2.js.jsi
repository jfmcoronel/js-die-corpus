var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Clearing a Set removes its elements; the Set remains usable afterwards.
try { if (Inst1 <= 1000 && typeof (Set) != "undefined") {_RecordType("<87,90,2>",(Set)); Inst1++; } } catch(e) {}
var s = new Set(["x", "y", "z", "z", "y"]);
try { if (Inst0 <= 1000 && typeof (s) != "undefined") {_RecordType("<79,80,2>",(s)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (s.size) != "undefined") {_RecordType("<119,125,3>",(s.size)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<119,120,3>",(s)); Inst3++; } } catch(e) {}
s.size;
3;
try { if (Inst4 <= 1000 && typeof (s.clear) != "undefined") {_RecordType("<130,137,5>",(s.clear)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<130,131,5>",(s)); Inst5++; } } catch(e) {}
s.clear();
try { if (Inst6 <= 1000 && typeof (s.size) != "undefined") {_RecordType("<141,147,6>",(s.size)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (s) != "undefined") {_RecordType("<141,142,6>",(s)); Inst7++; } } catch(e) {}
s.size;
0;
try { if (Inst8 <= 1000 && typeof (s.has) != "undefined") {_RecordType("<152,157,8>",(s.has)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<152,153,8>",(s)); Inst9++; } } catch(e) {}
s.has("x");
false;
try { if (Inst10 <= 1000 && typeof (s.delete) != "undefined") {_RecordType("<171,179,10>",(s.delete)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<171,172,10>",(s)); Inst11++; } } catch(e) {}
s.delete("x");
false;
try { if (Inst12 <= 1000 && typeof (s.has) != "undefined") {_RecordType("<193,198,12>",(s.has)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (s) != "undefined") {_RecordType("<193,194,12>",(s)); Inst13++; } } catch(e) {}
s.has("z");
false;

for (var v of s) {
try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<222,223,15>",(v)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (s) != "undefined") {_RecordType("<227,228,15>",(s)); Inst15++; } } catch(e) {}
  throw "FAIL";
} // shouldn't be any elements


try { if (Inst16 <= 1000 && typeof (s.add) != "undefined") {_RecordType("<281,286,20>",(s.add)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (s) != "undefined") {_RecordType("<281,282,20>",(s)); Inst17++; } } catch(e) {}
s.add("y");
try { if (Inst18 <= 1000 && typeof (s.size) != "undefined") {_RecordType("<293,299,21>",(s.size)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<293,294,21>",(s)); Inst19++; } } catch(e) {}
s.size;
1;
try { if (Inst20 <= 1000 && typeof (s.has) != "undefined") {_RecordType("<304,309,23>",(s.has)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (s) != "undefined") {_RecordType("<304,305,23>",(s)); Inst21++; } } catch(e) {}
s.has("x");
false;
try { if (Inst22 <= 1000 && typeof (s.has) != "undefined") {_RecordType("<323,328,25>",(s.has)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (s) != "undefined") {_RecordType("<323,324,25>",(s)); Inst23++; } } catch(e) {}
s.has("z");
false;

