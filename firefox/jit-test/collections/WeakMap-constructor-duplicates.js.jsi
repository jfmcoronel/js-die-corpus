var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// When the argument to WeakMap contains a key multiple times, the last value
// is retained.
var k1 = {};
try { if (Inst0 <= 1000 && typeof (k1) != "undefined") {_RecordType("<98,100,3>",(k1)); Inst0++; } } catch(e) {}
var v1 = 42;
try { if (Inst1 <= 1000 && typeof (v1) != "undefined") {_RecordType("<111,113,4>",(v1)); Inst1++; } } catch(e) {}
var k2 = {};
try { if (Inst2 <= 1000 && typeof (k2) != "undefined") {_RecordType("<124,126,5>",(k2)); Inst2++; } } catch(e) {}
var v2 = 43;
try { if (Inst3 <= 1000 && typeof (v2) != "undefined") {_RecordType("<137,139,6>",(v2)); Inst3++; } } catch(e) {}
var k3 = {};
try { if (Inst4 <= 1000 && typeof (k3) != "undefined") {_RecordType("<150,152,7>",(k3)); Inst4++; } } catch(e) {}
var v3 = 44;
try { if (Inst5 <= 1000 && typeof (v3) != "undefined") {_RecordType("<163,165,8>",(v3)); Inst5++; } } catch(e) {}
var k4 = {};
try { if (Inst6 <= 1000 && typeof (k4) != "undefined") {_RecordType("<176,178,9>",(k4)); Inst6++; } } catch(e) {}
var wrong1 = 8;
try { if (Inst7 <= 1000 && typeof (wrong1) != "undefined") {_RecordType("<189,195,10>",(wrong1)); Inst7++; } } catch(e) {}
var wrong2 = 9;
try { if (Inst8 <= 1000 && typeof (wrong2) != "undefined") {_RecordType("<205,211,11>",(wrong2)); Inst8++; } } catch(e) {}
var wrong3 = 10;
try { if (Inst9 <= 1000 && typeof (wrong3) != "undefined") {_RecordType("<221,227,12>",(wrong3)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (k1) != "undefined") {_RecordType("<246,248,13>",(k1)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (wrong1) != "undefined") {_RecordType("<250,256,13>",(wrong1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (k2) != "undefined") {_RecordType("<260,262,13>",(k2)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (v2) != "undefined") {_RecordType("<264,266,13>",(v2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (k3) != "undefined") {_RecordType("<270,272,13>",(k3)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (wrong2) != "undefined") {_RecordType("<274,280,13>",(wrong2)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (k1) != "undefined") {_RecordType("<284,286,13>",(k1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (wrong3) != "undefined") {_RecordType("<288,294,13>",(wrong3)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (k3) != "undefined") {_RecordType("<298,300,13>",(k3)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v3) != "undefined") {_RecordType("<302,304,13>",(v3)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (k1) != "undefined") {_RecordType("<308,310,13>",(k1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (v1) != "undefined") {_RecordType("<312,314,13>",(v1)); Inst22++; } } catch(e) {}
var arr = [[k1, wrong1], [k2, v2], [k3, wrong2], [k1, wrong3], [k3, v3], [k1, v1]];
try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<238,241,13>",(arr)); Inst10++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<330,337,14>",(WeakMap)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<338,341,14>",(arr)); Inst25++; } } catch(e) {}
var m = new WeakMap(arr);
try { if (Inst23 <= 1000 && typeof (m) != "undefined") {_RecordType("<322,323,14>",(m)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<344,349,15>",(m.has)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (m) != "undefined") {_RecordType("<344,345,15>",(m)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (k1) != "undefined") {_RecordType("<350,352,15>",(k1)); Inst28++; } } catch(e) {}
m.has(k1);
true;
try { if (Inst29 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<361,366,17>",(m.has)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (m) != "undefined") {_RecordType("<361,362,17>",(m)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (k2) != "undefined") {_RecordType("<367,369,17>",(k2)); Inst31++; } } catch(e) {}
m.has(k2);
true;
try { if (Inst32 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<378,383,19>",(m.has)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (m) != "undefined") {_RecordType("<378,379,19>",(m)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (k3) != "undefined") {_RecordType("<384,386,19>",(k3)); Inst34++; } } catch(e) {}
m.has(k3);
true;
try { if (Inst35 <= 1000 && typeof (m.has) != "undefined") {_RecordType("<395,400,21>",(m.has)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (m) != "undefined") {_RecordType("<395,396,21>",(m)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (k4) != "undefined") {_RecordType("<401,403,21>",(k4)); Inst37++; } } catch(e) {}
m.has(k4);
false;
try { if (Inst38 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<413,418,23>",(m.get)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (m) != "undefined") {_RecordType("<413,414,23>",(m)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (k1) != "undefined") {_RecordType("<419,421,23>",(k1)); Inst40++; } } catch(e) {}
m.get(k1);
try { if (Inst41 <= 1000 && typeof (v1) != "undefined") {_RecordType("<424,426,24>",(v1)); Inst41++; } } catch(e) {}
v1;
try { if (Inst42 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<428,433,25>",(m.get)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (m) != "undefined") {_RecordType("<428,429,25>",(m)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (k2) != "undefined") {_RecordType("<434,436,25>",(k2)); Inst44++; } } catch(e) {}
m.get(k2);
try { if (Inst45 <= 1000 && typeof (v2) != "undefined") {_RecordType("<439,441,26>",(v2)); Inst45++; } } catch(e) {}
v2;
try { if (Inst46 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<443,448,27>",(m.get)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (m) != "undefined") {_RecordType("<443,444,27>",(m)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (k3) != "undefined") {_RecordType("<449,451,27>",(k3)); Inst48++; } } catch(e) {}
m.get(k3);
try { if (Inst49 <= 1000 && typeof (v3) != "undefined") {_RecordType("<454,456,28>",(v3)); Inst49++; } } catch(e) {}
v3;
try { if (Inst50 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<458,463,29>",(m.get)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (m) != "undefined") {_RecordType("<458,459,29>",(m)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (k4) != "undefined") {_RecordType("<464,466,29>",(k4)); Inst52++; } } catch(e) {}
m.get(k4);
try { if (Inst53 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<469,478,30>",(undefined)); Inst53++; } } catch(e) {}
undefined;

