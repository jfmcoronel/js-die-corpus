var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Testing InstanceOf IC.
Array.prototype.sum = function () {
try { if (Inst3 <= 1000 && typeof (this.reduce) != "undefined") {_RecordType("<71,82,3>",(this.reduce)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (acc) != "undefined") {_RecordType("<84,87,3>",(acc)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (cur) != "undefined") {_RecordType("<89,92,3>",(cur)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (acc) != "undefined") {_RecordType("<97,100,3>",(acc)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (cur) != "undefined") {_RecordType("<103,106,3>",(cur)); Inst7++; } } catch(e) {}
  return this.reduce((acc, cur) => acc + cur, 0);
};
try { if (Inst0 <= 1000 && typeof (Array.prototype.sum) != "undefined") {_RecordType("<26,45,2>",(Array.prototype.sum)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<26,41,2>",(Array.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<26,31,2>",(Array)); Inst2++; } } catch(e) {}

Iters = 20;
try { if (Inst8 <= 1000 && typeof (Iters) != "undefined") {_RecordType("<116,121,6>",(Iters)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (resultArray) != "undefined") {_RecordType("<138,149,8>",(resultArray)); Inst9++; } } catch(e) {}
function resultArray(fn, obj) {
try { if (Inst10 <= 1000 && typeof (fn) != "undefined") {_RecordType("<150,152,8>",(fn)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<154,157,8>",(obj)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<173,178,9>",(Array)); Inst13++; } } catch(e) {}
  res = new Array();
try { if (Inst12 <= 1000 && typeof (res) != "undefined") {_RecordType("<163,166,9>",(res)); Inst12++; } } catch(e) {}

  for (var x = 0; x < Iters; x++) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<194,195,11>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<201,202,11>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Iters) != "undefined") {_RecordType("<205,210,11>",(Iters)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<212,213,11>",(x)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (res.push) != "undefined") {_RecordType("<223,231,12>",(res.push)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (res) != "undefined") {_RecordType("<223,226,12>",(res)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (fn) != "undefined") {_RecordType("<232,234,12>",(fn)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj) != "undefined") {_RecordType("<235,238,12>",(obj)); Inst21++; } } catch(e) {}
    res.push(fn(obj) ? 1 : 0);
  }

try { if (Inst22 <= 1000 && typeof (res) != "undefined") {_RecordType("<264,267,15>",(res)); Inst22++; } } catch(e) {}
  return res;
} // Ensure alteration of .prototype invalidates IC


try { if (Inst23 <= 1000 && typeof (basic) != "undefined") {_RecordType("<332,337,19>",(basic)); Inst23++; } } catch(e) {}
function basic() {
  ;
}

;
protoA = {
  prop1: "1"
};
try { if (Inst24 <= 1000 && typeof (protoA) != "undefined") {_RecordType("<351,357,24>",(protoA)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (protoA) != "undefined") {_RecordType("<396,402,27>",(protoA)); Inst27++; } } catch(e) {}
basic.prototype = protoA;
try { if (Inst25 <= 1000 && typeof (basic.prototype) != "undefined") {_RecordType("<378,393,27>",(basic.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (basic) != "undefined") {_RecordType("<378,383,27>",(basic)); Inst26++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<411,412,29>",(x)); Inst29++; } } catch(e) {}
io1 = x => {
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<427,428,30>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (basic) != "undefined") {_RecordType("<440,445,30>",(basic)); Inst31++; } } catch(e) {}
  return x instanceof basic;
};
try { if (Inst28 <= 1000 && typeof (io1) != "undefined") {_RecordType("<405,408,29>",(io1)); Inst28++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (basic) != "undefined") {_RecordType("<463,468,33>",(basic)); Inst33++; } } catch(e) {}
var x = new basic();
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<455,456,33>",(x)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (resultArray(io1, x).sum) != "undefined") {_RecordType("<502,525,34>",(resultArray(io1, x).sum)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (resultArray) != "undefined") {_RecordType("<502,513,34>",(resultArray)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (io1) != "undefined") {_RecordType("<514,517,34>",(io1)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<519,520,34>",(x)); Inst38++; } } catch(e) {}
beforePrototypeModification = resultArray(io1, x).sum(); //Attach and test IC
try { if (Inst34 <= 1000 && typeof (beforePrototypeModification) != "undefined") {_RecordType("<472,499,34>",(beforePrototypeModification)); Inst34++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (beforePrototypeModification) != "undefined") {_RecordType("<551,578,36>",(beforePrototypeModification)); Inst39++; } } catch(e) {}
beforePrototypeModification;
try { if (Inst40 <= 1000 && typeof (Iters) != "undefined") {_RecordType("<580,585,37>",(Iters)); Inst40++; } } catch(e) {}
Iters;
basic.prototype = {}; // Invalidate IC
try { if (Inst41 <= 1000 && typeof (basic.prototype) != "undefined") {_RecordType("<587,602,38>",(basic.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (basic) != "undefined") {_RecordType("<587,592,38>",(basic)); Inst42++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (resultArray(io1, x).sum) != "undefined") {_RecordType("<656,679,40>",(resultArray(io1, x).sum)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (resultArray) != "undefined") {_RecordType("<656,667,40>",(resultArray)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (io1) != "undefined") {_RecordType("<668,671,40>",(io1)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<673,674,40>",(x)); Inst47++; } } catch(e) {}
afterPrototypeModification = resultArray(io1, x).sum(); //Test
try { if (Inst43 <= 1000 && typeof (afterPrototypeModification) != "undefined") {_RecordType("<627,653,40>",(afterPrototypeModification)); Inst43++; } } catch(e) {}

try { if (Inst48 <= 1000 && typeof (afterPrototypeModification) != "undefined") {_RecordType("<691,717,42>",(afterPrototypeModification)); Inst48++; } } catch(e) {}
afterPrototypeModification;
0;
try { if (Inst49 <= 1000 && typeof (resultArray(io1, 0).sum) != "undefined") {_RecordType("<722,745,44>",(resultArray(io1, 0).sum)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (resultArray) != "undefined") {_RecordType("<722,733,44>",(resultArray)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (io1) != "undefined") {_RecordType("<734,737,44>",(io1)); Inst51++; } } catch(e) {}
resultArray(io1, 0).sum();
0;

