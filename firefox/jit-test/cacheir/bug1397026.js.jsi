var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<9,11,1>",(f1)); Inst0++; } } catch(e) {}
function f1() {
  var o = {};
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<22,23,2>",(o)); Inst1++; } } catch(e) {}
  var values = [];
try { if (Inst2 <= 1000 && typeof (values) != "undefined") {_RecordType("<36,42,3>",(values)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 6; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<61,62,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<68,69,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<77,78,5>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<112,113,7>",(i)); Inst7++; } } catch(e) {}
    var desc = {
      value: i,
      writable: true,
      configurable: true,
      enumerable: true
    };
try { if (Inst6 <= 1000 && typeof (desc) != "undefined") {_RecordType("<90,94,6>",(desc)); Inst6++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<260,261,15>",(e)); Inst12++; } } catch(e) {}
    try {
try { if (Inst8 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<210,231,14>",(Object.defineProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<210,216,14>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<232,233,14>",(o)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (desc) != "undefined") {_RecordType("<240,244,14>",(desc)); Inst11++; } } catch(e) {}
      Object.defineProperty(o, "p", desc);
    } catch (e) {
      ;
    }

try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,19>",(i)); Inst13++; } } catch(e) {}
    if (i === 1) {
try { if (Inst14 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<305,326,20>",(Object.defineProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<305,311,20>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<327,328,20>",(o)); Inst16++; } } catch(e) {}
      Object.defineProperty(o, "p", {
        configurable: false
      });
    }

try { if (Inst17 <= 1000 && typeof (values.push) != "undefined") {_RecordType("<386,397,25>",(values.push)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (values) != "undefined") {_RecordType("<386,392,25>",(values)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o.p) != "undefined") {_RecordType("<398,401,25>",(o.p)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<398,399,25>",(o)); Inst20++; } } catch(e) {}
    values.push(o.p);
  }

try { if (Inst21 <= 1000 && typeof (values.toString) != "undefined") {_RecordType("<411,426,28>",(values.toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (values) != "undefined") {_RecordType("<411,417,28>",(values)); Inst22++; } } catch(e) {}
  values.toString();
  "0,1,1,1,1,1";
}

try { if (Inst23 <= 1000 && typeof (f1) != "undefined") {_RecordType("<450,452,32>",(f1)); Inst23++; } } catch(e) {}
f1();

try { if (Inst24 <= 1000 && typeof (f2) != "undefined") {_RecordType("<466,468,34>",(f2)); Inst24++; } } catch(e) {}
function f2() {
  var o = {};
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<479,480,35>",(o)); Inst25++; } } catch(e) {}

  for (var i = 0; i < 6; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<499,500,37>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<506,507,37>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<515,516,37>",(i)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<550,551,39>",(i)); Inst30++; } } catch(e) {}
    var desc = {
      value: i,
      writable: true,
      configurable: true,
      enumerable: true
    };
try { if (Inst29 <= 1000 && typeof (desc) != "undefined") {_RecordType("<528,532,38>",(desc)); Inst29++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<698,699,47>",(e)); Inst35++; } } catch(e) {}
    try {
try { if (Inst31 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<648,669,46>",(Object.defineProperty)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<648,654,46>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<670,671,46>",(o)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (desc) != "undefined") {_RecordType("<678,682,46>",(desc)); Inst34++; } } catch(e) {}
      Object.defineProperty(o, "p", desc);
    } catch (e) {
      ;
    }

try { if (Inst36 <= 1000 && typeof (Object.getOwnPropertyDescriptor(o, "p").enumerable) != "undefined") {_RecordType("<722,772,51>",(Object.getOwnPropertyDescriptor(o, "p").enumerable)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<722,753,51>",(Object.getOwnPropertyDescriptor)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Object) != "undefined") {_RecordType("<722,728,51>",(Object)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o) != "undefined") {_RecordType("<754,755,51>",(o)); Inst39++; } } catch(e) {}
    Object.getOwnPropertyDescriptor(o, "p").enumerable;
    true;

try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<793,794,54>",(i)); Inst40++; } } catch(e) {}
    if (i > 0) {
try { if (Inst41 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<808,829,55>",(Object.defineProperty)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<808,814,55>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<830,831,55>",(o)); Inst43++; } } catch(e) {}
      Object.defineProperty(o, "p", {
        enumerable: false
      });
    }
  }
}

try { if (Inst44 <= 1000 && typeof (f2) != "undefined") {_RecordType("<889,891,62>",(f2)); Inst44++; } } catch(e) {}
f2();

