var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
let count = 0;
try { if (Inst0 <= 1000 && typeof (count) != "undefined") {_RecordType("<4,9,1>",(count)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (testMathyFunction) != "undefined") {_RecordType("<25,42,3>",(testMathyFunction)); Inst1++; } } catch(e) {}
function testMathyFunction(f, inputs) {
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<43,44,3>",(f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<46,52,3>",(inputs)); Inst3++; } } catch(e) {}
  for (var j = 0; j < inputs.length; ++j) {
try { if (Inst4 <= 1000 && typeof (j) != "undefined") {_RecordType("<67,68,4>",(j)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (j) != "undefined") {_RecordType("<74,75,4>",(j)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (inputs.length) != "undefined") {_RecordType("<78,91,4>",(inputs.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<78,84,4>",(inputs)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<95,96,4>",(j)); Inst8++; } } catch(e) {}
    for (var k = 0; k < inputs.length; ++k) {
try { if (Inst9 <= 1000 && typeof (k) != "undefined") {_RecordType("<113,114,5>",(k)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (k) != "undefined") {_RecordType("<120,121,5>",(k)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (inputs.length) != "undefined") {_RecordType("<124,137,5>",(inputs.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<124,130,5>",(inputs)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (k) != "undefined") {_RecordType("<141,142,5>",(k)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<160,161,6>",(f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (inputs[j]) != "undefined") {_RecordType("<162,171,6>",(inputs[j])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<162,168,6>",(inputs)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (inputs[k]) != "undefined") {_RecordType("<173,182,6>",(inputs[k])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<173,179,6>",(inputs)); Inst19++; } } catch(e) {}
      let a = f(inputs[j], inputs[k]);
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<156,157,6>",(a)); Inst14++; } } catch(e) {}
      count += 1;
try { if (Inst20 <= 1000 && typeof (count) != "undefined") {_RecordType("<191,196,7>",(count)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<209,214,8>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (count) != "undefined") {_RecordType("<227,232,8>",(count)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<242,243,8>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (inputs[j]) != "undefined") {_RecordType("<260,269,8>",(inputs[j])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<260,266,8>",(inputs)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (inputs[k]) != "undefined") {_RecordType("<278,287,8>",(inputs[k])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<278,284,8>",(inputs)); Inst27++; } } catch(e) {}
      print("Number " + count + ": " + a + " (inputs " + inputs[j] + "," + inputs[k] + ")");
    }
  }
}

mathy0 = function (x, y) {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<328,329,13>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<331,332,13>",(y)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<345,346,14>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (y) != "undefined") {_RecordType("<350,351,14>",(y)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<354,355,14>",(x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Number.MAX_SAFE_INTEGER) != "undefined") {_RecordType("<359,382,14>",(Number.MAX_SAFE_INTEGER)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Number) != "undefined") {_RecordType("<359,365,14>",(Number)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<386,397,14>",(Math.fround)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math) != "undefined") {_RecordType("<386,390,14>",(Math)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<399,400,14>",(y)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<420,431,14>",(Math.fround)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math) != "undefined") {_RecordType("<420,424,14>",(Math)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (y) != "undefined") {_RecordType("<432,433,14>",(y)); Inst41++; } } catch(e) {}
  return x / (y ? x : -Number.MAX_SAFE_INTEGER) > Math.fround(+y & +0x100000000) ** Math.fround(y);
};
try { if (Inst28 <= 1000 && typeof (mathy0) != "undefined") {_RecordType("<309,315,13>",(mathy0)); Inst28++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (testMathyFunction) != "undefined") {_RecordType("<440,457,17>",(testMathyFunction)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (mathy0) != "undefined") {_RecordType("<458,464,17>",(mathy0)); Inst43++; } } catch(e) {}
testMathyFunction(mathy0,
/*MARR*/
[[1],,, [1], [1],, [1],,, [1],, [1],,, [1], [1],, [1],,, [1], [1],, [1],, [1], [1], [1],, -1 / 0]);
try { if (Inst44 <= 1000 && typeof (testMathyFunction) != "undefined") {_RecordType("<575,592,20>",(testMathyFunction)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (mathy0) != "undefined") {_RecordType("<593,599,20>",(mathy0)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<605,621,20>",(Number.MAX_VALUE)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Number) != "undefined") {_RecordType("<605,611,20>",(Number)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Number.MIN_SAFE_INTEGER) != "undefined") {_RecordType("<623,646,20>",(Number.MIN_SAFE_INTEGER)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Number) != "undefined") {_RecordType("<623,629,20>",(Number)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<695,711,20>",(Number.MIN_VALUE)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Number) != "undefined") {_RecordType("<695,701,20>",(Number)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Number.MAX_SAFE_INTEGER) != "undefined") {_RecordType("<727,750,20>",(Number.MAX_SAFE_INTEGER)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Number) != "undefined") {_RecordType("<727,733,20>",(Number)); Inst53++; } } catch(e) {}
testMathyFunction(mathy0, [, -Number.MAX_VALUE, Number.MIN_SAFE_INTEGER, 0x100000001, 0x07fffffff, -0x07fffffff, 0 / 0, Number.MIN_VALUE, -0x0ffffffff, Number.MAX_SAFE_INTEGER, 0x0ffffffff, -0x100000000,, 1 / 0, 0x080000000, -1 / 0, 0x100000000]);

