var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (sparse) != "undefined") {_RecordType("<9,15,1>",(sparse)); Inst0++; } } catch(e) {}
function sparse() {
  var o = {
    0: 0,
    0x10000: 0
  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<26,27,2>",(o)); Inst1++; } } catch(e) {}
  var tests = [[1, false], [0, true], [-2, false], [0x10000, true], [0x20000, false]];
try { if (Inst2 <= 1000 && typeof (tests) != "undefined") {_RecordType("<68,73,6>",(tests)); Inst2++; } } catch(e) {}

  for (var [key, has] of tests) {
try { if (Inst3 <= 1000 && typeof (key) != "undefined") {_RecordType("<162,165,8>",(key)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (has) != "undefined") {_RecordType("<167,170,8>",(has)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (tests) != "undefined") {_RecordType("<175,180,8>",(tests)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (key) != "undefined") {_RecordType("<188,191,9>",(key)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<195,196,9>",(o)); Inst7++; } } catch(e) {}
    key in o;
try { if (Inst8 <= 1000 && typeof (has) != "undefined") {_RecordType("<202,205,10>",(has)); Inst8++; } } catch(e) {}
    has;
try { if (Inst9 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<211,227,11>",(o.hasOwnProperty)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<211,212,11>",(o)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (key) != "undefined") {_RecordType("<228,231,11>",(key)); Inst11++; } } catch(e) {}
    o.hasOwnProperty(key);
try { if (Inst12 <= 1000 && typeof (has) != "undefined") {_RecordType("<238,241,12>",(has)); Inst12++; } } catch(e) {}
    has;
  }
}

try { if (Inst13 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<259,269,16>",(typedArray)); Inst13++; } } catch(e) {}
function typedArray() {
  var o = {
    0: 0,
    0x10000: 0
  };
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<280,281,17>",(o)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<330,340,21>",(Int32Array)); Inst16++; } } catch(e) {}
  var t = new Int32Array(0x10001); // Only use Int32Array after we attached the sparse stub
try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<322,323,21>",(t)); Inst15++; } } catch(e) {}
  //                in o,  in t

  var tests = [[1, [false, true]], [0, [true, true]], [-2, [false, false]], [0x10000, [true, true]], [0x20000, [false, false]]];
try { if (Inst17 <= 1000 && typeof (tests) != "undefined") {_RecordType("<447,452,24>",(tests)); Inst17++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<582,583,26>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<589,590,26>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<597,598,26>",(i)); Inst20++; } } catch(e) {}
    for (var [key, has] of tests) {
try { if (Inst21 <= 1000 && typeof (key) != "undefined") {_RecordType("<618,621,27>",(key)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (has) != "undefined") {_RecordType("<623,626,27>",(has)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (tests) != "undefined") {_RecordType("<631,636,27>",(tests)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (key) != "undefined") {_RecordType("<646,649,28>",(key)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<653,654,28>",(o)); Inst25++; } } catch(e) {}
      key in o;
try { if (Inst26 <= 1000 && typeof (has[i > 5 ? 1 : 0]) != "undefined") {_RecordType("<662,680,29>",(has[i > 5 ? 1 : 0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (has) != "undefined") {_RecordType("<662,665,29>",(has)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<666,667,29>",(i)); Inst28++; } } catch(e) {}
      has[i > 5 ? 1 : 0];
try { if (Inst29 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<688,704,30>",(o.hasOwnProperty)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<688,689,30>",(o)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (key) != "undefined") {_RecordType("<705,708,30>",(key)); Inst31++; } } catch(e) {}
      o.hasOwnProperty(key);
try { if (Inst32 <= 1000 && typeof (has[i > 5 ? 1 : 0]) != "undefined") {_RecordType("<717,735,31>",(has[i > 5 ? 1 : 0])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (has) != "undefined") {_RecordType("<717,720,31>",(has)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<721,722,31>",(i)); Inst34++; } } catch(e) {}
      has[i > 5 ? 1 : 0];
    }

try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<752,753,34>",(i)); Inst35++; } } catch(e) {}
    if (i == 5) {
try { if (Inst37 <= 1000 && typeof (t) != "undefined") {_RecordType("<772,773,35>",(t)); Inst37++; } } catch(e) {}
      o = t;
try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<768,769,35>",(o)); Inst36++; } } catch(e) {}
    }
  }
}

try { if (Inst38 <= 1000 && typeof (protoChange) != "undefined") {_RecordType("<797,808,40>",(protoChange)); Inst38++; } } catch(e) {}
function protoChange() {
  var o = {
    0: 0,
    0x10000: 0
  };
try { if (Inst39 <= 1000 && typeof (o) != "undefined") {_RecordType("<819,820,41>",(o)); Inst39++; } } catch(e) {}
  var tests = [[1, [false, true]], [0, [true, true]], [-2, [false, false]], [0x10000, [true, true]], [0x20000, [false, false]]];
try { if (Inst40 <= 1000 && typeof (tests) != "undefined") {_RecordType("<861,866,45>",(tests)); Inst40++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<996,997,47>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<1003,1004,47>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<1011,1012,47>",(i)); Inst43++; } } catch(e) {}
    for (var [key, has] of tests) {
try { if (Inst44 <= 1000 && typeof (key) != "undefined") {_RecordType("<1032,1035,48>",(key)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (has) != "undefined") {_RecordType("<1037,1040,48>",(has)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (tests) != "undefined") {_RecordType("<1045,1050,48>",(tests)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (key) != "undefined") {_RecordType("<1060,1063,49>",(key)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<1067,1068,49>",(o)); Inst48++; } } catch(e) {}
      key in o;
try { if (Inst49 <= 1000 && typeof (has[i > 5 ? 1 : 0]) != "undefined") {_RecordType("<1076,1094,50>",(has[i > 5 ? 1 : 0])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (has) != "undefined") {_RecordType("<1076,1079,50>",(has)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<1080,1081,50>",(i)); Inst51++; } } catch(e) {}
      has[i > 5 ? 1 : 0];
try { if (Inst52 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<1102,1118,51>",(o.hasOwnProperty)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (o) != "undefined") {_RecordType("<1102,1103,51>",(o)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (key) != "undefined") {_RecordType("<1119,1122,51>",(key)); Inst54++; } } catch(e) {}
      o.hasOwnProperty(key);
try { if (Inst55 <= 1000 && typeof (has[0]) != "undefined") {_RecordType("<1131,1137,52>",(has[0])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (has) != "undefined") {_RecordType("<1131,1134,52>",(has)); Inst56++; } } catch(e) {}
      has[0];
    }

try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<1154,1155,55>",(i)); Inst57++; } } catch(e) {}
    if (i == 5) {
      o.__proto__ = [1, 1, 1, 1];
try { if (Inst58 <= 1000 && typeof (o.__proto__) != "undefined") {_RecordType("<1170,1181,56>",(o.__proto__)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (o) != "undefined") {_RecordType("<1170,1171,56>",(o)); Inst59++; } } catch(e) {}
    }
  }
}

try { if (Inst60 <= 1000 && typeof (sparse) != "undefined") {_RecordType("<1211,1217,61>",(sparse)); Inst60++; } } catch(e) {}
sparse();
try { if (Inst61 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1221,1231,62>",(typedArray)); Inst61++; } } catch(e) {}
typedArray();
try { if (Inst62 <= 1000 && typeof (protoChange) != "undefined") {_RecordType("<1235,1246,63>",(protoChange)); Inst62++; } } catch(e) {}
protoChange();

