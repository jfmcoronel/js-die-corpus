var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testNuke) != "undefined") {_RecordType("<9,17,1>",(testNuke)); Inst0++; } } catch(e) {}
function testNuke() {
try { if (Inst2 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<38,46,2>",(evaluate)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<86,95,3>",(newGlobal)); Inst3++; } } catch(e) {}
  var wrapper = evaluate("({a: 15, b: {c: 42}})", {
    global: newGlobal({
      newCompartment: true,
      sameZoneAs: this
    })
  });
try { if (Inst1 <= 1000 && typeof (wrapper) != "undefined") {_RecordType("<28,35,2>",(wrapper)); Inst1++; } } catch(e) {}
  var i, error;
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<168,169,8>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (error) != "undefined") {_RecordType("<171,176,8>",(error)); Inst5++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<383,384,22>",(e)); Inst15++; } } catch(e) {}
  try {
    for (i = 0; i < 150; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<196,197,11>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<203,204,11>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<212,213,11>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (wrapper.b.c) != "undefined") {_RecordType("<225,236,12>",(wrapper.b.c)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (wrapper.b) != "undefined") {_RecordType("<225,234,12>",(wrapper.b)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (wrapper) != "undefined") {_RecordType("<225,232,12>",(wrapper)); Inst11++; } } catch(e) {}
      wrapper.b.c;
      42;
try { if (Inst12 <= 1000 && typeof (wrapper.a) != "undefined") {_RecordType("<254,263,14>",(wrapper.a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (wrapper) != "undefined") {_RecordType("<254,261,14>",(wrapper)); Inst13++; } } catch(e) {}
      wrapper.a;
      15;

try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<286,287,17>",(i)); Inst14++; } } catch(e) {}
      if (i == 142) {
        // Next access to wrapper.b should throw.
        ;
      }
    }
  } catch (e) {
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<400,401,23>",(e)); Inst17++; } } catch(e) {}
    error = e;
try { if (Inst16 <= 1000 && typeof (error) != "undefined") {_RecordType("<392,397,23>",(error)); Inst16++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (error.message.includes) != "undefined") {_RecordType("<410,432,26>",(error.message.includes)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (error.message) != "undefined") {_RecordType("<410,423,26>",(error.message)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (error) != "undefined") {_RecordType("<410,415,26>",(error)); Inst20++; } } catch(e) {}
  error.message.includes("dead object");
  true;
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<459,460,28>",(i)); Inst21++; } } catch(e) {}
  i;
  143;
}

try { if (Inst22 <= 1000 && typeof (testSweep) != "undefined") {_RecordType("<481,490,32>",(testSweep)); Inst22++; } } catch(e) {}
function testSweep() {
try { if (Inst24 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<511,519,33>",(evaluate)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<559,568,34>",(newGlobal)); Inst25++; } } catch(e) {}
  var wrapper = evaluate("({a: 15, b: {c: 42}})", {
    global: newGlobal({
      newCompartment: true
    })
  });
try { if (Inst23 <= 1000 && typeof (wrapper) != "undefined") {_RecordType("<501,508,33>",(wrapper)); Inst23++; } } catch(e) {}
  var error;
try { if (Inst26 <= 1000 && typeof (error) != "undefined") {_RecordType("<617,622,38>",(error)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<626,632,39>",(gczeal)); Inst27++; } } catch(e) {}
  gczeal(8, 1); // Sweep zones separately

try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<751,752,44>",(e)); Inst30++; } } catch(e) {}
  try {
    // Next access to wrapper.b should throw.
    wrapper.x = 4;
try { if (Inst28 <= 1000 && typeof (wrapper.x) != "undefined") {_RecordType("<725,734,43>",(wrapper.x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (wrapper) != "undefined") {_RecordType("<725,732,43>",(wrapper)); Inst29++; } } catch(e) {}
  } catch (e) {
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<768,769,45>",(e)); Inst32++; } } catch(e) {}
    error = e;
try { if (Inst31 <= 1000 && typeof (error) != "undefined") {_RecordType("<760,765,45>",(error)); Inst31++; } } catch(e) {}
  }

try { if (Inst33 <= 1000 && typeof (error.message.includes) != "undefined") {_RecordType("<778,800,48>",(error.message.includes)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (error.message) != "undefined") {_RecordType("<778,791,48>",(error.message)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (error) != "undefined") {_RecordType("<778,783,48>",(error)); Inst35++; } } catch(e) {}
  error.message.includes("dead object");
  true;
}

try { if (Inst36 <= 1000 && typeof (testNuke) != "undefined") {_RecordType("<828,836,52>",(testNuke)); Inst36++; } } catch(e) {}
testNuke();
try { if (Inst37 <= 1000 && typeof (testSweep) != "undefined") {_RecordType("<840,849,53>",(testSweep)); Inst37++; } } catch(e) {}
testSweep();

