var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (protoChange) != "undefined") {_RecordType("<9,20,1>",(protoChange)); Inst0++; } } catch(e) {}
function protoChange() {
  var o = {
    0: 0,
    1: 0,
    0x10000: 0,
    0x20000: 0
  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<31,32,2>",(o)); Inst1++; } } catch(e) {}
  var tests = [1, 0, 0x10000, 0x20000];
try { if (Inst2 <= 1000 && typeof (tests) != "undefined") {_RecordType("<99,104,8>",(tests)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (result_map) != "undefined") {_RecordType("<145,155,10>",(result_map)); Inst3++; } } catch(e) {}
  function result_map(key, i) {
try { if (Inst4 <= 1000 && typeof (key) != "undefined") {_RecordType("<156,159,10>",(key)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<161,162,10>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,11>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (key) != "undefined") {_RecordType("<183,186,11>",(key)); Inst7++; } } catch(e) {}
    if (i > 5 && key == 0x20000) {
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<214,223,12>",(undefined)); Inst8++; } } catch(e) {}
      return undefined;
    }

    return 0;
  }

  for (var i = 0; i < 10; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<262,263,18>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<269,270,18>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<277,278,18>",(i)); Inst11++; } } catch(e) {}
    for (var key of tests) {
try { if (Inst12 <= 1000 && typeof (key) != "undefined") {_RecordType("<297,300,19>",(key)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (tests) != "undefined") {_RecordType("<304,309,19>",(tests)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (o[key]) != "undefined") {_RecordType("<319,325,20>",(o[key])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<319,320,20>",(o)); Inst15++; } } catch(e) {}
      o[key];
try { if (Inst16 <= 1000 && typeof (result_map) != "undefined") {_RecordType("<333,343,21>",(result_map)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (key) != "undefined") {_RecordType("<344,347,21>",(key)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<349,350,21>",(i)); Inst18++; } } catch(e) {}
      result_map(key, i);
    }

try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<368,369,24>",(i)); Inst19++; } } catch(e) {}
    if (i == 5) {
try { if (Inst20 <= 1000 && typeof (o[0x20000]) != "undefined") {_RecordType("<391,401,25>",(o[0x20000])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<391,392,25>",(o)); Inst21++; } } catch(e) {}
      delete o[0x20000];
    }
  }
}

for (var i = 0; i < 10; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,30>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<432,433,30>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<440,441,30>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (protoChange) != "undefined") {_RecordType("<449,460,31>",(protoChange)); Inst25++; } } catch(e) {}
  protoChange();
}

