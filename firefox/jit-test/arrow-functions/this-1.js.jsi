var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// 'this' is lexically scoped in arrow functions
var obj = {
  f: function (expected) {
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<76,84,3>",(expected)); Inst1++; } } catch(e) {}
    this;
try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<102,110,5>",(expected)); Inst2++; } } catch(e) {}
    expected;
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<123,124,6>",(a)); Inst3++; } } catch(e) {}
    return a => this;
  }
};
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<53,56,2>",(obj)); Inst0++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (obj.f) != "undefined") {_RecordType("<149,154,9>",(obj.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<149,152,9>",(obj)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<155,158,9>",(obj)); Inst7++; } } catch(e) {}
var g = obj.f(obj);
try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<145,146,9>",(g)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<161,162,10>",(g)); Inst8++; } } catch(e) {}
g();
try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<166,169,11>",(obj)); Inst9++; } } catch(e) {}
obj;
try { if (Inst11 <= 1000 && typeof (obj.f) != "undefined") {_RecordType("<189,194,13>",(obj.f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<189,192,13>",(obj)); Inst12++; } } catch(e) {}
var obj2 = {
  f: obj.f
};
try { if (Inst10 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<175,179,12>",(obj2)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (obj2.f) != "undefined") {_RecordType("<207,213,15>",(obj2.f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<207,211,15>",(obj2)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<214,218,15>",(obj2)); Inst16++; } } catch(e) {}
var g2 = obj2.f(obj2);
try { if (Inst13 <= 1000 && typeof (g2) != "undefined") {_RecordType("<202,204,15>",(g2)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (g2) != "undefined") {_RecordType("<221,223,16>",(g2)); Inst17++; } } catch(e) {}
g2();
try { if (Inst18 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<227,231,17>",(obj2)); Inst18++; } } catch(e) {}
obj2;
try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<233,234,18>",(g)); Inst19++; } } catch(e) {}
g();
try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<238,241,19>",(obj)); Inst20++; } } catch(e) {}
obj;

