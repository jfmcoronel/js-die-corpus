var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<26,27,2>",(f)); Inst0++; } } catch(e) {}
  function f() {
try { if (Inst2 <= 1000 && typeof (w) != "undefined") {_RecordType("<45,46,3>",(w)); Inst2++; } } catch(e) {}
    this.y = w;
try { if (Inst1 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<36,42,3>",(this.y)); Inst1++; } } catch(e) {}
    this.y = void 0;
try { if (Inst3 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<52,58,4>",(this.y)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<73,79,5>",(Object)); Inst4++; } } catch(e) {}
    Object;
  }

  for (a in [0, 0, 0, 0]) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<93,94,8>",(a)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<122,123,9>",(f)); Inst6++; } } catch(e) {}
    new f();
  }

  var w = {};
try { if (Inst7 <= 1000 && typeof (w) != "undefined") {_RecordType("<138,139,12>",(w)); Inst7++; } } catch(e) {}
})();
/* Make sure that MICs don't have the same bug. */


try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<209,215,17>",(Object)); Inst9++; } } catch(e) {}
x = Object();
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<205,206,17>",(x)); Inst8++; } } catch(e) {}

(function () {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<246,247,20>",(f)); Inst10++; } } catch(e) {}
  function f() {
try { if (Inst12 <= 1000 && typeof (w) != "undefined") {_RecordType("<260,261,21>",(w)); Inst12++; } } catch(e) {}
    x = w;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<256,257,21>",(x)); Inst11++; } } catch(e) {}
    x = void 0;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<267,268,22>",(x)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<283,289,23>",(Object)); Inst14++; } } catch(e) {}
    Object;
  }

  for (a in [0, 0, 0, 0]) {
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<303,304,26>",(a)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<332,333,27>",(f)); Inst16++; } } catch(e) {}
    new f();
  }

  var w = {};
try { if (Inst17 <= 1000 && typeof (w) != "undefined") {_RecordType("<348,349,30>",(w)); Inst17++; } } catch(e) {}
})();
/* Don't assert. */

