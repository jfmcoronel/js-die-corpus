var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f() {
try { if (Inst2 <= 1000 && typeof ([NaN][0]) != "undefined") {_RecordType("<26,34,2>",([NaN][0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<27,30,2>",(NaN)); Inst3++; } } catch(e) {}
  var x = -[NaN][0];
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<21,22,2>",(x)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<38,39,3>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<44,45,3>",(x)); Inst5++; } } catch(e) {}
  x === x;
  false;
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<58,59,5>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<64,65,5>",(x)); Inst7++; } } catch(e) {}
  x !== x;
  true;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<77,78,7>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<82,83,7>",(x)); Inst9++; } } catch(e) {}
  x == x;
  false;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<96,97,9>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<101,102,9>",(x)); Inst11++; } } catch(e) {}
  x != x;
  true;
  var y = -("x" / {});
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<118,119,11>",(y)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<145,146,12>",(y)); Inst14++; } } catch(e) {}
  var z = y;
try { if (Inst13 <= 1000 && typeof (z) != "undefined") {_RecordType("<141,142,12>",(z)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<150,151,13>",(y)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (z) != "undefined") {_RecordType("<156,157,13>",(z)); Inst16++; } } catch(e) {}
  y === z;
  false;
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<170,171,15>",(y)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (z) != "undefined") {_RecordType("<176,177,15>",(z)); Inst18++; } } catch(e) {}
  y !== z;
  true;
try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<189,190,17>",(y)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (z) != "undefined") {_RecordType("<194,195,17>",(z)); Inst20++; } } catch(e) {}
  y == z;
  false;
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<208,209,19>",(y)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (z) != "undefined") {_RecordType("<213,214,19>",(z)); Inst22++; } } catch(e) {}
  y != z;
  true;
}

try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<227,228,23>",(f)); Inst23++; } } catch(e) {}
f();

try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<242,243,25>",(g)); Inst24++; } } catch(e) {}
function g(x, y) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<244,245,25>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<247,248,25>",(y)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<262,263,26>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (y) != "undefined") {_RecordType("<266,267,26>",(y)); Inst29++; } } catch(e) {}
  var z = x / y;
try { if (Inst27 <= 1000 && typeof (z) != "undefined") {_RecordType("<258,259,26>",(z)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (z) != "undefined") {_RecordType("<271,272,27>",(z)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (z) != "undefined") {_RecordType("<277,278,27>",(z)); Inst31++; } } catch(e) {}
  z === z;
  false;
}

try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<292,293,31>",(g)); Inst32++; } } catch(e) {}
g(0, 0);

