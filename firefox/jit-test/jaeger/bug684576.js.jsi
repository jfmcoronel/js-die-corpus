var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| error: TypeError
try { if (Inst0 <= 1000 && typeof (f0) != "undefined") {_RecordType("<40,42,2>",(f0)); Inst0++; } } catch(e) {}
function f0(p0, p1) {
try { if (Inst1 <= 1000 && typeof (p0) != "undefined") {_RecordType("<43,45,2>",(p0)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (p1) != "undefined") {_RecordType("<47,49,2>",(p1)); Inst2++; } } catch(e) {}
  var v3;
try { if (Inst3 <= 1000 && typeof (v3) != "undefined") {_RecordType("<59,61,3>",(v3)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (p0[p1][5]) != "undefined") {_RecordType("<110,119,8>",(p0[p1][5])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (p0[p1]) != "undefined") {_RecordType("<110,116,8>",(p0[p1])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (p0) != "undefined") {_RecordType("<110,112,8>",(p0)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (p0[p1][5]) != "undefined") {_RecordType("<128,137,8>",(p0[p1][5])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (p0[p1]) != "undefined") {_RecordType("<128,134,8>",(p0[p1])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p0) != "undefined") {_RecordType("<128,130,8>",(p0)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p0[p1][5]) != "undefined") {_RecordType("<146,155,8>",(p0[p1][5])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (p0[p1]) != "undefined") {_RecordType("<146,152,8>",(p0[p1])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p0) != "undefined") {_RecordType("<146,148,8>",(p0)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (p0) != "undefined") {_RecordType("<168,170,8>",(p0)); Inst13++; } } catch(e) {}
  do {
try { if (Inst14 <= 1000 && typeof (p1) != "undefined") {_RecordType("<75,77,6>",(p1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v3) != "undefined") {_RecordType("<80,82,6>",(v3)); Inst15++; } } catch(e) {}
    p1 > v3;
    v3 = 1.7;
try { if (Inst16 <= 1000 && typeof (v3) != "undefined") {_RecordType("<88,90,7>",(v3)); Inst16++; } } catch(e) {}
  } while ((p0[p1][5] == 1 || p0[p1][5] == 2 || p0[p1][5] == 3) + 0 > p0);

try { if (Inst17 <= 1000 && typeof (v3) != "undefined") {_RecordType("<177,179,10>",(v3)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f0) != "undefined") {_RecordType("<180,182,10>",(f0)); Inst18++; } } catch(e) {}
  +v3(f0);
}

try { if (Inst19 <= 1000 && typeof (f0) != "undefined") {_RecordType("<188,190,13>",(f0)); Inst19++; } } catch(e) {}
f0(4105, 8307);

