var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| allow-oom
(function () {
  x = [1, 2, 3];
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<41,42,3>",(x)); Inst0++; } } catch(e) {}
})();

try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<323,324,17>",(e)); Inst17++; } } catch(e) {}
try {
  (function () {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<100,101,8>",(a)); Inst1++; } } catch(e) {}
    (function a(aaaaaa, bbbbbb) {
try { if (Inst2 <= 1000 && typeof (aaaaaa) != "undefined") {_RecordType("<102,108,8>",(aaaaaa)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (bbbbbb) != "undefined") {_RecordType("<110,116,8>",(bbbbbb)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (aaaaaa.length) != "undefined") {_RecordType("<130,143,9>",(aaaaaa.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (aaaaaa) != "undefined") {_RecordType("<130,136,9>",(aaaaaa)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (bbbbbb) != "undefined") {_RecordType("<147,153,9>",(bbbbbb)); Inst6++; } } catch(e) {}
      if (aaaaaa.length == bbbbbb) {
try { if (Inst7 <= 1000 && typeof (eval) != "undefined") {_RecordType("<172,176,10>",(eval)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (bbbbbb.valueOf) != "undefined") {_RecordType("<179,193,10>",(bbbbbb.valueOf)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (bbbbbb) != "undefined") {_RecordType("<179,185,10>",(bbbbbb)); Inst9++; } } catch(e) {}
        return eval % bbbbbb.valueOf();
      }

try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<221,222,13>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (aaaaaa) != "undefined") {_RecordType("<223,229,13>",(aaaaaa)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (bbbbbb) != "undefined") {_RecordType("<231,237,13>",(bbbbbb)); Inst13++; } } catch(e) {}
      cccccc = a(aaaaaa, bbbbbb + 1);
try { if (Inst10 <= 1000 && typeof (cccccc) != "undefined") {_RecordType("<212,218,13>",(cccccc)); Inst10++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<268,269,14>",(x)); Inst16++; } } catch(e) {}
      return cccccc._ = x;
try { if (Inst14 <= 1000 && typeof (cccccc._) != "undefined") {_RecordType("<257,265,14>",(cccccc._)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (cccccc) != "undefined") {_RecordType("<257,263,14>",(cccccc)); Inst15++; } } catch(e) {}
    })([,,,,,,,,,,,,,,,,,, 0], 0);
  })();
} catch (e) {
  ;
}
/* Don't assert. */

