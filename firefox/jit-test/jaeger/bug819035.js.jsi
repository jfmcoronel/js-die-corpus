var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This test case check the difference between fp->callee() and fp->fun() on
// lambdas.
(function (a, u) {
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<100,101,3>",(a)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (u) != "undefined") {_RecordType("<103,104,3>",(u)); Inst1++; } } catch(e) {}
  var sum = function (array, callback) {
try { if (Inst3 <= 1000 && typeof (array) != "undefined") {_RecordType("<130,135,4>",(array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (callback) != "undefined") {_RecordType("<137,145,4>",(callback)); Inst4++; } } catch(e) {}
    for (var i = 0; i < array.length; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<162,163,5>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<169,170,5>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<173,185,5>",(array.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<173,178,5>",(array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,5>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (callback) != "undefined") {_RecordType("<200,208,6>",(callback)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<209,217,6>",(array[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<209,214,6>",(array)); Inst12++; } } catch(e) {}
      callback(array[i]);
    }
  };
try { if (Inst2 <= 1000 && typeof (sum) != "undefined") {_RecordType("<114,117,4>",(sum)); Inst2++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<362,363,16>",(a)); Inst23++; } } catch(e) {}
  (function () {
try { if (Inst13 <= 1000 && typeof (r) != "undefined") {_RecordType("<263,264,11>",(r)); Inst13++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<345,354,15>",(arguments)); Inst22++; } } catch(e) {}
    (function r(t) {
try { if (Inst14 <= 1000 && typeof (t) != "undefined") {_RecordType("<265,266,11>",(t)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<276,277,12>",(t)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (u) != "undefined") {_RecordType("<282,283,12>",(u)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (sum) != "undefined") {_RecordType("<285,288,12>",(sum)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<289,290,12>",(t)); Inst18++; } } catch(e) {}
      t !== u, sum(t, function (v) {
try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<302,303,12>",(v)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<322,323,13>",(r)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<324,325,13>",(v)); Inst21++; } } catch(e) {}
        return r(v);
      });
    })(arguments);
  })(a);
}

