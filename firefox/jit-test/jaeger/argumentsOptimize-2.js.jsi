var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  var x = 0;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<23,24,2>",(x)); Inst1++; } } catch(e) {}

  for (var i = arguments.length - 1; i >= 0; i--) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<42,43,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<46,62,4>",(arguments.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<46,55,4>",(arguments)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<68,69,4>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<76,77,4>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (arguments[i]) != "undefined") {_RecordType("<92,104,5>",(arguments[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<92,101,5>",(arguments)); Inst9++; } } catch(e) {}
    x += arguments[i];
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<87,88,5>",(x)); Inst7++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<120,121,8>",(x)); Inst10++; } } catch(e) {}
  return x;
}

try { if (Inst11 <= 1000 && typeof (bar) != "undefined") {_RecordType("<135,138,11>",(bar)); Inst11++; } } catch(e) {}
function bar() {
  var x = 0;
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<149,150,12>",(x)); Inst12++; } } catch(e) {}

  for (var i = 0; i < arguments.length; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<168,169,14>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,14>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<179,195,14>",(arguments.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<179,188,14>",(arguments)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,14>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (arguments[i]) != "undefined") {_RecordType("<213,225,15>",(arguments[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<213,222,15>",(arguments)); Inst20++; } } catch(e) {}
    x += arguments[i];
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<208,209,15>",(x)); Inst18++; } } catch(e) {}
  }

try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<241,242,18>",(x)); Inst21++; } } catch(e) {}
  return x;
}

try { if (Inst22 <= 1000 && typeof (baz) != "undefined") {_RecordType("<256,259,21>",(baz)); Inst22++; } } catch(e) {}
function baz(a, b, c, d, e) {
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<260,261,21>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<263,264,21>",(b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<266,267,21>",(c)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (d) != "undefined") {_RecordType("<269,270,21>",(d)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<272,273,21>",(e)); Inst27++; } } catch(e) {}
  var x = 0;
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<283,284,22>",(x)); Inst28++; } } catch(e) {}

  for (var i = 0; i < arguments.length; i++) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,24>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<309,310,24>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<313,329,24>",(arguments.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<313,322,24>",(arguments)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,24>",(i)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (arguments[i]) != "undefined") {_RecordType("<347,359,25>",(arguments[i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<347,356,25>",(arguments)); Inst36++; } } catch(e) {}
    x += arguments[i];
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<342,343,25>",(x)); Inst34++; } } catch(e) {}
  }

try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<375,376,28>",(x)); Inst37++; } } catch(e) {}
  return x;
}

for (var i = 0; i < 10; i++) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<390,391,31>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<397,398,31>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<405,406,31>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (foo) != "undefined") {_RecordType("<414,417,32>",(foo)); Inst41++; } } catch(e) {}
  foo(1, 2, 3, 4, 5);
  15;
try { if (Inst42 <= 1000 && typeof (bar) != "undefined") {_RecordType("<442,445,34>",(bar)); Inst42++; } } catch(e) {}
  bar(1, 2.5, true, {
    valueOf: function () {
      return 10;
    }
  }, "five");
  "14.5five";
try { if (Inst43 <= 1000 && typeof (baz) != "undefined") {_RecordType("<542,545,40>",(baz)); Inst43++; } } catch(e) {}
  baz(1, 2, 3, 4, 5);
  15;
}

