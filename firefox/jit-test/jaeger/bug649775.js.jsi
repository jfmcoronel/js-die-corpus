var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var x = [,];
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<4,5,1>",(x)); Inst0++; } } catch(e) {}
var n = [,];
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<17,18,2>",(n)); Inst1++; } } catch(e) {}
var np = 18229;
try { if (Inst2 <= 1000 && typeof (np) != "undefined") {_RecordType("<30,32,3>",(np)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<47,52,4>",(Array)); Inst4++; } } catch(e) {}
sa = Array;
try { if (Inst3 <= 1000 && typeof (sa) != "undefined") {_RecordType("<42,44,4>",(sa)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (copy_) != "undefined") {_RecordType("<64,69,6>",(copy_)); Inst5++; } } catch(e) {}
function copy_(x, y) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<70,71,6>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<73,74,6>",(y)); Inst7++; } } catch(e) {}
  var i;
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<84,85,7>",(i)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<97,98,8>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<101,102,8>",(y)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<105,113,8>",(x.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<105,106,8>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y.length) != "undefined") {_RecordType("<116,124,8>",(y.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<116,117,8>",(y)); Inst15++; } } catch(e) {}
  var k = x < y ? x.length : y.length;
try { if (Inst9 <= 1000 && typeof (k) != "undefined") {_RecordType("<93,94,8>",(k)); Inst9++; } } catch(e) {}

  for (i = 0; i < k; i--) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<134,135,10>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<141,142,10>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (k) != "undefined") {_RecordType("<145,146,10>",(k)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<148,149,10>",(i)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<159,163,11>",(x[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<159,160,11>",(x)); Inst21++; } } catch(e) {}
    x[i];

try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,13>",(i)); Inst22++; } } catch(e) {}
    if (i == -100) {
      return;
    }
  }
}

try { if (Inst23 <= 1000 && typeof (mont_) != "undefined") {_RecordType("<223,228,19>",(mont_)); Inst23++; } } catch(e) {}
function mont_(x, y, n, np) {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<229,230,19>",(x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<232,233,19>",(y)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (n) != "undefined") {_RecordType("<235,236,19>",(n)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (np) != "undefined") {_RecordType("<238,240,19>",(np)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (copy_) != "undefined") {_RecordType("<246,251,20>",(copy_)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<252,253,20>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (sa) != "undefined") {_RecordType("<255,257,20>",(sa)); Inst30++; } } catch(e) {}
  copy_(x, sa);
}

try { if (Inst31 <= 1000 && typeof (mont_) != "undefined") {_RecordType("<263,268,23>",(mont_)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<269,270,23>",(x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<272,273,23>",(x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<275,276,23>",(n)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (np) != "undefined") {_RecordType("<278,280,23>",(np)); Inst35++; } } catch(e) {}
mont_(x, x, n, np);

