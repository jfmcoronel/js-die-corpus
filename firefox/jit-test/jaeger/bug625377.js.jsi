var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
x = [];
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<0,1,1>",(x)); Inst0++; } } catch(e) {}

for (var i = 0; i < 3; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<18,19,3>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<25,26,3>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<32,33,3>",(i)); Inst3++; } } catch(e) {}
  var obj = {
    first: "first",
    second: "second"
  };
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<45,48,4>",(obj)); Inst4++; } } catch(e) {}
  var count = 0;
try { if (Inst5 <= 1000 && typeof (count) != "undefined") {_RecordType("<105,110,8>",(count)); Inst5++; } } catch(e) {}

  for (var elem in obj) {
try { if (Inst6 <= 1000 && typeof (elem) != "undefined") {_RecordType("<128,132,10>",(elem)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<136,139,10>",(obj)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (obj.second) != "undefined") {_RecordType("<154,164,11>",(obj.second)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<154,157,11>",(obj)); Inst9++; } } catch(e) {}
    delete obj.second;
try { if (Inst10 <= 1000 && typeof (count) != "undefined") {_RecordType("<170,175,12>",(count)); Inst10++; } } catch(e) {}
    count++;
  }

try { if (Inst11 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<186,192,15>",(x.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<186,187,15>",(x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (count) != "undefined") {_RecordType("<193,198,15>",(count)); Inst13++; } } catch(e) {}
  x.push(count);
}

try { if (Inst14 <= 1000 && typeof (x[0]) != "undefined") {_RecordType("<204,208,18>",(x[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<204,205,18>",(x)); Inst15++; } } catch(e) {}
x[0];
1;
try { if (Inst16 <= 1000 && typeof (x[1]) != "undefined") {_RecordType("<213,217,20>",(x[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<213,214,20>",(x)); Inst17++; } } catch(e) {}
x[1];
1;
try { if (Inst18 <= 1000 && typeof (x[2]) != "undefined") {_RecordType("<222,226,22>",(x[2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<222,223,22>",(x)); Inst19++; } } catch(e) {}
x[2];
1;

