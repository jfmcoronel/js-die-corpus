var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
String.prototype.m = function (s) {
try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<31,32,1>",(s)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (this.indexOf) != "undefined") {_RecordType("<45,57,2>",(this.indexOf)); Inst4++; } } catch(e) {}
  return this.indexOf('a');
};
try { if (Inst0 <= 1000 && typeof (String.prototype.m) != "undefined") {_RecordType("<0,18,1>",(String.prototype.m)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<0,16,1>",(String.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (String) != "undefined") {_RecordType("<0,6,1>",(String)); Inst2++; } } catch(e) {}

var g = function (s) {
try { if (Inst6 <= 1000 && typeof (s) != "undefined") {_RecordType("<86,87,5>",(s)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof ((s + 'asdf').m) != "undefined") {_RecordType("<100,114,6>",((s + 'asdf').m)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<101,102,6>",(s)); Inst8++; } } catch(e) {}
  return (s + 'asdf').m();
};
try { if (Inst5 <= 1000 && typeof (g) != "undefined") {_RecordType("<72,73,5>",(g)); Inst5++; } } catch(e) {}

var h = function (s) {
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<140,141,9>",(s)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (('asdf' + s).m) != "undefined") {_RecordType("<154,168,10>",(('asdf' + s).m)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (s) != "undefined") {_RecordType("<164,165,10>",(s)); Inst12++; } } catch(e) {}
  return ('asdf' + s).m();
};
try { if (Inst9 <= 1000 && typeof (h) != "undefined") {_RecordType("<126,127,9>",(h)); Inst9++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<185,186,13>",(g)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (String) != "undefined") {_RecordType("<191,197,13>",(String)); Inst15++; } } catch(e) {}
var ix = g(new String('abc'));
try { if (Inst13 <= 1000 && typeof (ix) != "undefined") {_RecordType("<180,182,13>",(ix)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (ix) != "undefined") {_RecordType("<207,209,14>",(ix)); Inst16++; } } catch(e) {}
ix;
0;
try { if (Inst18 <= 1000 && typeof (h) != "undefined") {_RecordType("<223,224,16>",(h)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (String) != "undefined") {_RecordType("<229,235,16>",(String)); Inst19++; } } catch(e) {}
var ix = h(new String('abc'));
try { if (Inst17 <= 1000 && typeof (ix) != "undefined") {_RecordType("<218,220,16>",(ix)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (ix) != "undefined") {_RecordType("<245,247,17>",(ix)); Inst20++; } } catch(e) {}
ix;
0;

