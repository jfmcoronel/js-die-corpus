var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<9,12,1>",(bar)); Inst0++; } } catch(e) {}
function bar(x, i) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<13,14,1>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<16,17,1>",(i)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<27,28,2>",(i)); Inst3++; } } catch(e) {}
  if (i == 50) {
    foo.arguments[1] = 20;
try { if (Inst4 <= 1000 && typeof (foo.arguments[1]) != "undefined") {_RecordType("<42,58,3>",(foo.arguments[1])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo.arguments) != "undefined") {_RecordType("<42,55,3>",(foo.arguments)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<42,45,3>",(foo)); Inst6++; } } catch(e) {}
  }
}

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<81,84,7>",(foo)); Inst7++; } } catch(e) {}
function foo(x, j, n) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<85,86,7>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<88,89,7>",(j)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<91,92,7>",(n)); Inst10++; } } catch(e) {}
  var a = 0;
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<102,103,8>",(a)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<111,120,9>",(arguments)); Inst12++; } } catch(e) {}
  arguments;

  for (var i = 0; i < n; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<134,135,11>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<141,142,11>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (n) != "undefined") {_RecordType("<145,146,11>",(n)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<148,149,11>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x[j]) != "undefined") {_RecordType("<167,171,12>",(x[j])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<167,168,12>",(x)); Inst19++; } } catch(e) {}
    var q = x[j];
try { if (Inst17 <= 1000 && typeof (q) != "undefined") {_RecordType("<163,164,12>",(q)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<177,180,13>",(bar)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<181,182,13>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<184,185,13>",(i)); Inst22++; } } catch(e) {}
    bar(x, i);

try { if (Inst23 <= 1000 && typeof (q) != "undefined") {_RecordType("<204,205,15>",(q)); Inst23++; } } catch(e) {}
    if (typeof q == 'undefined') {
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<230,231,16>",(a)); Inst24++; } } catch(e) {}
      a++;
    }
  }

try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<255,256,20>",(a)); Inst25++; } } catch(e) {}
  return a;
}

try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<269,272,23>",(foo)); Inst27++; } } catch(e) {}
var a = foo([1, 2, 3, 4], 3, 100);
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<265,266,23>",(a)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<296,297,24>",(a)); Inst28++; } } catch(e) {}
a;
0;

