var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var res = 0;
try { if (Inst0 <= 1000 && typeof (res) != "undefined") {_RecordType("<4,7,1>",(res)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<23,26,3>",(foo)); Inst1++; } } catch(e) {}
function foo(x, n, y) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<27,28,3>",(x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<30,31,3>",(n)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<33,34,3>",(y)); Inst4++; } } catch(e) {}
  for (var j = 0; j < n; j++) {
try { if (Inst5 <= 1000 && typeof (j) != "undefined") {_RecordType("<49,50,4>",(j)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (j) != "undefined") {_RecordType("<56,57,4>",(j)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (n) != "undefined") {_RecordType("<60,61,4>",(n)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<63,64,4>",(j)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x[j]) != "undefined") {_RecordType("<74,78,5>",(x[j])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<74,75,5>",(x)); Inst10++; } } catch(e) {}
    x[j];
try { if (Inst11 <= 1000 && typeof (y.f) != "undefined") {_RecordType("<84,87,6>",(y.f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<84,85,6>",(y)); Inst12++; } } catch(e) {}
    y.f;
  }
}

var x = [1, 2, 3, 4, 5];
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<100,101,10>",(x)); Inst13++; } } catch(e) {}
var y = {};
try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<125,126,11>",(y)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<133,154,12>",(Object.defineProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<133,139,12>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<155,156,12>",(y)); Inst17++; } } catch(e) {}
Object.defineProperty(y, 'f', {
  get: function () {
try { if (Inst18 <= 1000 && typeof (res) != "undefined") {_RecordType("<190,193,14>",(res)); Inst18++; } } catch(e) {}
    res++;
    x.length = 2;
try { if (Inst19 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<201,209,15>",(x.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<201,202,15>",(x)); Inst20++; } } catch(e) {}
  }
});
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<231,234,18>",(foo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<235,236,18>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<241,242,18>",(y)); Inst24++; } } catch(e) {}
var a = foo(x, 5, y);
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<227,228,18>",(a)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (res) != "undefined") {_RecordType("<245,248,19>",(res)); Inst25++; } } catch(e) {}
res;
5;

