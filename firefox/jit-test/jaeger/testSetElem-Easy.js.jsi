var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// vim: set ts=8 sts=4 et sw=4 tw=99:
try { if (Inst0 <= 1000 && typeof (testBadSetElems) != "undefined") {_RecordType("<47,62,2>",(testBadSetElems)); Inst0++; } } catch(e) {}
function testBadSetElems(obj, key) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<63,66,2>",(obj)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (key) != "undefined") {_RecordType("<68,71,2>",(key)); Inst2++; } } catch(e) {}
  obj[key] = 5;
try { if (Inst3 <= 1000 && typeof (obj[key]) != "undefined") {_RecordType("<77,85,3>",(obj[key])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<77,80,3>",(obj)); Inst4++; } } catch(e) {}
  obj[-1] = 5;
try { if (Inst5 <= 1000 && typeof (obj[-1]) != "undefined") {_RecordType("<93,100,4>",(obj[-1])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<93,96,4>",(obj)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<116,119,5>",(obj)); Inst8++; } } catch(e) {}
  var L = obj;
try { if (Inst7 <= 1000 && typeof (L) != "undefined") {_RecordType("<112,113,5>",(L)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (L) != "undefined") {_RecordType("<130,131,6>",(L)); Inst11++; } } catch(e) {}
  L[L] = L;
try { if (Inst9 <= 1000 && typeof (L[L]) != "undefined") {_RecordType("<123,127,6>",(L[L])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (L) != "undefined") {_RecordType("<123,124,6>",(L)); Inst10++; } } catch(e) {}
  obj = [];
try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<135,138,7>",(obj)); Inst12++; } } catch(e) {}
  obj.K = 5;
try { if (Inst13 <= 1000 && typeof (obj.K) != "undefined") {_RecordType("<147,152,8>",(obj.K)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<147,150,8>",(obj)); Inst14++; } } catch(e) {}
  obj[2] = 5;
try { if (Inst15 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<160,166,9>",(obj[2])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<160,163,9>",(obj)); Inst16++; } } catch(e) {}
  var T = "a";
try { if (Inst17 <= 1000 && typeof (T) != "undefined") {_RecordType("<178,179,10>",(T)); Inst17++; } } catch(e) {}
  obj[T] = 12;
try { if (Inst18 <= 1000 && typeof (obj[T]) != "undefined") {_RecordType("<189,195,11>",(obj[T])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<189,192,11>",(obj)); Inst19++; } } catch(e) {}
  obj = [];
try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<204,207,12>",(obj)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (key) != "undefined") {_RecordType("<230,233,13>",(key)); Inst23++; } } catch(e) {}
  obj[Object] = key;
try { if (Inst21 <= 1000 && typeof (obj[Object]) != "undefined") {_RecordType("<216,227,13>",(obj[Object])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<216,219,13>",(obj)); Inst22++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (testDenseSets) != "undefined") {_RecordType("<247,260,16>",(testDenseSets)); Inst24++; } } catch(e) {}
function testDenseSets(L) {
try { if (Inst25 <= 1000 && typeof (L) != "undefined") {_RecordType("<261,262,16>",(L)); Inst25++; } } catch(e) {}
  var obj = [,,,,,,,,,,];
try { if (Inst26 <= 1000 && typeof (obj) != "undefined") {_RecordType("<272,275,17>",(obj)); Inst26++; } } catch(e) {}
  obj[2] = 2;
try { if (Inst27 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<294,300,18>",(obj[2])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<294,297,18>",(obj)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<308,314,19>",(obj[2])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj) != "undefined") {_RecordType("<308,311,19>",(obj)); Inst30++; } } catch(e) {}
  obj[2];
  2;
try { if (Inst32 <= 1000 && typeof (L) != "undefined") {_RecordType("<331,332,21>",(L)); Inst32++; } } catch(e) {}
  var T = L;
try { if (Inst31 <= 1000 && typeof (T) != "undefined") {_RecordType("<327,328,21>",(T)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (obj[T]) != "undefined") {_RecordType("<336,342,22>",(obj[T])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<336,339,22>",(obj)); Inst34++; } } catch(e) {}
  obj[T];
  2;
try { if (Inst35 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<351,361,24>",(obj.length)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (obj) != "undefined") {_RecordType("<351,354,24>",(obj)); Inst36++; } } catch(e) {}
  obj.length;
  10;
try { if (Inst39 <= 1000 && typeof (T) != "undefined") {_RecordType("<381,382,26>",(T)); Inst39++; } } catch(e) {}
  obj[10] = T;
try { if (Inst37 <= 1000 && typeof (obj[10]) != "undefined") {_RecordType("<371,378,26>",(obj[10])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj) != "undefined") {_RecordType("<371,374,26>",(obj)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (obj[10]) != "undefined") {_RecordType("<386,393,27>",(obj[10])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (obj) != "undefined") {_RecordType("<386,389,27>",(obj)); Inst41++; } } catch(e) {}
  obj[10];
try { if (Inst42 <= 1000 && typeof (T) != "undefined") {_RecordType("<397,398,28>",(T)); Inst42++; } } catch(e) {}
  T;
try { if (Inst43 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<402,412,29>",(obj.length)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj) != "undefined") {_RecordType("<402,405,29>",(obj)); Inst44++; } } catch(e) {}
  obj.length;
  11;
try { if (Inst46 <= 1000 && typeof (T) != "undefined") {_RecordType("<430,431,31>",(T)); Inst46++; } } catch(e) {}
  var K = T + 9;
try { if (Inst45 <= 1000 && typeof (K) != "undefined") {_RecordType("<426,427,31>",(K)); Inst45++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (K) != "undefined") {_RecordType("<448,449,32>",(K)); Inst49++; } } catch(e) {}
  obj[K] = K;
try { if (Inst47 <= 1000 && typeof (obj[K]) != "undefined") {_RecordType("<439,445,32>",(obj[K])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (obj) != "undefined") {_RecordType("<439,442,32>",(obj)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (obj[K]) != "undefined") {_RecordType("<453,459,33>",(obj[K])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (obj) != "undefined") {_RecordType("<453,456,33>",(obj)); Inst51++; } } catch(e) {}
  obj[K];
try { if (Inst52 <= 1000 && typeof (K) != "undefined") {_RecordType("<463,464,34>",(K)); Inst52++; } } catch(e) {}
  K;
try { if (Inst53 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<468,478,35>",(obj.length)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (obj) != "undefined") {_RecordType("<468,471,35>",(obj)); Inst54++; } } catch(e) {}
  obj.length;
  12;
try { if (Inst58 <= 1000 && typeof (obj) != "undefined") {_RecordType("<501,504,37>",(obj)); Inst58++; } } catch(e) {}
  obj[K + 1] = obj;
try { if (Inst55 <= 1000 && typeof (obj[K + 1]) != "undefined") {_RecordType("<488,498,37>",(obj[K + 1])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (obj) != "undefined") {_RecordType("<488,491,37>",(obj)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (K) != "undefined") {_RecordType("<492,493,37>",(K)); Inst57++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (obj[K + 1]) != "undefined") {_RecordType("<508,518,38>",(obj[K + 1])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (obj) != "undefined") {_RecordType("<508,511,38>",(obj)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (K) != "undefined") {_RecordType("<512,513,38>",(K)); Inst61++; } } catch(e) {}
  obj[K + 1];
try { if (Inst62 <= 1000 && typeof (obj) != "undefined") {_RecordType("<522,525,39>",(obj)); Inst62++; } } catch(e) {}
  obj;
try { if (Inst63 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<529,539,40>",(obj.length)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (obj) != "undefined") {_RecordType("<529,532,40>",(obj)); Inst64++; } } catch(e) {}
  obj.length;
  13;
}

for (var i = 0; i < 10; i++) {
try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<559,560,44>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<566,567,44>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<574,575,44>",(i)); Inst67++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (testBadSetElems) != "undefined") {_RecordType("<583,598,45>",(testBadSetElems)); Inst68++; } } catch(e) {}
  testBadSetElems([], -1);
try { if (Inst69 <= 1000 && typeof (testDenseSets) != "undefined") {_RecordType("<610,623,46>",(testDenseSets)); Inst69++; } } catch(e) {}
  testDenseSets(2);
}

