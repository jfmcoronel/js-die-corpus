var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// test local/arg liveness analysis in presence of many locals
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<72,75,2>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b, c) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<76,77,2>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<79,80,2>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<82,83,2>",(c)); Inst3++; } } catch(e) {}
  var x = 0,
      y = 0,
      z = 0;
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<93,94,3>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<106,107,4>",(y)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (z) != "undefined") {_RecordType("<119,120,5>",(z)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<133,134,7>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<137,138,7>",(b)); Inst8++; } } catch(e) {}
  if (a < b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<150,151,8>",(a)); Inst10++; } } catch(e) {}
    x = a + 0;
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<146,147,8>",(x)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<165,166,9>",(b)); Inst12++; } } catch(e) {}
    y = b + 0;
try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<161,162,9>",(y)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<180,181,10>",(c)); Inst14++; } } catch(e) {}
    z = c + 0;
try { if (Inst13 <= 1000 && typeof (z) != "undefined") {_RecordType("<176,177,10>",(z)); Inst13++; } } catch(e) {}
  } else {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<206,207,12>",(a)); Inst16++; } } catch(e) {}
    x = a;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<202,203,12>",(x)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<217,218,13>",(b)); Inst18++; } } catch(e) {}
    y = b;
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<213,214,13>",(y)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (c) != "undefined") {_RecordType("<228,229,14>",(c)); Inst20++; } } catch(e) {}
    z = c;
try { if (Inst19 <= 1000 && typeof (z) != "undefined") {_RecordType("<224,225,14>",(z)); Inst19++; } } catch(e) {}
  }

try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<245,246,17>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<249,250,17>",(y)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (z) != "undefined") {_RecordType("<253,254,17>",(z)); Inst23++; } } catch(e) {}
  return x + y + z;
}

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<259,262,20>",(foo)); Inst24++; } } catch(e) {}
foo(1, 2, 3);
6;

// restore liveness correctly before switch statements
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<341,344,24>",(foo)); Inst25++; } } catch(e) {}
function foo(a, b, c) {
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<345,346,24>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<348,349,24>",(b)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (c) != "undefined") {_RecordType("<351,352,24>",(c)); Inst28++; } } catch(e) {}
  var x = 0,
      y = 0,
      z = 0;
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<362,363,25>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<375,376,26>",(y)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (z) != "undefined") {_RecordType("<388,389,27>",(z)); Inst31++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<402,403,29>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<406,407,29>",(b)); Inst33++; } } catch(e) {}
  if (a < b) {
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<419,420,30>",(a)); Inst35++; } } catch(e) {}
    x = a + 0;
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<415,416,30>",(x)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<434,435,31>",(b)); Inst37++; } } catch(e) {}
    y = b + 0;
try { if (Inst36 <= 1000 && typeof (y) != "undefined") {_RecordType("<430,431,31>",(y)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (c) != "undefined") {_RecordType("<449,450,32>",(c)); Inst39++; } } catch(e) {}
    z = c + 0;
try { if (Inst38 <= 1000 && typeof (z) != "undefined") {_RecordType("<445,446,32>",(z)); Inst38++; } } catch(e) {}
  } else {
try { if (Inst40 <= 1000 && typeof (c) != "undefined") {_RecordType("<479,480,34>",(c)); Inst40++; } } catch(e) {}
    switch (c) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        return 0;
    }

    x = 0;
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<583,584,43>",(x)); Inst41++; } } catch(e) {}
    y = 0;
try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<594,595,44>",(y)); Inst42++; } } catch(e) {}
    z = 0;
try { if (Inst43 <= 1000 && typeof (z) != "undefined") {_RecordType("<605,606,45>",(z)); Inst43++; } } catch(e) {}
  }

try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<626,627,48>",(x)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (y) != "undefined") {_RecordType("<630,631,48>",(y)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (z) != "undefined") {_RecordType("<634,635,48>",(z)); Inst46++; } } catch(e) {}
  return x + y + z;
}

try { if (Inst47 <= 1000 && typeof (foo) != "undefined") {_RecordType("<640,643,51>",(foo)); Inst47++; } } catch(e) {}
foo(1, 2, 3);
6;

