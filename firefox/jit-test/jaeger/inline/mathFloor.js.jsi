var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<0,10,1>",(Math.floor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<0,4,1>",(Math)); Inst1++; } } catch(e) {}
Math.floor(3.14);
3;
try { if (Inst2 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<21,31,3>",(Math.floor)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<21,25,3>",(Math)); Inst3++; } } catch(e) {}
Math.floor(-0);
-0;
try { if (Inst4 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<41,51,5>",(Math.floor)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math) != "undefined") {_RecordType("<41,45,5>",(Math)); Inst5++; } } catch(e) {}
Math.floor(0);
0;
try { if (Inst6 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<59,69,7>",(Math.floor)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<59,63,7>",(Math)); Inst7++; } } catch(e) {}
Math.floor(-1.23);
-2;
try { if (Inst8 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<82,92,9>",(Math.floor)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<82,86,9>",(Math)); Inst9++; } } catch(e) {}
Math.floor(2147483649);
2147483649;
try { if (Inst10 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<118,128,11>",(Math.floor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<118,122,11>",(Math)); Inst11++; } } catch(e) {}
Math.floor(2147483648.5);
2147483648;
try { if (Inst12 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<156,166,13>",(Math.floor)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<156,160,13>",(Math)); Inst13++; } } catch(e) {}
Math.floor(2147483647.1);
2147483647;

/* Inferred as floor(double). */
try { if (Inst14 <= 1000 && typeof (floor1) != "undefined") {_RecordType("<237,243,17>",(floor1)); Inst14++; } } catch(e) {}
function floor1(x) {
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<244,245,17>",(x)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<258,268,18>",(Math.floor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<258,262,18>",(Math)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<269,270,18>",(x)); Inst18++; } } catch(e) {}
  return Math.floor(x);
}

try { if (Inst19 <= 1000 && typeof (floor1) != "undefined") {_RecordType("<276,282,21>",(floor1)); Inst19++; } } catch(e) {}
floor1(10.3);
10;
try { if (Inst20 <= 1000 && typeof (floor1) != "undefined") {_RecordType("<294,300,23>",(floor1)); Inst20++; } } catch(e) {}
floor1(-3.14);
-4;
try { if (Inst21 <= 1000 && typeof (floor1) != "undefined") {_RecordType("<313,319,25>",(floor1)); Inst21++; } } catch(e) {}
floor1(-0);
-0;
try { if (Inst22 <= 1000 && typeof (floor1) != "undefined") {_RecordType("<329,335,27>",(floor1)); Inst22++; } } catch(e) {}
floor1(678.3);
678;

/* Inferred as floor(double). */
try { if (Inst23 <= 1000 && typeof (floor2) != "undefined") {_RecordType("<392,398,31>",(floor2)); Inst23++; } } catch(e) {}
function floor2(x) {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<399,400,31>",(x)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<413,423,32>",(Math.floor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math) != "undefined") {_RecordType("<413,417,32>",(Math)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<424,425,32>",(x)); Inst27++; } } catch(e) {}
  return Math.floor(x);
}

try { if (Inst28 <= 1000 && typeof (floor2) != "undefined") {_RecordType("<431,437,35>",(floor2)); Inst28++; } } catch(e) {}
floor2(3.4);
3;
try { if (Inst29 <= 1000 && typeof (floor2) != "undefined") {_RecordType("<447,453,37>",(floor2)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<454,457,37>",(NaN)); Inst30++; } } catch(e) {}
floor2(NaN);
try { if (Inst31 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<460,463,38>",(NaN)); Inst31++; } } catch(e) {}
NaN;
try { if (Inst32 <= 1000 && typeof (floor2) != "undefined") {_RecordType("<465,471,39>",(floor2)); Inst32++; } } catch(e) {}
floor2(-4.4);
-5;

/* Inferred as floor(int). */
try { if (Inst33 <= 1000 && typeof (floor3) != "undefined") {_RecordType("<523,529,43>",(floor3)); Inst33++; } } catch(e) {}
function floor3(x) {
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<530,531,43>",(x)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<544,554,44>",(Math.floor)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math) != "undefined") {_RecordType("<544,548,44>",(Math)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<555,556,44>",(x)); Inst37++; } } catch(e) {}
  return Math.floor(x);
}

try { if (Inst38 <= 1000 && typeof (floor3) != "undefined") {_RecordType("<562,568,47>",(floor3)); Inst38++; } } catch(e) {}
floor3(4);
4;
try { if (Inst39 <= 1000 && typeof (floor3) != "undefined") {_RecordType("<576,582,49>",(floor3)); Inst39++; } } catch(e) {}
floor3(-5);
-5;
try { if (Inst40 <= 1000 && typeof (floor3) != "undefined") {_RecordType("<592,598,51>",(floor3)); Inst40++; } } catch(e) {}
floor3(0);
0;

