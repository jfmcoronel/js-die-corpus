var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<0,10,1>",(Math.round)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<0,4,1>",(Math)); Inst1++; } } catch(e) {}
Math.round(3.14);
3;
try { if (Inst2 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<21,31,3>",(Math.round)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<21,25,3>",(Math)); Inst3++; } } catch(e) {}
Math.round(0.5);
1;
try { if (Inst4 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<41,51,5>",(Math.round)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math) != "undefined") {_RecordType("<41,45,5>",(Math)); Inst5++; } } catch(e) {}
Math.round(-0);
-0;
try { if (Inst6 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<61,71,7>",(Math.round)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<61,65,7>",(Math)); Inst7++; } } catch(e) {}
Math.round(0);
0;
try { if (Inst8 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<79,89,9>",(Math.round)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<79,83,9>",(Math)); Inst9++; } } catch(e) {}
Math.round(-1.03);
-1;
try { if (Inst10 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<102,112,11>",(Math.round)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<102,106,11>",(Math)); Inst11++; } } catch(e) {}
Math.round(2147483649);
2147483649;
try { if (Inst12 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<138,148,13>",(Math.round)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<138,142,13>",(Math)); Inst13++; } } catch(e) {}
Math.round(2147483647.5);
2147483648;
try { if (Inst14 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<176,186,15>",(Math.floor)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<176,180,15>",(Math)); Inst15++; } } catch(e) {}
Math.floor(2147483647.1);
2147483647;

/* Inferred as round(double). */
try { if (Inst16 <= 1000 && typeof (round1) != "undefined") {_RecordType("<257,263,19>",(round1)); Inst16++; } } catch(e) {}
function round1(x) {
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<264,265,19>",(x)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<278,288,20>",(Math.round)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Math) != "undefined") {_RecordType("<278,282,20>",(Math)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<289,290,20>",(x)); Inst20++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst21 <= 1000 && typeof (round1) != "undefined") {_RecordType("<296,302,23>",(round1)); Inst21++; } } catch(e) {}
round1(10.3);
10;
try { if (Inst22 <= 1000 && typeof (round1) != "undefined") {_RecordType("<314,320,25>",(round1)); Inst22++; } } catch(e) {}
round1(-3.14);
-3;
try { if (Inst23 <= 1000 && typeof (round1) != "undefined") {_RecordType("<333,339,27>",(round1)); Inst23++; } } catch(e) {}
round1(-3.5);
-3;
try { if (Inst24 <= 1000 && typeof (round1) != "undefined") {_RecordType("<351,357,29>",(round1)); Inst24++; } } catch(e) {}
round1(-3.6);
-4;
try { if (Inst25 <= 1000 && typeof (round1) != "undefined") {_RecordType("<369,375,31>",(round1)); Inst25++; } } catch(e) {}
round1(3.5);
4;
try { if (Inst26 <= 1000 && typeof (round1) != "undefined") {_RecordType("<385,391,33>",(round1)); Inst26++; } } catch(e) {}
round1(3.6);
4;
try { if (Inst27 <= 1000 && typeof (round1) != "undefined") {_RecordType("<401,407,35>",(round1)); Inst27++; } } catch(e) {}
round1(0);
0;
try { if (Inst28 <= 1000 && typeof (round1) != "undefined") {_RecordType("<415,421,37>",(round1)); Inst28++; } } catch(e) {}
round1(-0);
-0;
try { if (Inst29 <= 1000 && typeof (round1) != "undefined") {_RecordType("<431,437,39>",(round1)); Inst29++; } } catch(e) {}
round1(12345);
12345;
try { if (Inst30 <= 1000 && typeof (round1) != "undefined") {_RecordType("<453,459,41>",(round1)); Inst30++; } } catch(e) {}
round1(654.6);
655;

/* Inferred as round(double). */
try { if (Inst31 <= 1000 && typeof (round2) != "undefined") {_RecordType("<516,522,45>",(round2)); Inst31++; } } catch(e) {}
function round2(x) {
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<523,524,45>",(x)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<537,547,46>",(Math.round)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Math) != "undefined") {_RecordType("<537,541,46>",(Math)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<548,549,46>",(x)); Inst35++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst36 <= 1000 && typeof (round2) != "undefined") {_RecordType("<555,561,49>",(round2)); Inst36++; } } catch(e) {}
round2(1234.5);
1235;
try { if (Inst37 <= 1000 && typeof (round2) != "undefined") {_RecordType("<577,583,51>",(round2)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<584,587,51>",(NaN)); Inst38++; } } catch(e) {}
round2(NaN);
try { if (Inst39 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<590,593,52>",(NaN)); Inst39++; } } catch(e) {}
NaN;
try { if (Inst40 <= 1000 && typeof (round2) != "undefined") {_RecordType("<595,601,53>",(round2)); Inst40++; } } catch(e) {}
round2(4.6);
5;

/* Inferred as round(int). */
try { if (Inst41 <= 1000 && typeof (round3) != "undefined") {_RecordType("<651,657,57>",(round3)); Inst41++; } } catch(e) {}
function round3(x) {
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<658,659,57>",(x)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<672,682,58>",(Math.round)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<672,676,58>",(Math)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<683,684,58>",(x)); Inst45++; } } catch(e) {}
  return Math.round(x);
}

try { if (Inst46 <= 1000 && typeof (round3) != "undefined") {_RecordType("<690,696,61>",(round3)); Inst46++; } } catch(e) {}
round3(4);
4;
try { if (Inst47 <= 1000 && typeof (round3) != "undefined") {_RecordType("<704,710,63>",(round3)); Inst47++; } } catch(e) {}
round3(-5);
-5;
try { if (Inst48 <= 1000 && typeof (round3) != "undefined") {_RecordType("<720,726,65>",(round3)); Inst48++; } } catch(e) {}
round3(0);
0;

