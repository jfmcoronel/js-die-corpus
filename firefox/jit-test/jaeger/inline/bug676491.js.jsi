var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Array.prototype.__defineSetter__) != "undefined") {_RecordType("<0,32,1>",(Array.prototype.__defineSetter__)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<0,15,1>",(Array.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<0,5,1>",(Array)); Inst2++; } } catch(e) {}
Array.prototype.__defineSetter__(32, function () {
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<53,58,2>",(print)); Inst3++; } } catch(e) {}
  print("Hello from arbitrary JS");
});

var UBound = 0;
try { if (Inst4 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<96,102,5>",(UBound)); Inst4++; } } catch(e) {}
var expect = '';
try { if (Inst5 <= 1000 && typeof (expect) != "undefined") {_RecordType("<112,118,6>",(expect)); Inst5++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst6 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<129,143,7>",(expectedvalues)); Inst6++; } } catch(e) {}

for (var j = 0; j < 10; j++) {
try { if (Inst7 <= 1000 && typeof (j) != "undefined") {_RecordType("<160,161,9>",(j)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<167,168,9>",(j)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<175,176,9>",(j)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<184,191,10>",(addThis)); Inst10++; } } catch(e) {}
  addThis();
try { if (Inst11 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<197,204,11>",(addThis)); Inst11++; } } catch(e) {}
  addThis();
try { if (Inst12 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<210,217,12>",(addThis)); Inst12++; } } catch(e) {}
  addThis();
try { if (Inst13 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<223,230,13>",(addThis)); Inst13++; } } catch(e) {}
  addThis();
}

try { if (Inst14 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<246,253,16>",(addThis)); Inst14++; } } catch(e) {}
function addThis() {
try { if (Inst17 <= 1000 && typeof (expect) != "undefined") {_RecordType("<285,291,17>",(expect)); Inst17++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst15 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<260,282,17>",(expectedvalues[UBound])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<260,274,17>",(expectedvalues)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<295,301,18>",(UBound)); Inst18++; } } catch(e) {}
  UBound++;
}

