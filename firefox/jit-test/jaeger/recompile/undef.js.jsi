var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Handle recompilation on undefined variables. */
try { if (Inst0 <= 1000 && typeof (local) != "undefined") {_RecordType("<60,65,2>",(local)); Inst0++; } } catch(e) {}
function local() {
  var x;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<76,77,3>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<81,82,4>",(x)); Inst2++; } } catch(e) {}
  x++;
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<88,89,5>",(x)); Inst3++; } } catch(e) {}
  x;
try { if (Inst4 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<93,96,6>",(NaN)); Inst4++; } } catch(e) {}
  NaN;
  x = 0;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<100,101,7>",(x)); Inst5++; } } catch(e) {}
}

try { if (Inst6 <= 1000 && typeof (local) != "undefined") {_RecordType("<110,115,10>",(local)); Inst6++; } } catch(e) {}
local();

try { if (Inst7 <= 1000 && typeof (name) != "undefined") {_RecordType("<129,133,12>",(name)); Inst7++; } } catch(e) {}
function name(v) {
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<134,135,12>",(v)); Inst8++; } } catch(e) {}
  var x;
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<145,146,13>",(x)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<156,157,14>",(v)); Inst10++; } } catch(e) {}
  with (v) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<165,166,15>",(x)); Inst11++; } } catch(e) {}
    x++;
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<174,175,16>",(x)); Inst12++; } } catch(e) {}
    x;
try { if (Inst13 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<181,184,17>",(NaN)); Inst13++; } } catch(e) {}
    NaN;
  }
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<192,193,19>",(x)); Inst14++; } } catch(e) {}
  x;
try { if (Inst15 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<197,200,20>",(NaN)); Inst15++; } } catch(e) {}
  NaN;
  x = 0;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<204,205,21>",(x)); Inst16++; } } catch(e) {}
}

try { if (Inst17 <= 1000 && typeof (name) != "undefined") {_RecordType("<214,218,24>",(name)); Inst17++; } } catch(e) {}
name({});

try { if (Inst18 <= 1000 && typeof (letname) != "undefined") {_RecordType("<234,241,26>",(letname)); Inst18++; } } catch(e) {}
function letname(v) {
try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<242,243,26>",(v)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (v) != "undefined") {_RecordType("<253,254,27>",(v)); Inst20++; } } catch(e) {}
  if (v) {
    let x;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<266,267,28>",(x)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (v) != "undefined") {_RecordType("<279,280,29>",(v)); Inst22++; } } catch(e) {}
    with (v) {
      x = "twelve";
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<290,291,30>",(x)); Inst23++; } } catch(e) {}
    }
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<314,315,32>",(x)); Inst24++; } } catch(e) {}
    x;
    "twelve";
  }
}

try { if (Inst25 <= 1000 && typeof (letname) != "undefined") {_RecordType("<338,345,37>",(letname)); Inst25++; } } catch(e) {}
letname({});

try { if (Inst26 <= 1000 && typeof (upvar) != "undefined") {_RecordType("<361,366,39>",(upvar)); Inst26++; } } catch(e) {}
function upvar() {
  var x;
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<377,378,40>",(x)); Inst27++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (inner) != "undefined") {_RecordType("<392,397,42>",(inner)); Inst28++; } } catch(e) {}
  function inner() {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<406,407,43>",(x)); Inst29++; } } catch(e) {}
    x++;
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<415,416,44>",(x)); Inst30++; } } catch(e) {}
    x;
try { if (Inst31 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<422,425,45>",(NaN)); Inst31++; } } catch(e) {}
    NaN;
  }

try { if (Inst32 <= 1000 && typeof (inner) != "undefined") {_RecordType("<434,439,48>",(inner)); Inst32++; } } catch(e) {}
  inner();
}

try { if (Inst33 <= 1000 && typeof (upvar) != "undefined") {_RecordType("<446,451,51>",(upvar)); Inst33++; } } catch(e) {}
upvar();
var x;
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<459,460,52>",(x)); Inst34++; } } catch(e) {}
var y;
try { if (Inst35 <= 1000 && typeof (y) != "undefined") {_RecordType("<466,467,53>",(y)); Inst35++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (global) != "undefined") {_RecordType("<479,485,55>",(global)); Inst36++; } } catch(e) {}
function global() {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<492,493,56>",(x)); Inst37++; } } catch(e) {}
  x++;
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<499,500,57>",(x)); Inst38++; } } catch(e) {}
  x;
try { if (Inst39 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<504,507,58>",(NaN)); Inst39++; } } catch(e) {}
  NaN;
try { if (Inst41 <= 1000 && typeof (y) != "undefined") {_RecordType("<523,524,59>",(y)); Inst41++; } } catch(e) {}
  var z = 2 + y;
try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<515,516,59>",(z)); Inst40++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (z) != "undefined") {_RecordType("<528,529,60>",(z)); Inst42++; } } catch(e) {}
  z;
try { if (Inst43 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<533,536,61>",(NaN)); Inst43++; } } catch(e) {}
  NaN;
}

try { if (Inst44 <= 1000 && typeof (global) != "undefined") {_RecordType("<541,547,64>",(global)); Inst44++; } } catch(e) {}
global();
x = 0;
try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<551,552,65>",(x)); Inst45++; } } catch(e) {}
y = 0;
try { if (Inst46 <= 1000 && typeof (y) != "undefined") {_RecordType("<558,559,66>",(y)); Inst46++; } } catch(e) {}

