var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Handle recompilation on undefined properties and array holes. */
var v = {};
try { if (Inst0 <= 1000 && typeof (v) != "undefined") {_RecordType("<72,73,2>",(v)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<92,93,4>",(v)); Inst1++; } } catch(e) {}
if (typeof v == 'string') {
  v.x = 0;
try { if (Inst2 <= 1000 && typeof (v.x) != "undefined") {_RecordType("<111,114,5>",(v.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<111,112,5>",(v)); Inst3++; } } catch(e) {}
}

try { if (Inst4 <= 1000 && typeof (prop) != "undefined") {_RecordType("<132,136,8>",(prop)); Inst4++; } } catch(e) {}
function prop(v) {
try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<137,138,8>",(v)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (v.x) != "undefined") {_RecordType("<152,155,9>",(v.x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<152,153,9>",(v)); Inst8++; } } catch(e) {}
  var z = v.x + 1;
try { if (Inst6 <= 1000 && typeof (z) != "undefined") {_RecordType("<148,149,9>",(z)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (z) != "undefined") {_RecordType("<163,164,10>",(z)); Inst9++; } } catch(e) {}
  z;
try { if (Inst10 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<168,171,11>",(NaN)); Inst10++; } } catch(e) {}
  NaN;
}

try { if (Inst11 <= 1000 && typeof (prop) != "undefined") {_RecordType("<176,180,14>",(prop)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<181,182,14>",(v)); Inst12++; } } catch(e) {}
prop(v);
v = [];
try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<185,186,15>",(v)); Inst13++; } } catch(e) {}
v[0] = 0;
try { if (Inst14 <= 1000 && typeof (v[0]) != "undefined") {_RecordType("<193,197,16>",(v[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v) != "undefined") {_RecordType("<193,194,16>",(v)); Inst15++; } } catch(e) {}
v[1] = 1;
try { if (Inst16 <= 1000 && typeof (v[1]) != "undefined") {_RecordType("<203,207,17>",(v[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<203,204,17>",(v)); Inst17++; } } catch(e) {}
v[3] = 3;
try { if (Inst18 <= 1000 && typeof (v[3]) != "undefined") {_RecordType("<213,217,18>",(v[3])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<213,214,18>",(v)); Inst19++; } } catch(e) {}
v[4] = 4;
try { if (Inst20 <= 1000 && typeof (v[4]) != "undefined") {_RecordType("<223,227,19>",(v[4])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<223,224,19>",(v)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (elem) != "undefined") {_RecordType("<243,247,21>",(elem)); Inst22++; } } catch(e) {}
function elem(x) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<248,249,21>",(x)); Inst23++; } } catch(e) {}
  var x = "";
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<259,260,22>",(x)); Inst24++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<279,280,24>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<286,287,24>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<293,294,24>",(i)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (v[i]) != "undefined") {_RecordType("<309,313,25>",(v[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (v) != "undefined") {_RecordType("<309,310,25>",(v)); Inst30++; } } catch(e) {}
    x += v[i];
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<304,305,25>",(x)); Inst28++; } } catch(e) {}
  }

try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<322,323,28>",(x)); Inst31++; } } catch(e) {}
  x;
  "01undefined34";
}

try { if (Inst32 <= 1000 && typeof (elem) != "undefined") {_RecordType("<347,351,32>",(elem)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (v) != "undefined") {_RecordType("<352,353,32>",(v)); Inst33++; } } catch(e) {}
elem(v);

