var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Unexpected values out of GETELEM */
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<48,51,2>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  var x = [1, 2, 3];
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<62,63,3>",(x)); Inst1++; } } catch(e) {}
  var y;
try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<83,84,4>",(y)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x[y]) != "undefined") {_RecordType("<96,100,5>",(x[y])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<96,97,5>",(x)); Inst5++; } } catch(e) {}
  var z = x[y];
try { if (Inst3 <= 1000 && typeof (z) != "undefined") {_RecordType("<92,93,5>",(z)); Inst3++; } } catch(e) {}
  y = 10;
try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<104,105,6>",(y)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (z) != "undefined") {_RecordType("<114,115,7>",(z)); Inst7++; } } catch(e) {}
  z;
  "twelve";
}

Array.prototype["undefined"] = "twelve";
try { if (Inst8 <= 1000 && typeof (Array.prototype["undefined"]) != "undefined") {_RecordType("<132,160,11>",(Array.prototype["undefined"])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<132,147,11>",(Array.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<132,137,11>",(Array)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<173,176,12>",(foo)); Inst11++; } } catch(e) {}
foo();

try { if (Inst12 <= 1000 && typeof (fna) != "undefined") {_RecordType("<190,193,14>",(fna)); Inst12++; } } catch(e) {}
function fna() {
  var a = {};
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<204,205,15>",(a)); Inst13++; } } catch(e) {}
  a[true] = 1;
try { if (Inst14 <= 1000 && typeof (a[true]) != "undefined") {_RecordType("<214,221,16>",(a[true])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<214,215,16>",(a)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (a["true"]) != "undefined") {_RecordType("<229,238,17>",(a["true"])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<229,230,17>",(a)); Inst17++; } } catch(e) {}
  a["true"];
  1;
}

try { if (Inst18 <= 1000 && typeof (fna) != "undefined") {_RecordType("<248,251,21>",(fna)); Inst18++; } } catch(e) {}
fna();

try { if (Inst19 <= 1000 && typeof (fnb) != "undefined") {_RecordType("<265,268,23>",(fnb)); Inst19++; } } catch(e) {}
function fnb() {
  var a = [];
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<279,280,24>",(a)); Inst20++; } } catch(e) {}
  a[1.1] = 2;
try { if (Inst21 <= 1000 && typeof (a[1.1]) != "undefined") {_RecordType("<289,295,25>",(a[1.1])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<289,290,25>",(a)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a["1.1"]) != "undefined") {_RecordType("<303,311,26>",(a["1.1"])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<303,304,26>",(a)); Inst24++; } } catch(e) {}
  a["1.1"];
  2;
}

try { if (Inst25 <= 1000 && typeof (fnb) != "undefined") {_RecordType("<321,324,30>",(fnb)); Inst25++; } } catch(e) {}
fnb();

