var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Handle flushing of scripted call ICs pointing to recompiled functions. */
try { if (Inst0 <= 1000 && typeof (add) != "undefined") {_RecordType("<86,89,2>",(add)); Inst0++; } } catch(e) {}
function add(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<90,91,2>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<93,94,2>",(y)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<108,109,3>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<112,113,3>",(y)); Inst5++; } } catch(e) {}
  var z = x + y;
try { if (Inst3 <= 1000 && typeof (z) != "undefined") {_RecordType("<104,105,3>",(z)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (String) != "undefined") {_RecordType("<124,130,4>",(String)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<131,132,4>",(x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<135,136,4>",(y)); Inst8++; } } catch(e) {}
  return String(x + y);
}

try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<151,154,7>",(foo)); Inst9++; } } catch(e) {}
function foo() {
  var x = 0x7ffffff0;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<165,166,8>",(x)); Inst10++; } } catch(e) {}
  var res = "";
try { if (Inst11 <= 1000 && typeof (res) != "undefined") {_RecordType("<187,190,9>",(res)); Inst11++; } } catch(e) {}

  for (var i = 0; i < 20; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,11>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<216,217,11>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<224,225,11>",(i)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (add) != "undefined") {_RecordType("<242,245,12>",(add)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<246,247,12>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<249,250,12>",(i)); Inst18++; } } catch(e) {}
    res += add(x, i) + ",";
try { if (Inst15 <= 1000 && typeof (res) != "undefined") {_RecordType("<235,238,12>",(res)); Inst15++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (add) != "undefined") {_RecordType("<270,273,13>",(add)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<274,275,13>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<277,278,13>",(i)); Inst22++; } } catch(e) {}
    res += add(x, i) + ",";
try { if (Inst19 <= 1000 && typeof (res) != "undefined") {_RecordType("<263,266,13>",(res)); Inst19++; } } catch(e) {}
  }

try { if (Inst23 <= 1000 && typeof (res) != "undefined") {_RecordType("<294,297,16>",(res)); Inst23++; } } catch(e) {}
  res;
  "2147483632,2147483632,2147483633,2147483633,2147483634,2147483634,2147483635,2147483635,2147483636,2147483636,2147483637,2147483637,2147483638,2147483638,2147483639,2147483639,2147483640,2147483640,2147483641,2147483641,2147483642,2147483642,2147483643,2147483643,2147483644,2147483644,2147483645,2147483645,2147483646,2147483646,2147483647,2147483647,2147483648,2147483648,2147483649,2147483649,2147483650,2147483650,2147483651,2147483651,";
}

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<748,751,20>",(foo)); Inst24++; } } catch(e) {}
foo();

