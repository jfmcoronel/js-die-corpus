var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Tests for JSOP_TABLESWITCHX.
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<41,46,2>",(test1)); Inst0++; } } catch(e) {}
function test1() {
  var src = "var a = 0;\n" + "switch(x) {\n";
try { if (Inst1 <= 1000 && typeof (src) != "undefined") {_RecordType("<57,60,3>",(src)); Inst1++; } } catch(e) {}

  for (var i = -1; i < 4; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<109,110,5>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<117,118,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<124,125,5>",(i)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<142,143,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<161,162,6>",(i)); Inst7++; } } catch(e) {}
    src += i >= 0 ? "case " + i + ":\n" : "default:\n";
try { if (Inst5 <= 1000 && typeof (src) != "undefined") {_RecordType("<135,138,6>",(src)); Inst5++; } } catch(e) {}

    for (var j = 0; j < 1500; j++) {
try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<201,202,8>",(j)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<208,209,8>",(j)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<218,219,8>",(j)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<247,248,9>",(i)); Inst12++; } } catch(e) {}
      src += "a = " + i + ";";
try { if (Inst11 <= 1000 && typeof (src) != "undefined") {_RecordType("<231,234,9>",(src)); Inst11++; } } catch(e) {}
    }

    src += "break;\n";
try { if (Inst13 <= 1000 && typeof (src) != "undefined") {_RecordType("<267,270,12>",(src)); Inst13++; } } catch(e) {}
  }

  src += "}\n";
try { if (Inst14 <= 1000 && typeof (src) != "undefined") {_RecordType("<293,296,15>",(src)); Inst14++; } } catch(e) {}
  src += "return a;";
try { if (Inst15 <= 1000 && typeof (src) != "undefined") {_RecordType("<309,312,16>",(src)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Function) != "undefined") {_RecordType("<343,351,17>",(Function)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (src) != "undefined") {_RecordType("<357,360,17>",(src)); Inst18++; } } catch(e) {}
  var f = new Function("x", src);
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<335,336,17>",(f)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<365,366,18>",(f)); Inst19++; } } catch(e) {}
  f(0);
  0;
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<378,379,20>",(f)); Inst20++; } } catch(e) {}
  f(4);
  -1;
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<392,393,22>",(f)); Inst21++; } } catch(e) {}
  f();
  -1;
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<405,406,24>",(f)); Inst22++; } } catch(e) {}
  f(1.1);
  -1;
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<421,422,26>",(f)); Inst23++; } } catch(e) {}
  f(3);
  3;
}

try { if (Inst24 <= 1000 && typeof (test1) != "undefined") {_RecordType("<435,440,30>",(test1)); Inst24++; } } catch(e) {}
test1();

