var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Make sure new script properties can be invalidated on specialized prototype
// types while they are still being constructed.
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<137,140,3>",(Foo)); Inst0++; } } catch(e) {}
function Foo(a, b, c) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<141,142,3>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<144,145,3>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<147,148,3>",(c)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<163,164,4>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<167,168,4>",(b)); Inst6++; } } catch(e) {}
  this.x = a + b;
try { if (Inst4 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<154,160,4>",(this.x)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<181,182,5>",(c)); Inst8++; } } catch(e) {}
  this.y = c;
try { if (Inst7 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<172,178,5>",(this.y)); Inst7++; } } catch(e) {}
}

updated = false;
try { if (Inst9 <= 1000 && typeof (updated) != "undefined") {_RecordType("<187,194,8>",(updated)); Inst9++; } } catch(e) {}
var o = {
  valueOf: function () {
try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<243,264,11>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<243,249,11>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<265,281,11>",(Object.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<265,271,11>",(Object)); Inst14++; } } catch(e) {}
    Object.defineProperty(Object.prototype, 'y', {
      set: function () {
        updated = true;
try { if (Inst15 <= 1000 && typeof (updated) != "undefined") {_RecordType("<323,330,13>",(updated)); Inst15++; } } catch(e) {}
      }
    });
  }
};
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<208,209,9>",(o)); Inst10++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<372,375,19>",(Bar)); Inst16++; } } catch(e) {}
function Bar() {
  ;
}

try { if (Inst19 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<407,410,23>",(Foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<411,412,23>",(o)); Inst20++; } } catch(e) {}
Bar.prototype = new Foo(o, 1, 2);
try { if (Inst17 <= 1000 && typeof (Bar.prototype) != "undefined") {_RecordType("<387,400,23>",(Bar.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<387,390,23>",(Bar)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (updated) != "undefined") {_RecordType("<421,428,24>",(updated)); Inst21++; } } catch(e) {}
updated;
true;
try { if (Inst22 <= 1000 && typeof (Bar.prototype.y) != "undefined") {_RecordType("<436,451,26>",(Bar.prototype.y)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Bar.prototype) != "undefined") {_RecordType("<436,449,26>",(Bar.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<436,439,26>",(Bar)); Inst24++; } } catch(e) {}
Bar.prototype.y;
try { if (Inst25 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<453,462,27>",(undefined)); Inst25++; } } catch(e) {}
undefined;

