var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Tests for IFEQX and GOTOX ops.
try { if (Inst0 <= 1000 && typeof (testIfElse) != "undefined") {_RecordType("<43,53,2>",(testIfElse)); Inst0++; } } catch(e) {}
function testIfElse() {
  var src = "var a = 0;\n" + "if (x) {\n";
try { if (Inst1 <= 1000 && typeof (src) != "undefined") {_RecordType("<64,67,3>",(src)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 7000; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<113,114,5>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<120,121,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<130,131,5>",(i)); Inst4++; } } catch(e) {}
    src += "a = 1;";
try { if (Inst5 <= 1000 && typeof (src) != "undefined") {_RecordType("<141,144,6>",(src)); Inst5++; } } catch(e) {}
  }

  src += "} else {\n";
try { if (Inst6 <= 1000 && typeof (src) != "undefined") {_RecordType("<165,168,9>",(src)); Inst6++; } } catch(e) {}

  for (var i = 0; i < 7000; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<198,199,11>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<205,206,11>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<215,216,11>",(i)); Inst9++; } } catch(e) {}
    src += "a = 2;";
try { if (Inst10 <= 1000 && typeof (src) != "undefined") {_RecordType("<226,229,12>",(src)); Inst10++; } } catch(e) {}
  }

  src += "}\n";
try { if (Inst11 <= 1000 && typeof (src) != "undefined") {_RecordType("<250,253,15>",(src)); Inst11++; } } catch(e) {}
  src += "return a;";
try { if (Inst12 <= 1000 && typeof (src) != "undefined") {_RecordType("<266,269,16>",(src)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Function) != "undefined") {_RecordType("<300,308,17>",(Function)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (src) != "undefined") {_RecordType("<314,317,17>",(src)); Inst15++; } } catch(e) {}
  var f = new Function("x", src);
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<292,293,17>",(f)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<322,323,18>",(f)); Inst16++; } } catch(e) {}
  f(true);
  1;
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<338,339,20>",(f)); Inst17++; } } catch(e) {}
  f(false);
  2;
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<355,356,22>",(f)); Inst18++; } } catch(e) {}
  f([1, 2, 3]);
  1;
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<376,377,24>",(f)); Inst19++; } } catch(e) {}
  f();
  2;
}

try { if (Inst20 <= 1000 && typeof (testIfElse) != "undefined") {_RecordType("<389,399,28>",(testIfElse)); Inst20++; } } catch(e) {}
testIfElse();

try { if (Inst21 <= 1000 && typeof (testWhile) != "undefined") {_RecordType("<413,422,30>",(testWhile)); Inst21++; } } catch(e) {}
function testWhile() {
  var src = "var i = 0, j = 0;\n" + "while (i++ < 50) {\n";
try { if (Inst22 <= 1000 && typeof (src) != "undefined") {_RecordType("<433,436,31>",(src)); Inst22++; } } catch(e) {}

  for (var i = 0; i < 5000; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<499,500,33>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<506,507,33>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<516,517,33>",(i)); Inst25++; } } catch(e) {}
    src += "j = i;";
try { if (Inst26 <= 1000 && typeof (src) != "undefined") {_RecordType("<527,530,34>",(src)); Inst26++; } } catch(e) {}
  }

  src += "}\n";
try { if (Inst27 <= 1000 && typeof (src) != "undefined") {_RecordType("<551,554,37>",(src)); Inst27++; } } catch(e) {}
  src += "return j;";
try { if (Inst28 <= 1000 && typeof (src) != "undefined") {_RecordType("<567,570,38>",(src)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Function) != "undefined") {_RecordType("<601,609,39>",(Function)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (src) != "undefined") {_RecordType("<610,613,39>",(src)); Inst31++; } } catch(e) {}
  var f = new Function(src);
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<593,594,39>",(f)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<618,619,40>",(f)); Inst32++; } } catch(e) {}
  f();
  50;
}

try { if (Inst33 <= 1000 && typeof (testWhile) != "undefined") {_RecordType("<632,641,44>",(testWhile)); Inst33++; } } catch(e) {}
testWhile();

