var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Allow [[GetOwnPropertyDescriptor]] to spoof enumerability of target object's
// properties. Note that this also tests that the getOwnPropertyDescriptor is
// called by Object.keys(), as expected.
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<203,209,4>",(target)); Inst0++; } } catch(e) {}
var handler = {
  getOwnPropertyDescriptor: function (target, P) {
try { if (Inst2 <= 1000 && typeof (target) != "undefined") {_RecordType("<270,276,6>",(target)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (P) != "undefined") {_RecordType("<278,279,6>",(P)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<304,335,7>",(Object.getOwnPropertyDescriptor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<304,310,7>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (target) != "undefined") {_RecordType("<336,342,7>",(target)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (P) != "undefined") {_RecordType("<344,345,7>",(P)); Inst8++; } } catch(e) {}
    var targetDesc = Object.getOwnPropertyDescriptor(target, P); // Lie about enumerability
try { if (Inst4 <= 1000 && typeof (targetDesc) != "undefined") {_RecordType("<291,301,7>",(targetDesc)); Inst4++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (targetDesc.enumerable) != "undefined") {_RecordType("<405,426,9>",(targetDesc.enumerable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (targetDesc) != "undefined") {_RecordType("<405,415,9>",(targetDesc)); Inst12++; } } catch(e) {}
    targetDesc.enumerable = !targetDesc.enumerable;
try { if (Inst9 <= 1000 && typeof (targetDesc.enumerable) != "undefined") {_RecordType("<380,401,9>",(targetDesc.enumerable)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (targetDesc) != "undefined") {_RecordType("<380,390,9>",(targetDesc)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (targetDesc) != "undefined") {_RecordType("<439,449,10>",(targetDesc)); Inst13++; } } catch(e) {}
    return targetDesc;
  }
};
try { if (Inst1 <= 1000 && typeof (handler) != "undefined") {_RecordType("<220,227,5>",(handler)); Inst1++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<468,469,14>",(p)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<478,483,14>",(Proxy)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<484,490,14>",(target)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (handler) != "undefined") {_RecordType("<492,499,14>",(handler)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<502,540,14>",(Proxy.revocable(target, handler).proxy)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<502,517,14>",(Proxy.revocable)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<502,507,14>",(Proxy)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (target) != "undefined") {_RecordType("<518,524,14>",(target)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (handler) != "undefined") {_RecordType("<526,533,14>",(handler)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<547,568,15>",(Object.defineProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<547,553,15>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (target) != "undefined") {_RecordType("<569,575,15>",(target)); Inst25++; } } catch(e) {}
  Object.defineProperty(target, "foo", {
    configurable: true,
    enumerable: false
  });
try { if (Inst26 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<640,651,19>",(Object.keys)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<640,646,19>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (p) != "undefined") {_RecordType("<652,653,19>",(p)); Inst28++; } } catch(e) {}
  Object.keys(p);
  ["foo"];
try { if (Inst29 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<669,690,21>",(Object.defineProperty)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<669,675,21>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (target) != "undefined") {_RecordType("<691,697,21>",(target)); Inst31++; } } catch(e) {}
  Object.defineProperty(target, "foo", {
    configurable: true,
    enumerable: true
  });
try { if (Inst32 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<761,772,25>",(Object.keys)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<761,767,25>",(Object)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (p) != "undefined") {_RecordType("<773,774,25>",(p)); Inst34++; } } catch(e) {}
  Object.keys(p);
  [];
}

