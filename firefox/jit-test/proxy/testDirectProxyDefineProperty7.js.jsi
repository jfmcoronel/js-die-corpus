var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Bug 1133085 - Test that descriptors are properly reconstituted
// when only .get or only .set is present.
var input, output;
try { if (Inst0 <= 1000 && typeof (input) != "undefined") {_RecordType("<113,118,3>",(input)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (output) != "undefined") {_RecordType("<120,126,3>",(output)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<140,145,4>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (defineProperty) != "undefined") {_RecordType("<162,176,7>",(defineProperty)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (t) != "undefined") {_RecordType("<177,178,7>",(t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (k) != "undefined") {_RecordType("<180,181,7>",(k)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (desc) != "undefined") {_RecordType("<183,187,7>",(desc)); Inst7++; } } catch(e) {}
var p = new Proxy({
  x: 0
}, {
  defineProperty(t, k, desc) {
try { if (Inst9 <= 1000 && typeof (desc) != "undefined") {_RecordType("<204,208,8>",(desc)); Inst9++; } } catch(e) {}
    output = desc;
try { if (Inst8 <= 1000 && typeof (output) != "undefined") {_RecordType("<195,201,8>",(output)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<214,219,9>",(print)); Inst10++; } } catch(e) {}
    print("ok");
    return true;
  }

});
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<132,133,4>",(p)); Inst2++; } } catch(e) {}
input = {
  get: function () {
    ;
  }
};
try { if (Inst11 <= 1000 && typeof (input) != "undefined") {_RecordType("<253,258,14>",(input)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<297,318,19>",(Object.defineProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<297,303,19>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<319,320,19>",(p)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (input) != "undefined") {_RecordType("<327,332,19>",(input)); Inst15++; } } catch(e) {}
Object.defineProperty(p, "x", input);
try { if (Inst16 <= 1000 && typeof (output) != "undefined") {_RecordType("<335,341,20>",(output)); Inst16++; } } catch(e) {}
output;
try { if (Inst17 <= 1000 && typeof (input) != "undefined") {_RecordType("<343,348,21>",(input)); Inst17++; } } catch(e) {}
input;
input = {
  set: function () {
    ;
  }
};
try { if (Inst18 <= 1000 && typeof (input) != "undefined") {_RecordType("<350,355,22>",(input)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<394,415,27>",(Object.defineProperty)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<394,400,27>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<416,417,27>",(p)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (input) != "undefined") {_RecordType("<424,429,27>",(input)); Inst22++; } } catch(e) {}
Object.defineProperty(p, "x", input);
try { if (Inst23 <= 1000 && typeof (output) != "undefined") {_RecordType("<432,438,28>",(output)); Inst23++; } } catch(e) {}
output;
try { if (Inst24 <= 1000 && typeof (input) != "undefined") {_RecordType("<440,445,29>",(input)); Inst24++; } } catch(e) {}
input;

