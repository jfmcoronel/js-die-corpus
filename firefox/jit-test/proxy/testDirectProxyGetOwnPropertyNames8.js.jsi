var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Return the names returned by the trap
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<45,51,2>",(target)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<58,79,3>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<58,64,3>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<80,86,3>",(target)); Inst3++; } } catch(e) {}
Object.defineProperty(target, 'foo', {
  configurable: true
});
var handler = {
  ownKeys: () => ['bar']
};
try { if (Inst4 <= 1000 && typeof (handler) != "undefined") {_RecordType("<126,133,6>",(handler)); Inst4++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst5 <= 1000 && typeof (p) != "undefined") {_RecordType("<176,177,10>",(p)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<186,191,10>",(Proxy)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (target) != "undefined") {_RecordType("<192,198,10>",(target)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (handler) != "undefined") {_RecordType("<200,207,10>",(handler)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<210,248,10>",(Proxy.revocable(target, handler).proxy)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<210,225,10>",(Proxy.revocable)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<210,215,10>",(Proxy)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (target) != "undefined") {_RecordType("<226,232,10>",(target)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (handler) != "undefined") {_RecordType("<234,241,10>",(handler)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<267,293,11>",(Object.getOwnPropertyNames)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<267,273,11>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<294,295,11>",(p)); Inst17++; } } catch(e) {}
  var names = Object.getOwnPropertyNames(p);
try { if (Inst14 <= 1000 && typeof (names) != "undefined") {_RecordType("<259,264,11>",(names)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (names.length) != "undefined") {_RecordType("<300,312,12>",(names.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (names) != "undefined") {_RecordType("<300,305,12>",(names)); Inst19++; } } catch(e) {}
  names.length;
  1;
try { if (Inst20 <= 1000 && typeof (names[0]) != "undefined") {_RecordType("<321,329,14>",(names[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (names) != "undefined") {_RecordType("<321,326,14>",(names)); Inst21++; } } catch(e) {}
  names[0];
  'bar';
}

try { if (Inst23 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<361,374,18>",(Object.create)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<361,367,18>",(Object)); Inst24++; } } catch(e) {}
var protoWithAB = Object.create(null, {
  a: {
    enumerable: true,
    configurable: true
  },
  b: {
    enumerable: false,
    configurable: true
  }
});
try { if (Inst22 <= 1000 && typeof (protoWithAB) != "undefined") {_RecordType("<347,358,18>",(protoWithAB)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<517,530,28>",(Object.create)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<517,523,28>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (protoWithAB) != "undefined") {_RecordType("<531,542,28>",(protoWithAB)); Inst28++; } } catch(e) {}
var objWithCD = Object.create(protoWithAB, {
  c: {
    enumerable: true,
    configurable: true
  },
  d: {
    enumerable: true,
    configurable: true
  }
});
try { if (Inst25 <= 1000 && typeof (objWithCD) != "undefined") {_RecordType("<505,514,28>",(objWithCD)); Inst25++; } } catch(e) {}
handler = {
  ownKeys: () => ['c', 'e']
};
try { if (Inst29 <= 1000 && typeof (handler) != "undefined") {_RecordType("<663,670,38>",(handler)); Inst29++; } } catch(e) {}

for (let p of [new Proxy(objWithCD, handler), Proxy.revocable(objWithCD, handler).proxy]) {
try { if (Inst30 <= 1000 && typeof (p) != "undefined") {_RecordType("<716,717,42>",(p)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<726,731,42>",(Proxy)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (objWithCD) != "undefined") {_RecordType("<732,741,42>",(objWithCD)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (handler) != "undefined") {_RecordType("<743,750,42>",(handler)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Proxy.revocable(objWithCD, handler).proxy) != "undefined") {_RecordType("<753,794,42>",(Proxy.revocable(objWithCD, handler).proxy)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<753,768,42>",(Proxy.revocable)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<753,758,42>",(Proxy)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (objWithCD) != "undefined") {_RecordType("<769,778,42>",(objWithCD)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (handler) != "undefined") {_RecordType("<780,787,42>",(handler)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<813,839,43>",(Object.getOwnPropertyNames)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Object) != "undefined") {_RecordType("<813,819,43>",(Object)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (p) != "undefined") {_RecordType("<840,841,43>",(p)); Inst42++; } } catch(e) {}
  var names = Object.getOwnPropertyNames(p);
try { if (Inst39 <= 1000 && typeof (names) != "undefined") {_RecordType("<805,810,43>",(names)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (names.length) != "undefined") {_RecordType("<846,858,44>",(names.length)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (names) != "undefined") {_RecordType("<846,851,44>",(names)); Inst44++; } } catch(e) {}
  names.length;
  2;
try { if (Inst45 <= 1000 && typeof (names[0]) != "undefined") {_RecordType("<867,875,46>",(names[0])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (names) != "undefined") {_RecordType("<867,872,46>",(names)); Inst46++; } } catch(e) {}
  names[0];
  'c';
try { if (Inst47 <= 1000 && typeof (names[1]) != "undefined") {_RecordType("<886,894,48>",(names[1])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (names) != "undefined") {_RecordType("<886,891,48>",(names)); Inst48++; } } catch(e) {}
  names[1];
  'e';
}

