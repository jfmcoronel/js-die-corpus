var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<9,18,1>",(testProxy)); Inst0++; } } catch(e) {}
function testProxy(handlerReturn, prop, shouldThrow) {
try { if (Inst1 <= 1000 && typeof (handlerReturn) != "undefined") {_RecordType("<19,32,1>",(handlerReturn)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (prop) != "undefined") {_RecordType("<34,38,1>",(prop)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<40,51,1>",(shouldThrow)); Inst3++; } } catch(e) {}
  var handler = {
    get: function () {
try { if (Inst5 <= 1000 && typeof (handlerReturn) != "undefined") {_RecordType("<109,122,4>",(handlerReturn)); Inst5++; } } catch(e) {}
      return handlerReturn;
    }
  };
try { if (Inst4 <= 1000 && typeof (handler) != "undefined") {_RecordType("<61,68,2>",(handler)); Inst4++; } } catch(e) {}

  for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst6 <= 1000 && typeof (p) != "undefined") {_RecordType("<147,148,8>",(p)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<157,162,8>",(Proxy)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (target) != "undefined") {_RecordType("<163,169,8>",(target)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (handler) != "undefined") {_RecordType("<171,178,8>",(handler)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<181,219,8>",(Proxy.revocable(target, handler).proxy)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<181,196,8>",(Proxy.revocable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<181,186,8>",(Proxy)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (target) != "undefined") {_RecordType("<197,203,8>",(target)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (handler) != "undefined") {_RecordType("<205,212,8>",(handler)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<232,243,9>",(shouldThrow)); Inst15++; } } catch(e) {}
    if (shouldThrow) {
      (function () {
try { if (Inst16 <= 1000 && typeof (p[prop]) != "undefined") {_RecordType("<283,290,11>",(p[prop])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<283,284,11>",(p)); Inst17++; } } catch(e) {}
        return p[prop];
      })();

try { if (Inst18 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<311,320,14>",(TypeError)); Inst18++; } } catch(e) {}
      TypeError;
    } else {
try { if (Inst19 <= 1000 && typeof (p[prop]) != "undefined") {_RecordType("<341,348,16>",(p[prop])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (p) != "undefined") {_RecordType("<341,342,16>",(p)); Inst20++; } } catch(e) {}
      p[prop];
try { if (Inst21 <= 1000 && typeof (handlerReturn) != "undefined") {_RecordType("<356,369,17>",(handlerReturn)); Inst21++; } } catch(e) {}
      handlerReturn;
    }
  }
}
/*
 * Throw a TypeError if the trap reports a different value for a non-writable,
 * non-configurable property
 */


var target = {};
try { if (Inst22 <= 1000 && typeof (target) != "undefined") {_RecordType("<504,510,27>",(target)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<517,538,28>",(Object.defineProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<517,523,28>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (target) != "undefined") {_RecordType("<539,545,28>",(target)); Inst25++; } } catch(e) {}
Object.defineProperty(target, 'foo', {
  value: 'bar',
  writable: false,
  configurable: false
});
try { if (Inst26 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<617,626,33>",(testProxy)); Inst26++; } } catch(e) {}
testProxy('baz', 'foo', true);
/*
 * Don't throw a TypeError if the trap reports the same value for a non-writable,
 * non-configurable property
 */

try { if (Inst27 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<767,776,39>",(testProxy)); Inst27++; } } catch(e) {}
testProxy('bar', 'foo', false);
/*
 * Don't throw a TypeError if the trap reports a different value for a writable,
 * non-configurable property
 */

try { if (Inst28 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<917,938,45>",(Object.defineProperty)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<917,923,45>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (target) != "undefined") {_RecordType("<939,945,45>",(target)); Inst30++; } } catch(e) {}
Object.defineProperty(target, 'prop', {
  value: 'bar',
  writable: true,
  configurable: false
});
try { if (Inst31 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<1017,1026,50>",(testProxy)); Inst31++; } } catch(e) {}
testProxy('baz', 'prop', false);
/*
 * Don't throw a TypeError if the trap reports a different value for a non-writable,
 * configurable property
 */

try { if (Inst32 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1168,1189,56>",(Object.defineProperty)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1168,1174,56>",(Object)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (target) != "undefined") {_RecordType("<1190,1196,56>",(target)); Inst34++; } } catch(e) {}
Object.defineProperty(target, 'prop2', {
  value: 'bar',
  writable: false,
  configurable: true
});
try { if (Inst35 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<1269,1278,61>",(testProxy)); Inst35++; } } catch(e) {}
testProxy('baz', 'prop2', false);

