var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Call the trap with the handler as the this value, the target as the first
 * argument, the name of the property as the second argument, and the descriptor
 * as the third argument.
 */
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<195,201,6>",(target)); Inst0++; } } catch(e) {}
var handler = {
  defineProperty: function (target1, key, desc1) {
try { if (Inst2 <= 1000 && typeof (target1) != "undefined") {_RecordType("<252,259,8>",(target1)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (key) != "undefined") {_RecordType("<261,264,8>",(key)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<266,271,8>",(desc1)); Inst4++; } } catch(e) {}
    this;
try { if (Inst5 <= 1000 && typeof (handler) != "undefined") {_RecordType("<289,296,10>",(handler)); Inst5++; } } catch(e) {}
    handler;
try { if (Inst6 <= 1000 && typeof (target1) != "undefined") {_RecordType("<302,309,11>",(target1)); Inst6++; } } catch(e) {}
    target1;
try { if (Inst7 <= 1000 && typeof (target) != "undefined") {_RecordType("<315,321,12>",(target)); Inst7++; } } catch(e) {}
    target;
try { if (Inst8 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<327,335,13>",(log.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (log) != "undefined") {_RecordType("<327,330,13>",(log)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (key) != "undefined") {_RecordType("<336,339,13>",(key)); Inst10++; } } catch(e) {}
    log.push(key);
try { if (Inst11 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<346,351,14>",(desc1)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (desc) != "undefined") {_RecordType("<355,359,14>",(desc)); Inst12++; } } catch(e) {}
    desc1 == desc;
    false;
try { if (Inst13 <= 1000 && typeof (desc1.value) != "undefined") {_RecordType("<376,387,16>",(desc1.value)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<376,381,16>",(desc1)); Inst14++; } } catch(e) {}
    desc1.value;
    'bar';
try { if (Inst15 <= 1000 && typeof (desc1.writable) != "undefined") {_RecordType("<404,418,18>",(desc1.writable)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<404,409,18>",(desc1)); Inst16++; } } catch(e) {}
    desc1.writable;
    true;
try { if (Inst17 <= 1000 && typeof (desc1.enumerable) != "undefined") {_RecordType("<434,450,20>",(desc1.enumerable)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<434,439,20>",(desc1)); Inst18++; } } catch(e) {}
    desc1.enumerable;
    false;
try { if (Inst19 <= 1000 && typeof (desc1.configurable) != "undefined") {_RecordType("<467,485,22>",(desc1.configurable)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<467,472,22>",(desc1)); Inst20++; } } catch(e) {}
    desc1.configurable;
    true;
    return true;
  }
};
try { if (Inst1 <= 1000 && typeof (handler) != "undefined") {_RecordType("<212,219,7>",(handler)); Inst1++; } } catch(e) {}
var desc = {
  value: 'bar',
  writable: true,
  enumerable: false,
  configurable: true
};
try { if (Inst21 <= 1000 && typeof (desc) != "undefined") {_RecordType("<525,529,27>",(desc)); Inst21++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<623,624,34>",(p)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<633,638,34>",(Proxy)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (target) != "undefined") {_RecordType("<639,645,34>",(target)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (handler) != "undefined") {_RecordType("<647,654,34>",(handler)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<657,695,34>",(Proxy.revocable(target, handler).proxy)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<657,672,34>",(Proxy.revocable)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<657,662,34>",(Proxy)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (target) != "undefined") {_RecordType("<673,679,34>",(target)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (handler) != "undefined") {_RecordType("<681,688,34>",(handler)); Inst30++; } } catch(e) {}
  var log = [];
try { if (Inst31 <= 1000 && typeof (log) != "undefined") {_RecordType("<706,709,35>",(log)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<718,739,36>",(Object.defineProperty)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<718,724,36>",(Object)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (p) != "undefined") {_RecordType("<740,741,36>",(p)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (desc) != "undefined") {_RecordType("<750,754,36>",(desc)); Inst35++; } } catch(e) {}
  Object.defineProperty(p, 'foo', desc);
try { if (Inst36 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<759,780,37>",(Object.defineProperty)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<759,765,37>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (p) != "undefined") {_RecordType("<781,782,37>",(p)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<784,794,37>",(Symbol.for)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<784,790,37>",(Symbol)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (desc) != "undefined") {_RecordType("<804,808,37>",(desc)); Inst41++; } } catch(e) {}
  Object.defineProperty(p, Symbol.for('quux'), desc);
try { if (Inst42 <= 1000 && typeof (log.length) != "undefined") {_RecordType("<813,823,38>",(log.length)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (log) != "undefined") {_RecordType("<813,816,38>",(log)); Inst43++; } } catch(e) {}
  log.length;
  2;
try { if (Inst44 <= 1000 && typeof (log[0]) != "undefined") {_RecordType("<832,838,40>",(log[0])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (log) != "undefined") {_RecordType("<832,835,40>",(log)); Inst45++; } } catch(e) {}
  log[0];
  'foo';
try { if (Inst46 <= 1000 && typeof (log[1]) != "undefined") {_RecordType("<851,857,42>",(log[1])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (log) != "undefined") {_RecordType("<851,854,42>",(log)); Inst47++; } } catch(e) {}
  log[1];
try { if (Inst48 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<861,871,43>",(Symbol.for)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<861,867,43>",(Symbol)); Inst49++; } } catch(e) {}
  Symbol.for('quux');
}

