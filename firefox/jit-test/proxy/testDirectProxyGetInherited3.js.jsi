var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Recursion through the get hook works; runaway recursion is checked.
var hits = 0,
    limit = 10;
try { if (Inst0 <= 1000 && typeof (hits) != "undefined") {_RecordType("<75,79,2>",(hits)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (limit) != "undefined") {_RecordType("<89,94,3>",(limit)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<117,122,4>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (get) != "undefined") {_RecordType("<131,134,5>",(get)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (t) != "undefined") {_RecordType("<135,136,5>",(t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (id) != "undefined") {_RecordType("<138,140,5>",(id)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<142,143,5>",(r)); Inst7++; } } catch(e) {}
var proto = new Proxy({}, {
  get(t, id, r) {
try { if (Inst8 <= 1000 && typeof (r) != "undefined") {_RecordType("<151,152,6>",(r)); Inst8++; } } catch(e) {}
    r;
try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<158,161,7>",(obj)); Inst9++; } } catch(e) {}
    obj;

try { if (Inst10 <= 1000 && typeof (hits) != "undefined") {_RecordType("<172,176,9>",(hits)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (limit) != "undefined") {_RecordType("<182,187,9>",(limit)); Inst11++; } } catch(e) {}
    if (hits++ >= limit) {
      return "ding";
    }

try { if (Inst12 <= 1000 && typeof (obj[id]) != "undefined") {_RecordType("<230,237,13>",(obj[id])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<230,233,13>",(obj)); Inst13++; } } catch(e) {}
    return obj[id];
  }

});
try { if (Inst2 <= 1000 && typeof (proto) != "undefined") {_RecordType("<105,110,4>",(proto)); Inst2++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<258,271,17>",(Object.create)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<258,264,17>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (proto) != "undefined") {_RecordType("<272,277,17>",(proto)); Inst17++; } } catch(e) {}
var obj = Object.create(proto);
try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<252,255,17>",(obj)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (obj.prop) != "undefined") {_RecordType("<280,288,18>",(obj.prop)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<280,283,18>",(obj)); Inst19++; } } catch(e) {}
obj.prop;
"ding";
hits = 0;
try { if (Inst20 <= 1000 && typeof (hits) != "undefined") {_RecordType("<298,302,20>",(hits)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<316,324,21>",(Infinity)); Inst22++; } } catch(e) {}
limit = Infinity;
try { if (Inst21 <= 1000 && typeof (limit) != "undefined") {_RecordType("<308,313,21>",(limit)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (hits) != "undefined") {_RecordType("<326,330,22>",(hits)); Inst23++; } } catch(e) {}
hits > 10;
true;

