var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test ES6 Proxy trap compliance for Object.isExtensible() on exotic proxy
// objects.
var unsealed = {};
try { if (Inst0 <= 1000 && typeof (unsealed) != "undefined") {_RecordType("<92,100,3>",(unsealed)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.seal) != "undefined") {_RecordType("<120,131,4>",(Object.seal)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<120,126,4>",(Object)); Inst3++; } } catch(e) {}
var sealed = Object.seal({});
try { if (Inst1 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<111,117,4>",(sealed)); Inst1++; } } catch(e) {}
var handler = {};
try { if (Inst4 <= 1000 && typeof (handler) != "undefined") {_RecordType("<141,148,5>",(handler)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<155,174,6>",(Object.isExtensible)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<155,161,6>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (unsealed) != "undefined") {_RecordType("<175,183,6>",(unsealed)); Inst7++; } } catch(e) {}
Object.isExtensible(unsealed);
true;
try { if (Inst8 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<192,211,8>",(Object.isExtensible)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<192,198,8>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<212,218,8>",(sealed)); Inst10++; } } catch(e) {}
Object.isExtensible(sealed);
false;
try { if (Inst12 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<251,256,10>",(Proxy)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<257,263,10>",(sealed)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (handler) != "undefined") {_RecordType("<265,272,10>",(handler)); Inst14++; } } catch(e) {}
var targetSealed = new Proxy(sealed, handler);
try { if (Inst11 <= 1000 && typeof (targetSealed) != "undefined") {_RecordType("<232,244,10>",(targetSealed)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<300,305,11>",(Proxy)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (unsealed) != "undefined") {_RecordType("<306,314,11>",(unsealed)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (handler) != "undefined") {_RecordType("<316,323,11>",(handler)); Inst18++; } } catch(e) {}
var targetUnsealed = new Proxy(unsealed, handler);
try { if (Inst15 <= 1000 && typeof (targetUnsealed) != "undefined") {_RecordType("<279,293,11>",(targetUnsealed)); Inst15++; } } catch(e) {}
var handlerCalled = false;
try { if (Inst19 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<330,343,12>",(handlerCalled)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<363,377,14>",(testExtensible)); Inst20++; } } catch(e) {}
function testExtensible(target, expectedResult, shouldIgnoreHandler = false) {
try { if (Inst21 <= 1000 && typeof (target) != "undefined") {_RecordType("<378,384,14>",(target)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<386,400,14>",(expectedResult)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (shouldIgnoreHandler) != "undefined") {_RecordType("<402,421,14>",(shouldIgnoreHandler)); Inst23++; } } catch(e) {}
  for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst24 <= 1000 && typeof (p) != "undefined") {_RecordType("<444,445,15>",(p)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<454,459,15>",(Proxy)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (target) != "undefined") {_RecordType("<460,466,15>",(target)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (handler) != "undefined") {_RecordType("<468,475,15>",(handler)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<478,516,15>",(Proxy.revocable(target, handler).proxy)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<478,493,15>",(Proxy.revocable)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<478,483,15>",(Proxy)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (target) != "undefined") {_RecordType("<494,500,15>",(target)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (handler) != "undefined") {_RecordType("<502,509,15>",(handler)); Inst32++; } } catch(e) {}
    handlerCalled = false;
try { if (Inst33 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<525,538,16>",(handlerCalled)); Inst33++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<564,578,18>",(expectedResult)); Inst34++; } } catch(e) {}
    if (typeof expectedResult === "boolean") {
try { if (Inst35 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<602,621,19>",(Object.isExtensible)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<602,608,19>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (p) != "undefined") {_RecordType("<622,623,19>",(p)); Inst37++; } } catch(e) {}
      Object.isExtensible(p);
try { if (Inst38 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<632,646,20>",(expectedResult)); Inst38++; } } catch(e) {}
      expectedResult;
      "Must return the correct value.";
    } else {
try { if (Inst39 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<714,733,23>",(Object.isExtensible)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<714,720,23>",(Object)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (p) != "undefined") {_RecordType("<734,735,23>",(p)); Inst41++; } } catch(e) {}
      (() => Object.isExtensible(p))();

try { if (Inst42 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<748,762,25>",(expectedResult)); Inst42++; } } catch(e) {}
      expectedResult;
    }

try { if (Inst43 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<775,788,28>",(handlerCalled)); Inst43++; } } catch(e) {}
    handlerCalled;
try { if (Inst44 <= 1000 && typeof (shouldIgnoreHandler) != "undefined") {_RecordType("<795,814,29>",(shouldIgnoreHandler)); Inst44++; } } catch(e) {}
    !shouldIgnoreHandler;
    "Must call handler appropriately";
  }
} // without traps, forward to the target
// First, make sure we get the obvious answer on a non-exotic target.


try { if (Inst45 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<973,987,36>",(testExtensible)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<988,994,36>",(sealed)); Inst46++; } } catch(e) {}
testExtensible(sealed, false,
/* shouldIgnoreHandler = */
true);
try { if (Inst47 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<1038,1052,39>",(testExtensible)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (unsealed) != "undefined") {_RecordType("<1053,1061,39>",(unsealed)); Inst48++; } } catch(e) {}
testExtensible(unsealed, true,
/* shouldIgnoreHandler = */
true); // Now, keep everyone honest. What if the target itself is a proxy?
// Note that we cheat a little. |handlerCalled| is true in a sense, just not
// for the toplevel handler.
// While we're here, test that the argument is passed correctly.

var targetsTarget = {};
try { if (Inst49 <= 1000 && typeof (targetsTarget) != "undefined") {_RecordType("<1348,1361,46>",(targetsTarget)); Inst49++; } } catch(e) {}

try { if (Inst50 <= 1000 && typeof (ensureCalled) != "undefined") {_RecordType("<1378,1390,48>",(ensureCalled)); Inst50++; } } catch(e) {}
function ensureCalled(target) {
try { if (Inst51 <= 1000 && typeof (target) != "undefined") {_RecordType("<1391,1397,48>",(target)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (target) != "undefined") {_RecordType("<1403,1409,49>",(target)); Inst52++; } } catch(e) {}
  target;
try { if (Inst53 <= 1000 && typeof (targetsTarget) != "undefined") {_RecordType("<1413,1426,50>",(targetsTarget)); Inst53++; } } catch(e) {}
  targetsTarget;
  handlerCalled = true;
try { if (Inst54 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<1430,1443,51>",(handlerCalled)); Inst54++; } } catch(e) {}
  return true;
}

try { if (Inst56 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1492,1497,55>",(Proxy)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (targetsTarget) != "undefined") {_RecordType("<1498,1511,55>",(targetsTarget)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (ensureCalled) != "undefined") {_RecordType("<1531,1543,56>",(ensureCalled)); Inst58++; } } catch(e) {}
var proxyTarget = new Proxy(targetsTarget, {
  isExtensible: ensureCalled
});
try { if (Inst55 <= 1000 && typeof (proxyTarget) != "undefined") {_RecordType("<1474,1485,55>",(proxyTarget)); Inst55++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<1548,1562,58>",(testExtensible)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (proxyTarget) != "undefined") {_RecordType("<1563,1574,58>",(proxyTarget)); Inst60++; } } catch(e) {}
testExtensible(proxyTarget, true); // What if the trap says it's necessarily sealed?

try { if (Inst61 <= 1000 && typeof (fakeSealed) != "undefined") {_RecordType("<1643,1653,60>",(fakeSealed)); Inst61++; } } catch(e) {}
function fakeSealed() {
  handlerCalled = true;
try { if (Inst62 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<1660,1673,61>",(handlerCalled)); Inst62++; } } catch(e) {}
  return false;
}

try { if (Inst65 <= 1000 && typeof (fakeSealed) != "undefined") {_RecordType("<1724,1734,65>",(fakeSealed)); Inst65++; } } catch(e) {}
handler.isExtensible = fakeSealed;
try { if (Inst63 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<1701,1721,65>",(handler.isExtensible)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (handler) != "undefined") {_RecordType("<1701,1708,65>",(handler)); Inst64++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<1736,1750,66>",(testExtensible)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (targetSealed) != "undefined") {_RecordType("<1751,1763,66>",(targetSealed)); Inst67++; } } catch(e) {}
testExtensible(targetSealed, false);
try { if (Inst68 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<1773,1787,67>",(testExtensible)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (targetUnsealed) != "undefined") {_RecordType("<1788,1802,67>",(targetUnsealed)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1804,1813,67>",(TypeError)); Inst70++; } } catch(e) {}
testExtensible(targetUnsealed, TypeError); // What if the trap says it's never sealed?

try { if (Inst71 <= 1000 && typeof (fakeUnsealed) != "undefined") {_RecordType("<1870,1882,69>",(fakeUnsealed)); Inst71++; } } catch(e) {}
function fakeUnsealed() {
  handlerCalled = true;
try { if (Inst72 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<1889,1902,70>",(handlerCalled)); Inst72++; } } catch(e) {}
  return true;
}

try { if (Inst75 <= 1000 && typeof (fakeUnsealed) != "undefined") {_RecordType("<1952,1964,74>",(fakeUnsealed)); Inst75++; } } catch(e) {}
handler.isExtensible = fakeUnsealed;
try { if (Inst73 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<1929,1949,74>",(handler.isExtensible)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (handler) != "undefined") {_RecordType("<1929,1936,74>",(handler)); Inst74++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<1966,1980,75>",(testExtensible)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (targetSealed) != "undefined") {_RecordType("<1981,1993,75>",(targetSealed)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1995,2004,75>",(TypeError)); Inst78++; } } catch(e) {}
testExtensible(targetSealed, TypeError);
try { if (Inst79 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<2007,2021,76>",(testExtensible)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (targetUnsealed) != "undefined") {_RecordType("<2022,2036,76>",(targetUnsealed)); Inst80++; } } catch(e) {}
testExtensible(targetUnsealed, true); // make sure we are able to prevent further extensions mid-flight and throw if the
// hook tries to lie.

try { if (Inst81 <= 1000 && typeof (makeSealedTruth) != "undefined") {_RecordType("<2160,2175,79>",(makeSealedTruth)); Inst81++; } } catch(e) {}
function makeSealedTruth(target) {
try { if (Inst82 <= 1000 && typeof (target) != "undefined") {_RecordType("<2176,2182,79>",(target)); Inst82++; } } catch(e) {}
  handlerCalled = true;
try { if (Inst83 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<2188,2201,80>",(handlerCalled)); Inst83++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<2212,2236,81>",(Object.preventExtensions)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2212,2218,81>",(Object)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (target) != "undefined") {_RecordType("<2237,2243,81>",(target)); Inst86++; } } catch(e) {}
  Object.preventExtensions(target);
  return false;
}

try { if (Inst87 <= 1000 && typeof (makeSealedLie) != "undefined") {_RecordType("<2274,2287,85>",(makeSealedLie)); Inst87++; } } catch(e) {}
function makeSealedLie(target) {
try { if (Inst88 <= 1000 && typeof (target) != "undefined") {_RecordType("<2288,2294,85>",(target)); Inst88++; } } catch(e) {}
  handlerCalled = true;
try { if (Inst89 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<2300,2313,86>",(handlerCalled)); Inst89++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<2324,2348,87>",(Object.preventExtensions)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2324,2330,87>",(Object)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (target) != "undefined") {_RecordType("<2349,2355,87>",(target)); Inst92++; } } catch(e) {}
  Object.preventExtensions(target);
  return true;
}

try { if (Inst95 <= 1000 && typeof (makeSealedTruth) != "undefined") {_RecordType("<2399,2414,91>",(makeSealedTruth)); Inst95++; } } catch(e) {}
handler.isExtensible = makeSealedTruth;
try { if (Inst93 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<2376,2396,91>",(handler.isExtensible)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (handler) != "undefined") {_RecordType("<2376,2383,91>",(handler)); Inst94++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<2416,2430,92>",(testExtensible)); Inst96++; } } catch(e) {}
testExtensible({}, false);
try { if (Inst99 <= 1000 && typeof (makeSealedLie) != "undefined") {_RecordType("<2466,2479,93>",(makeSealedLie)); Inst99++; } } catch(e) {}
handler.isExtensible = makeSealedLie;
try { if (Inst97 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<2443,2463,93>",(handler.isExtensible)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (handler) != "undefined") {_RecordType("<2443,2450,93>",(handler)); Inst98++; } } catch(e) {}
try { if (Inst100 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<2481,2495,94>",(testExtensible)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2500,2509,94>",(TypeError)); Inst101++; } } catch(e) {}
testExtensible({}, TypeError); // What if the trap doesn't directly return a boolean?

try { if (Inst102 <= 1000 && typeof (falseyNonBool) != "undefined") {_RecordType("<2577,2590,96>",(falseyNonBool)); Inst102++; } } catch(e) {}
function falseyNonBool() {
  handlerCalled = true;
try { if (Inst103 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<2597,2610,97>",(handlerCalled)); Inst103++; } } catch(e) {}
try { if (Inst104 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2628,2637,98>",(undefined)); Inst104++; } } catch(e) {}
  return undefined;
}

try { if (Inst107 <= 1000 && typeof (falseyNonBool) != "undefined") {_RecordType("<2665,2678,101>",(falseyNonBool)); Inst107++; } } catch(e) {}
handler.isExtensible = falseyNonBool;
try { if (Inst105 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<2642,2662,101>",(handler.isExtensible)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (handler) != "undefined") {_RecordType("<2642,2649,101>",(handler)); Inst106++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<2680,2694,102>",(testExtensible)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<2695,2701,102>",(sealed)); Inst109++; } } catch(e) {}
testExtensible(sealed, false);
try { if (Inst110 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<2711,2725,103>",(testExtensible)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (unsealed) != "undefined") {_RecordType("<2726,2734,103>",(unsealed)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2736,2745,103>",(TypeError)); Inst112++; } } catch(e) {}
testExtensible(unsealed, TypeError);

try { if (Inst113 <= 1000 && typeof (truthyNonBool) != "undefined") {_RecordType("<2758,2771,105>",(truthyNonBool)); Inst113++; } } catch(e) {}
function truthyNonBool() {
  handlerCalled = true;
try { if (Inst114 <= 1000 && typeof (handlerCalled) != "undefined") {_RecordType("<2778,2791,106>",(handlerCalled)); Inst114++; } } catch(e) {}
  return {};
}

try { if (Inst117 <= 1000 && typeof (truthyNonBool) != "undefined") {_RecordType("<2839,2852,110>",(truthyNonBool)); Inst117++; } } catch(e) {}
handler.isExtensible = truthyNonBool;
try { if (Inst115 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<2816,2836,110>",(handler.isExtensible)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (handler) != "undefined") {_RecordType("<2816,2823,110>",(handler)); Inst116++; } } catch(e) {}
try { if (Inst118 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<2854,2868,111>",(testExtensible)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<2869,2875,111>",(sealed)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2877,2886,111>",(TypeError)); Inst120++; } } catch(e) {}
testExtensible(sealed, TypeError);
try { if (Inst121 <= 1000 && typeof (testExtensible) != "undefined") {_RecordType("<2889,2903,112>",(testExtensible)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (unsealed) != "undefined") {_RecordType("<2904,2912,112>",(unsealed)); Inst122++; } } catch(e) {}
testExtensible(unsealed, true); // What if the trap throws?

try { if (Inst123 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<2959,2974,114>",(ExtensibleError)); Inst123++; } } catch(e) {}
function ExtensibleError() {
  ;
}

try { if (Inst126 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3018,3023,118>",(Error)); Inst126++; } } catch(e) {}
ExtensibleError.prototype = new Error();
try { if (Inst124 <= 1000 && typeof (ExtensibleError.prototype) != "undefined") {_RecordType("<2986,3011,118>",(ExtensibleError.prototype)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<2986,3001,118>",(ExtensibleError)); Inst125++; } } catch(e) {}
try { if (Inst130 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<3067,3082,119>",(ExtensibleError)); Inst130++; } } catch(e) {}
ExtensibleError.prototype.constructor = ExtensibleError;
try { if (Inst127 <= 1000 && typeof (ExtensibleError.prototype.constructor) != "undefined") {_RecordType("<3027,3064,119>",(ExtensibleError.prototype.constructor)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (ExtensibleError.prototype) != "undefined") {_RecordType("<3027,3052,119>",(ExtensibleError.prototype)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<3027,3042,119>",(ExtensibleError)); Inst129++; } } catch(e) {}

try { if (Inst131 <= 1000 && typeof (throwFromTrap) != "undefined") {_RecordType("<3094,3107,121>",(throwFromTrap)); Inst131++; } } catch(e) {}
function throwFromTrap() {
try { if (Inst132 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<3124,3139,122>",(ExtensibleError)); Inst132++; } } catch(e) {}
  throw new ExtensibleError();
}

try { if (Inst135 <= 1000 && typeof (throwFromTrap) != "undefined") {_RecordType("<3169,3182,125>",(throwFromTrap)); Inst135++; } } catch(e) {}
handler.isExtensible = throwFromTrap; // exercise some other code paths and make sure that they invoke the trap and
try { if (Inst133 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<3146,3166,125>",(handler.isExtensible)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (handler) != "undefined") {_RecordType("<3146,3153,125>",(handler)); Inst134++; } } catch(e) {}
// can handle the ensuing error.

for (let p of [new Proxy(sealed, handler), Proxy.revocable(sealed, handler).proxy]) {
try { if (Inst136 <= 1000 && typeof (p) != "undefined") {_RecordType("<3305,3306,128>",(p)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<3315,3320,128>",(Proxy)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<3321,3327,128>",(sealed)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (handler) != "undefined") {_RecordType("<3329,3336,128>",(handler)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Proxy.revocable(sealed, handler).proxy) != "undefined") {_RecordType("<3339,3377,128>",(Proxy.revocable(sealed, handler).proxy)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<3339,3354,128>",(Proxy.revocable)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<3339,3344,128>",(Proxy)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<3355,3361,128>",(sealed)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (handler) != "undefined") {_RecordType("<3363,3370,128>",(handler)); Inst144++; } } catch(e) {}
  (function () {
try { if (Inst145 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<3403,3422,130>",(Object.isExtensible)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3403,3409,130>",(Object)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (p) != "undefined") {_RecordType("<3423,3424,130>",(p)); Inst147++; } } catch(e) {}
    Object.isExtensible(p);
  })();

try { if (Inst148 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<3438,3453,133>",(ExtensibleError)); Inst148++; } } catch(e) {}
  ExtensibleError();
  "Must throw if the trap does.";

  (function () {
try { if (Inst149 <= 1000 && typeof (Object.isFrozen) != "undefined") {_RecordType("<3513,3528,137>",(Object.isFrozen)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3513,3519,137>",(Object)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (p) != "undefined") {_RecordType("<3529,3530,137>",(p)); Inst151++; } } catch(e) {}
    Object.isFrozen(p);
  })();

try { if (Inst152 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<3544,3559,140>",(ExtensibleError)); Inst152++; } } catch(e) {}
  ExtensibleError();
  "Must throw if the trap does.";

  (function () {
try { if (Inst153 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<3619,3634,144>",(Object.isSealed)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3619,3625,144>",(Object)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (p) != "undefined") {_RecordType("<3635,3636,144>",(p)); Inst155++; } } catch(e) {}
    Object.isSealed(p);
  })();

try { if (Inst156 <= 1000 && typeof (ExtensibleError) != "undefined") {_RecordType("<3650,3665,147>",(ExtensibleError)); Inst156++; } } catch(e) {}
  ExtensibleError();
  "Must throw if the trap does.";
} // What if the trap likes to re-ask old questions?


for (let p of [new Proxy(sealed, handler), Proxy.revocable(sealed, handler).proxy]) {
try { if (Inst157 <= 1000 && typeof (p) != "undefined") {_RecordType("<3767,3768,152>",(p)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<3777,3782,152>",(Proxy)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<3783,3789,152>",(sealed)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (handler) != "undefined") {_RecordType("<3791,3798,152>",(handler)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (Proxy.revocable(sealed, handler).proxy) != "undefined") {_RecordType("<3801,3839,152>",(Proxy.revocable(sealed, handler).proxy)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<3801,3816,152>",(Proxy.revocable)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<3801,3806,152>",(Proxy)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (sealed) != "undefined") {_RecordType("<3817,3823,152>",(sealed)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (handler) != "undefined") {_RecordType("<3825,3832,152>",(handler)); Inst165++; } } catch(e) {}
try { if (Inst168 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<3875,3894,153>",(Object.isExtensible)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3875,3881,153>",(Object)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (p) != "undefined") {_RecordType("<3895,3896,153>",(p)); Inst170++; } } catch(e) {}
  handler.isExtensible = () => Object.isExtensible(p);
try { if (Inst166 <= 1000 && typeof (handler.isExtensible) != "undefined") {_RecordType("<3846,3866,153>",(handler.isExtensible)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (handler) != "undefined") {_RecordType("<3846,3853,153>",(handler)); Inst167++; } } catch(e) {}

try { if (Inst171 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<3909,3928,155>",(Object.isExtensible)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3909,3915,155>",(Object)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (p) != "undefined") {_RecordType("<3929,3930,155>",(p)); Inst173++; } } catch(e) {}
  (() => Object.isExtensible(p))();

try { if (Inst174 <= 1000 && typeof (InternalError) != "undefined") {_RecordType("<3939,3952,157>",(InternalError)); Inst174++; } } catch(e) {}
  InternalError;
  "Should allow and detect infinite recurison.";
}

