var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Call the trap with the handler as the this value, the target as the first
 * argument, the name of the property as the second argument, the value as the
 * third argument, and the receiver as the fourth argument
 */
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<226,232,6>",(target)); Inst0++; } } catch(e) {}

for (var key of ['foo', Symbol.for('quux')]) {
try { if (Inst1 <= 1000 && typeof (key) != "undefined") {_RecordType("<249,252,8>",(key)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<264,274,8>",(Symbol.for)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<264,270,8>",(Symbol)); Inst3++; } } catch(e) {}
  var handler = {};
try { if (Inst4 <= 1000 && typeof (handler) != "undefined") {_RecordType("<293,300,9>",(handler)); Inst4++; } } catch(e) {}

  for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst5 <= 1000 && typeof (p) != "undefined") {_RecordType("<319,320,11>",(p)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<329,334,11>",(Proxy)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (target) != "undefined") {_RecordType("<335,341,11>",(target)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (handler) != "undefined") {_RecordType("<343,350,11>",(handler)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<353,391,11>",(Proxy.revocable(target, handler).proxy)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<353,368,11>",(Proxy.revocable)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<353,358,11>",(Proxy)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (target) != "undefined") {_RecordType("<369,375,11>",(target)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (handler) != "undefined") {_RecordType("<377,384,11>",(handler)); Inst13++; } } catch(e) {}
    handler.set = function (target1, name, val, receiver) {
try { if (Inst16 <= 1000 && typeof (target1) != "undefined") {_RecordType("<424,431,12>",(target1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (name) != "undefined") {_RecordType("<433,437,12>",(name)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (val) != "undefined") {_RecordType("<439,442,12>",(val)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<444,452,12>",(receiver)); Inst19++; } } catch(e) {}
      this;
try { if (Inst20 <= 1000 && typeof (handler) != "undefined") {_RecordType("<474,481,14>",(handler)); Inst20++; } } catch(e) {}
      handler;
try { if (Inst21 <= 1000 && typeof (target1) != "undefined") {_RecordType("<489,496,15>",(target1)); Inst21++; } } catch(e) {}
      target1;
try { if (Inst22 <= 1000 && typeof (target) != "undefined") {_RecordType("<504,510,16>",(target)); Inst22++; } } catch(e) {}
      target;
try { if (Inst23 <= 1000 && typeof (name) != "undefined") {_RecordType("<518,522,17>",(name)); Inst23++; } } catch(e) {}
      name;
try { if (Inst24 <= 1000 && typeof (key) != "undefined") {_RecordType("<530,533,18>",(key)); Inst24++; } } catch(e) {}
      key;
try { if (Inst25 <= 1000 && typeof (val) != "undefined") {_RecordType("<541,544,19>",(val)); Inst25++; } } catch(e) {}
      val;
      'baz';
try { if (Inst26 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<565,573,21>",(receiver)); Inst26++; } } catch(e) {}
      receiver;
try { if (Inst27 <= 1000 && typeof (p) != "undefined") {_RecordType("<581,582,22>",(p)); Inst27++; } } catch(e) {}
      p;
      called = true;
try { if (Inst28 <= 1000 && typeof (called) != "undefined") {_RecordType("<590,596,23>",(called)); Inst28++; } } catch(e) {}
    };
try { if (Inst14 <= 1000 && typeof (handler.set) != "undefined") {_RecordType("<400,411,12>",(handler.set)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (handler) != "undefined") {_RecordType("<400,407,12>",(handler)); Inst15++; } } catch(e) {}

    var called = false;
try { if (Inst29 <= 1000 && typeof (called) != "undefined") {_RecordType("<621,627,26>",(called)); Inst29++; } } catch(e) {}
    p[key] = 'baz';
try { if (Inst30 <= 1000 && typeof (p[key]) != "undefined") {_RecordType("<641,647,27>",(p[key])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (p) != "undefined") {_RecordType("<641,642,27>",(p)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (called) != "undefined") {_RecordType("<661,667,28>",(called)); Inst32++; } } catch(e) {}
    called;
    true;
  }
}

