var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<4,10,1>",(target)); Inst0++; } } catch(e) {}
var handler = {
  getOwnPropertyDescriptor: function () {
    return {
      value: 2,
      configurable: true
    };
  }
};
try { if (Inst1 <= 1000 && typeof (handler) != "undefined") {_RecordType("<21,28,2>",(handler)); Inst1++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<153,154,11>",(p)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<163,168,11>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (target) != "undefined") {_RecordType("<169,175,11>",(target)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (handler) != "undefined") {_RecordType("<177,184,11>",(handler)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<187,225,11>",(Proxy.revocable(target, handler).proxy)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<187,202,11>",(Proxy.revocable)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<187,192,11>",(Proxy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (target) != "undefined") {_RecordType("<203,209,11>",(target)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (handler) != "undefined") {_RecordType("<211,218,11>",(handler)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<232,263,12>",(Object.getOwnPropertyDescriptor)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<232,238,12>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<264,265,12>",(p)); Inst13++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(p, 'foo');
}

try { if (Inst14 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<278,302,15>",(Object.preventExtensions)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<278,284,15>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<303,309,15>",(target)); Inst16++; } } catch(e) {}
Object.preventExtensions(target);

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<322,323,17>",(p)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<332,337,17>",(Proxy)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (target) != "undefined") {_RecordType("<338,344,17>",(target)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (handler) != "undefined") {_RecordType("<346,353,17>",(handler)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<356,394,17>",(Proxy.revocable(target, handler).proxy)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<356,371,17>",(Proxy.revocable)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<356,361,17>",(Proxy)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (target) != "undefined") {_RecordType("<372,378,17>",(target)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (handler) != "undefined") {_RecordType("<380,387,17>",(handler)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<408,439,18>",(Object.getOwnPropertyDescriptor)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<408,414,18>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (p) != "undefined") {_RecordType("<440,441,18>",(p)); Inst28++; } } catch(e) {}
  (() => Object.getOwnPropertyDescriptor(p, 'foo'))();

try { if (Inst29 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<457,466,20>",(TypeError)); Inst29++; } } catch(e) {}
  TypeError;
}

