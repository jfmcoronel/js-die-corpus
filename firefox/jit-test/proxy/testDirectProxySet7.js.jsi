var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Assigning to a proxy with no set handler calls the defineProperty handler
// when no such property already exists.
var hits = 0;
try { if (Inst0 <= 1000 && typeof (hits) != "undefined") {_RecordType("<122,126,3>",(hits)); Inst0++; } } catch(e) {}
var t = {};
try { if (Inst1 <= 1000 && typeof (t) != "undefined") {_RecordType("<136,137,4>",(t)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<156,161,5>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (t) != "undefined") {_RecordType("<162,163,5>",(t)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (defineProperty) != "undefined") {_RecordType("<169,183,6>",(defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<184,185,6>",(t)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (id) != "undefined") {_RecordType("<187,189,6>",(id)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (desc) != "undefined") {_RecordType("<191,195,6>",(desc)); Inst8++; } } catch(e) {}
var p = new Proxy(t, {
  defineProperty(t, id, desc) {
try { if (Inst9 <= 1000 && typeof (hits) != "undefined") {_RecordType("<203,207,7>",(hits)); Inst9++; } } catch(e) {}
    hits++;
    return true;
  }

});
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<148,149,5>",(p)); Inst2++; } } catch(e) {}
p.x = 1;
try { if (Inst10 <= 1000 && typeof (p.x) != "undefined") {_RecordType("<237,240,12>",(p.x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<237,238,12>",(p)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (hits) != "undefined") {_RecordType("<246,250,13>",(hits)); Inst12++; } } catch(e) {}
hits;
1;
try { if (Inst13 <= 1000 && typeof (t) != "undefined") {_RecordType("<262,263,15>",(t)); Inst13++; } } catch(e) {}
"x" in t;
false;
// Same thing, but the receiver is a plain object inheriting from p:
try { if (Inst15 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<356,369,18>",(Object.create)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<356,362,18>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<370,371,18>",(p)); Inst17++; } } catch(e) {}
var receiver = Object.create(p);
try { if (Inst14 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<345,353,18>",(receiver)); Inst14++; } } catch(e) {}
hits = 0;
try { if (Inst18 <= 1000 && typeof (hits) != "undefined") {_RecordType("<374,378,19>",(hits)); Inst18++; } } catch(e) {}
receiver.x = 2;
try { if (Inst19 <= 1000 && typeof (receiver.x) != "undefined") {_RecordType("<384,394,20>",(receiver.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<384,392,20>",(receiver)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (hits) != "undefined") {_RecordType("<400,404,21>",(hits)); Inst21++; } } catch(e) {}
hits;
0;
try { if (Inst22 <= 1000 && typeof (t) != "undefined") {_RecordType("<416,417,23>",(t)); Inst22++; } } catch(e) {}
"x" in t;
false;
try { if (Inst23 <= 1000 && typeof (receiver.hasOwnProperty) != "undefined") {_RecordType("<426,449,25>",(receiver.hasOwnProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<426,434,25>",(receiver)); Inst24++; } } catch(e) {}
receiver.hasOwnProperty("x");
true;
try { if (Inst25 <= 1000 && typeof (receiver.x) != "undefined") {_RecordType("<462,472,27>",(receiver.x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<462,470,27>",(receiver)); Inst26++; } } catch(e) {}
receiver.x;
2;

