var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Return a new descriptor object that agrees with that returned by the trap
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<81,87,2>",(target)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<94,115,3>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<94,100,3>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<116,122,3>",(target)); Inst3++; } } catch(e) {}
Object.defineProperty(target, 'foo', {
  value: 'bar',
  writable: true,
  enumerable: false,
  configurable: true
});
var desc = {
  value: 'baz',
  writable: false,
  enumerable: true,
  configurable: true
};
try { if (Inst4 <= 1000 && typeof (desc) != "undefined") {_RecordType("<217,221,9>",(desc)); Inst4++; } } catch(e) {}
var handler = {
  getOwnPropertyDescriptor: function () {
try { if (Inst6 <= 1000 && typeof (desc) != "undefined") {_RecordType("<374,378,17>",(desc)); Inst6++; } } catch(e) {}
    return desc;
  }
};
try { if (Inst5 <= 1000 && typeof (handler) != "undefined") {_RecordType("<309,316,15>",(handler)); Inst5++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<397,398,21>",(p)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<407,412,21>",(Proxy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (target) != "undefined") {_RecordType("<413,419,21>",(target)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (handler) != "undefined") {_RecordType("<421,428,21>",(handler)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<431,469,21>",(Proxy.revocable(target, handler).proxy)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<431,446,21>",(Proxy.revocable)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<431,436,21>",(Proxy)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (target) != "undefined") {_RecordType("<447,453,21>",(target)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (handler) != "undefined") {_RecordType("<455,462,21>",(handler)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<488,519,22>",(Object.getOwnPropertyDescriptor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<488,494,22>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<520,521,22>",(p)); Inst19++; } } catch(e) {}
  var desc1 = Object.getOwnPropertyDescriptor(p, 'foo');
try { if (Inst16 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<480,485,22>",(desc1)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<533,538,23>",(desc1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (desc) != "undefined") {_RecordType("<542,546,23>",(desc)); Inst21++; } } catch(e) {}
  desc1 == desc;
  false;
try { if (Inst22 <= 1000 && typeof (desc1.value) != "undefined") {_RecordType("<559,570,25>",(desc1.value)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<559,564,25>",(desc1)); Inst23++; } } catch(e) {}
  desc1.value;
  'baz';
try { if (Inst24 <= 1000 && typeof (desc1.writable) != "undefined") {_RecordType("<583,597,27>",(desc1.writable)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<583,588,27>",(desc1)); Inst25++; } } catch(e) {}
  desc1.writable;
  false;
try { if (Inst26 <= 1000 && typeof (desc1.enumerable) != "undefined") {_RecordType("<610,626,29>",(desc1.enumerable)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<610,615,29>",(desc1)); Inst27++; } } catch(e) {}
  desc1.enumerable;
  true;
try { if (Inst28 <= 1000 && typeof (desc1.configurable) != "undefined") {_RecordType("<638,656,31>",(desc1.configurable)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<638,643,31>",(desc1)); Inst29++; } } catch(e) {}
  desc1.configurable;
  true;
} // The returned descriptor must agree in configurability.


desc = {
  configurable: true
};
try { if (Inst30 <= 1000 && typeof (desc) != "undefined") {_RecordType("<728,732,36>",(desc)); Inst30++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst31 <= 1000 && typeof (p) != "undefined") {_RecordType("<771,772,40>",(p)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<781,786,40>",(Proxy)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (target) != "undefined") {_RecordType("<787,793,40>",(target)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (handler) != "undefined") {_RecordType("<795,802,40>",(handler)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<805,843,40>",(Proxy.revocable(target, handler).proxy)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<805,820,40>",(Proxy.revocable)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<805,810,40>",(Proxy)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (target) != "undefined") {_RecordType("<821,827,40>",(target)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (handler) != "undefined") {_RecordType("<829,836,40>",(handler)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<862,893,41>",(Object.getOwnPropertyDescriptor)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<862,868,41>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (p) != "undefined") {_RecordType("<894,895,41>",(p)); Inst43++; } } catch(e) {}
  var desc1 = Object.getOwnPropertyDescriptor(p, 'foo');
try { if (Inst40 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<854,859,41>",(desc1)); Inst40++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<907,912,42>",(desc1)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (desc) != "undefined") {_RecordType("<916,920,42>",(desc)); Inst45++; } } catch(e) {}
  desc1 == desc;
  false;
try { if (Inst46 <= 1000 && typeof (desc1.value) != "undefined") {_RecordType("<933,944,44>",(desc1.value)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<933,938,44>",(desc1)); Inst47++; } } catch(e) {}
  desc1.value;
try { if (Inst48 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<948,957,45>",(undefined)); Inst48++; } } catch(e) {}
  undefined;
try { if (Inst49 <= 1000 && typeof (desc1.writable) != "undefined") {_RecordType("<961,975,46>",(desc1.writable)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<961,966,46>",(desc1)); Inst50++; } } catch(e) {}
  desc1.writable;
  false;
try { if (Inst51 <= 1000 && typeof (desc1.enumerable) != "undefined") {_RecordType("<988,1004,48>",(desc1.enumerable)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<988,993,48>",(desc1)); Inst52++; } } catch(e) {}
  desc1.enumerable;
  false;
try { if (Inst53 <= 1000 && typeof (desc1.configurable) != "undefined") {_RecordType("<1017,1035,50>",(desc1.configurable)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (desc1) != "undefined") {_RecordType("<1017,1022,50>",(desc1)); Inst54++; } } catch(e) {}
  desc1.configurable;
  true;
}

