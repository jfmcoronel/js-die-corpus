var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Make sure that we can find own, enumerable symbols.
try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<68,74,2>",(Symbol)); Inst1++; } } catch(e) {}
var symbol = Symbol("bad");
try { if (Inst0 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<59,65,2>",(symbol)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<97,103,3>",(Symbol)); Inst3++; } } catch(e) {}
var symbol2 = Symbol("good");
try { if (Inst2 <= 1000 && typeof (symbol2) != "undefined") {_RecordType("<87,94,3>",(symbol2)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<129,134,4>",(Proxy)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<143,150,5>",(ownKeys)); Inst6++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (getOwnPropertyDescriptor) != "undefined") {_RecordType("<193,217,9>",(getOwnPropertyDescriptor)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (target) != "undefined") {_RecordType("<218,224,9>",(target)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (name) != "undefined") {_RecordType("<226,230,9>",(name)); Inst11++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (get) != "undefined") {_RecordType("<574,577,31>",(get)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (target) != "undefined") {_RecordType("<578,584,31>",(target)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (name) != "undefined") {_RecordType("<586,590,31>",(name)); Inst18++; } } catch(e) {}
var proxy = new Proxy({}, {
  ownKeys() {
try { if (Inst7 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<167,173,6>",(symbol)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (symbol2) != "undefined") {_RecordType("<175,182,6>",(symbol2)); Inst8++; } } catch(e) {}
    return [symbol, symbol2];
  },

  getOwnPropertyDescriptor(target, name) {
try { if (Inst12 <= 1000 && typeof (name) != "undefined") {_RecordType("<242,246,10>",(name)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<250,256,10>",(symbol)); Inst13++; } } catch(e) {}
    if (name == symbol) {
      return {
        configurable: true,
        enumerable: false,
        value: {}
      };
    } // Only this enumerable symbol should be defined.


try { if (Inst14 <= 1000 && typeof (name) != "undefined") {_RecordType("<423,427,19>",(name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (symbol2) != "undefined") {_RecordType("<431,438,19>",(symbol2)); Inst15++; } } catch(e) {}
    if (name == symbol2) {
      return {
        configurable: true,
        enumerable: true,
        value: {}
      };
    }

    true;
    false;
  },

  get(target, name) {
    // Slightly confusing, but these are the descriptors that defineProperties
    // is going to define on the object.
try { if (Inst19 <= 1000 && typeof (name) != "undefined") {_RecordType("<722,726,34>",(name)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<730,736,34>",(symbol)); Inst20++; } } catch(e) {}
    if (name == symbol) {
      return {
        configurable: true,
        value: "bad"
      };
    }

try { if (Inst21 <= 1000 && typeof (name) != "undefined") {_RecordType("<828,832,41>",(name)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (symbol2) != "undefined") {_RecordType("<836,843,41>",(symbol2)); Inst22++; } } catch(e) {}
    if (name == symbol2) {
      return {
        configurable: true,
        value: "good"
      };
    }

    true;
    false;
  }

});
try { if (Inst4 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<117,122,4>",(proxy)); Inst4++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.getOwnPropertySymbols(proxy).length) != "undefined") {_RecordType("<958,1000,53>",(Object.getOwnPropertySymbols(proxy).length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.getOwnPropertySymbols) != "undefined") {_RecordType("<958,986,53>",(Object.getOwnPropertySymbols)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<958,964,53>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<987,992,53>",(proxy)); Inst26++; } } catch(e) {}
Object.getOwnPropertySymbols(proxy).length;
2;
var obj = {};
try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1009,1012,55>",(obj)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<1019,1042,56>",(Object.defineProperties)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1019,1025,56>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1043,1046,56>",(obj)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1048,1053,56>",(proxy)); Inst31++; } } catch(e) {}
Object.defineProperties(obj, proxy);
try { if (Inst32 <= 1000 && typeof (Object.getOwnPropertySymbols(obj).length) != "undefined") {_RecordType("<1056,1096,57>",(Object.getOwnPropertySymbols(obj).length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object.getOwnPropertySymbols) != "undefined") {_RecordType("<1056,1084,57>",(Object.getOwnPropertySymbols)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1056,1062,57>",(Object)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1085,1088,57>",(obj)); Inst35++; } } catch(e) {}
Object.getOwnPropertySymbols(obj).length;
1;
try { if (Inst36 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<1101,1107,59>",(symbol)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1111,1114,59>",(obj)); Inst37++; } } catch(e) {}
symbol in obj;
false;
try { if (Inst38 <= 1000 && typeof (symbol2) != "undefined") {_RecordType("<1123,1130,61>",(symbol2)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1134,1137,61>",(obj)); Inst39++; } } catch(e) {}
symbol2 in obj;
true;
try { if (Inst40 <= 1000 && typeof (obj[symbol2]) != "undefined") {_RecordType("<1145,1157,63>",(obj[symbol2])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1145,1148,63>",(obj)); Inst41++; } } catch(e) {}
obj[symbol2];
"good";

