var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Call the trap with the handler as the this value, the target as the first
 * argument, and the name of the property as the second argument
 */
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<153,159,5>",(target)); Inst0++; } } catch(e) {}
var called;
try { if (Inst1 <= 1000 && typeof (called) != "undefined") {_RecordType("<170,176,6>",(called)); Inst1++; } } catch(e) {}
var handler = {
  getOwnPropertyDescriptor: function (target1, name) {
try { if (Inst3 <= 1000 && typeof (target1) != "undefined") {_RecordType("<232,239,8>",(target1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (name) != "undefined") {_RecordType("<241,245,8>",(name)); Inst4++; } } catch(e) {}
    this;
try { if (Inst5 <= 1000 && typeof (handler) != "undefined") {_RecordType("<263,270,10>",(handler)); Inst5++; } } catch(e) {}
    handler;
try { if (Inst6 <= 1000 && typeof (target1) != "undefined") {_RecordType("<276,283,11>",(target1)); Inst6++; } } catch(e) {}
    target1;
try { if (Inst7 <= 1000 && typeof (target) != "undefined") {_RecordType("<289,295,12>",(target)); Inst7++; } } catch(e) {}
    target;
try { if (Inst8 <= 1000 && typeof (name) != "undefined") {_RecordType("<301,305,13>",(name)); Inst8++; } } catch(e) {}
    name;
    'foo';
    called = true;
try { if (Inst9 <= 1000 && typeof (called) != "undefined") {_RecordType("<322,328,15>",(called)); Inst9++; } } catch(e) {}
  }
};
try { if (Inst2 <= 1000 && typeof (handler) != "undefined") {_RecordType("<182,189,7>",(handler)); Inst2++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<354,355,19>",(p)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<364,369,19>",(Proxy)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (target) != "undefined") {_RecordType("<370,376,19>",(target)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (handler) != "undefined") {_RecordType("<378,385,19>",(handler)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<388,426,19>",(Proxy.revocable(target, handler).proxy)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<388,403,19>",(Proxy.revocable)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<388,393,19>",(Proxy)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (target) != "undefined") {_RecordType("<404,410,19>",(target)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (handler) != "undefined") {_RecordType("<412,419,19>",(handler)); Inst18++; } } catch(e) {}
  called = false;
try { if (Inst19 <= 1000 && typeof (called) != "undefined") {_RecordType("<433,439,20>",(called)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<451,482,21>",(Object.getOwnPropertyDescriptor)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<451,457,21>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<483,484,21>",(p)); Inst22++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(p, 'foo');
try { if (Inst23 <= 1000 && typeof (called) != "undefined") {_RecordType("<496,502,22>",(called)); Inst23++; } } catch(e) {}
  called;
  true;
}

