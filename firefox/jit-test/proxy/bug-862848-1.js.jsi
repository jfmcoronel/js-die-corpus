var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// obj.hasOwnProperty(id), Object.getOwnPropertyDescriptor(obj, id), and
// Object.defineProperty(obj, id, desc) do not look at obj's prototype.
try { if (Inst1 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<168,173,3>",(Proxy)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (t) != "undefined") {_RecordType("<207,208,5>",(t)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (id) != "undefined") {_RecordType("<210,212,5>",(id)); Inst3++; } } catch(e) {}
var angryHandler = new Proxy({}, {
  has: () => true,
  get: (t, id) => {
try { if (Inst4 <= 1000 && typeof (Error) != "undefined") {_RecordType("<233,238,6>",(Error)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (id) != "undefined") {_RecordType("<280,282,6>",(id)); Inst5++; } } catch(e) {}
    throw new Error("angryHandler should not be queried (" + id + ")");
  }
});
try { if (Inst0 <= 1000 && typeof (angryHandler) != "undefined") {_RecordType("<149,161,3>",(angryHandler)); Inst0++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<320,325,9>",(Proxy)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (angryHandler) != "undefined") {_RecordType("<330,342,9>",(angryHandler)); Inst8++; } } catch(e) {}
var angryProto = new Proxy({}, angryHandler);
try { if (Inst6 <= 1000 && typeof (angryProto) != "undefined") {_RecordType("<303,313,9>",(angryProto)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<355,368,10>",(Object.create)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<355,361,10>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (angryProto) != "undefined") {_RecordType("<369,379,10>",(angryProto)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.prototype.hasOwnProperty) != "undefined") {_RecordType("<506,537,14>",(Object.prototype.hasOwnProperty)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<506,522,14>",(Object.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<506,512,14>",(Object)); Inst15++; } } catch(e) {}
var obj = Object.create(angryProto, {
  // Define hasOwnProperty directly on obj since we are poisoning its
  // prototype chain.
  hasOwnProperty: {
    value: Object.prototype.hasOwnProperty
  }
});
try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<349,352,10>",(obj)); Inst9++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<546,577,17>",(Object.getOwnPropertyDescriptor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<546,552,17>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<578,581,17>",(obj)); Inst18++; } } catch(e) {}
Object.getOwnPropertyDescriptor(obj, "foo");
try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<591,600,18>",(undefined)); Inst19++; } } catch(e) {}
undefined;
try { if (Inst20 <= 1000 && typeof (obj.hasOwnProperty) != "undefined") {_RecordType("<602,620,19>",(obj.hasOwnProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj) != "undefined") {_RecordType("<602,605,19>",(obj)); Inst21++; } } catch(e) {}
obj.hasOwnProperty("foo");
false;
try { if (Inst22 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<636,657,21>",(Object.defineProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<636,642,21>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj) != "undefined") {_RecordType("<658,661,21>",(obj)); Inst24++; } } catch(e) {}
Object.defineProperty(obj, "foo", {
  value: 5
});
try { if (Inst25 <= 1000 && typeof (obj.hasOwnProperty) != "undefined") {_RecordType("<687,705,24>",(obj.hasOwnProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj) != "undefined") {_RecordType("<687,690,24>",(obj)); Inst26++; } } catch(e) {}
obj.hasOwnProperty("foo");
true;
try { if (Inst27 <= 1000 && typeof (obj.foo) != "undefined") {_RecordType("<720,727,26>",(obj.foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<720,723,26>",(obj)); Inst28++; } } catch(e) {}
obj.foo;
5;

