var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Call the trap with the handler as the this value, the target as the first
 * argument, and the original arguments as the third argument.
 *
 * Hooks that don't return an object must throw.
 */
var p;
try { if (Inst0 <= 1000 && typeof (p) != "undefined") {_RecordType("<203,204,7>",(p)); Inst0++; } } catch(e) {}

var target = function () {
  ;
};
try { if (Inst1 <= 1000 && typeof (target) != "undefined") {_RecordType("<211,217,9>",(target)); Inst1++; } } catch(e) {}

var handler = {
  construct: function (target1, args, newTarget) {
try { if (Inst3 <= 1000 && typeof (target1) != "undefined") {_RecordType("<281,288,14>",(target1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (args) != "undefined") {_RecordType("<290,294,14>",(args)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (newTarget) != "undefined") {_RecordType("<296,305,14>",(newTarget)); Inst5++; } } catch(e) {}
    this;
try { if (Inst6 <= 1000 && typeof (handler) != "undefined") {_RecordType("<323,330,16>",(handler)); Inst6++; } } catch(e) {}
    handler;
try { if (Inst7 <= 1000 && typeof (target1) != "undefined") {_RecordType("<336,343,17>",(target1)); Inst7++; } } catch(e) {}
    target1;
try { if (Inst8 <= 1000 && typeof (target) != "undefined") {_RecordType("<349,355,18>",(target)); Inst8++; } } catch(e) {}
    target;
try { if (Inst9 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<361,372,19>",(args.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<361,365,19>",(args)); Inst10++; } } catch(e) {}
    args.length;
    2;
try { if (Inst11 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<385,392,21>",(args[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (args) != "undefined") {_RecordType("<385,389,21>",(args)); Inst12++; } } catch(e) {}
    args[0];
    2;
try { if (Inst13 <= 1000 && typeof (args[1]) != "undefined") {_RecordType("<405,412,23>",(args[1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (args) != "undefined") {_RecordType("<405,409,23>",(args)); Inst14++; } } catch(e) {}
    args[1];
    3;
try { if (Inst15 <= 1000 && typeof (newTarget) != "undefined") {_RecordType("<425,434,25>",(newTarget)); Inst15++; } } catch(e) {}
    newTarget;
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<440,441,26>",(p)); Inst16++; } } catch(e) {}
    p;
  }
};
try { if (Inst2 <= 1000 && typeof (handler) != "undefined") {_RecordType("<246,253,13>",(handler)); Inst2++; } } catch(e) {}

for (p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<456,457,30>",(p)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<466,471,30>",(Proxy)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (target) != "undefined") {_RecordType("<472,478,30>",(target)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (handler) != "undefined") {_RecordType("<480,487,30>",(handler)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<490,528,30>",(Proxy.revocable(target, handler).proxy)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<490,505,30>",(Proxy.revocable)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<490,495,30>",(Proxy)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (target) != "undefined") {_RecordType("<506,512,30>",(target)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (handler) != "undefined") {_RecordType("<514,521,30>",(handler)); Inst25++; } } catch(e) {}
  (function () {
try { if (Inst26 <= 1000 && typeof (p) != "undefined") {_RecordType("<558,559,32>",(p)); Inst26++; } } catch(e) {}
    new p(2, 3);
  })();

try { if (Inst27 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<578,587,35>",(TypeError)); Inst27++; } } catch(e) {}
  TypeError;
}

