var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The receiver argument is passed through proxies with no "set" handler.
var hits;
try { if (Inst0 <= 1000 && typeof (hits) != "undefined") {_RecordType("<78,82,2>",(hits)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<96,101,3>",(Proxy)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (set) != "undefined") {_RecordType("<110,113,4>",(set)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (t) != "undefined") {_RecordType("<114,115,4>",(t)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (id) != "undefined") {_RecordType("<117,119,4>",(id)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (value) != "undefined") {_RecordType("<121,126,4>",(value)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<128,136,4>",(receiver)); Inst7++; } } catch(e) {}
var a = new Proxy({}, {
  set(t, id, value, receiver) {
try { if (Inst8 <= 1000 && typeof (id) != "undefined") {_RecordType("<144,146,5>",(id)); Inst8++; } } catch(e) {}
    id;
    "prop";
try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<164,169,7>",(value)); Inst9++; } } catch(e) {}
    value;
    3;
try { if (Inst10 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<182,190,9>",(receiver)); Inst10++; } } catch(e) {}
    receiver;
try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<196,197,10>",(b)); Inst11++; } } catch(e) {}
    b;
try { if (Inst12 <= 1000 && typeof (hits) != "undefined") {_RecordType("<203,207,11>",(hits)); Inst12++; } } catch(e) {}
    hits++;
  }

});
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<88,89,3>",(a)); Inst1++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<232,237,15>",(Proxy)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<238,239,15>",(a)); Inst15++; } } catch(e) {}
var b = new Proxy(a, {});
try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<224,225,15>",(b)); Inst13++; } } catch(e) {}
hits = 0;
try { if (Inst16 <= 1000 && typeof (hits) != "undefined") {_RecordType("<246,250,16>",(hits)); Inst16++; } } catch(e) {}
b.prop = 3;
try { if (Inst17 <= 1000 && typeof (b.prop) != "undefined") {_RecordType("<256,262,17>",(b.prop)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<256,257,17>",(b)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (hits) != "undefined") {_RecordType("<268,272,18>",(hits)); Inst19++; } } catch(e) {}
hits;
1;

