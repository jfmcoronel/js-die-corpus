var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<13,22,1>",(newGlobal)); Inst1++; } } catch(e) {}
var global = newGlobal({
  newCompartment: true
});
try { if (Inst0 <= 1000 && typeof (global) != "undefined") {_RecordType("<4,10,1>",(global)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (global.eval) != "undefined") {_RecordType("<62,73,4>",(global.eval)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (global) != "undefined") {_RecordType("<62,68,4>",(global)); Inst4++; } } catch(e) {}
var fun = global.eval("(function() {})");
try { if (Inst2 <= 1000 && typeof (fun) != "undefined") {_RecordType("<56,59,4>",(fun)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<106,111,5>",(Proxy)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (fun) != "undefined") {_RecordType("<112,115,5>",(fun)); Inst7++; } } catch(e) {}
var p = new Proxy(fun, {}); // Nuking should preserve IsCallable and IsConstructor.
try { if (Inst5 <= 1000 && typeof (p) != "undefined") {_RecordType("<98,99,5>",(p)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (isConstructor) != "undefined") {_RecordType("<179,192,7>",(isConstructor)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p) != "undefined") {_RecordType("<193,194,7>",(p)); Inst9++; } } catch(e) {}
isConstructor(p);
true;
try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<210,211,9>",(p)); Inst10++; } } catch(e) {}
typeof p;
"function";
try { if (Inst11 <= 1000 && typeof (isConstructor) != "undefined") {_RecordType("<225,238,11>",(isConstructor)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<239,240,11>",(p)); Inst12++; } } catch(e) {}
isConstructor(p);
true;
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<256,257,13>",(p)); Inst13++; } } catch(e) {}
typeof p;
"function";

(() => {
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<283,284,17>",(p)); Inst14++; } } catch(e) {}
  p();
})();

try { if (Inst15 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<295,304,20>",(TypeError)); Inst15++; } } catch(e) {}
TypeError;

(() => {
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<322,323,23>",(p)); Inst16++; } } catch(e) {}
  new p();
})();

try { if (Inst17 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<334,343,26>",(TypeError)); Inst17++; } } catch(e) {}
TypeError;

