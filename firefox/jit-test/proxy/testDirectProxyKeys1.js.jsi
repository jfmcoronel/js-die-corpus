var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Forward to the target if the trap is not defined
try { if (Inst1 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<64,77,2>",(Object.create)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<64,70,2>",(Object)); Inst2++; } } catch(e) {}
var proto = Object.create(null, {
  a: {
    enumerable: true,
    configurable: true
  },
  b: {
    enumerable: false,
    configurable: true
  }
});
try { if (Inst0 <= 1000 && typeof (proto) != "undefined") {_RecordType("<56,61,2>",(proto)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<217,230,12>",(Object.create)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<217,223,12>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (proto) != "undefined") {_RecordType("<231,236,12>",(proto)); Inst6++; } } catch(e) {}
var target = Object.create(proto, {
  c: {
    enumerable: true,
    configurable: true
  },
  d: {
    enumerable: false,
    configurable: true
  }
});
try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<208,214,12>",(target)); Inst3++; } } catch(e) {}

for (let p of [new Proxy(target, {}), Proxy.revocable(target, {}).proxy]) {
try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<368,369,23>",(p)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<378,383,23>",(Proxy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (target) != "undefined") {_RecordType("<384,390,23>",(target)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Proxy.revocable(target, {}).proxy) != "undefined") {_RecordType("<397,430,23>",(Proxy.revocable(target, {}).proxy)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<397,412,23>",(Proxy.revocable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<397,402,23>",(Proxy)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (target) != "undefined") {_RecordType("<413,419,23>",(target)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<449,460,24>",(Object.keys)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<449,455,24>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<461,462,24>",(p)); Inst17++; } } catch(e) {}
  var names = Object.keys(p);
try { if (Inst14 <= 1000 && typeof (names) != "undefined") {_RecordType("<441,446,24>",(names)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (names.length) != "undefined") {_RecordType("<467,479,25>",(names.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (names) != "undefined") {_RecordType("<467,472,25>",(names)); Inst19++; } } catch(e) {}
  names.length;
  1;
try { if (Inst20 <= 1000 && typeof (names[0]) != "undefined") {_RecordType("<488,496,27>",(names[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (names) != "undefined") {_RecordType("<488,493,27>",(names)); Inst21++; } } catch(e) {}
  names[0];
  'c';
}

