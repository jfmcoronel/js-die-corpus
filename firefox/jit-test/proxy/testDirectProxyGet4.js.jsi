var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Throw a TypeError if the trap does not report undefined for a non-configurable
 * accessor property that does not have a getter
 */
var target = {};
try { if (Inst0 <= 1000 && typeof (target) != "undefined") {_RecordType("<142,148,5>",(target)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<155,176,6>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<155,161,6>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<177,183,6>",(target)); Inst3++; } } catch(e) {}
Object.defineProperty(target, 'foo', {
  set: function (value) {
try { if (Inst4 <= 1000 && typeof (value) != "undefined") {_RecordType("<211,216,7>",(value)); Inst4++; } } catch(e) {}
    ;
  },
  configurable: false
});
var handler = {
  get: function (target, name, receiver) {
try { if (Inst6 <= 1000 && typeof (target) != "undefined") {_RecordType("<290,296,13>",(target)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (name) != "undefined") {_RecordType("<298,302,13>",(name)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<304,312,13>",(receiver)); Inst8++; } } catch(e) {}
    return 'baz';
  }
};
try { if (Inst5 <= 1000 && typeof (handler) != "undefined") {_RecordType("<261,268,12>",(handler)); Inst5++; } } catch(e) {}

for (let p of [new Proxy(target, handler), Proxy.revocable(target, handler).proxy]) {
try { if (Inst9 <= 1000 && typeof (p) != "undefined") {_RecordType("<351,352,18>",(p)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<361,366,18>",(Proxy)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (target) != "undefined") {_RecordType("<367,373,18>",(target)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (handler) != "undefined") {_RecordType("<375,382,18>",(handler)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Proxy.revocable(target, handler).proxy) != "undefined") {_RecordType("<385,423,18>",(Proxy.revocable(target, handler).proxy)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<385,400,18>",(Proxy.revocable)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<385,390,18>",(Proxy)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<401,407,18>",(target)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (handler) != "undefined") {_RecordType("<409,416,18>",(handler)); Inst17++; } } catch(e) {}
  (function () {
try { if (Inst18 <= 1000 && typeof (p['foo']) != "undefined") {_RecordType("<449,457,20>",(p['foo'])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<449,450,20>",(p)); Inst19++; } } catch(e) {}
    p['foo'];
  })();

try { if (Inst20 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<470,479,23>",(TypeError)); Inst20++; } } catch(e) {}
  TypeError;
}

