var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test GETPROP_SUPER with megamorphic variation
const NCLASS = 20;
try { if (Inst0 <= 1000 && typeof (NCLASS) != "undefined") {_RecordType("<55,61,2>",(NCLASS)); Inst0++; } } catch(e) {}
var g_prop = "prop";
try { if (Inst1 <= 1000 && typeof (g_prop) != "undefined") {_RecordType("<72,78,3>",(g_prop)); Inst1++; } } catch(e) {}
var g_THIS = "THIS"; // Define array of base classes with a data property and a getter property.
try { if (Inst2 <= 1000 && typeof (g_THIS) != "undefined") {_RecordType("<93,99,4>",(g_THIS)); Inst2++; } } catch(e) {}

let C = [];
try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<191,192,6>",(C)); Inst3++; } } catch(e) {}

for (let i = 0; i < NCLASS; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,8>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<216,217,8>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (NCLASS) != "undefined") {_RecordType("<220,226,8>",(NCLASS)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<230,231,8>",(i)); Inst7++; } } catch(e) {}
  let klass = class {
    get THIS() {
      return this;
    }

  };
try { if (Inst8 <= 1000 && typeof (klass) != "undefined") {_RecordType("<241,246,9>",(klass)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<330,331,15>",(i)); Inst12++; } } catch(e) {}
  klass.prototype.prop = i;
try { if (Inst9 <= 1000 && typeof (klass.prototype.prop) != "undefined") {_RecordType("<307,327,15>",(klass.prototype.prop)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (klass.prototype) != "undefined") {_RecordType("<307,322,15>",(klass.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (klass) != "undefined") {_RecordType("<307,312,15>",(klass)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (C.push) != "undefined") {_RecordType("<335,341,16>",(C.push)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (C) != "undefined") {_RecordType("<335,336,16>",(C)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (klass) != "undefined") {_RecordType("<342,347,16>",(klass)); Inst15++; } } catch(e) {}
  C.push(klass);
} // Derive class using super property access


try { if (Inst21 <= 1000 && typeof (C[0]) != "undefined") {_RecordType("<414,418,20>",(C[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (C) != "undefined") {_RecordType("<414,415,20>",(C)); Inst22++; } } catch(e) {}
class D extends C[0] {
  get prop() {
try { if (Inst17 <= 1000 && typeof (super.prop) != "undefined") {_RecordType("<447,457,22>",(super.prop)); Inst17++; } } catch(e) {}
    return super.prop;
  }

  get elem() {
try { if (Inst18 <= 1000 && typeof (super[g_prop]) != "undefined") {_RecordType("<490,503,26>",(super[g_prop])); Inst18++; } } catch(e) {}
    return super[g_prop];
  }

  get prop_this() {
try { if (Inst19 <= 1000 && typeof (super.THIS) != "undefined") {_RecordType("<541,551,30>",(super.THIS)); Inst19++; } } catch(e) {}
    return super.THIS;
  }

  get elem_this() {
try { if (Inst20 <= 1000 && typeof (super[g_THIS]) != "undefined") {_RecordType("<589,602,34>",(super[g_THIS])); Inst20++; } } catch(e) {}
    return super[g_THIS];
  }

}
try { if (Inst16 <= 1000 && typeof (D) != "undefined") {_RecordType("<404,405,20>",(D)); Inst16++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (D) != "undefined") {_RecordType("<624,625,39>",(D)); Inst24++; } } catch(e) {}
let d = new D();
try { if (Inst23 <= 1000 && typeof (d) != "undefined") {_RecordType("<616,617,39>",(d)); Inst23++; } } catch(e) {}

for (var j = 0; j < 4; ++j) {
try { if (Inst25 <= 1000 && typeof (j) != "undefined") {_RecordType("<639,640,41>",(j)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (j) != "undefined") {_RecordType("<646,647,41>",(j)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<655,656,41>",(j)); Inst27++; } } catch(e) {}
  for (var i = 0; i < 15; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<671,672,42>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<678,679,42>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<688,689,42>",(i)); Inst30++; } } catch(e) {}
    // Change base class by overriding [[HomeObject]].[[Prototype]]
try { if (Inst31 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<765,786,44>",(Object.setPrototypeOf)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<765,771,44>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (D.prototype) != "undefined") {_RecordType("<787,798,44>",(D.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (D) != "undefined") {_RecordType("<787,788,44>",(D)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (C[j].prototype) != "undefined") {_RecordType("<800,814,44>",(C[j].prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (C[j]) != "undefined") {_RecordType("<800,804,44>",(C[j])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (C) != "undefined") {_RecordType("<800,801,44>",(C)); Inst37++; } } catch(e) {}
    Object.setPrototypeOf(D.prototype, C[j].prototype); // Check we get property of correct class

try { if (Inst38 <= 1000 && typeof (d.prop) != "undefined") {_RecordType("<864,870,46>",(d.prop)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (d) != "undefined") {_RecordType("<864,865,46>",(d)); Inst39++; } } catch(e) {}
    d.prop;
try { if (Inst40 <= 1000 && typeof (j) != "undefined") {_RecordType("<876,877,47>",(j)); Inst40++; } } catch(e) {}
    j;
try { if (Inst41 <= 1000 && typeof (d.elem) != "undefined") {_RecordType("<883,889,48>",(d.elem)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (d) != "undefined") {_RecordType("<883,884,48>",(d)); Inst42++; } } catch(e) {}
    d.elem;
try { if (Inst43 <= 1000 && typeof (j) != "undefined") {_RecordType("<895,896,49>",(j)); Inst43++; } } catch(e) {}
    j;
try { if (Inst44 <= 1000 && typeof (d.prop_this) != "undefined") {_RecordType("<902,913,50>",(d.prop_this)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (d) != "undefined") {_RecordType("<902,903,50>",(d)); Inst45++; } } catch(e) {}
    d.prop_this;
try { if (Inst46 <= 1000 && typeof (d) != "undefined") {_RecordType("<919,920,51>",(d)); Inst46++; } } catch(e) {}
    d;
try { if (Inst47 <= 1000 && typeof (d.elem_this) != "undefined") {_RecordType("<926,937,52>",(d.elem_this)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (d) != "undefined") {_RecordType("<926,927,52>",(d)); Inst48++; } } catch(e) {}
    d.elem_this;
try { if (Inst49 <= 1000 && typeof (d) != "undefined") {_RecordType("<943,944,53>",(d)); Inst49++; } } catch(e) {}
    d;
  }
}

