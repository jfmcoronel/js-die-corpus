var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class Base {
  set setter(val) {
try { if (Inst1 <= 1000 && typeof (val) != "undefined") {_RecordType("<26,29,2>",(val)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (val) != "undefined") {_RecordType("<52,55,3>",(val)); Inst3++; } } catch(e) {}
    this.set_val = val;
try { if (Inst2 <= 1000 && typeof (this.set_val) != "undefined") {_RecordType("<37,49,3>",(this.set_val)); Inst2++; } } catch(e) {}
    this.set_this = this;
try { if (Inst4 <= 1000 && typeof (this.set_this) != "undefined") {_RecordType("<61,74,4>",(this.set_this)); Inst4++; } } catch(e) {}
  }

}
try { if (Inst0 <= 1000 && typeof (Base) != "undefined") {_RecordType("<6,10,1>",(Base)); Inst0++; } } catch(e) {}

Base.prototype.prop = "Base";
try { if (Inst5 <= 1000 && typeof (Base.prototype.prop) != "undefined") {_RecordType("<91,110,9>",(Base.prototype.prop)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Base.prototype) != "undefined") {_RecordType("<91,105,9>",(Base.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Base) != "undefined") {_RecordType("<91,95,9>",(Base)); Inst7++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (Base) != "undefined") {_RecordType("<144,148,11>",(Base)); Inst16++; } } catch(e) {}
class Derived extends Base {
  set setter(val) {
try { if (Inst9 <= 1000 && typeof (val) != "undefined") {_RecordType("<164,167,12>",(val)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (val) != "undefined") {_RecordType("<190,193,13>",(val)); Inst11++; } } catch(e) {}
    super.setter = val;
try { if (Inst10 <= 1000 && typeof (super.setter) != "undefined") {_RecordType("<175,187,13>",(super.setter)); Inst10++; } } catch(e) {}
  }

  setelem(pname, val) {
try { if (Inst12 <= 1000 && typeof (pname) != "undefined") {_RecordType("<210,215,16>",(pname)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (val) != "undefined") {_RecordType("<217,220,16>",(val)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (val) != "undefined") {_RecordType("<243,246,17>",(val)); Inst15++; } } catch(e) {}
    super[pname] = val;
try { if (Inst14 <= 1000 && typeof (super[pname]) != "undefined") {_RecordType("<228,240,17>",(super[pname])); Inst14++; } } catch(e) {}
  }

} // Test SETPROP_SUPER invoke setters correctly
try { if (Inst8 <= 1000 && typeof (Derived) != "undefined") {_RecordType("<128,135,11>",(Derived)); Inst8++; } } catch(e) {}


try { if (Inst17 <= 1000 && typeof (testSetterChain) != "undefined") {_RecordType("<313,328,23>",(testSetterChain)); Inst17++; } } catch(e) {}
function testSetterChain() {
try { if (Inst19 <= 1000 && typeof (Derived) != "undefined") {_RecordType("<347,354,24>",(Derived)); Inst19++; } } catch(e) {}
  let d = new Derived();
try { if (Inst18 <= 1000 && typeof (d) != "undefined") {_RecordType("<339,340,24>",(d)); Inst18++; } } catch(e) {}

  for (let i = 0; i < 10; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<370,371,26>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<377,378,26>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<387,388,26>",(i)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,27>",(i)); Inst25++; } } catch(e) {}
    d.setter = i;
try { if (Inst23 <= 1000 && typeof (d.setter) != "undefined") {_RecordType("<396,404,27>",(d.setter)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<396,397,27>",(d)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (d.set_val) != "undefined") {_RecordType("<414,423,28>",(d.set_val)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (d) != "undefined") {_RecordType("<414,415,28>",(d)); Inst27++; } } catch(e) {}
    d.set_val;
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,29>",(i)); Inst28++; } } catch(e) {}
    i;
try { if (Inst29 <= 1000 && typeof (d.set_this) != "undefined") {_RecordType("<436,446,30>",(d.set_this)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d) != "undefined") {_RecordType("<436,437,30>",(d)); Inst30++; } } catch(e) {}
    d.set_this;
try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<452,453,31>",(d)); Inst31++; } } catch(e) {}
    d;
  }
}

try { if (Inst32 <= 1000 && typeof (testSetterChainElem) != "undefined") {_RecordType("<471,490,35>",(testSetterChainElem)); Inst32++; } } catch(e) {}
function testSetterChainElem() {
try { if (Inst34 <= 1000 && typeof (Derived) != "undefined") {_RecordType("<509,516,36>",(Derived)); Inst34++; } } catch(e) {}
  let d = new Derived();
try { if (Inst33 <= 1000 && typeof (d) != "undefined") {_RecordType("<501,502,36>",(d)); Inst33++; } } catch(e) {}

  for (let i = 0; i < 10; ++i) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<532,533,38>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<539,540,38>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<549,550,38>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (d.setelem) != "undefined") {_RecordType("<558,567,39>",(d.setelem)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (d) != "undefined") {_RecordType("<558,559,39>",(d)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<578,579,39>",(i)); Inst40++; } } catch(e) {}
    d.setelem("setter", i);
try { if (Inst41 <= 1000 && typeof (d.set_val) != "undefined") {_RecordType("<586,595,40>",(d.set_val)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (d) != "undefined") {_RecordType("<586,587,40>",(d)); Inst42++; } } catch(e) {}
    d.set_val;
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<601,602,41>",(i)); Inst43++; } } catch(e) {}
    i;
try { if (Inst44 <= 1000 && typeof (d.set_this) != "undefined") {_RecordType("<608,618,42>",(d.set_this)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (d) != "undefined") {_RecordType("<608,609,42>",(d)); Inst45++; } } catch(e) {}
    d.set_this;
try { if (Inst46 <= 1000 && typeof (d) != "undefined") {_RecordType("<624,625,43>",(d)); Inst46++; } } catch(e) {}
    d;
  }
} // Test that SETPROP_SUPER modifies |this| and not home object


try { if (Inst47 <= 1000 && typeof (testSuperSetProp) != "undefined") {_RecordType("<707,723,48>",(testSuperSetProp)); Inst47++; } } catch(e) {}
function testSuperSetProp() {
try { if (Inst49 <= 1000 && typeof (Derived) != "undefined") {_RecordType("<742,749,49>",(Derived)); Inst49++; } } catch(e) {}
  let d = new Derived();
try { if (Inst48 <= 1000 && typeof (d) != "undefined") {_RecordType("<734,735,49>",(d)); Inst48++; } } catch(e) {}

  for (let i = 0; i < 10; ++i) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<765,766,51>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<772,773,51>",(i)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<782,783,51>",(i)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<800,801,52>",(i)); Inst55++; } } catch(e) {}
    d.prop = i;
try { if (Inst53 <= 1000 && typeof (d.prop) != "undefined") {_RecordType("<791,797,52>",(d.prop)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (d) != "undefined") {_RecordType("<791,792,52>",(d)); Inst54++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (d.prop) != "undefined") {_RecordType("<807,813,53>",(d.prop)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (d) != "undefined") {_RecordType("<807,808,53>",(d)); Inst57++; } } catch(e) {}
    d.prop;
try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<819,820,54>",(i)); Inst58++; } } catch(e) {}
    i;
try { if (Inst59 <= 1000 && typeof (d.hasOwnProperty) != "undefined") {_RecordType("<826,842,55>",(d.hasOwnProperty)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (d) != "undefined") {_RecordType("<826,827,55>",(d)); Inst60++; } } catch(e) {}
    d.hasOwnProperty("prop");
    true;
try { if (Inst61 <= 1000 && typeof (Derived.prototype.prop) != "undefined") {_RecordType("<866,888,57>",(Derived.prototype.prop)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Derived.prototype) != "undefined") {_RecordType("<866,883,57>",(Derived.prototype)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Derived) != "undefined") {_RecordType("<866,873,57>",(Derived)); Inst63++; } } catch(e) {}
    Derived.prototype.prop;
    "Base";
  }
}

try { if (Inst64 <= 1000 && typeof (testSuperSetPropElem) != "undefined") {_RecordType("<918,938,62>",(testSuperSetPropElem)); Inst64++; } } catch(e) {}
function testSuperSetPropElem() {
try { if (Inst66 <= 1000 && typeof (Derived) != "undefined") {_RecordType("<957,964,63>",(Derived)); Inst66++; } } catch(e) {}
  let d = new Derived();
try { if (Inst65 <= 1000 && typeof (d) != "undefined") {_RecordType("<949,950,63>",(d)); Inst65++; } } catch(e) {}

  for (let i = 0; i < 10; ++i) {
try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<980,981,65>",(i)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<987,988,65>",(i)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<997,998,65>",(i)); Inst69++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (d.setelem) != "undefined") {_RecordType("<1006,1015,66>",(d.setelem)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (d) != "undefined") {_RecordType("<1006,1007,66>",(d)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<1024,1025,66>",(i)); Inst72++; } } catch(e) {}
    d.setelem("prop", i);
try { if (Inst73 <= 1000 && typeof (d.prop) != "undefined") {_RecordType("<1032,1038,67>",(d.prop)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (d) != "undefined") {_RecordType("<1032,1033,67>",(d)); Inst74++; } } catch(e) {}
    d.prop;
try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1044,1045,68>",(i)); Inst75++; } } catch(e) {}
    i;
try { if (Inst76 <= 1000 && typeof (d.hasOwnProperty) != "undefined") {_RecordType("<1051,1067,69>",(d.hasOwnProperty)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (d) != "undefined") {_RecordType("<1051,1052,69>",(d)); Inst77++; } } catch(e) {}
    d.hasOwnProperty("prop");
    true;
try { if (Inst78 <= 1000 && typeof (Derived.prototype.prop) != "undefined") {_RecordType("<1091,1113,71>",(Derived.prototype.prop)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Derived.prototype) != "undefined") {_RecordType("<1091,1108,71>",(Derived.prototype)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Derived) != "undefined") {_RecordType("<1091,1098,71>",(Derived)); Inst80++; } } catch(e) {}
    Derived.prototype.prop;
    "Base";
  }
}

try { if (Inst81 <= 1000 && typeof (testSetterChain) != "undefined") {_RecordType("<1134,1149,76>",(testSetterChain)); Inst81++; } } catch(e) {}
testSetterChain();
try { if (Inst82 <= 1000 && typeof (testSetterChainElem) != "undefined") {_RecordType("<1153,1172,77>",(testSetterChainElem)); Inst82++; } } catch(e) {}
testSetterChainElem();
try { if (Inst83 <= 1000 && typeof (testSuperSetProp) != "undefined") {_RecordType("<1176,1192,78>",(testSuperSetProp)); Inst83++; } } catch(e) {}
testSuperSetProp();
try { if (Inst84 <= 1000 && typeof (testSuperSetPropElem) != "undefined") {_RecordType("<1196,1216,79>",(testSuperSetPropElem)); Inst84++; } } catch(e) {}
testSuperSetPropElem();

