var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Try to test that we handle shape regeneration correctly.
// This is a fragile test, but as of this writing, on dmandelin's
// windows box, we have the same shape number with different
// logical shapes in the two assertEq lines.
var o;
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<236,237,5>",(o)); Inst0++; } } catch(e) {}
var p;
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<243,244,6>",(p)); Inst1++; } } catch(e) {}
var zz;
try { if (Inst2 <= 1000 && typeof (zz) != "undefined") {_RecordType("<250,252,7>",(zz)); Inst2++; } } catch(e) {}
var o2;
try { if (Inst3 <= 1000 && typeof (o2) != "undefined") {_RecordType("<258,260,8>",(o2)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<272,273,10>",(f)); Inst4++; } } catch(e) {}
function f(x) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<274,275,10>",(x)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x.a) != "undefined") {_RecordType("<288,291,11>",(x.a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<288,289,11>",(x)); Inst7++; } } catch(e) {}
  return x.a;
}

try { if (Inst8 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<296,302,14>",(gczeal)); Inst8++; } } catch(e) {}
gczeal(1);
try { if (Inst9 <= 1000 && typeof (gc) != "undefined") {_RecordType("<307,309,15>",(gc)); Inst9++; } } catch(e) {}
gc();
zz = {
  q: 11
};
try { if (Inst10 <= 1000 && typeof (zz) != "undefined") {_RecordType("<313,315,16>",(zz)); Inst10++; } } catch(e) {}
o = {
  a: 77,
  b: 88
};
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<331,332,19>",(o)); Inst11++; } } catch(e) {}
o2 = {
  c: 11
};
try { if (Inst12 <= 1000 && typeof (o2) != "undefined") {_RecordType("<357,359,23>",(o2)); Inst12++; } } catch(e) {}
p = {
  b: 99,
  a: 11
}; //print('s ' + shapeOf(zz) + ' ' + shapeOf(o) + ' ' + shapeOf(o2) + ' ' + shapeOf(p));
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<375,376,26>",(p)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<489,490,31>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<491,492,31>",(o)); Inst15++; } } catch(e) {}
f(o);
77;
try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<503,512,33>",(undefined)); Inst17++; } } catch(e) {}
o = undefined;
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<499,500,33>",(o)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<514,520,34>",(gczeal)); Inst18++; } } catch(e) {}
gczeal(1);
try { if (Inst19 <= 1000 && typeof (gc) != "undefined") {_RecordType("<525,527,35>",(gc)); Inst19++; } } catch(e) {}
gc(); //print('s ' + 'x' + ' ' + shapeOf(p));

try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<572,573,37>",(f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<574,575,37>",(p)); Inst21++; } } catch(e) {}
f(p);
11;

