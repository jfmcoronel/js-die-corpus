var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// test getthisprop
var expected = "22,22,22,;33,33,33,;";
try { if (Inst0 <= 1000 && typeof (expected) != "undefined") {_RecordType("<24,32,2>",(expected)); Inst0++; } } catch(e) {}
var actual = '';
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<63,69,3>",(actual)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<86,87,5>",(f)); Inst2++; } } catch(e) {}
function f() {
  for (var i = 0; i < 3; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<103,104,6>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<110,111,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<119,120,6>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<138,144,7>",(this.b)); Inst7++; } } catch(e) {}
    actual += this.b + ',';
try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<128,134,7>",(actual)); Inst6++; } } catch(e) {}
  }

  actual += ';';
try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<159,165,10>",(actual)); Inst8++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (A) != "undefined") {_RecordType("<186,187,13>",(A)); Inst9++; } } catch(e) {}
function A() {
  this.a = 11;
try { if (Inst10 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<194,200,14>",(this.a)); Inst10++; } } catch(e) {}
  this.b = 22;
try { if (Inst11 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<209,215,15>",(this.b)); Inst11++; } } catch(e) {}
}

;
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<243,244,19>",(f)); Inst15++; } } catch(e) {}
A.prototype.f = f;
try { if (Inst12 <= 1000 && typeof (A.prototype.f) != "undefined") {_RecordType("<227,240,19>",(A.prototype.f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (A.prototype) != "undefined") {_RecordType("<227,238,19>",(A.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (A) != "undefined") {_RecordType("<227,228,19>",(A)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (B) != "undefined") {_RecordType("<256,257,21>",(B)); Inst16++; } } catch(e) {}
function B() {
  this.b = 33;
try { if (Inst17 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<264,270,22>",(this.b)); Inst17++; } } catch(e) {}
  this.c = 44;
try { if (Inst18 <= 1000 && typeof (this.c) != "undefined") {_RecordType("<279,285,23>",(this.c)); Inst18++; } } catch(e) {}
}

;
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<313,314,27>",(f)); Inst22++; } } catch(e) {}
B.prototype.f = f;
try { if (Inst19 <= 1000 && typeof (B.prototype.f) != "undefined") {_RecordType("<297,310,27>",(B.prototype.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<297,308,27>",(B.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (B) != "undefined") {_RecordType("<297,298,27>",(B)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (new A().f) != "undefined") {_RecordType("<316,325,28>",(new A().f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (A) != "undefined") {_RecordType("<320,321,28>",(A)); Inst24++; } } catch(e) {}
new A().f();
try { if (Inst25 <= 1000 && typeof (new B().f) != "undefined") {_RecordType("<329,338,29>",(new B().f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (B) != "undefined") {_RecordType("<333,334,29>",(B)); Inst26++; } } catch(e) {}
new B().f();
try { if (Inst27 <= 1000 && typeof (actual) != "undefined") {_RecordType("<342,348,30>",(actual)); Inst27++; } } catch(e) {}
actual;
try { if (Inst28 <= 1000 && typeof (expected) != "undefined") {_RecordType("<350,358,31>",(expected)); Inst28++; } } catch(e) {}
expected;

