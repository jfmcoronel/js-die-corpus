var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// getprop, self, 8 shapes
var expected = "0,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7,";
try { if (Inst0 <= 1000 && typeof (expected) != "undefined") {_RecordType("<31,39,2>",(expected)); Inst0++; } } catch(e) {}
var actual = '';
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<98,104,3>",(actual)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (letter) != "undefined") {_RecordType("<121,127,5>",(letter)); Inst2++; } } catch(e) {}
function letter(i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<128,129,5>",(i)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<142,161,6>",(String.fromCharCode)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (String) != "undefined") {_RecordType("<142,148,6>",(String)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<167,168,6>",(i)); Inst6++; } } catch(e) {}
  return String.fromCharCode(97 + i);
}

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<183,184,9>",(f)); Inst7++; } } catch(e) {}
function f() {
  // Build 8 objects with different shapes and x in different slots.
  var oa = [];
try { if (Inst8 <= 1000 && typeof (oa) != "undefined") {_RecordType("<264,266,11>",(oa)); Inst8++; } } catch(e) {}

  for (var i = 0; i < 8; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,13>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<292,293,13>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<301,302,13>",(i)); Inst11++; } } catch(e) {}
    var o = {};
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<314,315,14>",(o)); Inst12++; } } catch(e) {}

    for (var j = 0; j < 8; ++j) {
try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<336,337,16>",(j)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<343,344,16>",(j)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<352,353,16>",(j)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<367,368,17>",(j)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<372,373,17>",(i)); Inst17++; } } catch(e) {}
      if (j != i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,18>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (j) != "undefined") {_RecordType("<416,417,18>",(j)); Inst23++; } } catch(e) {}
        o[letter(j)] = 1000 + i * 10 + j;
try { if (Inst18 <= 1000 && typeof (o[letter(j)]) != "undefined") {_RecordType("<385,397,18>",(o[letter(j)])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<385,386,18>",(o)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (letter) != "undefined") {_RecordType("<387,393,18>",(letter)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<394,395,18>",(j)); Inst21++; } } catch(e) {}
      } else {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,20>",(i)); Inst26++; } } catch(e) {}
        o.x = i;
try { if (Inst24 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<442,445,20>",(o.x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<442,443,20>",(o)); Inst25++; } } catch(e) {}
      }
    }

try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<478,479,24>",(o)); Inst29++; } } catch(e) {}
    oa[i] = o;
try { if (Inst27 <= 1000 && typeof (oa[i]) != "undefined") {_RecordType("<470,475,24>",(oa[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (oa) != "undefined") {_RecordType("<470,472,24>",(oa)); Inst28++; } } catch(e) {}
  }

  for (var i = 0; i < 24; ++i) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<497,498,27>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<504,505,27>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<514,515,27>",(i)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (oa[i % 8].x) != "undefined") {_RecordType("<533,544,28>",(oa[i % 8].x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (oa[i % 8]) != "undefined") {_RecordType("<533,542,28>",(oa[i % 8])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (oa) != "undefined") {_RecordType("<533,535,28>",(oa)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<536,537,28>",(i)); Inst37++; } } catch(e) {}
    actual += oa[i % 8].x + ',';
try { if (Inst33 <= 1000 && typeof (actual) != "undefined") {_RecordType("<523,529,28>",(actual)); Inst33++; } } catch(e) {}
  }
}

try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<559,560,32>",(f)); Inst38++; } } catch(e) {}
f();
try { if (Inst39 <= 1000 && typeof (actual) != "undefined") {_RecordType("<564,570,33>",(actual)); Inst39++; } } catch(e) {}
actual;
try { if (Inst40 <= 1000 && typeof (expected) != "undefined") {_RecordType("<572,580,34>",(expected)); Inst40++; } } catch(e) {}
expected;

