var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// length, various types
var expected = "4,5,44,5,44,4,44,4,5,4,5,44,5,44,4,44,4,5,";
try { if (Inst0 <= 1000 && typeof (expected) != "undefined") {_RecordType("<29,37,2>",(expected)); Inst0++; } } catch(e) {}
var actual = '';
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<90,96,3>",(actual)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<113,114,5>",(f)); Inst2++; } } catch(e) {}
function f() {
  var a = ["abcd", [1, 2, 3, 4, 5], {
    length: 44
  }];
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<125,126,6>",(a)); Inst3++; } } catch(e) {}

  for (var i = 0; i < 6; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,10>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,10>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<206,207,10>",(i)); Inst6++; } } catch(e) {}
    // Use 3 PICs so we start out with each type in one PIC.
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,12>",(i)); Inst8++; } } catch(e) {}
    var i1 = i % 3;
try { if (Inst7 <= 1000 && typeof (i1) != "undefined") {_RecordType("<280,282,12>",(i1)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,13>",(i)); Inst10++; } } catch(e) {}
    var i2 = (i + 1) % 3;
try { if (Inst9 <= 1000 && typeof (i2) != "undefined") {_RecordType("<300,302,13>",(i2)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<332,333,14>",(i)); Inst12++; } } catch(e) {}
    var i3 = (i + 2) % 3;
try { if (Inst11 <= 1000 && typeof (i3) != "undefined") {_RecordType("<326,328,14>",(i3)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a[i1].length) != "undefined") {_RecordType("<358,370,15>",(a[i1].length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a[i1]) != "undefined") {_RecordType("<358,363,15>",(a[i1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<358,359,15>",(a)); Inst16++; } } catch(e) {}
    actual += a[i1].length + ',';
try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<348,354,15>",(actual)); Inst13++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a[i2].length) != "undefined") {_RecordType("<392,404,16>",(a[i2].length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a[i2]) != "undefined") {_RecordType("<392,397,16>",(a[i2])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<392,393,16>",(a)); Inst20++; } } catch(e) {}
    actual += a[i2].length + ',';
try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<382,388,16>",(actual)); Inst17++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a[i3].length) != "undefined") {_RecordType("<426,438,17>",(a[i3].length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a[i3]) != "undefined") {_RecordType("<426,431,17>",(a[i3])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<426,427,17>",(a)); Inst24++; } } catch(e) {}
    actual += a[i3].length + ',';
try { if (Inst21 <= 1000 && typeof (actual) != "undefined") {_RecordType("<416,422,17>",(actual)); Inst21++; } } catch(e) {}
  }
}

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<453,454,21>",(f)); Inst25++; } } catch(e) {}
f();
try { if (Inst26 <= 1000 && typeof (actual) != "undefined") {_RecordType("<458,464,22>",(actual)); Inst26++; } } catch(e) {}
actual;
try { if (Inst27 <= 1000 && typeof (expected) != "undefined") {_RecordType("<466,474,23>",(expected)); Inst27++; } } catch(e) {}
expected;

