var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// getprop, proto, 1 shape
var expected = "11,22,33,11,22,33,11,22,33,11,22,33,11,22,33,";
try { if (Inst0 <= 1000 && typeof (expected) != "undefined") {_RecordType("<31,39,2>",(expected)); Inst0++; } } catch(e) {}
var actual = '';
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<95,101,3>",(actual)); Inst1++; } } catch(e) {}
var proto = {
  a: 11,
  b: 22,
  c: 33
};
try { if (Inst2 <= 1000 && typeof (proto) != "undefined") {_RecordType("<112,117,4>",(proto)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (B) != "undefined") {_RecordType("<161,162,10>",(B)); Inst3++; } } catch(e) {}
function B() {
  ;
}

try { if (Inst6 <= 1000 && typeof (proto) != "undefined") {_RecordType("<188,193,14>",(proto)); Inst6++; } } catch(e) {}
B.prototype = proto;
try { if (Inst4 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<174,185,14>",(B.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (B) != "undefined") {_RecordType("<174,175,14>",(B)); Inst5++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<205,206,16>",(f)); Inst7++; } } catch(e) {}
function f() {
try { if (Inst9 <= 1000 && typeof (B) != "undefined") {_RecordType("<225,226,17>",(B)); Inst9++; } } catch(e) {}
  var o = new B();
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<217,218,17>",(o)); Inst8++; } } catch(e) {}

  for (var i = 0; i < 5; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<242,243,19>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<249,250,19>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<258,259,19>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (o.a) != "undefined") {_RecordType("<277,280,20>",(o.a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<277,278,20>",(o)); Inst15++; } } catch(e) {}
    actual += o.a + ',';
try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<267,273,20>",(actual)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (o.b) != "undefined") {_RecordType("<302,305,21>",(o.b)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<302,303,21>",(o)); Inst18++; } } catch(e) {}
    actual += o.b + ',';
try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<292,298,21>",(actual)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (o.c) != "undefined") {_RecordType("<327,330,22>",(o.c)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<327,328,22>",(o)); Inst21++; } } catch(e) {}
    actual += o.c + ',';
try { if (Inst19 <= 1000 && typeof (actual) != "undefined") {_RecordType("<317,323,22>",(actual)); Inst19++; } } catch(e) {}
  }
}

try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<345,346,26>",(f)); Inst22++; } } catch(e) {}
f();
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<350,356,27>",(actual)); Inst23++; } } catch(e) {}
actual;
try { if (Inst24 <= 1000 && typeof (expected) != "undefined") {_RecordType("<358,366,28>",(expected)); Inst24++; } } catch(e) {}
expected;

