var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// break in finally.
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<31,33,2>",(f1)); Inst0++; } } catch(e) {}
function* f1() {
try { if (Inst1 <= 1000 && typeof (L) != "undefined") {_RecordType("<40,41,3>",(L)); Inst1++; } } catch(e) {}
  L: try {
    yield 1;
  } finally {
try { if (Inst2 <= 1000 && typeof (L) != "undefined") {_RecordType("<86,87,6>",(L)); Inst2++; } } catch(e) {}
    break L;
  }

  return 2;
}

try { if (Inst4 <= 1000 && typeof (f1) != "undefined") {_RecordType("<114,116,12>",(f1)); Inst4++; } } catch(e) {}
it = f1();
try { if (Inst3 <= 1000 && typeof (it) != "undefined") {_RecordType("<109,111,12>",(it)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (it) != "undefined") {_RecordType("<120,122,13>",(it)); Inst5++; } } catch(e) {}
it;
1;
try { if (Inst6 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<127,136,15>",(it.return)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (it) != "undefined") {_RecordType("<127,129,15>",(it)); Inst7++; } } catch(e) {}
it.return(4);
2;
true;
try { if (Inst8 <= 1000 && typeof (it) != "undefined") {_RecordType("<150,152,18>",(it)); Inst8++; } } catch(e) {}
it;

// continue in finally, followed by return.
try { if (Inst9 <= 1000 && typeof (f2) != "undefined") {_RecordType("<209,211,21>",(f2)); Inst9++; } } catch(e) {}
function* f2() {
  do {
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<261,262,25>",(e)); Inst10++; } } catch(e) {}
    try {
      yield 1;
    } catch (e) {
      0;
      1;
    } finally {
      continue;
    }
  } while (0);

  return 2;
}

try { if (Inst12 <= 1000 && typeof (f2) != "undefined") {_RecordType("<358,360,36>",(f2)); Inst12++; } } catch(e) {}
it = f2();
try { if (Inst11 <= 1000 && typeof (it) != "undefined") {_RecordType("<353,355,36>",(it)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (it) != "undefined") {_RecordType("<364,366,37>",(it)); Inst13++; } } catch(e) {}
it;
1;
try { if (Inst14 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<371,380,39>",(it.return)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (it) != "undefined") {_RecordType("<371,373,39>",(it)); Inst15++; } } catch(e) {}
it.return(4);
2;
true;
try { if (Inst16 <= 1000 && typeof (it) != "undefined") {_RecordType("<394,396,42>",(it)); Inst16++; } } catch(e) {}
it;

// continue in finally, followed by yield.
try { if (Inst17 <= 1000 && typeof (f3) != "undefined") {_RecordType("<452,454,45>",(f3)); Inst17++; } } catch(e) {}
function* f3() {
  do {
try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<504,505,49>",(e)); Inst18++; } } catch(e) {}
    try {
      yield 1;
    } catch (e) {
      0;
      1;
    } finally {
      continue;
    }
  } while (0);

  yield 2;
}

try { if (Inst20 <= 1000 && typeof (f3) != "undefined") {_RecordType("<600,602,60>",(f3)); Inst20++; } } catch(e) {}
it = f3();
try { if (Inst19 <= 1000 && typeof (it) != "undefined") {_RecordType("<595,597,60>",(it)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (it) != "undefined") {_RecordType("<606,608,61>",(it)); Inst21++; } } catch(e) {}
it;
1;
try { if (Inst22 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<613,622,63>",(it.return)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (it) != "undefined") {_RecordType("<613,615,63>",(it)); Inst23++; } } catch(e) {}
it.return(4);
2;
false;
try { if (Inst24 <= 1000 && typeof (it) != "undefined") {_RecordType("<637,639,66>",(it)); Inst24++; } } catch(e) {}
it;

// continue in finally.
try { if (Inst25 <= 1000 && typeof (f4) != "undefined") {_RecordType("<676,678,69>",(f4)); Inst25++; } } catch(e) {}
function* f4() {
  var i = 0;
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<689,690,70>",(i)); Inst26++; } } catch(e) {}

  while (true) {
    try {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<736,737,74>",(i)); Inst27++; } } catch(e) {}
      yield i++;
    } finally {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<767,768,76>",(i)); Inst28++; } } catch(e) {}
      if (i < 3) {
        continue;
      }
    }
  }
}

try { if (Inst30 <= 1000 && typeof (f4) != "undefined") {_RecordType("<820,822,83>",(f4)); Inst30++; } } catch(e) {}
it = f4();
try { if (Inst29 <= 1000 && typeof (it) != "undefined") {_RecordType("<815,817,83>",(it)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (it) != "undefined") {_RecordType("<826,828,84>",(it)); Inst31++; } } catch(e) {}
it;
0;
try { if (Inst32 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<833,842,86>",(it.return)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (it) != "undefined") {_RecordType("<833,835,86>",(it)); Inst33++; } } catch(e) {}
it.return(-1);
1;
false;
try { if (Inst34 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<858,867,89>",(it.return)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (it) != "undefined") {_RecordType("<858,860,89>",(it)); Inst35++; } } catch(e) {}
it.return(-2);
2;
false;
try { if (Inst36 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<883,892,92>",(it.return)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (it) != "undefined") {_RecordType("<883,885,92>",(it)); Inst37++; } } catch(e) {}
it.return(-3);
-3;
true;
try { if (Inst38 <= 1000 && typeof (it) != "undefined") {_RecordType("<908,910,95>",(it)); Inst38++; } } catch(e) {}
it;

