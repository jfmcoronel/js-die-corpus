var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// OSR into a |finally| block while closing a legacy generator should work.
var log = "";
try { if (Inst0 <= 1000 && typeof (log) != "undefined") {_RecordType("<80,83,2>",(log)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<101,102,4>",(f)); Inst1++; } } catch(e) {}
function* f() {
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<325,326,21>",(e)); Inst9++; } } catch(e) {}
  try {
    try {
      log += "a";
try { if (Inst2 <= 1000 && typeof (log) != "undefined") {_RecordType("<131,134,7>",(log)); Inst2++; } } catch(e) {}
      yield 2;
      log += "b";
try { if (Inst3 <= 1000 && typeof (log) != "undefined") {_RecordType("<164,167,9>",(log)); Inst3++; } } catch(e) {}
      yield 3;
    } finally {
      log += "c";
try { if (Inst4 <= 1000 && typeof (log) != "undefined") {_RecordType("<213,216,12>",(log)); Inst4++; } } catch(e) {}

      for (var i = 0; i < 20; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<241,242,14>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<248,249,14>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<256,257,14>",(i)); Inst7++; } } catch(e) {}
        ;
      }

      ;
      log += "d";
try { if (Inst8 <= 1000 && typeof (log) != "undefined") {_RecordType("<296,299,19>",(log)); Inst8++; } } catch(e) {}
    }
  } catch (e) {
    log += "e";
try { if (Inst10 <= 1000 && typeof (log) != "undefined") {_RecordType("<334,337,22>",(log)); Inst10++; } } catch(e) {}
  }

  log += "f";
try { if (Inst11 <= 1000 && typeof (log) != "undefined") {_RecordType("<353,356,25>",(log)); Inst11++; } } catch(e) {}
}

try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<377,378,28>",(f)); Inst13++; } } catch(e) {}
var it = f();
try { if (Inst12 <= 1000 && typeof (it) != "undefined") {_RecordType("<372,374,28>",(it)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<382,397,29>",(it.next().value)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<382,389,29>",(it.next)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (it) != "undefined") {_RecordType("<382,384,29>",(it)); Inst16++; } } catch(e) {}
it.next().value;
2;
try { if (Inst17 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<402,411,31>",(it.return)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (it) != "undefined") {_RecordType("<402,404,31>",(it)); Inst18++; } } catch(e) {}
it.return();
try { if (Inst19 <= 1000 && typeof (log) != "undefined") {_RecordType("<415,418,32>",(log)); Inst19++; } } catch(e) {}
log;
"acd";

