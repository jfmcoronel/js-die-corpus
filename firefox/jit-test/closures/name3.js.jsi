var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = '0,1,2,3,4,';
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (loop) != "undefined") {_RecordType("<48,52,4>",(loop)); Inst2++; } } catch(e) {}
function loop(f) {
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<53,54,4>",(f)); Inst3++; } } catch(e) {}
  var p;
try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<64,65,5>",(p)); Inst4++; } } catch(e) {}

  for (var i = 0; i < 10; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<79,80,7>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<86,87,7>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<96,97,7>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<109,110,8>",(f)); Inst9++; } } catch(e) {}
    p = f();
try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<105,106,8>",(p)); Inst8++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<128,129,11>",(p)); Inst10++; } } catch(e) {}
  return p;
}

try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<143,144,14>",(f)); Inst11++; } } catch(e) {}
function f(j, k) {
try { if (Inst12 <= 1000 && typeof (j) != "undefined") {_RecordType("<145,146,14>",(j)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (k) != "undefined") {_RecordType("<148,149,14>",(k)); Inst13++; } } catch(e) {}
  var g = function () {
try { if (Inst15 <= 1000 && typeof (k) != "undefined") {_RecordType("<188,189,16>",(k)); Inst15++; } } catch(e) {}
    return k;
  };
try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<159,160,15>",(g)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (j) != "undefined") {_RecordType("<203,204,19>",(j)); Inst17++; } } catch(e) {}
  k = j;
try { if (Inst16 <= 1000 && typeof (k) != "undefined") {_RecordType("<199,200,19>",(k)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<208,222,20>",(appendToActual)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (loop) != "undefined") {_RecordType("<223,227,20>",(loop)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<228,229,20>",(g)); Inst20++; } } catch(e) {}
  appendToActual(loop(g));
}

for (var i = 0; i < 5; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,23>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<252,253,23>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<261,262,23>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<268,269,24>",(f)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,24>",(i)); Inst25++; } } catch(e) {}
  f(i);
}

try { if (Inst26 <= 1000 && typeof (actual) != "undefined") {_RecordType("<277,283,27>",(actual)); Inst26++; } } catch(e) {}
actual;
try { if (Inst27 <= 1000 && typeof (expected) != "undefined") {_RecordType("<285,293,28>",(expected)); Inst27++; } } catch(e) {}
expected;

