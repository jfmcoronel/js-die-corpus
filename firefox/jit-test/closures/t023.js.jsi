var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = '0,1,2,0,1,2,';
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

for (var a = 0; a < 2; ++a) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<50,51,4>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<57,58,4>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<66,67,4>",(a)); Inst4++; } } catch(e) {}
  for (var b = 0; b < 3; ++b) {
try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<82,83,5>",(b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<89,90,5>",(b)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<98,99,5>",(b)); Inst7++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<240,241,12>",(b)); Inst14++; } } catch(e) {}
    (function (x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<118,119,6>",(x)); Inst8++; } } catch(e) {}
      (function () {
        for (var c = 0; c < 1; ++c) {
try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<161,162,8>",(c)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<168,169,8>",(c)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<177,178,8>",(c)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<192,206,9>",(appendToActual)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<207,208,9>",(x)); Inst13++; } } catch(e) {}
          appendToActual(x);
        }
      })();
    })(b);
  }
}

try { if (Inst15 <= 1000 && typeof (actual) != "undefined") {_RecordType("<251,257,16>",(actual)); Inst15++; } } catch(e) {}
actual;
try { if (Inst16 <= 1000 && typeof (expected) != "undefined") {_RecordType("<259,267,17>",(expected)); Inst16++; } } catch(e) {}
expected;

