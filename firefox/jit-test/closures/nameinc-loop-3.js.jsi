var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = 'g 1 0,g 2 -1,g 3 -2,g 4 -3,g 5 -4,h 5 -5,f 5,undefined,g 1 0,g 2 -1,g 3 -2,g 4 -3,g 5 -4,h 5 -5,f 5,undefined,g 1 0,g 2 -1,g 3 -2,g 4 -3,g 5 -4,h 5 -5,f 5,undefined,g 1 0,g 2 -1,g 3 -2,g 4 -3,g 5 -4,h 5 -5,f 5,undefined,g 1 0,g 2 -1,g 3 -2,g 4 -3,g 5 -4,h 5 -5,f 5,undefined,';
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

var f = function () {
  var p = 0;
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<332,333,5>",(p)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (h) != "undefined") {_RecordType("<351,352,7>",(h)); Inst4++; } } catch(e) {}
  function h() {
    var q = 0;
try { if (Inst5 <= 1000 && typeof (q) != "undefined") {_RecordType("<365,366,8>",(q)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<386,387,10>",(g)); Inst6++; } } catch(e) {}
    function g() {
      for (var i = 0; i < 5; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,11>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,11>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,11>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<436,437,12>",(p)); Inst10++; } } catch(e) {}
        p++;
try { if (Inst11 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<449,463,13>",(appendToActual)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<471,472,13>",(p)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (q) != "undefined") {_RecordType("<481,482,13>",(q)); Inst13++; } } catch(e) {}
        appendToActual('g ' + p + ' ' + q);
try { if (Inst14 <= 1000 && typeof (q) != "undefined") {_RecordType("<493,494,14>",(q)); Inst14++; } } catch(e) {}
        q--;
      }
    }

try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<517,518,18>",(g)); Inst15++; } } catch(e) {}
    g();
try { if (Inst16 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<526,540,19>",(appendToActual)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<548,549,19>",(p)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (q) != "undefined") {_RecordType("<558,559,19>",(q)); Inst18++; } } catch(e) {}
    appendToActual('h ' + p + ' ' + q);
  }

try { if (Inst19 <= 1000 && typeof (h) != "undefined") {_RecordType("<569,570,22>",(h)); Inst19++; } } catch(e) {}
  h();
try { if (Inst20 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<576,590,23>",(appendToActual)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<598,599,23>",(p)); Inst21++; } } catch(e) {}
  appendToActual('f ' + p);
};
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<308,309,4>",(f)); Inst2++; } } catch(e) {}

for (var i = 0; i < 5; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<615,616,26>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<622,623,26>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<631,632,26>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<638,639,27>",(f)); Inst25++; } } catch(e) {}
  f();
try { if (Inst26 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<645,659,28>",(appendToActual)); Inst26++; } } catch(e) {}
  appendToActual();
}

try { if (Inst27 <= 1000 && typeof (actual) != "undefined") {_RecordType("<666,672,31>",(actual)); Inst27++; } } catch(e) {}
actual;
try { if (Inst28 <= 1000 && typeof (expected) != "undefined") {_RecordType("<674,682,32>",(expected)); Inst28++; } } catch(e) {}
expected;

