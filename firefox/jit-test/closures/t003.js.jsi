var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = '54,54,54,';
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (k) != "undefined") {_RecordType("<47,48,4>",(k)); Inst2++; } } catch(e) {}
function k(a, b, f_arg, c) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<49,50,4>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<52,53,4>",(b)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f_arg) != "undefined") {_RecordType("<55,60,4>",(f_arg)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<62,63,4>",(c)); Inst6++; } } catch(e) {}
  for (var i = 0; i < 5; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<78,79,5>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<85,86,5>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<94,95,5>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (f_arg) != "undefined") {_RecordType("<103,108,6>",(f_arg)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<109,110,6>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<113,114,6>",(a)); Inst12++; } } catch(e) {}
    f_arg(i + a);
  }
}

try { if (Inst13 <= 1000 && typeof (t) != "undefined") {_RecordType("<133,134,10>",(t)); Inst13++; } } catch(e) {}
function t(a, b) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<135,136,10>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<138,139,10>",(b)); Inst15++; } } catch(e) {}
  var x = 1;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<149,150,11>",(x)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (k) != "undefined") {_RecordType("<158,159,12>",(k)); Inst17++; } } catch(e) {}
  k(50, 100, function (i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,12>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<192,193,13>",(i)); Inst20++; } } catch(e) {}
    x = i;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<188,189,13>",(x)); Inst19++; } } catch(e) {}
  }, 200);
try { if (Inst21 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<208,222,15>",(appendToActual)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<223,224,15>",(x)); Inst22++; } } catch(e) {}
  appendToActual(x);
}

try { if (Inst23 <= 1000 && typeof (t) != "undefined") {_RecordType("<230,231,18>",(t)); Inst23++; } } catch(e) {}
t(1);
try { if (Inst24 <= 1000 && typeof (t) != "undefined") {_RecordType("<236,237,19>",(t)); Inst24++; } } catch(e) {}
t(2, 3);
try { if (Inst25 <= 1000 && typeof (t) != "undefined") {_RecordType("<245,246,20>",(t)); Inst25++; } } catch(e) {}
t(4, 5, 6);
try { if (Inst26 <= 1000 && typeof (actual) != "undefined") {_RecordType("<257,263,21>",(actual)); Inst26++; } } catch(e) {}
actual;
try { if (Inst27 <= 1000 && typeof (expected) != "undefined") {_RecordType("<265,273,22>",(expected)); Inst27++; } } catch(e) {}
expected;

