var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
actual = '';
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<0,6,1>",(actual)); Inst0++; } } catch(e) {}
expected = '0 0 1 1 2 2 3 3,0 0 1 1 2 2 3 3,0 0 1 1 2 2 3 3,0 0 1 1 2 2 3 3,0 0 1 1 2 2 3 3,1 2 2 3 3 4 4 5,1 2 2 3 3 4 4 5,1 2 2 3 3 4 4 5,1 2 2 3 3 4 4 5,1 2 2 3 3 4 4 5,2 4 3 5 4 6 5 7,2 4 3 5 4 6 5 7,2 4 3 5 4 6 5 7,2 4 3 5 4 6 5 7,2 4 3 5 4 6 5 7,3 6 4 7 5 8 6 9,3 6 4 7 5 8 6 9,3 6 4 7 5 8 6 9,3 6 4 7 5 8 6 9,3 6 4 7 5 8 6 9,4 8 5 9 6 10 7 11,4 8 5 9 6 10 7 11,4 8 5 9 6 10 7 11,4 8 5 9 6 10 7 11,4 8 5 9 6 10 7 11,';
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<13,21,2>",(expected)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<448,449,4>",(f)); Inst2++; } } catch(e) {}
function f(a, b) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<450,451,4>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<453,454,4>",(b)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (g) != "undefined") {_RecordType("<469,470,5>",(g)); Inst5++; } } catch(e) {}
  function g(x, y) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<471,472,5>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<474,475,5>",(y)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (h) != "undefined") {_RecordType("<492,493,6>",(h)); Inst8++; } } catch(e) {}
    function h(m, n) {
try { if (Inst9 <= 1000 && typeof (m) != "undefined") {_RecordType("<494,495,6>",(m)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<497,498,6>",(n)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (k) != "undefined") {_RecordType("<517,518,7>",(k)); Inst11++; } } catch(e) {}
      function k(u, v) {
try { if (Inst12 <= 1000 && typeof (u) != "undefined") {_RecordType("<519,520,7>",(u)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<522,523,7>",(v)); Inst13++; } } catch(e) {}
        for (var i = 0; i < 5; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<544,545,8>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<551,552,8>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<560,561,8>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (appendToActual) != "undefined") {_RecordType("<575,589,9>",(appendToActual)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<590,591,9>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<600,601,9>",(b)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<610,611,9>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<620,621,9>",(y)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (m) != "undefined") {_RecordType("<630,631,9>",(m)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (n) != "undefined") {_RecordType("<640,641,9>",(n)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (u) != "undefined") {_RecordType("<650,651,9>",(u)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<660,661,9>",(v)); Inst25++; } } catch(e) {}
          appendToActual(a + ' ' + b + ' ' + x + ' ' + y + ' ' + m + ' ' + n + ' ' + u + ' ' + v);
        }
      }

try { if (Inst26 <= 1000 && typeof (k) != "undefined") {_RecordType("<689,690,13>",(k)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (m) != "undefined") {_RecordType("<691,692,13>",(m)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<698,699,13>",(n)); Inst28++; } } catch(e) {}
      k(m + 1, n + 1);
    }

try { if (Inst29 <= 1000 && typeof (h) != "undefined") {_RecordType("<717,718,16>",(h)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<719,720,16>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<726,727,16>",(y)); Inst31++; } } catch(e) {}
    h(x + 1, y + 1);
  }

try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<741,742,19>",(g)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<743,744,19>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<750,751,19>",(b)); Inst34++; } } catch(e) {}
  g(a + 1, b + 1);
}

for (var i = 0; i < 5; ++i) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<770,771,22>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<777,778,22>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<786,787,22>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<793,794,23>",(f)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<795,796,23>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<798,799,23>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<802,803,23>",(i)); Inst41++; } } catch(e) {}
  f(i, i + i);
}

try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<809,815,26>",(actual)); Inst42++; } } catch(e) {}
actual;
try { if (Inst43 <= 1000 && typeof (expected) != "undefined") {_RecordType("<817,825,27>",(expected)); Inst43++; } } catch(e) {}
expected;

