var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (lineNumber) != "undefined") {_RecordType("<23,33,1>",(lineNumber)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (columnNumber) != "undefined") {_RecordType("<35,47,1>",(columnNumber)); Inst3++; } } catch(e) {}
function test(source, [lineNumber, columnNumber], openType = "{", closeType = "}") {
try { if (Inst1 <= 1000 && typeof (source) != "undefined") {_RecordType("<14,20,1>",(source)); Inst1++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (openType) != "undefined") {_RecordType("<50,58,1>",(openType)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (closeType) != "undefined") {_RecordType("<66,75,1>",(closeType)); Inst5++; } } catch(e) {}
  let caught = false;
try { if (Inst6 <= 1000 && typeof (caught) != "undefined") {_RecordType("<91,97,2>",(caught)); Inst6++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<186,187,8>",(e)); Inst10++; } } catch(e) {}
  try {
try { if (Inst7 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<120,133,5>",(Reflect.parse)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<120,127,5>",(Reflect)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (source) != "undefined") {_RecordType("<134,140,5>",(source)); Inst9++; } } catch(e) {}
    Reflect.parse(source, {
      source: "foo.js"
    });
  } catch (e) {
try { if (Inst11 <= 1000 && typeof (e.message.includes) != "undefined") {_RecordType("<195,213,9>",(e.message.includes)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<195,204,9>",(e.message)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<195,196,9>",(e)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (closeType) != "undefined") {_RecordType("<227,236,9>",(closeType)); Inst14++; } } catch(e) {}
    e.message.includes("missing " + closeType + " ");
    true;
try { if (Inst16 <= 1000 && typeof (getErrorNotes) != "undefined") {_RecordType("<271,284,11>",(getErrorNotes)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<285,286,11>",(e)); Inst17++; } } catch(e) {}
    let notes = getErrorNotes(e);
try { if (Inst15 <= 1000 && typeof (notes) != "undefined") {_RecordType("<263,268,11>",(notes)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (notes.length) != "undefined") {_RecordType("<293,305,12>",(notes.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (notes) != "undefined") {_RecordType("<293,298,12>",(notes)); Inst19++; } } catch(e) {}
    notes.length;
    1;
try { if (Inst21 <= 1000 && typeof (notes[0]) != "undefined") {_RecordType("<329,337,14>",(notes[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (notes) != "undefined") {_RecordType("<329,334,14>",(notes)); Inst22++; } } catch(e) {}
    let note = notes[0];
try { if (Inst20 <= 1000 && typeof (note) != "undefined") {_RecordType("<322,326,14>",(note)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (note.message) != "undefined") {_RecordType("<343,355,15>",(note.message)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (note) != "undefined") {_RecordType("<343,347,15>",(note)); Inst24++; } } catch(e) {}
    note.message;
try { if (Inst25 <= 1000 && typeof (openType) != "undefined") {_RecordType("<361,369,16>",(openType)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (lineNumber) != "undefined") {_RecordType("<393,403,16>",(lineNumber)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (columnNumber) != "undefined") {_RecordType("<420,432,16>",(columnNumber)); Inst27++; } } catch(e) {}
    openType + " opened at line " + lineNumber + ", column " + columnNumber;
try { if (Inst28 <= 1000 && typeof (note.fileName) != "undefined") {_RecordType("<438,451,17>",(note.fileName)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (note) != "undefined") {_RecordType("<438,442,17>",(note)); Inst29++; } } catch(e) {}
    note.fileName;
    "foo.js";
try { if (Inst30 <= 1000 && typeof (note.lineNumber) != "undefined") {_RecordType("<471,486,19>",(note.lineNumber)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (note) != "undefined") {_RecordType("<471,475,19>",(note)); Inst31++; } } catch(e) {}
    note.lineNumber;
try { if (Inst32 <= 1000 && typeof (lineNumber) != "undefined") {_RecordType("<492,502,20>",(lineNumber)); Inst32++; } } catch(e) {}
    lineNumber;
try { if (Inst33 <= 1000 && typeof (note.columnNumber) != "undefined") {_RecordType("<508,525,21>",(note.columnNumber)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (note) != "undefined") {_RecordType("<508,512,21>",(note)); Inst34++; } } catch(e) {}
    note.columnNumber;
try { if (Inst35 <= 1000 && typeof (columnNumber) != "undefined") {_RecordType("<531,543,22>",(columnNumber)); Inst35++; } } catch(e) {}
    columnNumber;
    caught = true;
try { if (Inst36 <= 1000 && typeof (caught) != "undefined") {_RecordType("<549,555,23>",(caught)); Inst36++; } } catch(e) {}
  }

try { if (Inst37 <= 1000 && typeof (caught) != "undefined") {_RecordType("<571,577,26>",(caught)); Inst37++; } } catch(e) {}
  caught;
  true;
} // Function


try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<603,607,31>",(test)); Inst38++; } } catch(e) {}
test(`
function test1() {
}
function test2() {
  if (true) {
  //}
}
function test3() {
}
`, [4, 17]); // Block statement.

try { if (Inst39 <= 1000 && typeof (test) != "undefined") {_RecordType("<727,731,42>",(test)); Inst39++; } } catch(e) {}
test(`
{
  if (true) {
}
`, [2, 0]);
try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<764,768,47>",(test)); Inst40++; } } catch(e) {}
test(`
if (true) {
  if (true) {
}
`, [2, 10]);
try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<812,816,52>",(test)); Inst41++; } } catch(e) {}
test(`
for (;;) {
  if (true) {
}
`, [2, 9]);
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<858,862,57>",(test)); Inst42++; } } catch(e) {}
test(`
while (true) {
  if (true) {
}
`, [2, 13]);
try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<909,913,62>",(test)); Inst43++; } } catch(e) {}
test(`
do {
  do {
} while(true);
`, [2, 3]); // try-catch-finally.

try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<978,982,68>",(test)); Inst44++; } } catch(e) {}
test(`
try {
  if (true) {
}
`, [2, 4]);
try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<1019,1023,73>",(test)); Inst45++; } } catch(e) {}
test(`
try {
} catch (e) {
  if (true) {
}
`, [3, 12]);
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1075,1079,79>",(test)); Inst46++; } } catch(e) {}
test(`
try {
} finally {
  if (true) {
}
`, [3, 10]); // Object literal.

try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<1149,1153,86>",(test)); Inst47++; } } catch(e) {}
test(`
var x = {
  foo: {
};
`, [2, 8]); // Array literal.

try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<1209,1213,92>",(test)); Inst48++; } } catch(e) {}
test(`
var x = [
  [
];
`, [2, 8], "[", "]");

