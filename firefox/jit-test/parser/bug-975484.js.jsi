var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Reflect.parse("f()").body[0].expression.loc) != "undefined") {_RecordType("<10,53,1>",(Reflect.parse("f()").body[0].expression.loc)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Reflect.parse("f()").body[0].expression) != "undefined") {_RecordType("<10,49,1>",(Reflect.parse("f()").body[0].expression)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Reflect.parse("f()").body[0]) != "undefined") {_RecordType("<10,38,1>",(Reflect.parse("f()").body[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Reflect.parse("f()").body) != "undefined") {_RecordType("<10,35,1>",(Reflect.parse("f()").body)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<10,23,1>",(Reflect.parse)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<10,17,1>",(Reflect)); Inst6++; } } catch(e) {}
var loc = Reflect.parse("f()").body[0].expression.loc;
try { if (Inst0 <= 1000 && typeof (loc) != "undefined") {_RecordType("<4,7,1>",(loc)); Inst0++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (loc.start.column) != "undefined") {_RecordType("<55,71,2>",(loc.start.column)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (loc.start) != "undefined") {_RecordType("<55,64,2>",(loc.start)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (loc) != "undefined") {_RecordType("<55,58,2>",(loc)); Inst9++; } } catch(e) {}
loc.start.column;
0;
try { if (Inst10 <= 1000 && typeof (loc.end.column) != "undefined") {_RecordType("<76,90,4>",(loc.end.column)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (loc.end) != "undefined") {_RecordType("<76,83,4>",(loc.end)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (loc) != "undefined") {_RecordType("<76,79,4>",(loc)); Inst12++; } } catch(e) {}
loc.end.column;
3;
try { if (Inst14 <= 1000 && typeof (Reflect.parse("f(x)").body[0].expression.loc) != "undefined") {_RecordType("<101,145,6>",(Reflect.parse("f(x)").body[0].expression.loc)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Reflect.parse("f(x)").body[0].expression) != "undefined") {_RecordType("<101,141,6>",(Reflect.parse("f(x)").body[0].expression)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect.parse("f(x)").body[0]) != "undefined") {_RecordType("<101,130,6>",(Reflect.parse("f(x)").body[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Reflect.parse("f(x)").body) != "undefined") {_RecordType("<101,127,6>",(Reflect.parse("f(x)").body)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<101,114,6>",(Reflect.parse)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<101,108,6>",(Reflect)); Inst19++; } } catch(e) {}
loc = Reflect.parse("f(x)").body[0].expression.loc;
try { if (Inst13 <= 1000 && typeof (loc) != "undefined") {_RecordType("<95,98,6>",(loc)); Inst13++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (loc.start.column) != "undefined") {_RecordType("<147,163,7>",(loc.start.column)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (loc.start) != "undefined") {_RecordType("<147,156,7>",(loc.start)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (loc) != "undefined") {_RecordType("<147,150,7>",(loc)); Inst22++; } } catch(e) {}
loc.start.column;
0;
try { if (Inst23 <= 1000 && typeof (loc.end.column) != "undefined") {_RecordType("<168,182,9>",(loc.end.column)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (loc.end) != "undefined") {_RecordType("<168,175,9>",(loc.end)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (loc) != "undefined") {_RecordType("<168,171,9>",(loc)); Inst25++; } } catch(e) {}
loc.end.column;
4;

