var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst26 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<390,401,15>",(ArrayBuffer)); Inst26++; } } catch(e) {}
boom = function (stdlib, foreign, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<17,23,1>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<25,32,1>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<34,38,1>",(heap)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (stdlib.Uint8Array) != "undefined") {_RecordType("<83,100,4>",(stdlib.Uint8Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<83,89,4>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (heap) != "undefined") {_RecordType("<101,105,4>",(heap)); Inst7++; } } catch(e) {}
  var Uint8ArrayView = new stdlib.Uint8Array(heap);
try { if (Inst4 <= 1000 && typeof (Uint8ArrayView) != "undefined") {_RecordType("<62,76,4>",(Uint8ArrayView)); Inst4++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (stdlib.Int32Array) != "undefined") {_RecordType("<135,152,5>",(stdlib.Int32Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<135,141,5>",(stdlib)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (heap) != "undefined") {_RecordType("<153,157,5>",(heap)); Inst11++; } } catch(e) {}
  var Int32ArrayView = new stdlib.Int32Array(heap);
try { if (Inst8 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<114,128,5>",(Int32ArrayView)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<172,173,7>",(f)); Inst12++; } } catch(e) {}
  function f(i, i1) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,7>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i1) != "undefined") {_RecordType("<177,179,7>",(i1)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Uint8ArrayView[256]) != "undefined") {_RecordType("<192,211,8>",(Uint8ArrayView[256])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Uint8ArrayView) != "undefined") {_RecordType("<192,206,8>",(Uint8ArrayView)); Inst17++; } } catch(e) {}
    i1 = Uint8ArrayView[256]; // This following value '10' determines the value of 'rax'
try { if (Inst15 <= 1000 && typeof (i1) != "undefined") {_RecordType("<187,189,8>",(i1)); Inst15++; } } catch(e) {}

    Int32ArrayView[i1 >> 10] = 0xabcdefaa;
try { if (Inst18 <= 1000 && typeof (Int32ArrayView[i1 >> 10]) != "undefined") {_RecordType("<277,301,10>",(Int32ArrayView[i1 >> 10])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<277,291,10>",(Int32ArrayView)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i1) != "undefined") {_RecordType("<292,294,10>",(i1)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (i1) != "undefined") {_RecordType("<328,330,11>",(i1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Int32ArrayView[i1 >> 2]) != "undefined") {_RecordType("<333,356,11>",(Int32ArrayView[i1 >> 2])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<333,347,11>",(Int32ArrayView)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i1) != "undefined") {_RecordType("<348,350,11>",(i1)); Inst24++; } } catch(e) {}
    return -i1 + Int32ArrayView[i1 >> 2];
  }

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<372,373,14>",(f)); Inst25++; } } catch(e) {}
  return f;
}(this, 0, new ArrayBuffer(256));
try { if (Inst0 <= 1000 && typeof (boom) != "undefined") {_RecordType("<0,4,1>",(boom)); Inst0++; } } catch(e) {}

for (var i = 0; i < 400; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<419,420,17>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<426,427,17>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<437,438,17>",(i)); Inst29++; } } catch(e) {}
  // Trigger optimization
try { if (Inst30 <= 1000 && typeof (boom) != "undefined") {_RecordType("<470,474,19>",(boom)); Inst30++; } } catch(e) {}
  boom(0, 0x1000);
}

