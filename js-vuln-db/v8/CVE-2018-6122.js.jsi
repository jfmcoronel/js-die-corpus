var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (load) != "undefined") {_RecordType("<0,4,1>",(load)); Inst0++; } } catch(e) {}
load('test/mjsunit/wasm/wasm-constants.js');
try { if (Inst1 <= 1000 && typeof (load) != "undefined") {_RecordType("<45,49,2>",(load)); Inst1++; } } catch(e) {}
load('test/mjsunit/wasm/wasm-module-builder.js');
try { if (Inst3 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<115,132,3>",(WasmModuleBuilder)); Inst3++; } } catch(e) {}
const builder = new WasmModuleBuilder();
try { if (Inst2 <= 1000 && typeof (builder) != "undefined") {_RecordType("<101,108,3>",(builder)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (builder.addMemory) != "undefined") {_RecordType("<136,153,4>",(builder.addMemory)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (builder) != "undefined") {_RecordType("<136,143,4>",(builder)); Inst5++; } } catch(e) {}
builder.addMemory(16, 32);
try { if (Inst6 <= 1000 && typeof (builder.addFunction("test", kSig_i_v).addBody) != "undefined") {_RecordType("<163,208,5>",(builder.addFunction("test", kSig_i_v).addBody)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<163,182,5>",(builder.addFunction)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (builder) != "undefined") {_RecordType("<163,170,5>",(builder)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (kSig_i_v) != "undefined") {_RecordType("<191,199,5>",(kSig_i_v)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<210,223,5>",(kExprI32Const)); Inst10++; } } catch(e) {}
builder.addFunction("test", kSig_i_v).addBody([kExprI32Const, 12]);
let bla = 0;
try { if (Inst11 <= 1000 && typeof (bla) != "undefined") {_RecordType("<235,238,6>",(bla)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (WebAssembly.Module) != "undefined") {_RecordType("<261,279,7>",(WebAssembly.Module)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<261,272,7>",(WebAssembly)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (builder.toBuffer) != "undefined") {_RecordType("<280,296,7>",(builder.toBuffer)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (builder) != "undefined") {_RecordType("<280,287,7>",(builder)); Inst16++; } } catch(e) {}
let module = new WebAssembly.Module(builder.toBuffer());
try { if (Inst12 <= 1000 && typeof (module) != "undefined") {_RecordType("<248,254,7>",(module)); Inst12++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<316,323,9>",(resolve)); Inst19++; } } catch(e) {}
module.then = resolve => {
try { if (Inst20 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<338,345,10>",(resolve)); Inst20++; } } catch(e) {}
  return resolve(0x41414141);
};
try { if (Inst17 <= 1000 && typeof (module.then) != "undefined") {_RecordType("<302,313,9>",(module.then)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (module) != "undefined") {_RecordType("<302,308,9>",(module)); Inst18++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (WebAssembly.instantiate) != "undefined") {_RecordType("<363,386,13>",(WebAssembly.instantiate)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<363,374,13>",(WebAssembly)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (module) != "undefined") {_RecordType("<387,393,13>",(module)); Inst23++; } } catch(e) {}
WebAssembly.instantiate(module);

