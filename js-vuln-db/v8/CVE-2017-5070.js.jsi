var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var array = [[{}], [1.1]];
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<4,9,1>",(array)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (transition) != "undefined") {_RecordType("<37,47,3>",(transition)); Inst1++; } } catch(e) {}
function transition() {
  for (var i = 0; i < array.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<63,64,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<70,71,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<74,86,4>",(array.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (array) != "undefined") {_RecordType("<74,79,4>",(array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<88,89,4>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<109,117,5>",(array[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<109,114,5>",(array)); Inst9++; } } catch(e) {}
    var arr = array[i];
try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<103,106,5>",(arr)); Inst7++; } } catch(e) {}
    arr[0] = {};
try { if (Inst10 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<123,129,6>",(arr[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<123,126,6>",(arr)); Inst11++; } } catch(e) {}
  }
}

var double_arr2 = [1.1, 2.2];
try { if (Inst12 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<147,158,10>",(double_arr2)); Inst12++; } } catch(e) {}
var flag = 0;
try { if (Inst13 <= 1000 && typeof (flag) != "undefined") {_RecordType("<177,181,11>",(flag)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (swap) != "undefined") {_RecordType("<197,201,13>",(swap)); Inst14++; } } catch(e) {}
function swap() {
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<231,232,16>",(e)); Inst15++; } } catch(e) {}
  try {
    ;
  } catch (e) {
    ;
  } // Prevent Crankshaft from inlining this.


try { if (Inst16 <= 1000 && typeof (flag) != "undefined") {_RecordType("<296,300,21>",(flag)); Inst16++; } } catch(e) {}
  if (flag == 1) {
try { if (Inst19 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<324,335,22>",(double_arr2)); Inst19++; } } catch(e) {}
    array[1] = double_arr2;
try { if (Inst17 <= 1000 && typeof (array[1]) != "undefined") {_RecordType("<313,321,22>",(array[1])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<313,318,22>",(array)); Inst18++; } } catch(e) {}
  }
}

var expected = 6.176516726456e-312;
try { if (Inst20 <= 1000 && typeof (expected) != "undefined") {_RecordType("<348,356,26>",(expected)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<390,391,28>",(f)); Inst21++; } } catch(e) {}
function f() {
try { if (Inst22 <= 1000 && typeof (swap) != "undefined") {_RecordType("<398,402,29>",(swap)); Inst22++; } } catch(e) {}
  swap();
  double_arr2[0] = 1;
try { if (Inst23 <= 1000 && typeof (double_arr2[0]) != "undefined") {_RecordType("<408,422,30>",(double_arr2[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<408,419,30>",(double_arr2)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (transition) != "undefined") {_RecordType("<430,440,31>",(transition)); Inst25++; } } catch(e) {}
  transition();
try { if (Inst28 <= 1000 && typeof (expected) != "undefined") {_RecordType("<463,471,32>",(expected)); Inst28++; } } catch(e) {}
  double_arr2[1] = expected;
try { if (Inst26 <= 1000 && typeof (double_arr2[1]) != "undefined") {_RecordType("<446,460,32>",(double_arr2[1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<446,457,32>",(double_arr2)); Inst27++; } } catch(e) {}
} // %OptimizeFunctionOnNextCall(f);


for (var i = 0; i < 0x10000; i++) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<521,522,36>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<528,529,36>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<541,542,36>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<550,551,37>",(f)); Inst32++; } } catch(e) {}
  f();
}

flag = 1;
try { if (Inst33 <= 1000 && typeof (flag) != "undefined") {_RecordType("<558,562,40>",(flag)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<568,569,41>",(f)); Inst34++; } } catch(e) {}
f();
try { if (Inst35 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<573,585,42>",(assertEquals)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (expected) != "undefined") {_RecordType("<586,594,42>",(expected)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (double_arr2[1]) != "undefined") {_RecordType("<596,610,42>",(double_arr2[1])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<596,607,42>",(double_arr2)); Inst38++; } } catch(e) {}
assertEquals(expected, double_arr2[1]);

