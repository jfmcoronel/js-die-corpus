var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<18,35,1>",(WasmModuleBuilder)); Inst1++; } } catch(e) {}
var builder = new WasmModuleBuilder();
try { if (Inst0 <= 1000 && typeof (builder) != "undefined") {_RecordType("<4,11,1>",(builder)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (builder.addImportedTable) != "undefined") {_RecordType("<39,63,2>",(builder.addImportedTable)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (builder) != "undefined") {_RecordType("<39,46,2>",(builder)); Inst3++; } } catch(e) {}
builder.addImportedTable("x", "table", 1, 10000000);
try { if (Inst4 <= 1000 && typeof (builder.addFunction("main", kSig_i_i).addBody([kExprI32Const, 0, kExprGetLocal, 0, kExprCallIndirect, 0, kTableZero]).exportAs) != "undefined") {_RecordType("<92,218,3>",(builder.addFunction("main", kSig_i_i).addBody([kExprI32Const, 0, kExprGetLocal, 0, kExprCallIndirect, 0, kTableZero]).exportAs)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (builder.addFunction("main", kSig_i_i).addBody) != "undefined") {_RecordType("<92,137,3>",(builder.addFunction("main", kSig_i_i).addBody)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<92,111,3>",(builder.addFunction)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (builder) != "undefined") {_RecordType("<92,99,3>",(builder)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (kSig_i_i) != "undefined") {_RecordType("<120,128,3>",(kSig_i_i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<139,152,3>",(kExprI32Const)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (kExprGetLocal) != "undefined") {_RecordType("<157,170,3>",(kExprGetLocal)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (kExprCallIndirect) != "undefined") {_RecordType("<175,192,3>",(kExprCallIndirect)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (kTableZero) != "undefined") {_RecordType("<197,207,3>",(kTableZero)); Inst12++; } } catch(e) {}
builder.addFunction("main", kSig_i_i).addBody([kExprI32Const, 0, kExprGetLocal, 0, kExprCallIndirect, 0, kTableZero]).exportAs("main");
try { if (Inst14 <= 1000 && typeof (WebAssembly.Module) != "undefined") {_RecordType("<245,263,4>",(WebAssembly.Module)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<245,256,4>",(WebAssembly)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (builder.toBuffer) != "undefined") {_RecordType("<264,280,4>",(builder.toBuffer)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (builder) != "undefined") {_RecordType("<264,271,4>",(builder)); Inst17++; } } catch(e) {}
let module = new WebAssembly.Module(builder.toBuffer());
try { if (Inst13 <= 1000 && typeof (module) != "undefined") {_RecordType("<232,238,4>",(module)); Inst13++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (WebAssembly.Table) != "undefined") {_RecordType("<301,318,5>",(WebAssembly.Table)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<301,312,5>",(WebAssembly)); Inst20++; } } catch(e) {}
let table = new WebAssembly.Table({
  element: "anyfunc",
  initial: 1,
  maximum: 1000000
});
try { if (Inst18 <= 1000 && typeof (table) != "undefined") {_RecordType("<289,294,5>",(table)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<399,419,10>",(WebAssembly.Instance)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<399,410,10>",(WebAssembly)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (module) != "undefined") {_RecordType("<420,426,10>",(module)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (table) != "undefined") {_RecordType("<448,453,12>",(table)); Inst25++; } } catch(e) {}
let instance = new WebAssembly.Instance(module, {
  x: {
    table: table
  }
});
try { if (Inst21 <= 1000 && typeof (instance) != "undefined") {_RecordType("<384,392,10>",(instance)); Inst21++; } } catch(e) {}

for (let i = 0; i < 4; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<472,473,16>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<479,480,16>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,16>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (table.grow) != "undefined") {_RecordType("<495,505,17>",(table.grow)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (table) != "undefined") {_RecordType("<495,500,17>",(table)); Inst30++; } } catch(e) {}
  table.grow(99900);
}

try { if (Inst32 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<537,557,20>",(WebAssembly.Instance)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<537,548,20>",(WebAssembly)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (module) != "undefined") {_RecordType("<558,564,20>",(module)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (table) != "undefined") {_RecordType("<586,591,22>",(table)); Inst35++; } } catch(e) {}
let instance2 = new WebAssembly.Instance(module, {
  x: {
    table: table
  }
});
try { if (Inst31 <= 1000 && typeof (instance2) != "undefined") {_RecordType("<521,530,20>",(instance2)); Inst31++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (instance2.exports.main) != "undefined") {_RecordType("<600,622,25>",(instance2.exports.main)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (instance2.exports) != "undefined") {_RecordType("<600,617,25>",(instance2.exports)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (instance2) != "undefined") {_RecordType("<600,609,25>",(instance2)); Inst38++; } } catch(e) {}
instance2.exports.main(0x313131 / 8);

