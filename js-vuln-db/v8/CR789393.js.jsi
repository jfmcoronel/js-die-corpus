var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (gc) != "undefined") {_RecordType("<9,11,1>",(gc)); Inst0++; } } catch(e) {}
function gc() {
  for (let i = 0; i < 20; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<27,28,2>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<34,35,2>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<42,43,2>",(i)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<57,68,3>",(ArrayBuffer)); Inst4++; } } catch(e) {}
    new ArrayBuffer(0x1000000);
  }
}

try { if (Inst5 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<97,104,7>",(trigger)); Inst5++; } } catch(e) {}
function trigger() {
try { if (Inst6 <= 1000 && typeof (generator) != "undefined") {_RecordType("<121,130,8>",(generator)); Inst6++; } } catch(e) {}
  function* generator() {
    ;
  }

  for (let i = 0; i < 1022; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<157,158,12>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<164,165,12>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,12>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (generator.prototype['b' + i]) != "undefined") {_RecordType("<185,213,13>",(generator.prototype['b' + i])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (generator.prototype) != "undefined") {_RecordType("<185,204,13>",(generator.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (generator) != "undefined") {_RecordType("<185,194,13>",(generator)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<211,212,13>",(i)); Inst13++; } } catch(e) {}
    generator.prototype['b' + i];
    generator.prototype['b' + i] = 0x1234;
try { if (Inst14 <= 1000 && typeof (generator.prototype['b' + i]) != "undefined") {_RecordType("<219,247,14>",(generator.prototype['b' + i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (generator.prototype) != "undefined") {_RecordType("<219,238,14>",(generator.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (generator) != "undefined") {_RecordType("<219,228,14>",(generator)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,14>",(i)); Inst17++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (gc) != "undefined") {_RecordType("<265,267,17>",(gc)); Inst18++; } } catch(e) {}
  gc();

  for (let i = 0; i < 1022; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<283,284,19>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,19>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<300,301,19>",(i)); Inst21++; } } catch(e) {}
    generator.prototype['b' + i] = 0x1234;
try { if (Inst22 <= 1000 && typeof (generator.prototype['b' + i]) != "undefined") {_RecordType("<311,339,20>",(generator.prototype['b' + i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (generator.prototype) != "undefined") {_RecordType("<311,330,20>",(generator.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (generator) != "undefined") {_RecordType("<311,320,20>",(generator)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,20>",(i)); Inst25++; } } catch(e) {}
  }
}

try { if (Inst26 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<357,364,24>",(trigger)); Inst26++; } } catch(e) {}
trigger();

