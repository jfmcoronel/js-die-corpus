var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var workerScript = `onmessage = function(sab) {
    var ta = new Uint8Array(sab);
    var tmp;
    while(1){
        var index = (Math.random() * ta.length | 0) + 1;
        var value = (Math.random() * 256 | 0) + 1;
        //print(index + " " +value);
        tmp=ta[index];
        ta[index]=value;
        for(var i=0;i<value;i++);
        ta[index]=tmp;
    }
  };`;
try { if (Inst0 <= 1000 && typeof (workerScript) != "undefined") {_RecordType("<4,16,1>",(workerScript)); Inst0++; } } catch(e) {}
/* 000054: 41 ff 0f                   | i32.const 2047
 000057: 6a */

try { if (Inst2 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<455,461,17>",(Worker)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (workerScript) != "undefined") {_RecordType("<462,474,17>",(workerScript)); Inst3++; } } catch(e) {}
var w = new Worker(workerScript);
try { if (Inst1 <= 1000 && typeof (w) != "undefined") {_RecordType("<447,448,17>",(w)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (readbuffer) != "undefined") {_RecordType("<485,495,18>",(readbuffer)); Inst5++; } } catch(e) {}
var b = readbuffer("./stack.wasm");
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<481,482,18>",(b)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<526,536,19>",(Uint8Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<537,538,19>",(b)); Inst8++; } } catch(e) {}
var ta = new Uint8Array(b);
try { if (Inst6 <= 1000 && typeof (ta) != "undefined") {_RecordType("<517,519,19>",(ta)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (SharedArrayBuffer) != "undefined") {_RecordType("<554,571,20>",(SharedArrayBuffer)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b.byteLength) != "undefined") {_RecordType("<572,584,20>",(b.byteLength)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<572,573,20>",(b)); Inst12++; } } catch(e) {}
var sb = new SharedArrayBuffer(b.byteLength);
try { if (Inst9 <= 1000 && typeof (sb) != "undefined") {_RecordType("<545,547,20>",(sb)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<601,611,21>",(Uint8Array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (sb) != "undefined") {_RecordType("<612,614,21>",(sb)); Inst15++; } } catch(e) {}
var sta = new Uint8Array(sb);
try { if (Inst13 <= 1000 && typeof (sta) != "undefined") {_RecordType("<591,594,21>",(sta)); Inst13++; } } catch(e) {}

for (var i = 0; i < ta.length; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<627,628,23>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<634,635,23>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ta.length) != "undefined") {_RecordType("<638,647,23>",(ta.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ta) != "undefined") {_RecordType("<638,640,23>",(ta)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<649,650,23>",(i)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (ta[i]) != "undefined") {_RecordType("<667,672,24>",(ta[i])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ta) != "undefined") {_RecordType("<667,669,24>",(ta)); Inst24++; } } catch(e) {}
  sta[i] = ta[i];
try { if (Inst21 <= 1000 && typeof (sta[i]) != "undefined") {_RecordType("<658,664,24>",(sta[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sta) != "undefined") {_RecordType("<658,661,24>",(sta)); Inst22++; } } catch(e) {}
} // Transfer SharedArrayBuffer


try { if (Inst25 <= 1000 && typeof (w.postMessage) != "undefined") {_RecordType("<708,721,28>",(w.postMessage)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (w) != "undefined") {_RecordType("<708,709,28>",(w)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (sb) != "undefined") {_RecordType("<722,724,28>",(sb)); Inst27++; } } catch(e) {}
w.postMessage(sb);

while (1) {
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<803,804,33>",(e)); Inst32++; } } catch(e) {}
  try {
try { if (Inst29 <= 1000 && typeof (WebAssembly.validate) != "undefined") {_RecordType("<765,785,32>",(WebAssembly.validate)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<765,776,32>",(WebAssembly)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (sta) != "undefined") {_RecordType("<786,789,32>",(sta)); Inst31++; } } catch(e) {}
    var result = WebAssembly.validate(sta);
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<756,762,32>",(result)); Inst28++; } } catch(e) {}
  } catch (e) {
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<812,817,34>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<818,819,34>",(e)); Inst34++; } } catch(e) {}
    print(e);
  }
}

