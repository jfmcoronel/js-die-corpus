var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (jit) != "undefined") {_RecordType("<9,12,1>",(jit)); Inst0++; } } catch(e) {}
function jit(arr, start, end, one) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<13,16,1>",(arr)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (start) != "undefined") {_RecordType("<18,23,1>",(start)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (end) != "undefined") {_RecordType("<25,28,1>",(end)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (one) != "undefined") {_RecordType("<30,33,1>",(one)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<50,53,2>",(arr)); Inst6++; } } catch(e) {}
  let arr2 = arr;
try { if (Inst5 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<43,47,2>",(arr2)); Inst5++; } } catch(e) {}
  let t = 0;
try { if (Inst7 <= 1000 && typeof (t) != "undefined") {_RecordType("<61,62,3>",(t)); Inst7++; } } catch(e) {}
  for (let i = start; i < end; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<79,80,4>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (start) != "undefined") {_RecordType("<83,88,4>",(start)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<90,91,4>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (end) != "undefined") {_RecordType("<94,97,4>",(end)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<99,100,4>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<113,114,5>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (magic) != "undefined") {_RecordType("<119,124,5>",(magic)); Inst14++; } } catch(e) {}
    if(i === magic) {
try { if (Inst16 <= 1000 && typeof (start) != "undefined") {_RecordType("<138,143,6>",(start)); Inst16++; } } catch(e) {}
      i = start;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<134,135,6>",(i)); Inst15++; } } catch(e) {}
      i += 1;
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,7>",(i)); Inst17++; } } catch(e) {}
    }
try { if (Inst19 <= 1000 && typeof (arr2[i]) != "undefined") {_RecordType("<173,180,9>",(arr2[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<173,177,9>",(arr2)); Inst20++; } } catch(e) {}
    t = arr2[i];
try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<169,170,9>",(t)); Inst18++; } } catch(e) {}
  }
try { if (Inst21 <= 1000 && typeof (t) != "undefined") {_RecordType("<201,202,11>",(t)); Inst21++; } } catch(e) {}
  return [1.1, t];
}

let arr = [1.1, 2.2, 3.3, 4.4, 5.5];
try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<212,215,14>",(arr)); Inst22++; } } catch(e) {}
arr.length = 4;
try { if (Inst23 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<245,255,15>",(arr.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<245,248,15>",(arr)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<261,274,16>",(Array.isArray)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<261,266,16>",(Array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<275,278,16>",(arr)); Inst27++; } } catch(e) {}
Array.isArray(arr);
try { if (Inst29 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<289,299,17>",(arr.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arr) != "undefined") {_RecordType("<289,292,17>",(arr)); Inst30++; } } catch(e) {}
magic = arr.length - 1;
try { if (Inst28 <= 1000 && typeof (magic) != "undefined") {_RecordType("<281,286,17>",(magic)); Inst28++; } } catch(e) {}
for(let i = 0; i < 0x10000; i++) 
try { if (Inst34 <= 1000 && typeof (jit) != "undefined") {_RecordType("<341,344,19>",(jit)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (arr) != "undefined") {_RecordType("<345,348,19>",(arr)); Inst35++; } } catch(e) {}
  jit(arr, 0, 1, 1);
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,18>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<320,321,18>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<333,334,18>",(i)); Inst33++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<374,384,21>",(arr.length)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (arr) != "undefined") {_RecordType("<374,377,21>",(arr)); Inst38++; } } catch(e) {}
let offset = arr.length - 1;
try { if (Inst36 <= 1000 && typeof (offset) != "undefined") {_RecordType("<365,371,21>",(offset)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (jit) != "undefined") {_RecordType("<401,404,22>",(jit)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (arr) != "undefined") {_RecordType("<405,408,22>",(arr)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (offset) != "undefined") {_RecordType("<410,416,22>",(offset)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (offset) != "undefined") {_RecordType("<418,424,22>",(offset)); Inst43++; } } catch(e) {}
let evil = jit(arr, offset, offset + 1, 1);
try { if (Inst39 <= 1000 && typeof (evil) != "undefined") {_RecordType("<394,398,22>",(evil)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (print) != "undefined") {_RecordType("<434,439,23>",(print)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (evil) != "undefined") {_RecordType("<440,444,23>",(evil)); Inst45++; } } catch(e) {}
print(evil)

