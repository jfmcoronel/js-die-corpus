var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Run with --thresholdForFTLOptimizeAfterWarmUp=1000

// First array probably required to avoid COW backing storage or so...
const v3 = [1337,1337,1337,1337];
try { if (Inst0 <= 1000 && typeof (v3) != "undefined") {_RecordType("<132,134,4>",(v3)); Inst0++; } } catch(e) {}
const v6 = [1337,1337];
try { if (Inst1 <= 1000 && typeof (v6) != "undefined") {_RecordType("<166,168,5>",(v6)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (v7) != "undefined") {_RecordType("<194,196,7>",(v7)); Inst2++; } } catch(e) {}
function v7(v8) {
try { if (Inst3 <= 1000 && typeof (v8) != "undefined") {_RecordType("<197,199,7>",(v8)); Inst3++; } } catch(e) {}
    for (let v9 in v8) {
try { if (Inst4 <= 1000 && typeof (v9) != "undefined") {_RecordType("<216,218,8>",(v9)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v8) != "undefined") {_RecordType("<222,224,8>",(v8)); Inst5++; } } catch(e) {}
        v8.a = 42;
try { if (Inst6 <= 1000 && typeof (v8.a) != "undefined") {_RecordType("<236,240,9>",(v8.a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v8) != "undefined") {_RecordType("<236,238,9>",(v8)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v8[-698666199]) != "undefined") {_RecordType("<267,281,10>",(v8[-698666199])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v8) != "undefined") {_RecordType("<267,269,10>",(v8)); Inst10++; } } catch(e) {}
        const v10 = v8[-698666199];
try { if (Inst8 <= 1000 && typeof (v10) != "undefined") {_RecordType("<261,264,10>",(v10)); Inst8++; } } catch(e) {}
    }
}

while (true) {
try { if (Inst12 <= 1000 && typeof (v7) != "undefined") {_RecordType("<323,325,15>",(v7)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v6) != "undefined") {_RecordType("<326,328,15>",(v6)); Inst13++; } } catch(e) {}
    const v14 = v7(v6);
try { if (Inst11 <= 1000 && typeof (v14) != "undefined") {_RecordType("<317,320,15>",(v14)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (v7) != "undefined") {_RecordType("<347,349,16>",(v7)); Inst15++; } } catch(e) {}
    const v15 = v7(1337);
try { if (Inst14 <= 1000 && typeof (v15) != "undefined") {_RecordType("<341,344,16>",(v15)); Inst14++; } } catch(e) {}
}

