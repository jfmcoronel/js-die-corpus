var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<12,17,1>",(Array)); Inst1++; } } catch(e) {}
var a = new Array(0x11111111, 0x22222222, 0x33333333, 0x44444444, 0x12121212, 0x23232323, 0x12345670, 0x7777);
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<4,5,1>",(a)); Inst0++; } } catch(e) {}
var handler = {
  getPrototypeOf: function (target, name) {
try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<155,161,3>",(target)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (name) != "undefined") {_RecordType("<163,167,3>",(name)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<182,183,4>",(a)); Inst5++; } } catch(e) {}
    return a;
  }
};
try { if (Inst2 <= 1000 && typeof (handler) != "undefined") {_RecordType("<115,122,2>",(handler)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<204,209,7>",(Proxy)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (handler) != "undefined") {_RecordType("<214,221,7>",(handler)); Inst8++; } } catch(e) {}
var p = new Proxy([], handler);
try { if (Inst6 <= 1000 && typeof (p) != "undefined") {_RecordType("<196,197,7>",(p)); Inst6++; } } catch(e) {}
var b = [{}, [], "natalie"];
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<228,229,8>",(b)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<267,268,9>",(p)); Inst12++; } } catch(e) {}
b.__proto__ = p;
try { if (Inst10 <= 1000 && typeof (b.__proto__) != "undefined") {_RecordType("<253,264,9>",(b.__proto__)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<253,254,9>",(b)); Inst11++; } } catch(e) {}
b.length = 4;
try { if (Inst13 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<270,278,10>",(b.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<270,271,10>",(b)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a.shift.call) != "undefined") {_RecordType("<284,296,11>",(a.shift.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a.shift) != "undefined") {_RecordType("<284,291,11>",(a.shift)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<284,285,11>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<297,298,11>",(b)); Inst18++; } } catch(e) {}
a.shift.call(b); // b[2] is type confused

