var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<12,17,1>",(Array)); Inst1++; } } catch(e) {}
var b = new Array(1, 2, 3);
try { if (Inst0 <= 1000 && typeof (b) != "undefined") {_RecordType("<4,5,1>",(b)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<40,45,2>",(Array)); Inst3++; } } catch(e) {}
var d = new Array(1, 2, 3);
try { if (Inst2 <= 1000 && typeof (d) != "undefined") {_RecordType("<32,33,2>",(d)); Inst2++; } } catch(e) {}
d.length = 0x200000;
try { if (Inst4 <= 1000 && typeof (d.length) != "undefined") {_RecordType("<56,64,3>",(d.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<56,57,3>",(d)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (d.fill) != "undefined") {_RecordType("<77,83,4>",(d.fill)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<77,78,4>",(d)); Inst7++; } } catch(e) {}
d.fill(7);

class dummy {
  constructor() {
    //alert("in constructor");
try { if (Inst9 <= 1000 && typeof (d) != "undefined") {_RecordType("<163,164,9>",(d)); Inst9++; } } catch(e) {}
    return d;
  }

}
try { if (Inst8 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<95,100,6>",(dummy)); Inst8++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<196,201,14>",(Array)); Inst14++; } } catch(e) {}
class MyArray extends Array {
  // Overwrite species to the parent Array constructor
  static get [Symbol.species]() {
    //alert("get");
    b[0] = {};
try { if (Inst11 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<317,321,18>",(b[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<317,318,18>",(b)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<339,344,19>",(dummy)); Inst13++; } } catch(e) {}
    return dummy;
  }

}
try { if (Inst10 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<180,187,14>",(MyArray)); Inst10++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<366,371,24>",(Array)); Inst16++; } } catch(e) {}
var a = new Array({}, [], "natalie", 7, 7, 7, 7, 7);
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<358,359,24>",(a)); Inst15++; } } catch(e) {}

for (var i = 0; i < 0x200000; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,26>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<424,425,26>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<438,439,26>",(i)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<454,455,27>",(i)); Inst22++; } } catch(e) {}
  a[i] = i;
try { if (Inst20 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<447,451,27>",(a[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<447,448,27>",(a)); Inst21++; } } catch(e) {}
}

try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<469,473,30>",(test)); Inst23++; } } catch(e) {}
function test(i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<474,475,30>",(i)); Inst24++; } } catch(e) {}
  return true;
}

try { if (Inst27 <= 1000 && typeof (MyArray.prototype) != "undefined") {_RecordType("<511,528,34>",(MyArray.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<511,518,34>",(MyArray)); Inst28++; } } catch(e) {}
a.__proto__ = MyArray.prototype;
try { if (Inst25 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<497,508,34>",(a.__proto__)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<497,498,34>",(a)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (a.filter) != "undefined") {_RecordType("<538,546,35>",(a.filter)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<538,539,35>",(a)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<547,551,35>",(test)); Inst32++; } } catch(e) {}
var o = a.filter(test); //alert(o);
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<534,535,35>",(o)); Inst29++; } } catch(e) {}

var h = [];
try { if (Inst33 <= 1000 && typeof (h) != "undefined") {_RecordType("<571,572,37>",(h)); Inst33++; } } catch(e) {}

for (item in o) {
try { if (Inst34 <= 1000 && typeof (item) != "undefined") {_RecordType("<585,589,39>",(item)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<593,594,39>",(o)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (Number) != "undefined") {_RecordType("<612,618,40>",(Number)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o[item]) != "undefined") {_RecordType("<619,626,40>",(o[item])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o) != "undefined") {_RecordType("<619,620,40>",(o)); Inst39++; } } catch(e) {}
  var n = new Number(o[item]);
try { if (Inst36 <= 1000 && typeof (n) != "undefined") {_RecordType("<604,605,40>",(n)); Inst36++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (n) != "undefined") {_RecordType("<636,637,42>",(n)); Inst40++; } } catch(e) {}
  if (n < 0) {
try { if (Inst42 <= 1000 && typeof (n) != "undefined") {_RecordType("<653,654,43>",(n)); Inst42++; } } catch(e) {}
    n = n + 0x100000000;
try { if (Inst41 <= 1000 && typeof (n) != "undefined") {_RecordType("<649,650,43>",(n)); Inst41++; } } catch(e) {}
  }

try { if (Inst43 <= 1000 && typeof (h.push) != "undefined") {_RecordType("<677,683,46>",(h.push)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (h) != "undefined") {_RecordType("<677,678,46>",(h)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (n.toString) != "undefined") {_RecordType("<684,694,46>",(n.toString)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (n) != "undefined") {_RecordType("<684,685,46>",(n)); Inst46++; } } catch(e) {}
  h.push(n.toString(16));
} //alert(h);

