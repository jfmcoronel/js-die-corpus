var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt(a, b, v) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<19,20,1>",(v)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<30,38,2>",(b.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<30,31,2>",(b)); Inst5++; } } catch(e) {}
  if (b.length < 1) {
    return;
  }

  for (let i = 0; i < a.length; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<74,75,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<81,82,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<85,93,6>",(a.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<85,86,6>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<95,96,6>",(i)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<113,114,7>",(v)); Inst13++; } } catch(e) {}
    a[i] = v;
try { if (Inst11 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<106,110,7>",(a[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<106,107,7>",(a)); Inst12++; } } catch(e) {}
  }

  b[0] = 2.3023e-320;
try { if (Inst14 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<123,127,10>",(b[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<123,124,10>",(b)); Inst15++; } } catch(e) {}
}

try { if (Inst16 <= 1000 && typeof (main) != "undefined") {_RecordType("<155,159,13>",(main)); Inst16++; } } catch(e) {}
function main() {
  for (let i = 0; i < 1000; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,14>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<182,183,14>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<192,193,14>",(i)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (opt) != "undefined") {_RecordType("<203,206,15>",(opt)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<211,221,15>",(Uint8Array)); Inst21++; } } catch(e) {}
    opt(new Uint8Array(100), [1.1, 2.2, 3.3], {});
  }

try { if (Inst23 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<269,279,18>",(Uint8Array)); Inst23++; } } catch(e) {}
  let a = new Uint8Array(100);
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<261,262,18>",(a)); Inst22++; } } catch(e) {}
  let b = [1.1, 2.2, 3.3];
try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<292,293,19>",(b)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (opt) != "undefined") {_RecordType("<315,318,20>",(opt)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<319,320,20>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<322,323,20>",(b)); Inst27++; } } catch(e) {}
  opt(a, b, {
    valueOf: () => {
      b[0] = {};
try { if (Inst28 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<354,358,22>",(b[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<354,355,22>",(b)); Inst29++; } } catch(e) {}
      return 0;
    }
  });
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<395,400,26>",(print)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<401,405,26>",(b[0])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<401,402,26>",(b)); Inst32++; } } catch(e) {}
  print(b[0]);
}

try { if (Inst33 <= 1000 && typeof (main) != "undefined") {_RecordType("<411,415,29>",(main)); Inst33++; } } catch(e) {}
main();

