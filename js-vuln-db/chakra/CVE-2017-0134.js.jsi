var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var a1 = [];
try { if (Inst0 <= 1000 && typeof (a1) != "undefined") {_RecordType("<4,6,1>",(a1)); Inst0++; } } catch(e) {}

for (var i = 0; i < 0x100; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<23,24,3>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<30,31,3>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<41,42,3>",(i)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<58,59,4>",(i)); Inst6++; } } catch(e) {}
  a1[i] = i;
try { if (Inst4 <= 1000 && typeof (a1[i]) != "undefined") {_RecordType("<50,55,4>",(a1[i])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a1) != "undefined") {_RecordType("<50,52,4>",(a1)); Inst5++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (lower) != "undefined") {_RecordType("<74,79,7>",(lower)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (addr) != "undefined") {_RecordType("<80,84,7>",(addr)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (upper) != "undefined") {_RecordType("<87,92,7>",(upper)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (addr) != "undefined") {_RecordType("<93,97,7>",(addr)); Inst11++; } } catch(e) {}
var a2 = [lower(addr), upper(addr)];
try { if (Inst7 <= 1000 && typeof (a2) != "undefined") {_RecordType("<68,70,7>",(a2)); Inst7++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Function) != "undefined") {_RecordType("<113,121,8>",(Function)); Inst13++; } } catch(e) {}
var c = new Function();
try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<105,106,8>",(c)); Inst12++; } } catch(e) {}

c[Symbol.species] = function () {
  new_array = [];
try { if (Inst18 <= 1000 && typeof (new_array) != "undefined") {_RecordType("<162,171,11>",(new_array)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (new_array) != "undefined") {_RecordType("<187,196,12>",(new_array)); Inst19++; } } catch(e) {}
  return new_array;
};
try { if (Inst14 <= 1000 && typeof (c[Symbol.species]) != "undefined") {_RecordType("<126,143,10>",(c[Symbol.species])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<126,127,10>",(c)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<128,142,10>",(Symbol.species)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<128,134,10>",(Symbol)); Inst17++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<219,220,15>",(c)); Inst22++; } } catch(e) {}
a1.constructor = c;
try { if (Inst20 <= 1000 && typeof (a1.constructor) != "undefined") {_RecordType("<202,216,15>",(a1.constructor)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a1) != "undefined") {_RecordType("<202,204,15>",(a1)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (a2.__defineGetter__) != "undefined") {_RecordType("<223,242,17>",(a2.__defineGetter__)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a2) != "undefined") {_RecordType("<223,225,17>",(a2)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<243,268,17>",(Symbol.isConcatSpreadable)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<243,249,17>",(Symbol)); Inst26++; } } catch(e) {}
a2.__defineGetter__(Symbol.isConcatSpreadable, function () {
  new_array[0] = {};
try { if (Inst27 <= 1000 && typeof (new_array[0]) != "undefined") {_RecordType("<286,298,18>",(new_array[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (new_array) != "undefined") {_RecordType("<286,295,18>",(new_array)); Inst28++; } } catch(e) {}
  return true;
});

try { if (Inst30 <= 1000 && typeof (a1.concat) != "undefined") {_RecordType("<335,344,22>",(a1.concat)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a1) != "undefined") {_RecordType("<335,337,22>",(a1)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a2) != "undefined") {_RecordType("<345,347,22>",(a2)); Inst32++; } } catch(e) {}
var res = a1.concat(a2);
try { if (Inst29 <= 1000 && typeof (res) != "undefined") {_RecordType("<329,332,22>",(res)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (res[0x100 / 2]) != "undefined") {_RecordType("<350,364,23>",(res[0x100 / 2])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (res) != "undefined") {_RecordType("<350,353,23>",(res)); Inst34++; } } catch(e) {}
res[0x100 / 2];

