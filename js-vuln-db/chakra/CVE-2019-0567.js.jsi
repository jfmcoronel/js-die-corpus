var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (cons) != "undefined") {_RecordType("<9,13,1>",(cons)); Inst0++; } } catch(e) {}
function cons() {

}

try { if (Inst1 <= 1000 && typeof (opt) != "undefined") {_RecordType("<31,34,5>",(opt)); Inst1++; } } catch(e) {}
function opt(o, value) {
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<35,36,5>",(o)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (value) != "undefined") {_RecordType("<38,43,5>",(value)); Inst3++; } } catch(e) {}
    o.b = 1;
try { if (Inst4 <= 1000 && typeof (o.b) != "undefined") {_RecordType("<51,54,6>",(o.b)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<51,52,6>",(o)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (cons) != "undefined") {_RecordType("<69,73,8>",(cons)); Inst6++; } } catch(e) {}
    new cons();

try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<88,93,10>",(value)); Inst9++; } } catch(e) {}
    o.a = value;
try { if (Inst7 <= 1000 && typeof (o.a) != "undefined") {_RecordType("<82,85,10>",(o.a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<82,83,10>",(o)); Inst8++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (main) != "undefined") {_RecordType("<107,111,13>",(main)); Inst10++; } } catch(e) {}
function main() {
    for (let i = 0; i < 2000; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<129,130,14>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<136,137,14>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<146,147,14>",(i)); Inst13++; } } catch(e) {}
        cons.prototype = {};
try { if (Inst14 <= 1000 && typeof (cons.prototype) != "undefined") {_RecordType("<161,175,15>",(cons.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (cons) != "undefined") {_RecordType("<161,165,15>",(cons)); Inst15++; } } catch(e) {}

        let o = {a: 1, b: 2};
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<195,196,17>",(o)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (opt) != "undefined") {_RecordType("<221,224,18>",(opt)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<225,226,18>",(o)); Inst18++; } } catch(e) {}
        opt(o, {});
    }

    let o = {a: 1, b: 2};
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<248,249,21>",(o)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<288,289,23>",(o)); Inst22++; } } catch(e) {}
    cons.prototype = o;
try { if (Inst20 <= 1000 && typeof (cons.prototype) != "undefined") {_RecordType("<271,285,23>",(cons.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (cons) != "undefined") {_RecordType("<271,275,23>",(cons)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (opt) != "undefined") {_RecordType("<296,299,25>",(opt)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<300,301,25>",(o)); Inst24++; } } catch(e) {}
    opt(o, 0x1234);

try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<317,322,27>",(print)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o.a) != "undefined") {_RecordType("<323,326,27>",(o.a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<323,324,27>",(o)); Inst27++; } } catch(e) {}
    print(o.a);
}

try { if (Inst28 <= 1000 && typeof (main) != "undefined") {_RecordType("<332,336,30>",(main)); Inst28++; } } catch(e) {}
main();

