var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (inlinee) != "undefined") {_RecordType("<9,16,1>",(inlinee)); Inst0++; } } catch(e) {}
function inlinee() {
try { if (Inst1 <= 1000 && typeof (inlinee.arguments[0]) != "undefined") {_RecordType("<30,50,2>",(inlinee.arguments[0])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (inlinee.arguments) != "undefined") {_RecordType("<30,47,2>",(inlinee.arguments)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (inlinee) != "undefined") {_RecordType("<30,37,2>",(inlinee)); Inst3++; } } catch(e) {}
  return inlinee.arguments[0];
}

try { if (Inst4 <= 1000 && typeof (opt) != "undefined") {_RecordType("<64,67,5>",(opt)); Inst4++; } } catch(e) {}
function opt(convert_to_var_array) {
try { if (Inst5 <= 1000 && typeof (convert_to_var_array) != "undefined") {_RecordType("<68,88,5>",(convert_to_var_array)); Inst5++; } } catch(e) {}
  /*
  To make the in-place type conversion happen, it requires to segment.
  */
  let stack_arr = []; // JavascriptNativeFloatArray
try { if (Inst6 <= 1000 && typeof (stack_arr) != "undefined") {_RecordType("<179,188,9>",(stack_arr)); Inst6++; } } catch(e) {}

  stack_arr[10000] = 1.1;
try { if (Inst7 <= 1000 && typeof (stack_arr[10000]) != "undefined") {_RecordType("<228,244,11>",(stack_arr[10000])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (stack_arr) != "undefined") {_RecordType("<228,237,11>",(stack_arr)); Inst8++; } } catch(e) {}
  stack_arr[20000] = 2.2;
try { if (Inst9 <= 1000 && typeof (stack_arr[20000]) != "undefined") {_RecordType("<254,270,12>",(stack_arr[20000])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (stack_arr) != "undefined") {_RecordType("<254,263,12>",(stack_arr)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (inlinee) != "undefined") {_RecordType("<295,302,13>",(inlinee)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (stack_arr) != "undefined") {_RecordType("<303,312,13>",(stack_arr)); Inst13++; } } catch(e) {}
  let heap_arr = inlinee(stack_arr);
try { if (Inst11 <= 1000 && typeof (heap_arr) != "undefined") {_RecordType("<284,292,13>",(heap_arr)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (convert_to_var_array) != "undefined") {_RecordType("<317,337,14>",(convert_to_var_array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (heap_arr) != "undefined") {_RecordType("<338,346,14>",(heap_arr)); Inst15++; } } catch(e) {}
  convert_to_var_array(heap_arr);
  stack_arr[10000] = 2.3023e-320;
try { if (Inst16 <= 1000 && typeof (stack_arr[10000]) != "undefined") {_RecordType("<351,367,15>",(stack_arr[10000])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (stack_arr) != "undefined") {_RecordType("<351,360,15>",(stack_arr)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (heap_arr[10000]) != "undefined") {_RecordType("<392,407,16>",(heap_arr[10000])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (heap_arr) != "undefined") {_RecordType("<392,400,16>",(heap_arr)); Inst19++; } } catch(e) {}
  return heap_arr[10000];
}

try { if (Inst20 <= 1000 && typeof (main) != "undefined") {_RecordType("<421,425,19>",(main)); Inst20++; } } catch(e) {}
function main() {
  for (let i = 0; i < 10000; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<441,442,20>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,20>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<459,460,20>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (opt) != "undefined") {_RecordType("<470,473,21>",(opt)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Function) != "undefined") {_RecordType("<478,486,21>",(Function)); Inst25++; } } catch(e) {}
    opt(new Function('')); // Prevents to be inlined
  }

try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<526,531,24>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (opt) != "undefined") {_RecordType("<532,535,24>",(opt)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (heap_arr) != "undefined") {_RecordType("<536,544,24>",(heap_arr)); Inst28++; } } catch(e) {}
  print(opt(heap_arr => {
    heap_arr[10000] = {}; // ConvertToVarArray
try { if (Inst29 <= 1000 && typeof (heap_arr[10000]) != "undefined") {_RecordType("<554,569,25>",(heap_arr[10000])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (heap_arr) != "undefined") {_RecordType("<554,562,25>",(heap_arr)); Inst30++; } } catch(e) {}
  }));
}

try { if (Inst31 <= 1000 && typeof (main) != "undefined") {_RecordType("<607,611,29>",(main)); Inst31++; } } catch(e) {}
main();

