var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var a = [1];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<4,5,1>",(a)); Inst0++; } } catch(e) {}
a.length = 1000;
try { if (Inst1 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<13,21,2>",(a.length)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,2>",(a)); Inst2++; } } catch(e) {}
var j = [];
try { if (Inst3 <= 1000 && typeof (j) != "undefined") {_RecordType("<34,35,3>",(j)); Inst3++; } } catch(e) {}
var o = {};
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<46,47,4>",(o)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<54,75,5>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<54,60,5>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<76,77,5>",(o)); Inst7++; } } catch(e) {}
Object.defineProperty(o, '1', {
  get: function () {
    a.length = 1002;
try { if (Inst8 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<111,119,7>",(a.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<111,112,7>",(a)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (j.fill.call) != "undefined") {_RecordType("<132,143,8>",(j.fill.call)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (j.fill) != "undefined") {_RecordType("<132,138,8>",(j.fill)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (j) != "undefined") {_RecordType("<132,133,8>",(j)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<144,145,8>",(a)); Inst13++; } } catch(e) {}
    j.fill.call(a, 7.7);
    return 2;
  }
});
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<189,190,12>",(o)); Inst16++; } } catch(e) {}
a.__proto__ = o;
try { if (Inst14 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<175,186,12>",(a.__proto__)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<175,176,12>",(a)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (j.reverse.call) != "undefined") {_RecordType("<200,214,13>",(j.reverse.call)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (j.reverse) != "undefined") {_RecordType("<200,209,13>",(j.reverse)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<200,201,13>",(j)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<215,216,13>",(a)); Inst21++; } } catch(e) {}
var r = j.reverse.call(a);
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<196,197,13>",(r)); Inst17++; } } catch(e) {}
r.length = 0xfffffffe;
try { if (Inst22 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<219,227,14>",(r.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (r) != "undefined") {_RecordType("<219,220,14>",(r)); Inst23++; } } catch(e) {}
r[0xfffffffe - 1] = 10;
try { if (Inst24 <= 1000 && typeof (r[0xfffffffe - 1]) != "undefined") {_RecordType("<242,259,15>",(r[0xfffffffe - 1])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (r) != "undefined") {_RecordType("<242,243,15>",(r)); Inst25++; } } catch(e) {}

