var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt(arr, arr2) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<13,16,1>",(arr)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<18,22,1>",(arr2)); Inst2++; } } catch(e) {}
  arr[0] = 1.1;
try { if (Inst3 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<28,34,2>",(arr[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<28,31,2>",(arr)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (arr2.method) != "undefined") {_RecordType("<44,55,3>",(arr2.method)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<44,48,3>",(arr2)); Inst6++; } } catch(e) {}
  arr2.method(arr2[0] = {});
try { if (Inst7 <= 1000 && typeof (arr2[0]) != "undefined") {_RecordType("<56,63,3>",(arr2[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<56,60,3>",(arr2)); Inst8++; } } catch(e) {}
  arr[0] = 2.3023e-320;
try { if (Inst9 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<73,79,4>",(arr[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<73,76,4>",(arr)); Inst10++; } } catch(e) {}
}

Object.prototype.method = () => {
  ;
};
try { if (Inst11 <= 1000 && typeof (Object.prototype.method) != "undefined") {_RecordType("<98,121,7>",(Object.prototype.method)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<98,114,7>",(Object.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<98,104,7>",(Object)); Inst13++; } } catch(e) {}

let arr = [1.1, 2.2];
try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<144,147,11>",(arr)); Inst14++; } } catch(e) {}

for (let i = 0; i < 100; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<172,173,13>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,13>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<188,189,13>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (opt) != "undefined") {_RecordType("<197,200,14>",(opt)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<201,204,14>",(arr)); Inst19++; } } catch(e) {}
  opt(arr, 1); // Feeding an integer to make the value type LikelyCanBeTaggedValue_Int_PrimitiveOrObject

try { if (Inst20 <= 1000 && typeof (opt) != "undefined") {_RecordType("<303,306,16>",(opt)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<307,310,16>",(arr)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arr.concat) != "undefined") {_RecordType("<312,322,16>",(arr.concat)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr) != "undefined") {_RecordType("<312,315,16>",(arr)); Inst23++; } } catch(e) {}
  opt(arr, arr.concat());
}

try { if (Inst24 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<330,340,19>",(setTimeout)); Inst24++; } } catch(e) {}
setTimeout(() => {
try { if (Inst25 <= 1000 && typeof (opt) != "undefined") {_RecordType("<351,354,20>",(opt)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arr) != "undefined") {_RecordType("<355,358,20>",(arr)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<360,363,20>",(arr)); Inst27++; } } catch(e) {}
  opt(arr, arr);
try { if (Inst28 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<368,379,21>",(console.log)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (console) != "undefined") {_RecordType("<368,375,21>",(console)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arr) != "undefined") {_RecordType("<380,383,21>",(arr)); Inst30++; } } catch(e) {}
  console.log(arr);
}, 100); // Waiting for the JIT server to finish its job.

