var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt() {
    let o = {};  // stack-allocated object
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<25,26,2>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<64,67,3>",(o.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<64,65,3>",(o)); Inst3++; } } catch(e) {}
    o.x;  // under with DisableImplicitFlags set
}

try { if (Inst4 <= 1000 && typeof (main) != "undefined") {_RecordType("<121,125,6>",(main)); Inst4++; } } catch(e) {}
function main() {
    for (let i = 0; i < 10000; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<143,144,7>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<150,151,7>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<161,162,7>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (opt) != "undefined") {_RecordType("<176,179,8>",(opt)); Inst8++; } } catch(e) {}
        opt();
    }

    let leaked_stack_object = null;
try { if (Inst9 <= 1000 && typeof (leaked_stack_object) != "undefined") {_RecordType("<198,217,11>",(leaked_stack_object)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (({}).__proto__) != "undefined") {_RecordType("<253,267,12>",(({}).__proto__)); Inst11++; } } catch(e) {}
    let object_prototype = ({}).__proto__;
try { if (Inst10 <= 1000 && typeof (object_prototype) != "undefined") {_RecordType("<234,250,12>",(object_prototype)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (object_prototype.__defineGetter__) != "undefined") {_RecordType("<273,306,13>",(object_prototype.__defineGetter__)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (object_prototype) != "undefined") {_RecordType("<273,289,13>",(object_prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Error.prototype.toString) != "undefined") {_RecordType("<312,336,13>",(Error.prototype.toString)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Error.prototype) != "undefined") {_RecordType("<312,327,13>",(Error.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Error) != "undefined") {_RecordType("<312,317,13>",(Error)); Inst16++; } } catch(e) {}
    object_prototype.__defineGetter__('x', Error.prototype.toString);
try { if (Inst17 <= 1000 && typeof (object_prototype.__defineGetter__) != "undefined") {_RecordType("<343,376,14>",(object_prototype.__defineGetter__)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (object_prototype) != "undefined") {_RecordType("<343,359,14>",(object_prototype)); Inst18++; } } catch(e) {}
    object_prototype.__defineGetter__('message', function () {
try { if (Inst19 <= 1000 && typeof (object_prototype.message) != "undefined") {_RecordType("<417,441,15>",(object_prototype.message)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (object_prototype) != "undefined") {_RecordType("<417,433,15>",(object_prototype)); Inst20++; } } catch(e) {}
        delete object_prototype.message;

        leaked_stack_object = this;
try { if (Inst21 <= 1000 && typeof (leaked_stack_object) != "undefined") {_RecordType("<452,471,17>",(leaked_stack_object)); Inst21++; } } catch(e) {}
    });

try { if (Inst24 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<517,532,20>",(Array.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<517,522,20>",(Array)); Inst25++; } } catch(e) {}
    object_prototype.name = Array.prototype;  // access to Array.prototype will call JsBuiltInEngineInterfaceExtensionObject::InjectJsBuiltInLibraryCode.
try { if (Inst22 <= 1000 && typeof (object_prototype.name) != "undefined") {_RecordType("<493,514,20>",(object_prototype.name)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (object_prototype) != "undefined") {_RecordType("<493,509,20>",(object_prototype)); Inst23++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (opt) != "undefined") {_RecordType("<648,651,22>",(opt)); Inst26++; } } catch(e) {}
    opt();

try { if (Inst27 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<660,671,24>",(console.log)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (console) != "undefined") {_RecordType("<660,667,24>",(console)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (leaked_stack_object) != "undefined") {_RecordType("<672,691,24>",(leaked_stack_object)); Inst29++; } } catch(e) {}
    console.log(leaked_stack_object);
}

try { if (Inst30 <= 1000 && typeof (main) != "undefined") {_RecordType("<697,701,27>",(main)); Inst30++; } } catch(e) {}
main();

