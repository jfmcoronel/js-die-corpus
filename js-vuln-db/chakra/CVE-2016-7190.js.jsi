var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<12,17,1>",(Array)); Inst1++; } } catch(e) {}
var d = new Array(1, 2, 3);
try { if (Inst0 <= 1000 && typeof (d) != "undefined") {_RecordType("<4,5,1>",(d)); Inst0++; } } catch(e) {}

class dummy {
  constructor() {
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<72,73,5>",(d)); Inst3++; } } catch(e) {}
    return d;
  }

}
try { if (Inst2 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<35,40,3>",(dummy)); Inst2++; } } catch(e) {}

var handler = {
  get: function (target, name) {
try { if (Inst5 <= 1000 && typeof (target) != "undefined") {_RecordType("<116,122,11>",(target)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (name) != "undefined") {_RecordType("<124,128,11>",(name)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (name) != "undefined") {_RecordType("<140,144,12>",(name)); Inst7++; } } catch(e) {}
    if (name == "length") {
      return 0x100;
    }

try { if (Inst8 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<224,229,17>",(dummy)); Inst8++; } } catch(e) {}
    return {
      [Symbol.species]: dummy
    };
  },
  has: function (target, name) {
try { if (Inst9 <= 1000 && typeof (target) != "undefined") {_RecordType("<259,265,20>",(target)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (name) != "undefined") {_RecordType("<267,271,20>",(name)); Inst10++; } } catch(e) {}
    return true;
  }
};
try { if (Inst4 <= 1000 && typeof (handler) != "undefined") {_RecordType("<87,94,10>",(handler)); Inst4++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<311,316,24>",(Proxy)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (handler) != "undefined") {_RecordType("<321,328,24>",(handler)); Inst13++; } } catch(e) {}
var p = new Proxy([], handler);
try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<303,304,24>",(p)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<343,348,25>",(Array)); Inst15++; } } catch(e) {}
var a = new Array(1, 2, 3);
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<335,336,25>",(a)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<369,373,27>",(test)); Inst16++; } } catch(e) {}
function test() {
  return 0x777777777777;
}

try { if (Inst18 <= 1000 && typeof (a.map.call) != "undefined") {_RecordType("<414,424,31>",(a.map.call)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a.map) != "undefined") {_RecordType("<414,419,31>",(a.map)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<414,415,31>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<425,426,31>",(p)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<428,432,31>",(test)); Inst22++; } } catch(e) {}
var o = a.map.call(p, test);
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<410,411,31>",(o)); Inst17++; } } catch(e) {}

