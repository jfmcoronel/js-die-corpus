var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt(arr, s) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<13,16,1>",(arr)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (s) != "undefined") {_RecordType("<18,19,1>",(s)); Inst2++; } } catch(e) {}
  arr[0] = 1.1;
try { if (Inst3 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<25,31,2>",(arr[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<25,28,2>",(arr)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<46,47,4>",(s)); Inst5++; } } catch(e) {}
  if (s !== null) {
try { if (Inst7 <= 1000 && typeof ('a'.localeCompare) != "undefined") {_RecordType("<74,91,5>",('a'.localeCompare)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<92,93,5>",(s)); Inst8++; } } catch(e) {}
    let tmp = 'a'.localeCompare(s);
try { if (Inst6 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<68,71,5>",(tmp)); Inst6++; } } catch(e) {}
  }

  arr[0] = 2.3023e-320;
try { if (Inst9 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<103,109,8>",(arr[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<103,106,8>",(arr)); Inst10++; } } catch(e) {}
}

try { if (Inst11 <= 1000 && typeof (main) != "undefined") {_RecordType("<137,141,11>",(main)); Inst11++; } } catch(e) {}
function main() {
  let arr = [1.1];
try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<152,155,12>",(arr)); Inst12++; } } catch(e) {}

  for (let i = 0; i < 100; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<177,178,14>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<184,185,14>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<193,194,14>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof ('a'.localeCompare) != "undefined") {_RecordType("<204,221,15>",('a'.localeCompare)); Inst16++; } } catch(e) {}
    'a'.localeCompare('x', []); // Optimize the JavaScript localeCompare

try { if (Inst17 <= 1000 && typeof (opt) != "undefined") {_RecordType("<278,281,17>",(opt)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<282,285,17>",(arr)); Inst18++; } } catch(e) {}
    opt(arr, null); // for profiling all instructions in opt.

try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<515,516,25>",(e)); Inst21++; } } catch(e) {}
    try {
try { if (Inst19 <= 1000 && typeof (opt) != "undefined") {_RecordType("<353,356,20>",(opt)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<357,360,20>",(arr)); Inst20++; } } catch(e) {}
      opt(arr, {
        toString: () => {
          throw 1; // Don't profile "if (locales === undefined && options === undefined) {"
        }
      });
    } catch (e) {
      ;
    }
  }

try { if (Inst22 <= 1000 && typeof (opt) != "undefined") {_RecordType("<541,544,30>",(opt)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr) != "undefined") {_RecordType("<545,548,30>",(arr)); Inst23++; } } catch(e) {}
  opt(arr, {
    toString: () => {
      // Called twice
      arr[0] = {};
try { if (Inst24 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<602,608,33>",(arr[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<602,605,33>",(arr)); Inst25++; } } catch(e) {}
    }
  });
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<629,634,36>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<635,638,36>",(arr)); Inst27++; } } catch(e) {}
  print(arr);
}

try { if (Inst28 <= 1000 && typeof (main) != "undefined") {_RecordType("<644,648,39>",(main)); Inst28++; } } catch(e) {}
main();

