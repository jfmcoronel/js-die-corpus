var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt(a, b, always_true = true) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (always_true) != "undefined") {_RecordType("<19,30,1>",(always_true)); Inst3++; } } catch(e) {}
  a[0] = 1234;
try { if (Inst4 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<43,47,2>",(a[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<43,44,2>",(a)); Inst5++; } } catch(e) {}
  b[0] = 0;
try { if (Inst6 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<58,62,3>",(b[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<58,59,3>",(b)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<80,81,4>",(a)); Inst9++; } } catch(e) {}
  let arr = a;
try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<74,77,4>",(arr)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (always_true) != "undefined") {_RecordType("<90,101,6>",(always_true)); Inst10++; } } catch(e) {}
  if (always_true) {
try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<115,116,7>",(b)); Inst12++; } } catch(e) {}
    arr = b;
try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<109,112,7>",(arr)); Inst11++; } } catch(e) {}

    for (let i = 0; i < arr.length; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<132,133,9>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<139,140,9>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<143,153,9>",(arr.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<143,146,9>",(arr)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<155,156,9>",(i)); Inst17++; } } catch(e) {}
      arr[i] = 0;
try { if (Inst18 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<168,174,10>",(arr[i])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<168,171,10>",(arr)); Inst19++; } } catch(e) {}
    }
  }

try { if (Inst21 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<203,209,14>",(arr[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<203,206,14>",(arr)); Inst22++; } } catch(e) {}
  let val = arr[0];
try { if (Inst20 <= 1000 && typeof (val) != "undefined") {_RecordType("<197,200,14>",(val)); Inst20++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (val) != "undefined") {_RecordType("<218,221,16>",(val)); Inst23++; } } catch(e) {}
  if (val) {
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<229,234,17>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (val) != "undefined") {_RecordType("<235,238,17>",(val)); Inst25++; } } catch(e) {}
    print(val); // Must be 0, but prints out 1234

    return true;
  }

  return false;
}

try { if (Inst27 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<329,340,25>",(Uint32Array)); Inst27++; } } catch(e) {}
let a = new Uint32Array(1);
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<321,322,25>",(a)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<357,368,26>",(Uint32Array)); Inst29++; } } catch(e) {}
let b = new Uint32Array(0x1000);
try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<349,350,26>",(b)); Inst28++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<388,389,28>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<395,396,28>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<406,407,28>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (opt) != "undefined") {_RecordType("<419,422,29>",(opt)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<423,424,29>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<426,427,29>",(b)); Inst35++; } } catch(e) {}
  if (opt(a, b)) {
    break;
  }
}

