var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (convert) != "undefined") {_RecordType("<9,16,1>",(convert)); Inst0++; } } catch(e) {}
function convert(data) {
try { if (Inst1 <= 1000 && typeof (data) != "undefined") {_RecordType("<17,21,1>",(data)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<35,46,2>",(ArrayBuffer)); Inst3++; } } catch(e) {}
  a = new ArrayBuffer(8);
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<27,28,2>",(a)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<61,73,3>",(Float64Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<74,75,3>",(a)); Inst6++; } } catch(e) {}
  b = new Float64Array(a);
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<53,54,3>",(b)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<88,98,4>",(Uint8Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<99,100,4>",(a)); Inst9++; } } catch(e) {}
  c = new Uint8Array(a);
try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<80,81,4>",(c)); Inst7++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (data) != "undefined") {_RecordType("<112,116,5>",(data)); Inst12++; } } catch(e) {}
  b[0] = data;
try { if (Inst10 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<105,109,5>",(b[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<105,106,5>",(b)); Inst11++; } } catch(e) {}
  ret = 0;
try { if (Inst13 <= 1000 && typeof (ret) != "undefined") {_RecordType("<120,123,6>",(ret)); Inst13++; } } catch(e) {}

  for (i = 0; i < 8; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<137,138,8>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<144,145,8>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,8>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (c[7 - i].toString) != "undefined") {_RecordType("<169,186,9>",(c[7 - i].toString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (c[7 - i]) != "undefined") {_RecordType("<169,177,9>",(c[7 - i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (c) != "undefined") {_RecordType("<169,170,9>",(c)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,9>",(i)); Inst21++; } } catch(e) {}
    ret += c[7 - i].toString(16);
try { if (Inst17 <= 1000 && typeof (ret) != "undefined") {_RecordType("<162,165,9>",(ret)); Inst17++; } } catch(e) {}
  }

try { if (Inst22 <= 1000 && typeof (ret) != "undefined") {_RecordType("<206,209,12>",(ret)); Inst22++; } } catch(e) {}
  return ret;
}

try { if (Inst23 <= 1000 && typeof (leak) != "undefined") {_RecordType("<223,227,15>",(leak)); Inst23++; } } catch(e) {}
function leak(target) {
try { if (Inst24 <= 1000 && typeof (target) != "undefined") {_RecordType("<228,234,15>",(target)); Inst24++; } } catch(e) {}
  var a1 = [];
try { if (Inst25 <= 1000 && typeof (a1) != "undefined") {_RecordType("<244,246,16>",(a1)); Inst25++; } } catch(e) {}

  for (var i = 0; i < 0x100; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,18>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,18>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<283,284,18>",(i)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,19>",(i)); Inst31++; } } catch(e) {}
    a1[i] = i;
try { if (Inst29 <= 1000 && typeof (a1[i]) != "undefined") {_RecordType("<294,299,19>",(a1[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a1) != "undefined") {_RecordType("<294,296,19>",(a1)); Inst30++; } } catch(e) {}
  }

  var a2 = [1234, 1234];
try { if (Inst32 <= 1000 && typeof (a2) != "undefined") {_RecordType("<316,318,22>",(a2)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (Function) != "undefined") {_RecordType("<349,357,23>",(Function)); Inst34++; } } catch(e) {}
  var c = new Function();
try { if (Inst33 <= 1000 && typeof (c) != "undefined") {_RecordType("<341,342,23>",(c)); Inst33++; } } catch(e) {}

  c[Symbol.species] = function () {
    new_array = [99, 99, 99];
try { if (Inst39 <= 1000 && typeof (new_array) != "undefined") {_RecordType("<402,411,26>",(new_array)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (new_array) != "undefined") {_RecordType("<439,448,27>",(new_array)); Inst40++; } } catch(e) {}
    return new_array;
  };
try { if (Inst35 <= 1000 && typeof (c[Symbol.species]) != "undefined") {_RecordType("<364,381,25>",(c[Symbol.species])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (c) != "undefined") {_RecordType("<364,365,25>",(c)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<366,380,25>",(Symbol.species)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<366,372,25>",(Symbol)); Inst38++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (c) != "undefined") {_RecordType("<475,476,30>",(c)); Inst43++; } } catch(e) {}
  a1.constructor = c;
try { if (Inst41 <= 1000 && typeof (a1.constructor) != "undefined") {_RecordType("<458,472,30>",(a1.constructor)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a1) != "undefined") {_RecordType("<458,460,30>",(a1)); Inst42++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (a2.__defineGetter__) != "undefined") {_RecordType("<481,500,32>",(a2.__defineGetter__)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a2) != "undefined") {_RecordType("<481,483,32>",(a2)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<501,526,32>",(Symbol.isConcatSpreadable)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<501,507,32>",(Symbol)); Inst47++; } } catch(e) {}
  a2.__defineGetter__(Symbol.isConcatSpreadable, function () {
    new_array[0] = 4.2;
try { if (Inst48 <= 1000 && typeof (new_array[0]) != "undefined") {_RecordType("<546,558,33>",(new_array[0])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (new_array) != "undefined") {_RecordType("<546,555,33>",(new_array)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (target) != "undefined") {_RecordType("<578,584,34>",(target)); Inst52++; } } catch(e) {}
    a2[0] = target;
try { if (Inst50 <= 1000 && typeof (a2[0]) != "undefined") {_RecordType("<570,575,34>",(a2[0])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a2) != "undefined") {_RecordType("<570,572,34>",(a2)); Inst51++; } } catch(e) {}
    return true;
  });

try { if (Inst54 <= 1000 && typeof (a1.concat) != "undefined") {_RecordType("<622,631,38>",(a1.concat)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a1) != "undefined") {_RecordType("<622,624,38>",(a1)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (a2) != "undefined") {_RecordType("<632,634,38>",(a2)); Inst56++; } } catch(e) {}
  var res = a1.concat(a2);
try { if (Inst53 <= 1000 && typeof (res) != "undefined") {_RecordType("<616,619,38>",(res)); Inst53++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (convert) != "undefined") {_RecordType("<646,653,39>",(convert)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (res[256]) != "undefined") {_RecordType("<654,662,39>",(res[256])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (res) != "undefined") {_RecordType("<654,657,39>",(res)); Inst59++; } } catch(e) {}
  return convert(res[256]);
}

a = [1, 2, 3];
try { if (Inst60 <= 1000 && typeof (a) != "undefined") {_RecordType("<668,669,42>",(a)); Inst60++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (leak) != "undefined") {_RecordType("<687,691,43>",(leak)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<692,693,43>",(a)); Inst63++; } } catch(e) {}
v = leak(a);
try { if (Inst61 <= 1000 && typeof (v) != "undefined") {_RecordType("<683,684,43>",(v)); Inst61++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<696,707,44>",(console.log)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (console) != "undefined") {_RecordType("<696,703,44>",(console)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (v) != "undefined") {_RecordType("<708,709,44>",(v)); Inst66++; } } catch(e) {}
console.log(v);

