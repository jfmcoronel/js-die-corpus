var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.r.input) != "undefined") {_RecordType("<29,38,2>",(o.r.input)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o.r) != "undefined") {_RecordType("<29,32,2>",(o.r)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<29,30,2>",(o)); Inst4++; } } catch(e) {}
    return o.r.input;
}

try { if (Inst5 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<43,56,5>",(Object.assign)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<43,49,5>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<61,67,5>",(RegExp)); Inst7++; } } catch(e) {}
Object.assign({}, RegExp);  // Reifying

for (let i = 0; i < 200000; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<93,94,7>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<100,101,7>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<112,113,7>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (opt) != "undefined") {_RecordType("<123,126,8>",(opt)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<131,137,8>",(RegExp)); Inst12++; } } catch(e) {}
    opt({r: RegExp});
}

try { if (Inst14 <= 1000 && typeof (opt) != "undefined") {_RecordType("<156,159,11>",(opt)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<164,170,11>",(RegExp)); Inst15++; } } catch(e) {}
let input = opt({r: RegExp});   // Pulling the CustomGetterSetter object.
try { if (Inst13 <= 1000 && typeof (input) != "undefined") {_RecordType("<148,153,11>",(input)); Inst13++; } } catch(e) {}

let o = {
    a0: 0x1234,
    a1: 0x1234,
    a2: 0x1234,
    a3: 0x1234,
    a4: 0x1234,
    a5: 0x1234,
    a6: 0x1234,
    a7: 0x1234,
    a8: 0x1234,
    a9: 0x1234,
    a10: 0x1234,
    a11: 0x1234,
}
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<223,224,13>",(o)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (input) != "undefined") {_RecordType("<436,441,28>",(input)); Inst19++; } } catch(e) {}
o.input = input;
try { if (Inst17 <= 1000 && typeof (o.input) != "undefined") {_RecordType("<426,433,28>",(o.input)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<426,427,28>",(o)); Inst18++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<444,449,30>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o.input) != "undefined") {_RecordType("<450,457,30>",(o.input)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<450,451,30>",(o)); Inst22++; } } catch(e) {}
print(o.input);  // The normal interpreter doesn't see the attributes, so it will just call the underneath getter using callCustomGetter.

