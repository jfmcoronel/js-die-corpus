var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (gc) != "undefined") {_RecordType("<9,11,1>",(gc)); Inst0++; } } catch(e) {}
function gc() {
  for (let i = 0; i < 10; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<27,28,2>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<34,35,2>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<42,43,2>",(i)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<66,77,3>",(ArrayBuffer)); Inst5++; } } catch(e) {}
    let ab = new ArrayBuffer(1024 * 1024 * 10);
try { if (Inst4 <= 1000 && typeof (ab) != "undefined") {_RecordType("<57,59,3>",(ab)); Inst4++; } } catch(e) {}
  }
}

try { if (Inst6 <= 1000 && typeof (opt) != "undefined") {_RecordType("<113,116,7>",(opt)); Inst6++; } } catch(e) {}
function opt(obj) {
try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<117,120,7>",(obj)); Inst7++; } } catch(e) {}
  // Starting the optimization.
  for (let i = 0; i < 500; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<167,168,9>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,9>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<183,184,9>",(i)); Inst10++; } } catch(e) {}
    ;
  }

  let tmp = {
    a: 1
  };
try { if (Inst11 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<207,210,13>",(tmp)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (gc) != "undefined") {_RecordType("<231,233,16>",(gc)); Inst12++; } } catch(e) {}
  gc();
  tmp.__proto__ = {};
try { if (Inst13 <= 1000 && typeof (tmp.__proto__) != "undefined") {_RecordType("<239,252,17>",(tmp.__proto__)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<239,242,17>",(tmp)); Inst14++; } } catch(e) {}

  for (let k in tmp) {
try { if (Inst15 <= 1000 && typeof (k) != "undefined") {_RecordType("<271,272,19>",(k)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<276,279,19>",(tmp)); Inst16++; } } catch(e) {}
    // The structure ID of "tmp" is stored in a JSPropertyNameEnumerator.
    tmp.__proto__ = {};
try { if (Inst17 <= 1000 && typeof (tmp.__proto__) != "undefined") {_RecordType("<361,374,21>",(tmp.__proto__)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<361,364,21>",(tmp)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (gc) != "undefined") {_RecordType("<385,387,22>",(gc)); Inst19++; } } catch(e) {}
    gc();
    obj.__proto__ = {}; // The structure ID of "obj" equals to tmp's.
try { if (Inst20 <= 1000 && typeof (obj.__proto__) != "undefined") {_RecordType("<395,408,23>",(obj.__proto__)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj) != "undefined") {_RecordType("<395,398,23>",(obj)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (obj[k]) != "undefined") {_RecordType("<473,479,25>",(obj[k])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj) != "undefined") {_RecordType("<473,476,25>",(obj)); Inst23++; } } catch(e) {}
    return obj[k]; // Type confusion.
  }
}

try { if (Inst24 <= 1000 && typeof (opt) != "undefined") {_RecordType("<507,510,29>",(opt)); Inst24++; } } catch(e) {}
opt({});
try { if (Inst26 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<545,556,30>",(Uint32Array)); Inst26++; } } catch(e) {}
let fake_object_memory = new Uint32Array(100);
try { if (Inst25 <= 1000 && typeof (fake_object_memory) != "undefined") {_RecordType("<520,538,30>",(fake_object_memory)); Inst25++; } } catch(e) {}
fake_object_memory[0] = 0x1234;
try { if (Inst27 <= 1000 && typeof (fake_object_memory[0]) != "undefined") {_RecordType("<563,584,31>",(fake_object_memory[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (fake_object_memory) != "undefined") {_RecordType("<563,581,31>",(fake_object_memory)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (opt) != "undefined") {_RecordType("<613,616,32>",(opt)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (fake_object_memory) != "undefined") {_RecordType("<617,635,32>",(fake_object_memory)); Inst31++; } } catch(e) {}
let fake_object = opt(fake_object_memory);
try { if (Inst29 <= 1000 && typeof (fake_object) != "undefined") {_RecordType("<599,610,32>",(fake_object)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<638,643,33>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (fake_object) != "undefined") {_RecordType("<644,655,33>",(fake_object)); Inst33++; } } catch(e) {}
print(fake_object);

