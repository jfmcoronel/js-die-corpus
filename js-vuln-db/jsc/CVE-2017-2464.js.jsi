var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var a = [];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<4,5,1>",(a)); Inst0++; } } catch(e) {}
a.length = 0xffffff00;
try { if (Inst1 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<12,20,2>",(a.length)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<12,13,2>",(a)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<43,51,3>",(a.splice)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<43,44,3>",(a)); Inst5++; } } catch(e) {}
var b = a.splice(0, 0x100000); // Undecided array
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<39,40,3>",(b)); Inst3++; } } catch(e) {}

var args = [];
try { if (Inst6 <= 1000 && typeof (args) != "undefined") {_RecordType("<90,94,5>",(args)); Inst6++; } } catch(e) {}
args.length = 4094;
try { if (Inst7 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<101,112,6>",(args.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (args) != "undefined") {_RecordType("<101,105,6>",(args)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (args.fill) != "undefined") {_RecordType("<121,130,7>",(args.fill)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<121,125,7>",(args)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<131,132,7>",(b)); Inst11++; } } catch(e) {}
args.fill(b);
var q = [];
try { if (Inst12 <= 1000 && typeof (q) != "undefined") {_RecordType("<139,140,8>",(q)); Inst12++; } } catch(e) {}
q.length = 0x1000;
try { if (Inst13 <= 1000 && typeof (q.length) != "undefined") {_RecordType("<147,155,9>",(q.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (q) != "undefined") {_RecordType("<147,148,9>",(q)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (q.fill) != "undefined") {_RecordType("<166,172,10>",(q.fill)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (q) != "undefined") {_RecordType("<166,167,10>",(q)); Inst16++; } } catch(e) {}
q.fill(7);
try { if (Inst18 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<185,193,11>",(a.splice)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<185,186,11>",(a)); Inst19++; } } catch(e) {}
var c = a.splice(0, 0xfffef); //Shorter undecided array
try { if (Inst17 <= 1000 && typeof (c) != "undefined") {_RecordType("<181,182,11>",(c)); Inst17++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<247,248,13>",(c)); Inst22++; } } catch(e) {}
args[4094] = c;
try { if (Inst20 <= 1000 && typeof (args[4094]) != "undefined") {_RecordType("<234,244,13>",(args[4094])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (args) != "undefined") {_RecordType("<234,238,13>",(args)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (q) != "undefined") {_RecordType("<263,264,14>",(q)); Inst25++; } } catch(e) {}
args[4095] = q;
try { if (Inst23 <= 1000 && typeof (args[4095]) != "undefined") {_RecordType("<250,260,14>",(args[4095])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (args) != "undefined") {_RecordType("<250,254,14>",(args)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (b.concat.apply) != "undefined") {_RecordType("<266,280,15>",(b.concat.apply)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b.concat) != "undefined") {_RecordType("<266,274,15>",(b.concat)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<266,267,15>",(b)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<281,282,15>",(b)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (args) != "undefined") {_RecordType("<284,288,15>",(args)); Inst30++; } } catch(e) {}
b.concat.apply(b, args);

