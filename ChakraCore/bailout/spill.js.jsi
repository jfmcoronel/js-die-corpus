var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst1 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<392,396,6>",(obj0)); Inst1++; } } catch(e) {}

  var func1 = function (argFunc1, argMath2) {
try { if (Inst3 <= 1000 && typeof (argFunc1) != "undefined") {_RecordType("<428,436,8>",(argFunc1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (argMath2) != "undefined") {_RecordType("<438,446,8>",(argMath2)); Inst4++; } } catch(e) {}
    for (var __loopvar4 = 0; __loopvar4 < 3;) {
try { if (Inst5 <= 1000 && typeof (__loopvar4) != "undefined") {_RecordType("<463,473,9>",(__loopvar4)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (__loopvar4) != "undefined") {_RecordType("<479,489,9>",(__loopvar4)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (__loopvar4) != "undefined") {_RecordType("<504,514,10>",(__loopvar4)); Inst7++; } } catch(e) {}
      __loopvar4++;
      argMath2 ^= 1;
try { if (Inst8 <= 1000 && typeof (argMath2) != "undefined") {_RecordType("<524,532,11>",(argMath2)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (this.prop1) != "undefined") {_RecordType("<558,568,12>",(this.prop1)); Inst11++; } } catch(e) {}
      obj0.prop1 = this.prop1++;
try { if (Inst9 <= 1000 && typeof (obj0.prop1) != "undefined") {_RecordType("<545,555,12>",(obj0.prop1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<545,549,12>",(obj0)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (this.prop1) != "undefined") {_RecordType("<591,601,13>",(this.prop1)); Inst13++; } } catch(e) {}
      __loopvar4 = this.prop1++;
try { if (Inst12 <= 1000 && typeof (__loopvar4) != "undefined") {_RecordType("<578,588,13>",(__loopvar4)); Inst12++; } } catch(e) {}
    }
  };
try { if (Inst2 <= 1000 && typeof (func1) != "undefined") {_RecordType("<410,415,8>",(func1)); Inst2++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (func1) != "undefined") {_RecordType("<619,624,17>",(func1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (func1) != "undefined") {_RecordType("<634,639,17>",(func1)); Inst15++; } } catch(e) {}
  func1(1, true, func1(1, 1, 1));
try { if (Inst16 <= 1000 && typeof (func1.call) != "undefined") {_RecordType("<653,663,18>",(func1.call)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (func1) != "undefined") {_RecordType("<653,658,18>",(func1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<664,668,18>",(obj0)); Inst18++; } } catch(e) {}
  func1.call(obj0);
}

; // generate profile

try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<697,702,23>",(test0)); Inst19++; } } catch(e) {}
test0();
try { if (Inst20 <= 1000 && typeof (test0) != "undefined") {_RecordType("<706,711,24>",(test0)); Inst20++; } } catch(e) {}
test0();
try { if (Inst21 <= 1000 && typeof (test0) != "undefined") {_RecordType("<715,720,25>",(test0)); Inst21++; } } catch(e) {}
test0();
try { if (Inst22 <= 1000 && typeof (test0) != "undefined") {_RecordType("<724,729,26>",(test0)); Inst22++; } } catch(e) {}
test0();
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<733,738,27>",(print)); Inst23++; } } catch(e) {}
print('pass');

