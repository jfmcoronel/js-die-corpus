var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//Configuration: inline.xml
//Testcase Number: 20382
//Switches:  -maxinterpretcount:4  -forceserialized -bgjit- -loopinterpretcount:1 -off:lossyinttypespec -off:arraycheckhoist  -version:5
//Baseline Switches: -nonative  -version:5
//Branch:  fbl_ie_script
//Build: 130517-2000
//Arch: AMD64
//MachineName: BPT02339
//InstructionSet: SSE2
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<716,721,14>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var func2 = function () {
    ;
  };
try { if (Inst1 <= 1000 && typeof (func2) != "undefined") {_RecordType("<732,737,15>",(func2)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (bar1) != "undefined") {_RecordType("<777,781,19>",(bar1)); Inst2++; } } catch(e) {}
  function bar1(argMath12, argMath13) {
try { if (Inst3 <= 1000 && typeof (argMath12) != "undefined") {_RecordType("<782,791,19>",(argMath12)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (argMath13) != "undefined") {_RecordType("<793,802,19>",(argMath13)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<810,815,20>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (argMath12) != "undefined") {_RecordType("<816,825,20>",(argMath12)); Inst6++; } } catch(e) {}
    print(argMath12);
  }

try { if (Inst7 <= 1000 && typeof (bar3) != "undefined") {_RecordType("<844,848,23>",(bar3)); Inst7++; } } catch(e) {}
  function bar3(argMath16, argMath17) {
try { if (Inst8 <= 1000 && typeof (argMath16) != "undefined") {_RecordType("<849,858,23>",(argMath16)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (argMath17) != "undefined") {_RecordType("<860,869,23>",(argMath17)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (bar1.call) != "undefined") {_RecordType("<877,886,24>",(bar1.call)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (bar1) != "undefined") {_RecordType("<877,881,24>",(bar1)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (argMath16) != "undefined") {_RecordType("<893,902,24>",(argMath16)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (argMath16) != "undefined") {_RecordType("<905,914,24>",(argMath16)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (func2) != "undefined") {_RecordType("<928,933,24>",(func2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (func2.call) != "undefined") {_RecordType("<937,947,24>",(func2.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (func2) != "undefined") {_RecordType("<937,942,24>",(func2)); Inst16++; } } catch(e) {}
    bar1.call(null, argMath16, (argMath16++ instanceof func2) * func2.call(null));
  }

try { if (Inst17 <= 1000 && typeof (bar3) != "undefined") {_RecordType("<963,967,27>",(bar3)); Inst17++; } } catch(e) {}
  bar3(false);
}

; // generate profile

try { if (Inst18 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1002,1007,32>",(test0)); Inst18++; } } catch(e) {}
test0();
try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1011,1016,33>",(test0)); Inst19++; } } catch(e) {}
test0();

