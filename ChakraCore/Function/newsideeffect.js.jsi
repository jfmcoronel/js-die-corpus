var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//
// Win8: 762166
// ES5 11.2.2 "new MemberExpression Arguments", MemberExpression is fully evaluated before Arguments.
// Arguments side effect can't change the constructor used for new operator.
//
(function () {
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<594,595,11>",(x)); Inst0++; } } catch(e) {}
  function x() {
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<604,609,12>",(print)); Inst1++; } } catch(e) {}
    print("x");
  }

try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<632,633,15>",(y)); Inst2++; } } catch(e) {}
  function y() {
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<642,647,16>",(print)); Inst3++; } } catch(e) {}
    print("y");
  }

try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<665,666,19>",(x)); Inst4++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<671,672,19>",(y)); Inst6++; } } catch(e) {}
  new x(x = y);
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<667,668,19>",(x)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<681,682,20>",(x)); Inst7++; } } catch(e) {}
  new x();
})();

(function () {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<719,720,24>",(x)); Inst8++; } } catch(e) {}
  function x() {
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<729,734,25>",(print)); Inst9++; } } catch(e) {}
    print("x");
  }

try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<757,758,28>",(y)); Inst10++; } } catch(e) {}
  function y() {
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<767,772,29>",(print)); Inst11++; } } catch(e) {}
    print("y");
  }

try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<790,791,32>",(x)); Inst12++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<796,797,32>",(y)); Inst14++; } } catch(e) {}
  new x(x = y);
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<792,793,32>",(x)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<806,807,33>",(x)); Inst15++; } } catch(e) {}
  new x();

try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<823,826,35>",(foo)); Inst16++; } } catch(e) {}
  function foo() {
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<835,836,36>",(x)); Inst17++; } } catch(e) {}
    x(); // Reference of "x" and put it in slot
  }
})();

(function () {
  var o = {
    x: function () {
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<944,949,43>",(print)); Inst19++; } } catch(e) {}
      print("x");
    }
  };
try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<911,912,41>",(o)); Inst18++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<979,980,47>",(y)); Inst20++; } } catch(e) {}
  function y() {
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<989,994,48>",(print)); Inst21++; } } catch(e) {}
    print("y");
  }

try { if (Inst22 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1012,1015,51>",(o.x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<1012,1013,51>",(o)); Inst23++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<1022,1023,51>",(y)); Inst26++; } } catch(e) {}
  new o.x(o.x = y);
try { if (Inst24 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1016,1019,51>",(o.x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<1016,1017,51>",(o)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1032,1035,52>",(o.x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<1032,1033,52>",(o)); Inst28++; } } catch(e) {}
  new o.x();
})();

(function () {
  var o = {
    x: function () {
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<1100,1105,58>",(print)); Inst30++; } } catch(e) {}
      print("x");
    }
  };
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<1067,1068,56>",(o)); Inst29++; } } catch(e) {}
  var y = {
    x: function () {
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1162,1167,63>",(print)); Inst32++; } } catch(e) {}
      print("y");
    }
  };
try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<1129,1130,61>",(y)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1191,1194,66>",(o.x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<1191,1192,66>",(o)); Inst34++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (y) != "undefined") {_RecordType("<1199,1200,66>",(y)); Inst36++; } } catch(e) {}
  new o.x(o = y);
try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<1195,1196,66>",(o)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1209,1212,67>",(o.x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<1209,1210,67>",(o)); Inst38++; } } catch(e) {}
  new o.x();
})();

