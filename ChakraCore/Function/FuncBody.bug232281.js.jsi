var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var shouldBailout = false;
try { if (Inst0 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<371,384,5>",(shouldBailout)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<404,409,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst2 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<420,424,8>",(obj0)); Inst2++; } } catch(e) {}
  var obj1 = {};
try { if (Inst3 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<437,441,9>",(obj1)); Inst3++; } } catch(e) {}

  var func0 = function () {
    ;
  };
try { if (Inst4 <= 1000 && typeof (func0) != "undefined") {_RecordType("<455,460,11>",(func0)); Inst4++; } } catch(e) {}

  var func1 = function (argObj0, argArr1, argMath2) {
try { if (Inst6 <= 1000 && typeof (argObj0) != "undefined") {_RecordType("<513,520,15>",(argObj0)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (argArr1) != "undefined") {_RecordType("<522,529,15>",(argArr1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (argMath2) != "undefined") {_RecordType("<531,539,15>",(argMath2)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (func0) != "undefined") {_RecordType("<547,552,16>",(func0)); Inst9++; } } catch(e) {}
    func0();
  };
try { if (Inst5 <= 1000 && typeof (func1) != "undefined") {_RecordType("<495,500,15>",(func1)); Inst5++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (func1) != "undefined") {_RecordType("<591,596,19>",(func1)); Inst13++; } } catch(e) {}
  Object.prototype.method0 = func1;
try { if (Inst10 <= 1000 && typeof (Object.prototype.method0) != "undefined") {_RecordType("<564,588,19>",(Object.prototype.method0)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<564,580,19>",(Object.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<564,570,19>",(Object)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<615,628,20>",(shouldBailout)); Inst16++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<639,651,20>",(obj0.method0)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<639,643,20>",(obj0)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (func0) != "undefined") {_RecordType("<657,662,20>",(func0)); Inst20++; } } catch(e) {}
  obj1.length = (shouldBailout ? func0 = obj0.method0 : 1, func0());
try { if (Inst14 <= 1000 && typeof (obj1.length) != "undefined") {_RecordType("<600,611,20>",(obj1.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<600,604,20>",(obj1)); Inst15++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (func0) != "undefined") {_RecordType("<631,636,20>",(func0)); Inst17++; } } catch(e) {}
}

;
var testOutcome = false;
try { if (Inst21 <= 1000 && typeof (testOutcome) != "undefined") {_RecordType("<676,687,24>",(testOutcome)); Inst21++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<875,876,35>",(e)); Inst27++; } } catch(e) {}
try {
  // generate profile
try { if (Inst22 <= 1000 && typeof (test0) != "undefined") {_RecordType("<728,733,28>",(test0)); Inst22++; } } catch(e) {}
  test0(); // run JITted code

  runningJITtedCode = true;
try { if (Inst23 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<759,776,30>",(runningJITtedCode)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (test0) != "undefined") {_RecordType("<787,792,31>",(test0)); Inst24++; } } catch(e) {}
  test0(); // run code with bailouts enabled

  shouldBailout = true;
try { if (Inst25 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<833,846,33>",(shouldBailout)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (test0) != "undefined") {_RecordType("<857,862,34>",(test0)); Inst26++; } } catch(e) {}
  test0();
} catch (e) {
  ;
}

