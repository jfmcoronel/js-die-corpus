var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var a = 1;
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<371,372,5>",(a)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<388,391,7>",(foo)); Inst1++; } } catch(e) {}
function foo() {
  var x = 1;
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<402,403,8>",(x)); Inst2++; } } catch(e) {}
}

try { if (Inst4 <= 1000 && typeof (foo.toString) != "undefined") {_RecordType("<420,432,11>",(foo.toString)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<420,423,11>",(foo)); Inst5++; } } catch(e) {}
var m = foo.toString();
try { if (Inst3 <= 1000 && typeof (m) != "undefined") {_RecordType("<416,417,11>",(m)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<436,441,12>",(print)); Inst6++; } } catch(e) {}
print("Test 'toString()' on simple function:");
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<484,489,13>",(print)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (m) != "undefined") {_RecordType("<490,491,13>",(m)); Inst8++; } } catch(e) {}
print(m);
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<494,499,14>",(print)); Inst9++; } } catch(e) {}
print("Test 'toString()' on builtin function parseFloat:");
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<554,559,15>",(print)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (parseFloat.toString) != "undefined") {_RecordType("<560,579,15>",(parseFloat.toString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<560,570,15>",(parseFloat)); Inst12++; } } catch(e) {}
print(parseFloat.toString());

var an = function () {
  //anonymous
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<628,629,19>",(a)); Inst15++; } } catch(e) {}
  a = a + 1;
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<624,625,19>",(a)); Inst14++; } } catch(e) {}
};
try { if (Inst13 <= 1000 && typeof (an) != "undefined") {_RecordType("<589,591,17>",(an)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<639,644,22>",(print)); Inst16++; } } catch(e) {}
print("Test 'toString()' on anonymous function:");
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<690,695,23>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (an.toString) != "undefined") {_RecordType("<696,707,23>",(an.toString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (an) != "undefined") {_RecordType("<696,698,23>",(an)); Inst19++; } } catch(e) {}
print(an.toString());
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<712,717,24>",(print)); Inst20++; } } catch(e) {}
print("Test 'toString()' on an anonymous, unhinted function expression:");
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<787,792,25>",(print)); Inst21++; } } catch(e) {}
print(function () {
  ;
});
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<815,820,28>",(print)); Inst22++; } } catch(e) {}
print("Test 'toString()' on an anonymous, unhinted function expression in parentheses (different behavior in standards mode):");
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<944,949,29>",(print)); Inst23++; } } catch(e) {}
print(function () {
  ;
});
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<972,977,32>",(print)); Inst24++; } } catch(e) {}
print("Test 'toString()' on parent and nested function:");

try { if (Inst25 <= 1000 && typeof (parent) != "undefined") {_RecordType("<1041,1047,34>",(parent)); Inst25++; } } catch(e) {}
function parent() {
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<1054,1059,35>",(print)); Inst26++; } } catch(e) {}
  print("in parent");
  var bb = 1;
try { if (Inst27 <= 1000 && typeof (bb) != "undefined") {_RecordType("<1080,1082,36>",(bb)); Inst27++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (nested) != "undefined") {_RecordType("<1100,1106,38>",(nested)); Inst28++; } } catch(e) {}
  function nested() {
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<1115,1120,39>",(print)); Inst29++; } } catch(e) {}
    print("in nested");
    bb = 2;
try { if (Inst30 <= 1000 && typeof (bb) != "undefined") {_RecordType("<1139,1141,40>",(bb)); Inst30++; } } catch(e) {}
  }

try { if (Inst31 <= 1000 && typeof (nested) != "undefined") {_RecordType("<1154,1160,43>",(nested)); Inst31++; } } catch(e) {}
  nested();
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1166,1171,44>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (nested.toString) != "undefined") {_RecordType("<1172,1187,44>",(nested.toString)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (nested) != "undefined") {_RecordType("<1172,1178,44>",(nested)); Inst34++; } } catch(e) {}
  print(nested.toString());
}

try { if (Inst35 <= 1000 && typeof (parent) != "undefined") {_RecordType("<1195,1201,47>",(parent)); Inst35++; } } catch(e) {}
parent();
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<1205,1210,48>",(print)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (parent.toString) != "undefined") {_RecordType("<1211,1226,48>",(parent.toString)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (parent) != "undefined") {_RecordType("<1211,1217,48>",(parent)); Inst38++; } } catch(e) {}
print(parent.toString());
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<1231,1236,49>",(print)); Inst39++; } } catch(e) {}
print('Test "somestring".indexOf.toString():');
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<1279,1284,50>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof ("somestring".indexOf.toString) != "undefined") {_RecordType("<1285,1314,50>",("somestring".indexOf.toString)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof ("somestring".indexOf) != "undefined") {_RecordType("<1285,1305,50>",("somestring".indexOf)); Inst42++; } } catch(e) {}
print("somestring".indexOf.toString());
try { if (Inst43 <= 1000 && typeof (print) != "undefined") {_RecordType("<1319,1324,51>",(print)); Inst43++; } } catch(e) {}
print('Test "somestring".indexOf:');
try { if (Inst44 <= 1000 && typeof (print) != "undefined") {_RecordType("<1356,1361,52>",(print)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof ("somestring".indexOf) != "undefined") {_RecordType("<1362,1382,52>",("somestring".indexOf)); Inst45++; } } catch(e) {}
print("somestring".indexOf);

