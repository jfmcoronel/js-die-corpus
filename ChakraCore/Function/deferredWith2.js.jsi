var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// -version:2 -forcedeferparse
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<407,412,6>",(test0)); Inst0++; } } catch(e) {}
function test0(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<413,414,6>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<426,427,7>",(x)); Inst2++; } } catch(e) {}
  with (x) {
    z = "4";
try { if (Inst3 <= 1000 && typeof (z) != "undefined") {_RecordType("<435,436,8>",(z)); Inst3++; } } catch(e) {}
  }
  ;
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<461,462,11>",(x)); Inst4++; } } catch(e) {}
  return x;
}

;
var p = {
  o: 1,
  z: 2
};
try { if (Inst5 <= 1000 && typeof (p) != "undefined") {_RecordType("<473,474,15>",(p)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<497,502,19>",(print)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<512,526,19>",(JSON.stringify)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<512,516,19>",(JSON)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p) != "undefined") {_RecordType("<527,528,19>",(p)); Inst9++; } } catch(e) {}
print("p = " + JSON.stringify(p));
try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<540,545,20>",(test0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<546,547,20>",(p)); Inst12++; } } catch(e) {}
var k = test0(p);
try { if (Inst10 <= 1000 && typeof (k) != "undefined") {_RecordType("<536,537,20>",(k)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<550,555,21>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<565,579,21>",(JSON.stringify)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<565,569,21>",(JSON)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (k) != "undefined") {_RecordType("<580,581,21>",(k)); Inst16++; } } catch(e) {}
print("k = " + JSON.stringify(k));
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<585,590,22>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (k.z) != "undefined") {_RecordType("<602,605,22>",(k.z)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (k) != "undefined") {_RecordType("<602,603,22>",(k)); Inst19++; } } catch(e) {}
print("k.z = " + k.z);
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<608,613,23>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (k.z) != "undefined") {_RecordType("<627,630,23>",(k.z)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k) != "undefined") {_RecordType("<627,628,23>",(k)); Inst22++; } } catch(e) {}
print("k.z+1 = " + k.z + 1);

