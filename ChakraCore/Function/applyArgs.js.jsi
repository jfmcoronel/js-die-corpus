var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(v) {
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<382,383,5>",(v)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<389,394,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<395,396,6>",(v)); Inst3++; } } catch(e) {}
  print(v + "");
}

try { if (Inst4 <= 1000 && typeof (test1) != "undefined") {_RecordType("<416,421,9>",(test1)); Inst4++; } } catch(e) {}
function test1() {
try { if (Inst5 <= 1000 && typeof ([].push.apply) != "undefined") {_RecordType("<428,441,10>",([].push.apply)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof ([].push) != "undefined") {_RecordType("<428,435,10>",([].push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<448,457,10>",(arguments)); Inst7++; } } catch(e) {}
  [].push.apply(this, arguments);
try { if (Inst8 <= 1000 && typeof (write) != "undefined") {_RecordType("<462,467,11>",(write)); Inst8++; } } catch(e) {}
  write("passed");
}

try { if (Inst9 <= 1000 && typeof (test1) != "undefined") {_RecordType("<482,487,14>",(test1)); Inst9++; } } catch(e) {}
test1();

try { if (Inst10 <= 1000 && typeof (test2) != "undefined") {_RecordType("<501,506,16>",(test2)); Inst10++; } } catch(e) {}
function test2() {
try { if (Inst11 <= 1000 && typeof (({}).toString.apply) != "undefined") {_RecordType("<513,532,17>",(({}).toString.apply)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (({}).toString) != "undefined") {_RecordType("<513,526,17>",(({}).toString)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<539,548,17>",(arguments)); Inst13++; } } catch(e) {}
  ({}).toString.apply(this, arguments);
try { if (Inst14 <= 1000 && typeof (write) != "undefined") {_RecordType("<553,558,18>",(write)); Inst14++; } } catch(e) {}
  write("passed");
}

try { if (Inst15 <= 1000 && typeof (test2) != "undefined") {_RecordType("<573,578,21>",(test2)); Inst15++; } } catch(e) {}
test2();
var count3 = 0;
try { if (Inst16 <= 1000 && typeof (count3) != "undefined") {_RecordType("<586,592,22>",(count3)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (test3) != "undefined") {_RecordType("<608,613,24>",(test3)); Inst17++; } } catch(e) {}
function test3() {
try { if (Inst19 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<631,640,25>",(arguments)); Inst19++; } } catch(e) {}
  var args = arguments;
try { if (Inst18 <= 1000 && typeof (args) != "undefined") {_RecordType("<624,628,25>",(args)); Inst18++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (test3_inner) != "undefined") {_RecordType("<654,665,27>",(test3_inner)); Inst20++; } } catch(e) {}
  function test3_inner() {
try { if (Inst21 <= 1000 && typeof ((count3 == 1 ? args : arguments).callee.apply) != "undefined") {_RecordType("<674,719,28>",((count3 == 1 ? args : arguments).callee.apply)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof ((count3 == 1 ? args : arguments).callee) != "undefined") {_RecordType("<674,713,28>",((count3 == 1 ? args : arguments).callee)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (count3) != "undefined") {_RecordType("<675,681,28>",(count3)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (args) != "undefined") {_RecordType("<689,693,28>",(args)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<696,705,28>",(arguments)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<726,735,28>",(arguments)); Inst26++; } } catch(e) {}
    (count3 == 1 ? args : arguments).callee.apply(this, arguments);
  }

try { if (Inst27 <= 1000 && typeof (count3) != "undefined") {_RecordType("<751,757,31>",(count3)); Inst27++; } } catch(e) {}
  if (++count3 == 1) {
try { if (Inst28 <= 1000 && typeof (test3_inner) != "undefined") {_RecordType("<777,788,32>",(test3_inner)); Inst28++; } } catch(e) {}
    return test3_inner();
  }

try { if (Inst29 <= 1000 && typeof (write) != "undefined") {_RecordType("<799,804,35>",(write)); Inst29++; } } catch(e) {}
  write("passed");
}

try { if (Inst30 <= 1000 && typeof (test3) != "undefined") {_RecordType("<819,824,38>",(test3)); Inst30++; } } catch(e) {}
test3();

try { if (Inst31 <= 1000 && typeof (test4) != "undefined") {_RecordType("<838,843,40>",(test4)); Inst31++; } } catch(e) {}
function test4() {
  return function () {
try { if (Inst32 <= 1000 && typeof (ex) != "undefined") {_RecordType("<913,915,44>",(ex)); Inst32++; } } catch(e) {}
    try {
      throw 'zap';
    } catch (ex) {
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<925,930,45>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ex) != "undefined") {_RecordType("<931,933,45>",(ex)); Inst34++; } } catch(e) {}
      print(ex);
try { if (Inst36 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<950,962,46>",(arguments[0])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<950,959,46>",(arguments)); Inst37++; } } catch(e) {}
      var f = arguments[0];
try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<946,947,46>",(f)); Inst35++; } } catch(e) {}
    }

try { if (Inst38 <= 1000 && typeof (f.apply) != "undefined") {_RecordType("<975,982,49>",(f.apply)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<975,976,49>",(f)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<989,998,49>",(arguments)); Inst40++; } } catch(e) {}
    f.apply(this, arguments);
  };
}

try { if (Inst41 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1009,1014,53>",(test4)); Inst41++; } } catch(e) {}
test4()(function () {
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1033,1038,54>",(print)); Inst42++; } } catch(e) {}
  print('mama');
});

