var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (guarded_call) != "undefined") {_RecordType("<376,388,5>",(guarded_call)); Inst0++; } } catch(e) {}
function guarded_call(func) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<389,393,5>",(func)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<428,429,8>",(e)); Inst3++; } } catch(e) {}
  try {
try { if (Inst2 <= 1000 && typeof (func) != "undefined") {_RecordType("<409,413,7>",(func)); Inst2++; } } catch(e) {}
    func();
  } catch (e) {
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<437,442,9>",(print)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<443,449,9>",(e.name)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<443,444,9>",(e)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<459,468,9>",(e.message)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<459,460,9>",(e)); Inst8++; } } catch(e) {}
    print(e.name + ": " + e.message);
  }
}

try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<478,483,13>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<491,509,13>",(Function.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Function) != "undefined") {_RecordType("<491,499,13>",(Function)); Inst11++; } } catch(e) {}
print(typeof Function.prototype);
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<512,517,14>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<518,536,14>",(Function.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Function) != "undefined") {_RecordType("<518,526,14>",(Function)); Inst14++; } } catch(e) {}
print(Function.prototype);
try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<539,544,15>",(print)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<545,563,15>",(Function.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Function) != "undefined") {_RecordType("<545,553,15>",(Function)); Inst17++; } } catch(e) {}
print(Function.prototype());
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<568,573,16>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<574,592,16>",(Function.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Function) != "undefined") {_RecordType("<574,582,16>",(Function)); Inst20++; } } catch(e) {}
print(Function.prototype("return 123;"));
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<610,615,17>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<616,634,17>",(Function.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Function) != "undefined") {_RecordType("<616,624,17>",(Function)); Inst23++; } } catch(e) {}
print(Function.prototype(123, "foo", null));
try { if (Inst24 <= 1000 && typeof (guarded_call) != "undefined") {_RecordType("<655,667,18>",(guarded_call)); Inst24++; } } catch(e) {}
guarded_call(function () {
try { if (Inst26 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<696,714,19>",(Function.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Function) != "undefined") {_RecordType("<696,704,19>",(Function)); Inst27++; } } catch(e) {}
  var o = new Function.prototype();
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<688,689,19>",(o)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<720,725,20>",(print)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<737,738,20>",(o)); Inst29++; } } catch(e) {}
  print("Fail: " + o);
});
try { if (Inst30 <= 1000 && typeof (guarded_call) != "undefined") {_RecordType("<745,757,22>",(guarded_call)); Inst30++; } } catch(e) {}
guarded_call(function () {
try { if (Inst32 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<796,814,23>",(Function.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Function) != "undefined") {_RecordType("<796,804,23>",(Function)); Inst33++; } } catch(e) {}
  var o = {} instanceof Function.prototype;
try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<778,779,23>",(o)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<818,823,24>",(print)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<835,836,24>",(o)); Inst35++; } } catch(e) {}
  print("Fail: " + o);
});

