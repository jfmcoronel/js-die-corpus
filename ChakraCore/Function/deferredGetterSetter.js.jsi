var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// /forcedeferparse test to make sure we can handle getters and setters at global scope,
// at function scope, and with nested functions.
try { if (Inst1 <= 1000 && typeof (y) != "undefined") {_RecordType("<535,536,10>",(y)); Inst1++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<599,600,15>",(y)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (val) != "undefined") {_RecordType("<601,604,15>",(val)); Inst5++; } } catch(e) {}
var x = {
  _y: 'x.y',

  get y() {
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<545,550,11>",(print)); Inst2++; } } catch(e) {}
    print('getting x.y');
try { if (Inst3 <= 1000 && typeof (this._y) != "undefined") {_RecordType("<578,585,12>",(this._y)); Inst3++; } } catch(e) {}
    return this._y;
  },

  set y(val) {
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<612,617,16>",(print)); Inst6++; } } catch(e) {}
    print('setting x.y');
try { if (Inst8 <= 1000 && typeof (val) != "undefined") {_RecordType("<648,651,17>",(val)); Inst8++; } } catch(e) {}
    this._y = val;
try { if (Inst7 <= 1000 && typeof (this._y) != "undefined") {_RecordType("<638,645,17>",(this._y)); Inst7++; } } catch(e) {}
  }

};
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<509,510,7>",(x)); Inst0++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<661,666,21>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x.y) != "undefined") {_RecordType("<667,670,21>",(x.y)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<667,668,21>",(x)); Inst11++; } } catch(e) {}
print(x.y);
x.y = 'new x.y';
try { if (Inst12 <= 1000 && typeof (x.y) != "undefined") {_RecordType("<673,676,22>",(x.y)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<673,674,22>",(x)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<700,701,24>",(f)); Inst14++; } } catch(e) {}
function f() {
try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<748,749,28>",(y)); Inst16++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<826,827,33>",(y)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (val) != "undefined") {_RecordType("<828,831,33>",(val)); Inst20++; } } catch(e) {}
  var x = {
    _y: 'local x.y',

    get y() {
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<760,765,29>",(print)); Inst17++; } } catch(e) {}
      print('getting local x.y');
try { if (Inst18 <= 1000 && typeof (this._y) != "undefined") {_RecordType("<801,808,30>",(this._y)); Inst18++; } } catch(e) {}
      return this._y;
    },

    set y(val) {
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<841,846,34>",(print)); Inst21++; } } catch(e) {}
      print('setting local x.y');
try { if (Inst23 <= 1000 && typeof (val) != "undefined") {_RecordType("<885,888,35>",(val)); Inst23++; } } catch(e) {}
      this._y = val;
try { if (Inst22 <= 1000 && typeof (this._y) != "undefined") {_RecordType("<875,882,35>",(this._y)); Inst22++; } } catch(e) {}
    }

  };
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<712,713,25>",(x)); Inst15++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<904,909,39>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x.y) != "undefined") {_RecordType("<910,913,39>",(x.y)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<910,911,39>",(x)); Inst26++; } } catch(e) {}
  print(x.y);
  x.y = 'new local x.y';
try { if (Inst27 <= 1000 && typeof (x.y) != "undefined") {_RecordType("<918,921,40>",(x.y)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<918,919,40>",(x)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<991,992,44>",(y)); Inst30++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (y) != "undefined") {_RecordType("<1130,1131,53>",(y)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (val) != "undefined") {_RecordType("<1132,1135,53>",(val)); Inst38++; } } catch(e) {}
  var nested_x = {
    _y: 'nested x.y',

    get y() {
try { if (Inst31 <= 1000 && typeof (fget) != "undefined") {_RecordType("<1012,1016,45>",(fget)); Inst31++; } } catch(e) {}
      function fget(o) {
try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<1017,1018,45>",(o)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<1030,1035,46>",(print)); Inst33++; } } catch(e) {}
        print('getting nested x.y');
try { if (Inst34 <= 1000 && typeof (o._y) != "undefined") {_RecordType("<1074,1078,47>",(o._y)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<1074,1075,47>",(o)); Inst35++; } } catch(e) {}
        return o._y;
      }

try { if (Inst36 <= 1000 && typeof (fget) != "undefined") {_RecordType("<1102,1106,50>",(fget)); Inst36++; } } catch(e) {}
      return fget(this);
    },

    set y(val) {
try { if (Inst39 <= 1000 && typeof (fset) != "undefined") {_RecordType("<1154,1158,54>",(fset)); Inst39++; } } catch(e) {}
      function fset(o, val) {
try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<1159,1160,54>",(o)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (val) != "undefined") {_RecordType("<1162,1165,54>",(val)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1177,1182,55>",(print)); Inst42++; } } catch(e) {}
        print('setting nested x.y');
try { if (Inst45 <= 1000 && typeof (val) != "undefined") {_RecordType("<1221,1224,56>",(val)); Inst45++; } } catch(e) {}
        o._y = val;
try { if (Inst43 <= 1000 && typeof (o._y) != "undefined") {_RecordType("<1214,1218,56>",(o._y)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o) != "undefined") {_RecordType("<1214,1215,56>",(o)); Inst44++; } } catch(e) {}
      }

try { if (Inst46 <= 1000 && typeof (fset) != "undefined") {_RecordType("<1241,1245,59>",(fset)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (val) != "undefined") {_RecordType("<1252,1255,59>",(val)); Inst47++; } } catch(e) {}
      fset(this, val);
    }

  };
try { if (Inst29 <= 1000 && typeof (nested_x) != "undefined") {_RecordType("<947,955,41>",(nested_x)); Inst29++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<1272,1277,63>",(print)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (nested_x.y) != "undefined") {_RecordType("<1278,1288,63>",(nested_x.y)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (nested_x) != "undefined") {_RecordType("<1278,1286,63>",(nested_x)); Inst50++; } } catch(e) {}
  print(nested_x.y);
  nested_x.y = 'new nested x.y';
try { if (Inst51 <= 1000 && typeof (nested_x.y) != "undefined") {_RecordType("<1293,1303,64>",(nested_x.y)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (nested_x) != "undefined") {_RecordType("<1293,1301,64>",(nested_x)); Inst52++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (print) != "undefined") {_RecordType("<1326,1331,65>",(print)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (nested_x.y) != "undefined") {_RecordType("<1332,1342,65>",(nested_x.y)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (nested_x) != "undefined") {_RecordType("<1332,1340,65>",(nested_x)); Inst55++; } } catch(e) {}
  print(nested_x.y);
try { if (Inst56 <= 1000 && typeof (print) != "undefined") {_RecordType("<1347,1352,66>",(print)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (x.y) != "undefined") {_RecordType("<1353,1356,66>",(x.y)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (x) != "undefined") {_RecordType("<1353,1354,66>",(x)); Inst58++; } } catch(e) {}
  print(x.y);
}

try { if (Inst59 <= 1000 && typeof (f) != "undefined") {_RecordType("<1362,1363,69>",(f)); Inst59++; } } catch(e) {}
f();
try { if (Inst60 <= 1000 && typeof (print) != "undefined") {_RecordType("<1367,1372,70>",(print)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x.y) != "undefined") {_RecordType("<1373,1376,70>",(x.y)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<1373,1374,70>",(x)); Inst62++; } } catch(e) {}
print(x.y);

