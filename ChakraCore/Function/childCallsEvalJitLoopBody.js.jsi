var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Due to the eval, 'a' get put in a slot and should not be assigned a non-temp register. The uses of 'a' in the loop should be
// given a temp register so that they are not loaded/restored from the jitted loop body.
(function () {
  var __loopvar0 = 0;
try { if (Inst0 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<605,615,8>",(__loopvar0)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<636,646,10>",(__loopvar0)); Inst1++; } } catch(e) {}
  while (1 && __loopvar0 < 3) {
try { if (Inst2 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<658,668,11>",(__loopvar0)); Inst2++; } } catch(e) {}
    __loopvar0++;

    for (var __loopvar1 = 0; __loopvar1 < 3; ++__loopvar1) {
try { if (Inst3 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<686,696,13>",(__loopvar1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<702,712,13>",(__loopvar1)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<720,730,13>",(__loopvar1)); Inst5++; } } catch(e) {}
      (function () {
        (function () {
          ;
        })(1, 1, 1, 1);

        var __loopvar3 = 0;
try { if (Inst6 <= 1000 && typeof (__loopvar3) != "undefined") {_RecordType("<827,837,19>",(__loopvar3)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (__loopvar3) != "undefined") {_RecordType("<864,874,21>",(__loopvar3)); Inst7++; } } catch(e) {}
        while (1 && __loopvar3 < 3) {
try { if (Inst8 <= 1000 && typeof (__loopvar3) != "undefined") {_RecordType("<892,902,22>",(__loopvar3)); Inst8++; } } catch(e) {}
          __loopvar3++;
try { if (Inst10 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<920,928,23>",(Math.sin)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<920,924,23>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<944,954,23>",(__loopvar1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<958,959,23>",(a)); Inst13++; } } catch(e) {}
          d = Math.sin(-1012552393 * (__loopvar1 << a));
try { if (Inst9 <= 1000 && typeof (d) != "undefined") {_RecordType("<916,917,23>",(d)); Inst9++; } } catch(e) {}
          var a = 1;
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<977,978,24>",(a)); Inst14++; } } catch(e) {}
        }
      })(1);
    }
  }
})();

