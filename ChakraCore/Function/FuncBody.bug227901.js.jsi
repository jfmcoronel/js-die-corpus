var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst1 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<392,396,6>",(obj0)); Inst1++; } } catch(e) {}
  var arrObj0 = {};
try { if (Inst2 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<409,416,7>",(arrObj0)); Inst2++; } } catch(e) {}

  var func0 = function () {
    ;
  };
try { if (Inst3 <= 1000 && typeof (func0) != "undefined") {_RecordType("<430,435,9>",(func0)); Inst3++; } } catch(e) {}

  var func1 = function () {
try { if (Inst6 <= 1000 && typeof (func0) != "undefined") {_RecordType("<696,701,22>",(func0)); Inst6++; } } catch(e) {}
    var obj4 = {
      nd0: {
        nd0: {
          lf0: {
            prop0: -46,
            prop1: 3,
            prop2: -2147483648,
            length: -6.02625054824609E+18,
            method0: func0
          }
        }
      }
    };
try { if (Inst5 <= 1000 && typeof (obj4) != "undefined") {_RecordType("<500,504,14>",(obj4)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (obj4.nd0.nd0.lf0.method0) != "undefined") {_RecordType("<748,772,27>",(obj4.nd0.nd0.lf0.method0)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj4.nd0.nd0.lf0) != "undefined") {_RecordType("<748,764,27>",(obj4.nd0.nd0.lf0)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj4.nd0.nd0) != "undefined") {_RecordType("<748,760,27>",(obj4.nd0.nd0)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj4.nd0) != "undefined") {_RecordType("<748,756,27>",(obj4.nd0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj4) != "undefined") {_RecordType("<748,752,27>",(obj4)); Inst12++; } } catch(e) {}
    d ^= obj4.nd0.nd0.lf0.method0();
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<743,744,27>",(d)); Inst7++; } } catch(e) {}
    obj4.nd0.nd0.lf0 = 1;
try { if (Inst13 <= 1000 && typeof (obj4.nd0.nd0.lf0) != "undefined") {_RecordType("<780,796,28>",(obj4.nd0.nd0.lf0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj4.nd0.nd0) != "undefined") {_RecordType("<780,792,28>",(obj4.nd0.nd0)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj4.nd0) != "undefined") {_RecordType("<780,788,28>",(obj4.nd0)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj4) != "undefined") {_RecordType("<780,784,28>",(obj4)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (obj4.nd0.nd0.lf0.method0.call) != "undefined") {_RecordType("<820,849,29>",(obj4.nd0.nd0.lf0.method0.call)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj4.nd0.nd0.lf0.method0) != "undefined") {_RecordType("<820,844,29>",(obj4.nd0.nd0.lf0.method0)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj4.nd0.nd0.lf0) != "undefined") {_RecordType("<820,836,29>",(obj4.nd0.nd0.lf0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj4.nd0.nd0) != "undefined") {_RecordType("<820,832,29>",(obj4.nd0.nd0)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj4.nd0) != "undefined") {_RecordType("<820,828,29>",(obj4.nd0)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj4) != "undefined") {_RecordType("<820,824,29>",(obj4)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<850,854,29>",(obj0)); Inst24++; } } catch(e) {}
    this.prop1 |= obj4.nd0.nd0.lf0.method0.call(obj0);
try { if (Inst17 <= 1000 && typeof (this.prop1) != "undefined") {_RecordType("<806,816,29>",(this.prop1)); Inst17++; } } catch(e) {}
  };
try { if (Inst4 <= 1000 && typeof (func1) != "undefined") {_RecordType("<470,475,13>",(func1)); Inst4++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (func1) != "undefined") {_RecordType("<892,897,32>",(func1)); Inst28++; } } catch(e) {}
  Object.prototype.method0 = func1;
try { if (Inst25 <= 1000 && typeof (Object.prototype.method0) != "undefined") {_RecordType("<865,889,32>",(Object.prototype.method0)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<865,881,32>",(Object.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<865,871,32>",(Object)); Inst27++; } } catch(e) {}
  var d = 1;
try { if (Inst29 <= 1000 && typeof (d) != "undefined") {_RecordType("<905,906,33>",(d)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (arrObj0.method0) != "undefined") {_RecordType("<914,929,34>",(arrObj0.method0)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<914,921,34>",(arrObj0)); Inst31++; } } catch(e) {}
  arrObj0.method0();
}

;
var testOutcome = false;
try { if (Inst32 <= 1000 && typeof (testOutcome) != "undefined") {_RecordType("<942,953,38>",(testOutcome)); Inst32++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (e) != "undefined") {_RecordType("<1115,1116,50>",(e)); Inst40++; } } catch(e) {}
try {
  // generate profile
try { if (Inst33 <= 1000 && typeof (test0) != "undefined") {_RecordType("<994,999,42>",(test0)); Inst33++; } } catch(e) {}
  test0();
try { if (Inst34 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1005,1010,43>",(test0)); Inst34++; } } catch(e) {}
  test0();
try { if (Inst35 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1016,1021,44>",(test0)); Inst35++; } } catch(e) {}
  test0(); // run JITted code

  runningJITtedCode = true;
try { if (Inst36 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<1047,1064,46>",(runningJITtedCode)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1075,1080,47>",(test0)); Inst37++; } } catch(e) {}
  test0();
try { if (Inst38 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1086,1091,48>",(test0)); Inst38++; } } catch(e) {}
  test0();
try { if (Inst39 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1097,1102,49>",(test0)); Inst39++; } } catch(e) {}
  test0();
} catch (e) {
  ;
}

