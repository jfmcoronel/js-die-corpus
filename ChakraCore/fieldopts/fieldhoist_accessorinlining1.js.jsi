var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// -loopinterpretcount:1 -bgjit- -force:fieldhoist -mic:1 -msjrc:1
var obj1 = {};
try { if (Inst0 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<438,442,6>",(obj1)); Inst0++; } } catch(e) {}
var arrObj0 = {};
try { if (Inst1 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<453,460,7>",(arrObj0)); Inst1++; } } catch(e) {}

var func2 = function (argObj5, argObj6) {
try { if (Inst3 <= 1000 && typeof (argObj5) != "undefined") {_RecordType("<490,497,9>",(argObj5)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (argObj6) != "undefined") {_RecordType("<499,506,9>",(argObj6)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (argObj5.length) != "undefined") {_RecordType("<560,574,12>",(argObj5.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (argObj5) != "undefined") {_RecordType("<560,567,12>",(argObj5)); Inst6++; } } catch(e) {}
  do {
try { if (Inst9 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<538,547,11>",(protoObj1)); Inst9++; } } catch(e) {}
    argObj6.prop0 += protoObj1;
try { if (Inst7 <= 1000 && typeof (argObj6.prop0) != "undefined") {_RecordType("<521,534,11>",(argObj6.prop0)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (argObj6) != "undefined") {_RecordType("<521,528,11>",(argObj6)); Inst8++; } } catch(e) {}
  } while (argObj5.length);
};
try { if (Inst2 <= 1000 && typeof (func2) != "undefined") {_RecordType("<472,477,9>",(func2)); Inst2++; } } catch(e) {}

var func3 = function () {
  ;
};
try { if (Inst10 <= 1000 && typeof (func3) != "undefined") {_RecordType("<585,590,15>",(func3)); Inst10++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (func3) != "undefined") {_RecordType("<630,635,19>",(func3)); Inst13++; } } catch(e) {}
obj1.method0 = func3;
try { if (Inst11 <= 1000 && typeof (obj1.method0) != "undefined") {_RecordType("<615,627,19>",(obj1.method0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<615,619,19>",(obj1)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (func2) != "undefined") {_RecordType("<652,657,20>",(func2)); Inst16++; } } catch(e) {}
obj1.method1 = func2;
try { if (Inst14 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<637,649,20>",(obj1.method1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<637,641,20>",(obj1)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<671,677,21>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<678,682,21>",(obj1)); Inst19++; } } catch(e) {}
protoObj1 = Object(obj1);
try { if (Inst17 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<659,668,21>",(protoObj1)); Inst17++; } } catch(e) {}
obj1.prop0 = 1;
try { if (Inst20 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<685,695,22>",(obj1.prop0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<685,689,22>",(obj1)); Inst21++; } } catch(e) {}

var __loopvar0 = 7 - 13;
try { if (Inst22 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<706,716,24>",(__loopvar0)); Inst22++; } } catch(e) {}

do {
  __loopvar0 += 4;
try { if (Inst23 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<735,745,27>",(__loopvar0)); Inst23++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<759,769,29>",(__loopvar0)); Inst24++; } } catch(e) {}
  if (__loopvar0 >= 7) {
    break;
  }

try { if (Inst25 <= 1000 && typeof (protoObj1.method0) != "undefined") {_RecordType("<796,813,33>",(protoObj1.method0)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<796,805,33>",(protoObj1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<814,821,33>",(arrObj0)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<823,833,33>",(obj1.prop0)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<823,827,33>",(obj1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<835,842,33>",(arrObj0)); Inst30++; } } catch(e) {}
  protoObj1.method0(arrObj0, obj1.prop0, arrObj0);
try { if (Inst31 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<847,868,34>",(Object.defineProperty)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<847,853,34>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<869,873,34>",(obj1)); Inst33++; } } catch(e) {}
  Object.defineProperty(obj1, 'prop0', {
    set: function () {
      ;
    }
  });
} while (2);

try { if (Inst35 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<953,965,41>",(obj1.method1)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<953,957,41>",(obj1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<969,978,41>",(protoObj1)); Inst37++; } } catch(e) {}
var v30 = obj1.method1(1, protoObj1);
try { if (Inst34 <= 1000 && typeof (v30) != "undefined") {_RecordType("<947,950,41>",(v30)); Inst34++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<991,1003,42>",(obj1.method1)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<991,995,42>",(obj1)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<1007,1016,42>",(protoObj1)); Inst41++; } } catch(e) {}
var v30 = obj1.method1(1, protoObj1);
try { if (Inst38 <= 1000 && typeof (v30) != "undefined") {_RecordType("<985,988,42>",(v30)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1019,1024,43>",(print)); Inst42++; } } catch(e) {}
print("passed");

