var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst1 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<392,396,6>",(obj0)); Inst1++; } } catch(e) {}
  var obj1 = {};
try { if (Inst2 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<409,413,7>",(obj1)); Inst2++; } } catch(e) {}
  obj1.prop0 = 2;
try { if (Inst3 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<422,432,8>",(obj1.prop0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<422,426,8>",(obj1)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (test0a) != "undefined") {_RecordType("<440,446,9>",(test0a)); Inst5++; } } catch(e) {}
  test0a();
  var __loopvar0 = 0;
try { if (Inst6 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<456,466,10>",(__loopvar0)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<568,578,16>",(obj1.prop0)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<568,572,16>",(obj1)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<582,592,16>",(__loopvar0)); Inst9++; } } catch(e) {}
  do {
try { if (Inst10 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<484,494,13>",(__loopvar0)); Inst10++; } } catch(e) {}
    __loopvar0++;
try { if (Inst13 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<515,525,14>",(obj1.prop0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<515,519,14>",(obj1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<528,538,14>",(obj1.prop0)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<528,532,14>",(obj1)); Inst16++; } } catch(e) {}
    obj0.prop0 = obj1.prop0 * obj1.prop0;
try { if (Inst11 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<502,512,14>",(obj0.prop0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<502,506,14>",(obj0)); Inst12++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<551,555,15>",(obj0)); Inst18++; } } catch(e) {}
    obj1 = obj0;
try { if (Inst17 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<544,548,15>",(obj1)); Inst17++; } } catch(e) {}
  } while (obj1.prop0 && __loopvar0 < 2);

try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<602,607,18>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<627,637,18>",(obj1.prop0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<627,631,18>",(obj1)); Inst21++; } } catch(e) {}
  print("obj1.prop0 = " + (obj1.prop0 | 0));

try { if (Inst22 <= 1000 && typeof (test0a) != "undefined") {_RecordType("<657,663,20>",(test0a)); Inst22++; } } catch(e) {}
  function test0a() {
    ;
  }
}

; // generate profile

try { if (Inst23 <= 1000 && typeof (test0) != "undefined") {_RecordType("<704,709,27>",(test0)); Inst23++; } } catch(e) {}
test0(); // run JITted code

try { if (Inst24 <= 1000 && typeof (test0) != "undefined") {_RecordType("<733,738,29>",(test0)); Inst24++; } } catch(e) {}
test0();

