var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var shouldBailout = false;
try { if (Inst0 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<371,384,5>",(shouldBailout)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<404,409,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst2 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<420,424,8>",(obj0)); Inst2++; } } catch(e) {}
  var protoObj0 = {};
try { if (Inst3 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<437,446,9>",(protoObj0)); Inst3++; } } catch(e) {}

  var func0 = function () {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<509,514,13>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Error) != "undefined") {_RecordType("<517,522,13>",(Error)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<525,531,13>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<547,560,14>",(shouldBailout)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<563,584,14>",(Object.defineProperty)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<563,569,14>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<696,709,19>",(shouldBailout)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<712,733,19>",(Object.defineProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<712,718,19>",(Object)); Inst13++; } } catch(e) {}
    ({
      prop0: typeof Error ? Error : Object,
      prop5: (shouldBailout ? Object.defineProperty(this, 'prop5', {
        set: function () {
          ;
        },
        configurable: true
      }) : -216, shouldBailout ? Object.defineProperty(this, 'prop5', {
        set: function () {
          ;
        }
      }) : -216)
    });
  };
try { if (Inst4 <= 1000 && typeof (func0) != "undefined") {_RecordType("<460,465,11>",(func0)); Inst4++; } } catch(e) {}

  var func1 = function () {
try { if (Inst15 <= 1000 && typeof (func0) != "undefined") {_RecordType("<870,875,28>",(func0)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (func0) != "undefined") {_RecordType("<876,881,28>",(func0)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<887,896,28>",(protoObj0)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (func0) != "undefined") {_RecordType("<904,909,28>",(func0)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (func0) != "undefined") {_RecordType("<910,915,28>",(func0)); Inst19++; } } catch(e) {}
    return func0(func0()) < protoObj0 >= 0 ? func0(func0()) : 0;
  };
try { if (Inst14 <= 1000 && typeof (func1) != "undefined") {_RecordType("<837,842,27>",(func1)); Inst14++; } } catch(e) {}

  var func2 = function () {
    ;
  };
try { if (Inst20 <= 1000 && typeof (func2) != "undefined") {_RecordType("<936,941,31>",(func2)); Inst20++; } } catch(e) {}

  var func4 = function () {
try { if (Inst22 <= 1000 && typeof (func1) != "undefined") {_RecordType("<1009,1014,36>",(func1)); Inst22++; } } catch(e) {}
    return func1();
  };
try { if (Inst21 <= 1000 && typeof (func4) != "undefined") {_RecordType("<976,981,35>",(func4)); Inst21++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (func4) != "undefined") {_RecordType("<1041,1046,39>",(func4)); Inst25++; } } catch(e) {}
  obj0.method0 = func4;
try { if (Inst23 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<1026,1038,39>",(obj0.method0)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1026,1030,39>",(obj0)); Inst24++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<1065,1077,40>",(obj0.method0)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1065,1069,40>",(obj0)); Inst29++; } } catch(e) {}
  obj0.method1 = obj0.method0;
try { if (Inst26 <= 1000 && typeof (obj0.method1) != "undefined") {_RecordType("<1050,1062,40>",(obj0.method1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1050,1054,40>",(obj0)); Inst27++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (func7) != "undefined") {_RecordType("<1091,1096,42>",(func7)); Inst30++; } } catch(e) {}
  function func7() {
try { if (Inst31 <= 1000 && typeof (func2) != "undefined") {_RecordType("<1105,1110,43>",(func2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (func0) != "undefined") {_RecordType("<1111,1116,43>",(func0)); Inst32++; } } catch(e) {}
    func2(func0());
  }

try { if (Inst33 <= 1000 && typeof (func2) != "undefined") {_RecordType("<1128,1133,46>",(func2)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (func0) != "undefined") {_RecordType("<1134,1139,46>",(func0)); Inst34++; } } catch(e) {}
  func2(func0());
try { if (Inst35 <= 1000 && typeof (obj0.method1) != "undefined") {_RecordType("<1146,1158,47>",(obj0.method1)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1146,1150,47>",(obj0)); Inst36++; } } catch(e) {}
  obj0.method1();
try { if (Inst38 <= 1000 && typeof (func7) != "undefined") {_RecordType("<1179,1184,48>",(func7)); Inst38++; } } catch(e) {}
  var uniqobj0 = func7();
try { if (Inst37 <= 1000 && typeof (uniqobj0) != "undefined") {_RecordType("<1168,1176,48>",(uniqobj0)); Inst37++; } } catch(e) {}
}

try { if (Inst39 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1191,1196,51>",(test0)); Inst39++; } } catch(e) {}
test0();
shouldBailout = true;
try { if (Inst40 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<1200,1213,52>",(shouldBailout)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1222,1227,53>",(test0)); Inst41++; } } catch(e) {}
test0();
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1231,1236,54>",(print)); Inst42++; } } catch(e) {}
print('pass');

