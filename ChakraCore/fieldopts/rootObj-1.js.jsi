var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var x = "x.original";
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,5>",(x)); Inst0++; } } catch(e) {}

var reset = function () {
  x = "x.original";
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<418,419,8>",(x)); Inst2++; } } catch(e) {}
};
try { if (Inst1 <= 1000 && typeof (reset) != "undefined") {_RecordType("<394,399,7>",(reset)); Inst1++; } } catch(e) {}

var test = function () {
  var z = "z.original";
try { if (Inst4 <= 1000 && typeof (z) != "undefined") {_RecordType("<471,472,12>",(z)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (innerTest) != "undefined") {_RecordType("<501,510,14>",(innerTest)); Inst5++; } } catch(e) {}
  function innerTest() {
    x = "x.overwritten";
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<519,520,15>",(x)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<548,549,16>",(x)); Inst8++; } } catch(e) {}
    z = x;
try { if (Inst7 <= 1000 && typeof (z) != "undefined") {_RecordType("<544,545,16>",(z)); Inst7++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (innerTest) != "undefined") {_RecordType("<558,567,19>",(innerTest)); Inst9++; } } catch(e) {}
  innerTest();
try { if (Inst10 <= 1000 && typeof (z) != "undefined") {_RecordType("<580,581,20>",(z)); Inst10++; } } catch(e) {}
  return z;
};
try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<444,448,11>",(test)); Inst3++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<587,591,23>",(test)); Inst11++; } } catch(e) {}
test();
try { if (Inst12 <= 1000 && typeof (reset) != "undefined") {_RecordType("<595,600,24>",(reset)); Inst12++; } } catch(e) {}
reset();
try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<604,608,25>",(test)); Inst13++; } } catch(e) {}
test();
try { if (Inst14 <= 1000 && typeof (reset) != "undefined") {_RecordType("<612,617,26>",(reset)); Inst14++; } } catch(e) {}
reset();

try { if (Inst15 <= 1000 && typeof (makeGlobalPropertyReadOnly) != "undefined") {_RecordType("<631,657,28>",(makeGlobalPropertyReadOnly)); Inst15++; } } catch(e) {}
function makeGlobalPropertyReadOnly(p) {
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<658,659,28>",(p)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<665,686,29>",(Object.defineProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<665,671,29>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<693,694,29>",(p)); Inst19++; } } catch(e) {}
  Object.defineProperty(this, p, {
    writable: false
  });
}

try { if (Inst20 <= 1000 && typeof (reportGlobalPropertyDescriptor) != "undefined") {_RecordType("<736,766,34>",(reportGlobalPropertyDescriptor)); Inst20++; } } catch(e) {}
function reportGlobalPropertyDescriptor(p) {
try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<767,768,34>",(p)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<774,779,35>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (p) != "undefined") {_RecordType("<780,781,35>",(p)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.getOwnPropertyDescriptor(this, p).configurable) != "undefined") {_RecordType("<805,858,35>",(Object.getOwnPropertyDescriptor(this, p).configurable)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<805,836,35>",(Object.getOwnPropertyDescriptor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<805,811,35>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (p) != "undefined") {_RecordType("<843,844,35>",(p)); Inst27++; } } catch(e) {}
  print(p + ".configurable = " + Object.getOwnPropertyDescriptor(this, p).configurable);
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<863,868,36>",(print)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (p) != "undefined") {_RecordType("<869,870,36>",(p)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object.getOwnPropertyDescriptor(this, p).writable) != "undefined") {_RecordType("<890,939,36>",(Object.getOwnPropertyDescriptor(this, p).writable)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<890,921,36>",(Object.getOwnPropertyDescriptor)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<890,896,36>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (p) != "undefined") {_RecordType("<928,929,36>",(p)); Inst33++; } } catch(e) {}
  print(p + ".writable = " + Object.getOwnPropertyDescriptor(this, p).writable);
}

try { if (Inst34 <= 1000 && typeof (reportGlobalPropertyDescriptor) != "undefined") {_RecordType("<945,975,39>",(reportGlobalPropertyDescriptor)); Inst34++; } } catch(e) {}
reportGlobalPropertyDescriptor("x");
try { if (Inst35 <= 1000 && typeof (makeGlobalPropertyReadOnly) != "undefined") {_RecordType("<982,1008,40>",(makeGlobalPropertyReadOnly)); Inst35++; } } catch(e) {}
makeGlobalPropertyReadOnly("x");
try { if (Inst36 <= 1000 && typeof (reportGlobalPropertyDescriptor) != "undefined") {_RecordType("<1015,1045,41>",(reportGlobalPropertyDescriptor)); Inst36++; } } catch(e) {}
reportGlobalPropertyDescriptor("x");
try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<1065,1069,42>",(test)); Inst38++; } } catch(e) {}
var result = test();
try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<1056,1062,42>",(result)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<1073,1078,43>",(print)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<1087,1088,43>",(x)); Inst40++; } } catch(e) {}
print("x: " + x);
try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<1091,1096,44>",(print)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<1110,1116,44>",(result)); Inst42++; } } catch(e) {}
print("result: " + result);

