var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<376,377,5>",(f)); Inst0++; } } catch(e) {}
function f() {
try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<396,402,6>",(Object)); Inst2++; } } catch(e) {}
  var o = new Object();
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<388,389,6>",(o)); Inst1++; } } catch(e) {}
  o.i = 0;
try { if (Inst3 <= 1000 && typeof (o.i) != "undefined") {_RecordType("<408,411,7>",(o.i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<408,409,7>",(o)); Inst4++; } } catch(e) {}
  var ret = 0;
try { if (Inst5 <= 1000 && typeof (ret) != "undefined") {_RecordType("<423,426,8>",(ret)); Inst5++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<444,445,10>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<451,452,10>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<459,460,10>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<474,475,11>",(i)); Inst9++; } } catch(e) {}
    if (i % 2 == 0) {
try { if (Inst11 <= 1000 && typeof (o.i) != "undefined") {_RecordType("<502,505,12>",(o.i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<502,503,12>",(o)); Inst12++; } } catch(e) {}
      var j = o.i;
try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<498,499,12>",(j)); Inst10++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<519,520,13>",(i)); Inst15++; } } catch(e) {}
      o.i = i;
try { if (Inst13 <= 1000 && typeof (o.i) != "undefined") {_RecordType("<513,516,13>",(o.i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<513,514,13>",(o)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (o.i) != "undefined") {_RecordType("<536,539,14>",(o.i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<536,537,14>",(o)); Inst18++; } } catch(e) {}
      var k = o.i;
try { if (Inst16 <= 1000 && typeof (k) != "undefined") {_RecordType("<532,533,14>",(k)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<554,555,15>",(j)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (k) != "undefined") {_RecordType("<558,559,15>",(k)); Inst21++; } } catch(e) {}
      ret += j + k;
try { if (Inst19 <= 1000 && typeof (ret) != "undefined") {_RecordType("<547,550,15>",(ret)); Inst19++; } } catch(e) {}
    } else {
try { if (Inst24 <= 1000 && typeof (ret) != "undefined") {_RecordType("<586,589,17>",(ret)); Inst24++; } } catch(e) {}
      o.i = ret;
try { if (Inst22 <= 1000 && typeof (o.i) != "undefined") {_RecordType("<580,583,17>",(o.i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<580,581,17>",(o)); Inst23++; } } catch(e) {}
    }
  }

try { if (Inst25 <= 1000 && typeof (ret) != "undefined") {_RecordType("<611,614,21>",(ret)); Inst25++; } } catch(e) {}
  return ret;
}

try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<627,628,24>",(f)); Inst27++; } } catch(e) {}
var x = f();
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<623,624,24>",(x)); Inst26++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<637,638,26>",(x)); Inst28++; } } catch(e) {}
if (x == 52) {
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<650,655,27>",(print)); Inst29++; } } catch(e) {}
  print("PASS");
} else {
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<676,681,29>",(print)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<697,698,29>",(x)); Inst31++; } } catch(e) {}
  print("FAIL: got " + x);
}

