var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
Object.prototype.foo = function () {
  return 2;
};
try { if (Inst0 <= 1000 && typeof (Object.prototype.foo) != "undefined") {_RecordType("<367,387,5>",(Object.prototype.foo)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<367,383,5>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<367,373,5>",(Object)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (construct) != "undefined") {_RecordType("<429,438,9>",(construct)); Inst3++; } } catch(e) {}
function construct(z) {
try { if (Inst4 <= 1000 && typeof (z) != "undefined") {_RecordType("<439,440,9>",(z)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (z) != "undefined") {_RecordType("<450,451,10>",(z)); Inst5++; } } catch(e) {}
  if (z) {
    this.a = 1;
try { if (Inst6 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<459,465,11>",(this.a)); Inst6++; } } catch(e) {}
  }

try { if (Inst8 <= 1000 && typeof (this.foo) != "undefined") {_RecordType("<487,495,14>",(this.foo)); Inst8++; } } catch(e) {}
  this.b = this.foo();
try { if (Inst7 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<478,484,14>",(this.b)); Inst7++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (construct) != "undefined") {_RecordType("<506,515,17>",(construct)); Inst9++; } } catch(e) {}
new construct(1);
try { if (Inst10 <= 1000 && typeof (construct) != "undefined") {_RecordType("<524,533,18>",(construct)); Inst10++; } } catch(e) {}
new construct(1);
try { if (Inst12 <= 1000 && typeof (construct) != "undefined") {_RecordType("<550,559,19>",(construct)); Inst12++; } } catch(e) {}
var c = new construct(1);
try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<542,543,19>",(c)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<564,569,20>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c.a) != "undefined") {_RecordType("<570,573,20>",(c.a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<570,571,20>",(c)); Inst15++; } } catch(e) {}
print(c.a);
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<576,581,21>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (c.b) != "undefined") {_RecordType("<582,585,21>",(c.b)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<582,583,21>",(c)); Inst18++; } } catch(e) {}
print(c.b);

