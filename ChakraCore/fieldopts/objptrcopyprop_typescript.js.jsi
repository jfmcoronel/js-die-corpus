var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo(obj, obj2) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<380,383,5>",(obj)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<385,389,5>",(obj2)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<399,404,6>",(obj.x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<399,402,6>",(obj)); Inst4++; } } catch(e) {}
  if (obj.x == 10) {
try { if (Inst6 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<424,428,7>",(obj2)); Inst6++; } } catch(e) {}
    obj = obj2;
try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<418,421,7>",(obj)); Inst5++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<439,444,9>",(obj.x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<439,442,9>",(obj)); Inst8++; } } catch(e) {}
    if (obj.x == 20) {
      return;
    }
  }

try { if (Inst9 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<488,493,14>",(obj.x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<488,491,14>",(obj)); Inst10++; } } catch(e) {}
  return obj.x;
}

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<507,511,17>",(test)); Inst11++; } } catch(e) {}
function test() {
try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<531,537,18>",(Object)); Inst13++; } } catch(e) {}
  var o1 = new Object();
try { if (Inst12 <= 1000 && typeof (o1) != "undefined") {_RecordType("<522,524,18>",(o1)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<556,562,19>",(Object)); Inst15++; } } catch(e) {}
  var o2 = new Object();
try { if (Inst14 <= 1000 && typeof (o2) != "undefined") {_RecordType("<547,549,19>",(o2)); Inst14++; } } catch(e) {}
  o1.x = 10;
try { if (Inst16 <= 1000 && typeof (o1.x) != "undefined") {_RecordType("<568,572,20>",(o1.x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o1) != "undefined") {_RecordType("<568,570,20>",(o1)); Inst17++; } } catch(e) {}
  o2.x = 30;
try { if (Inst18 <= 1000 && typeof (o2.x) != "undefined") {_RecordType("<581,585,21>",(o2.x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o2) != "undefined") {_RecordType("<581,583,21>",(o2)); Inst19++; } } catch(e) {}

  for (var i = 0; i < 1000; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<604,605,23>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<611,612,23>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<621,622,23>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<645,648,24>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o1) != "undefined") {_RecordType("<649,651,24>",(o1)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o2) != "undefined") {_RecordType("<653,655,24>",(o2)); Inst26++; } } catch(e) {}
    var result = foo(o1, o2);
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<636,642,24>",(result)); Inst23++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<667,673,26>",(result)); Inst27++; } } catch(e) {}
    if (result != 30) {
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<689,694,27>",(print)); Inst28++; } } catch(e) {}
      print("FAILED\n");
      return;
    }
  }

try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<735,740,32>",(print)); Inst29++; } } catch(e) {}
  print("Passed");
}

try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<755,759,35>",(test)); Inst30++; } } catch(e) {}
test();

