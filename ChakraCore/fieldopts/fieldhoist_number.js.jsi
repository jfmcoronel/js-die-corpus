var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// These tests are to make sure the following:
// o[i] = ...
// ... = o.x -- make sure that we don't hoist the load of o.x,
//              if previous call to o[i] has a chance to kill some o.x.
// Access via o.x (use NaN)
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<600,605,10>",(test1)); Inst0++; } } catch(e) {}
function test1() {
  var a = {};
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<616,617,11>",(a)); Inst1++; } } catch(e) {}
  var r;
try { if (Inst2 <= 1000 && typeof (r) != "undefined") {_RecordType("<630,631,12>",(r)); Inst2++; } } catch(e) {}
  a.NaN = "orig";
try { if (Inst3 <= 1000 && typeof (a.NaN) != "undefined") {_RecordType("<635,640,13>",(a.NaN)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<635,636,13>",(a)); Inst4++; } } catch(e) {}

  for (var i = 0; i < 1; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<663,664,15>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<670,671,15>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<679,680,15>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a.NaN) != "undefined") {_RecordType("<692,697,16>",(a.NaN)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<692,693,16>",(a)); Inst10++; } } catch(e) {}
    r = a.NaN;
try { if (Inst8 <= 1000 && typeof (r) != "undefined") {_RecordType("<688,689,16>",(r)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<707,715,17>",(Math.pow)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<707,711,17>",(Math)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<719,727,17>",(Infinity)); Inst14++; } } catch(e) {}
    i = Math.pow(1, Infinity); // Get NaN which val we know to be a Number.
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<703,704,17>",(i)); Inst11++; } } catch(e) {}

    a[i] = "new"; // This will kill a.NaN.
try { if (Inst15 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<780,784,19>",(a[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<780,781,19>",(a)); Inst16++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (a.NaN) != "undefined") {_RecordType("<828,833,21>",(a.NaN)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<828,829,21>",(a)); Inst19++; } } catch(e) {}
    r = a.NaN; // This must cause a reload.
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<824,825,21>",(r)); Inst17++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<878,879,24>",(r)); Inst20++; } } catch(e) {}
  return r;
} // Access via o.x (use Infinity)


try { if (Inst21 <= 1000 && typeof (test2) != "undefined") {_RecordType("<927,932,28>",(test2)); Inst21++; } } catch(e) {}
function test2() {
  var a = {};
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<943,944,29>",(a)); Inst22++; } } catch(e) {}
  var r;
try { if (Inst23 <= 1000 && typeof (r) != "undefined") {_RecordType("<957,958,30>",(r)); Inst23++; } } catch(e) {}
  a.Infinity = "orig";
try { if (Inst24 <= 1000 && typeof (a.Infinity) != "undefined") {_RecordType("<962,972,31>",(a.Infinity)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<962,963,31>",(a)); Inst25++; } } catch(e) {}

  for (var i = 0; i < 1; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<995,996,33>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1002,1003,33>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1011,1012,33>",(i)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (a.Infinity) != "undefined") {_RecordType("<1024,1034,34>",(a.Infinity)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<1024,1025,34>",(a)); Inst31++; } } catch(e) {}
    r = a.Infinity;
try { if (Inst29 <= 1000 && typeof (r) != "undefined") {_RecordType("<1020,1021,34>",(r)); Inst29++; } } catch(e) {}
    i = 1 / 0; // Get Infinity which val we know to be a Number.
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<1040,1041,35>",(i)); Inst32++; } } catch(e) {}

    a[i] = "new"; // This will kill a.Infinity.
try { if (Inst33 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1106,1110,37>",(a[i])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<1106,1107,37>",(a)); Inst34++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (a.Infinity) != "undefined") {_RecordType("<1159,1169,39>",(a.Infinity)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<1159,1160,39>",(a)); Inst37++; } } catch(e) {}
    r = a.Infinity; // This must cause a reload.
try { if (Inst35 <= 1000 && typeof (r) != "undefined") {_RecordType("<1155,1156,39>",(r)); Inst35++; } } catch(e) {}
  }

try { if (Inst38 <= 1000 && typeof (r) != "undefined") {_RecordType("<1214,1215,42>",(r)); Inst38++; } } catch(e) {}
  return r;
} // Access via o["x"] (use -Infinity)


try { if (Inst39 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1267,1272,46>",(test3)); Inst39++; } } catch(e) {}
function test3() {
  var a = {};
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<1283,1284,47>",(a)); Inst40++; } } catch(e) {}
  a[-Infinity] = "orig";
try { if (Inst41 <= 1000 && typeof (a[-Infinity]) != "undefined") {_RecordType("<1293,1305,48>",(a[-Infinity])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1293,1294,48>",(a)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1296,1304,48>",(Infinity)); Inst43++; } } catch(e) {}
  var r;
try { if (Inst44 <= 1000 && typeof (r) != "undefined") {_RecordType("<1322,1323,49>",(r)); Inst44++; } } catch(e) {}

  for (var i = 0; i > -1; --i) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<1337,1338,51>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<1344,1345,51>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1354,1355,51>",(i)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (a["-Infinity"]) != "undefined") {_RecordType("<1367,1381,52>",(a["-Infinity"])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<1367,1368,52>",(a)); Inst50++; } } catch(e) {}
    r = a["-Infinity"];
try { if (Inst48 <= 1000 && typeof (r) != "undefined") {_RecordType("<1363,1364,52>",(r)); Inst48++; } } catch(e) {}
    i = -1 / 0;
try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<1387,1388,53>",(i)); Inst51++; } } catch(e) {}
    a[i] = "new";
try { if (Inst52 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1403,1407,54>",(a[i])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<1403,1404,54>",(a)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (a["-Infinity"]) != "undefined") {_RecordType("<1425,1439,55>",(a["-Infinity"])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (a) != "undefined") {_RecordType("<1425,1426,55>",(a)); Inst56++; } } catch(e) {}
    r = a["-Infinity"];
try { if (Inst54 <= 1000 && typeof (r) != "undefined") {_RecordType("<1421,1422,55>",(r)); Inst54++; } } catch(e) {}
  }

try { if (Inst57 <= 1000 && typeof (r) != "undefined") {_RecordType("<1455,1456,58>",(r)); Inst57++; } } catch(e) {}
  return r;
} // Access fia o["x"], use float number


try { if (Inst58 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1510,1515,62>",(test4)); Inst58++; } } catch(e) {}
function test4() {
  var a = {};
try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<1526,1527,63>",(a)); Inst59++; } } catch(e) {}
  var r;
try { if (Inst60 <= 1000 && typeof (r) != "undefined") {_RecordType("<1540,1541,64>",(r)); Inst60++; } } catch(e) {}
  a[1.23] = "orig";
try { if (Inst61 <= 1000 && typeof (a[1.23]) != "undefined") {_RecordType("<1545,1552,65>",(a[1.23])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (a) != "undefined") {_RecordType("<1545,1546,65>",(a)); Inst62++; } } catch(e) {}

  for (var i = 1; i < 2; ++i) {
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1575,1576,67>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1582,1583,67>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1591,1592,67>",(i)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (a[1.23]) != "undefined") {_RecordType("<1604,1611,68>",(a[1.23])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<1604,1605,68>",(a)); Inst68++; } } catch(e) {}
    r = a[1.23];
try { if (Inst66 <= 1000 && typeof (r) != "undefined") {_RecordType("<1600,1601,68>",(r)); Inst66++; } } catch(e) {}
    i = 1 + 0.23;
try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<1617,1618,69>",(i)); Inst69++; } } catch(e) {}
    a[i] = "new"; // This will kill a[1.23].
try { if (Inst70 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1635,1639,70>",(a[i])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (a) != "undefined") {_RecordType("<1635,1636,70>",(a)); Inst71++; } } catch(e) {}

try { if (Inst73 <= 1000 && typeof (a["1.23"]) != "undefined") {_RecordType("<1685,1694,72>",(a["1.23"])); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (a) != "undefined") {_RecordType("<1685,1686,72>",(a)); Inst74++; } } catch(e) {}
    r = a["1.23"]; // This must cause a reload.
try { if (Inst72 <= 1000 && typeof (r) != "undefined") {_RecordType("<1681,1682,72>",(r)); Inst72++; } } catch(e) {}
  }

try { if (Inst75 <= 1000 && typeof (r) != "undefined") {_RecordType("<1739,1740,75>",(r)); Inst75++; } } catch(e) {}
  return r;
} // Access via o[x] (use NaN)


try { if (Inst76 <= 1000 && typeof (test5) != "undefined") {_RecordType("<1784,1789,79>",(test5)); Inst76++; } } catch(e) {}
function test5() {
  var a = {};
try { if (Inst77 <= 1000 && typeof (a) != "undefined") {_RecordType("<1800,1801,80>",(a)); Inst77++; } } catch(e) {}
  var r;
try { if (Inst78 <= 1000 && typeof (r) != "undefined") {_RecordType("<1814,1815,81>",(r)); Inst78++; } } catch(e) {}
  a.NaN = "orig";
try { if (Inst79 <= 1000 && typeof (a.NaN) != "undefined") {_RecordType("<1819,1824,82>",(a.NaN)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (a) != "undefined") {_RecordType("<1819,1820,82>",(a)); Inst80++; } } catch(e) {}

  for (var i = 0; i < 1; ++i) {
try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<1847,1848,84>",(i)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (i) != "undefined") {_RecordType("<1854,1855,84>",(i)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (i) != "undefined") {_RecordType("<1863,1864,84>",(i)); Inst83++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (a.NaN) != "undefined") {_RecordType("<1876,1881,85>",(a.NaN)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (a) != "undefined") {_RecordType("<1876,1877,85>",(a)); Inst86++; } } catch(e) {}
    r = a.NaN;
try { if (Inst84 <= 1000 && typeof (r) != "undefined") {_RecordType("<1872,1873,85>",(r)); Inst84++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<1891,1899,86>",(Math.pow)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1891,1895,86>",(Math)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1903,1911,86>",(Infinity)); Inst90++; } } catch(e) {}
    i = Math.pow(1, Infinity); // Get a NaN that which val we know to be a Number.
try { if (Inst87 <= 1000 && typeof (i) != "undefined") {_RecordType("<1887,1888,86>",(i)); Inst87++; } } catch(e) {}

    a[i] = "new"; // This will kill a.NaN.
try { if (Inst91 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1971,1975,88>",(a[i])); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (a) != "undefined") {_RecordType("<1971,1972,88>",(a)); Inst92++; } } catch(e) {}

try { if (Inst94 <= 1000 && typeof (a[NaN]) != "undefined") {_RecordType("<2019,2025,90>",(a[NaN])); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (a) != "undefined") {_RecordType("<2019,2020,90>",(a)); Inst95++; } } catch(e) {}
    r = a[NaN]; // This must cause a reload.
try { if (Inst93 <= 1000 && typeof (r) != "undefined") {_RecordType("<2015,2016,90>",(r)); Inst93++; } } catch(e) {}
  }

try { if (Inst96 <= 1000 && typeof (r) != "undefined") {_RecordType("<2070,2071,93>",(r)); Inst96++; } } catch(e) {}
  return r;
} // Access via o[x] (use float number)


try { if (Inst97 <= 1000 && typeof (test6) != "undefined") {_RecordType("<2124,2129,97>",(test6)); Inst97++; } } catch(e) {}
function test6() {
  var a = {};
try { if (Inst98 <= 1000 && typeof (a) != "undefined") {_RecordType("<2140,2141,98>",(a)); Inst98++; } } catch(e) {}
  var r;
try { if (Inst99 <= 1000 && typeof (r) != "undefined") {_RecordType("<2154,2155,99>",(r)); Inst99++; } } catch(e) {}
  a[1.23] = "orig";
try { if (Inst100 <= 1000 && typeof (a[1.23]) != "undefined") {_RecordType("<2159,2166,100>",(a[1.23])); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (a) != "undefined") {_RecordType("<2159,2160,100>",(a)); Inst101++; } } catch(e) {}

  for (var i = 1; i < 2; ++i) {
try { if (Inst102 <= 1000 && typeof (i) != "undefined") {_RecordType("<2189,2190,102>",(i)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (i) != "undefined") {_RecordType("<2196,2197,102>",(i)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (i) != "undefined") {_RecordType("<2205,2206,102>",(i)); Inst104++; } } catch(e) {}
try { if (Inst106 <= 1000 && typeof (a[1.23]) != "undefined") {_RecordType("<2218,2225,103>",(a[1.23])); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (a) != "undefined") {_RecordType("<2218,2219,103>",(a)); Inst107++; } } catch(e) {}
    r = a[1.23];
try { if (Inst105 <= 1000 && typeof (r) != "undefined") {_RecordType("<2214,2215,103>",(r)); Inst105++; } } catch(e) {}
    i = 1 + 0.23;
try { if (Inst108 <= 1000 && typeof (i) != "undefined") {_RecordType("<2231,2232,104>",(i)); Inst108++; } } catch(e) {}
    a[i] = "new"; // This will kill a[1.23].
try { if (Inst109 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2249,2253,105>",(a[i])); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (a) != "undefined") {_RecordType("<2249,2250,105>",(a)); Inst110++; } } catch(e) {}

try { if (Inst112 <= 1000 && typeof (a[1.23]) != "undefined") {_RecordType("<2299,2306,107>",(a[1.23])); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (a) != "undefined") {_RecordType("<2299,2300,107>",(a)); Inst113++; } } catch(e) {}
    r = a[1.23]; // This must cause a reload.
try { if (Inst111 <= 1000 && typeof (r) != "undefined") {_RecordType("<2295,2296,107>",(r)); Inst111++; } } catch(e) {}
  }

try { if (Inst114 <= 1000 && typeof (r) != "undefined") {_RecordType("<2351,2352,110>",(r)); Inst114++; } } catch(e) {}
  return r;
}

var isPass = true;
try { if (Inst115 <= 1000 && typeof (isPass) != "undefined") {_RecordType("<2361,2367,113>",(isPass)); Inst115++; } } catch(e) {}

try { if (Inst116 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<2386,2397,115>",(reportError)); Inst116++; } } catch(e) {}
function reportError(arg1, arg2) {
try { if (Inst117 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<2398,2402,115>",(arg1)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (arg2) != "undefined") {_RecordType("<2404,2408,115>",(arg2)); Inst118++; } } catch(e) {}
try { if (Inst119 <= 1000 && typeof (print) != "undefined") {_RecordType("<2414,2419,116>",(print)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<2420,2424,116>",(arg1)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (arg2) != "undefined") {_RecordType("<2426,2430,116>",(arg2)); Inst121++; } } catch(e) {}
  print(arg1, arg2);
  isPass = false;
try { if (Inst122 <= 1000 && typeof (isPass) != "undefined") {_RecordType("<2435,2441,117>",(isPass)); Inst122++; } } catch(e) {}
}

var expected = "new";
try { if (Inst123 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2458,2466,120>",(expected)); Inst123++; } } catch(e) {}
try { if (Inst125 <= 1000 && typeof (test1) != "undefined") {_RecordType("<2485,2490,121>",(test1)); Inst125++; } } catch(e) {}
var r1 = test1();
try { if (Inst124 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2480,2482,121>",(r1)); Inst124++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2503,2508,122>",(test2)); Inst127++; } } catch(e) {}
var r2 = test2();
try { if (Inst126 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2498,2500,122>",(r2)); Inst126++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (test3) != "undefined") {_RecordType("<2521,2526,123>",(test3)); Inst129++; } } catch(e) {}
var r3 = test3();
try { if (Inst128 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2516,2518,123>",(r3)); Inst128++; } } catch(e) {}
try { if (Inst131 <= 1000 && typeof (test4) != "undefined") {_RecordType("<2539,2544,124>",(test4)); Inst131++; } } catch(e) {}
var r4 = test4();
try { if (Inst130 <= 1000 && typeof (r4) != "undefined") {_RecordType("<2534,2536,124>",(r4)); Inst130++; } } catch(e) {}
try { if (Inst133 <= 1000 && typeof (test5) != "undefined") {_RecordType("<2557,2562,125>",(test5)); Inst133++; } } catch(e) {}
var r5 = test5();
try { if (Inst132 <= 1000 && typeof (r5) != "undefined") {_RecordType("<2552,2554,125>",(r5)); Inst132++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (test6) != "undefined") {_RecordType("<2575,2580,126>",(test6)); Inst135++; } } catch(e) {}
var r6 = test6();
try { if (Inst134 <= 1000 && typeof (r6) != "undefined") {_RecordType("<2570,2572,126>",(r6)); Inst134++; } } catch(e) {}

try { if (Inst136 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2589,2591,128>",(r1)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2595,2603,128>",(expected)); Inst137++; } } catch(e) {}
if (r1 != expected) {
try { if (Inst138 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<2609,2620,129>",(reportError)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2634,2636,129>",(r1)); Inst139++; } } catch(e) {}
  reportError("bug: r1 =", r1);
}

try { if (Inst140 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2646,2648,132>",(r2)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2652,2660,132>",(expected)); Inst141++; } } catch(e) {}
if (r2 != expected) {
try { if (Inst142 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<2666,2677,133>",(reportError)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2691,2693,133>",(r2)); Inst143++; } } catch(e) {}
  reportError("bug: r2 =", r2);
}

try { if (Inst144 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2703,2705,136>",(r3)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2709,2717,136>",(expected)); Inst145++; } } catch(e) {}
if (r3 != expected) {
try { if (Inst146 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<2723,2734,137>",(reportError)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2748,2750,137>",(r3)); Inst147++; } } catch(e) {}
  reportError("bug: r3 =", r3);
}

try { if (Inst148 <= 1000 && typeof (r4) != "undefined") {_RecordType("<2760,2762,140>",(r4)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2766,2774,140>",(expected)); Inst149++; } } catch(e) {}
if (r4 != expected) {
try { if (Inst150 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<2780,2791,141>",(reportError)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (r4) != "undefined") {_RecordType("<2805,2807,141>",(r4)); Inst151++; } } catch(e) {}
  reportError("bug: r4 =", r4);
}

try { if (Inst152 <= 1000 && typeof (r5) != "undefined") {_RecordType("<2817,2819,144>",(r5)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2823,2831,144>",(expected)); Inst153++; } } catch(e) {}
if (r5 != expected) {
try { if (Inst154 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<2837,2848,145>",(reportError)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (r5) != "undefined") {_RecordType("<2862,2864,145>",(r5)); Inst155++; } } catch(e) {}
  reportError("bug: r5 =", r5);
}

try { if (Inst156 <= 1000 && typeof (r6) != "undefined") {_RecordType("<2874,2876,148>",(r6)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2880,2888,148>",(expected)); Inst157++; } } catch(e) {}
if (r6 != expected) {
try { if (Inst158 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<2894,2905,149>",(reportError)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (r6) != "undefined") {_RecordType("<2919,2921,149>",(r6)); Inst159++; } } catch(e) {}
  reportError("bug: r6 =", r6);
}

try { if (Inst160 <= 1000 && typeof (isPass) != "undefined") {_RecordType("<2931,2937,152>",(isPass)); Inst160++; } } catch(e) {}
if (isPass) {
try { if (Inst161 <= 1000 && typeof (print) != "undefined") {_RecordType("<2943,2948,153>",(print)); Inst161++; } } catch(e) {}
  print("PASS");
}

