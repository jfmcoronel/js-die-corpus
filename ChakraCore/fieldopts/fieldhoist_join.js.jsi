var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo(arr) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<380,383,5>",(arr)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<398,399,6>",(o)); Inst3++; } } catch(e) {}
  var o2 = o;
try { if (Inst2 <= 1000 && typeof (o2) != "undefined") {_RecordType("<393,395,6>",(o2)); Inst2++; } } catch(e) {}
  var y = 100;
try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<407,408,7>",(y)); Inst4++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<428,429,9>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,9>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<443,444,9>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (o2.x) != "undefined") {_RecordType("<459,463,10>",(o2.x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o2) != "undefined") {_RecordType("<459,461,10>",(o2)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<466,469,10>",(arr)); Inst11++; } } catch(e) {}
    y += o2.x + arr;
try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<454,455,10>",(y)); Inst8++; } } catch(e) {}
  }

try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<478,483,13>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<484,485,13>",(y)); Inst13++; } } catch(e) {}
  print(y);
}

var o = {
  x: 1
};
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<495,496,16>",(o)); Inst14++; } } catch(e) {}
var arr = [1, 2, 3, 4];
try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<515,518,19>",(arr)); Inst15++; } } catch(e) {}

Array.prototype.join = function () {
  return o.x += 100;
try { if (Inst19 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<582,585,22>",(o.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<582,583,22>",(o)); Inst20++; } } catch(e) {}
};
try { if (Inst16 <= 1000 && typeof (Array.prototype.join) != "undefined") {_RecordType("<536,556,21>",(Array.prototype.join)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<536,551,21>",(Array.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<536,541,21>",(Array)); Inst18++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<598,601,25>",(foo)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<602,605,25>",(arr)); Inst22++; } } catch(e) {}
foo(arr);

