var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var GiantPrintArray = [];
try { if (Inst0 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<371,386,5>",(GiantPrintArray)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (makeArrayLength) != "undefined") {_RecordType("<403,418,7>",(makeArrayLength)); Inst1++; } } catch(e) {}
function makeArrayLength() {
  return 100;
}

var obj0 = {};
try { if (Inst2 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<444,448,11>",(obj0)); Inst2++; } } catch(e) {}
var obj1 = {};
try { if (Inst3 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<459,463,12>",(obj1)); Inst3++; } } catch(e) {}

var func0 = function () {
  ;
};
try { if (Inst4 <= 1000 && typeof (func0) != "undefined") {_RecordType("<475,480,14>",(func0)); Inst4++; } } catch(e) {}

var func4 = function () {
try { if (Inst8 <= 1000 && typeof (protoObj0.length) != "undefined") {_RecordType("<550,566,19>",(protoObj0.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<550,559,19>",(protoObj0)); Inst9++; } } catch(e) {}
  obj1.method0 = --protoObj0.length;
try { if (Inst6 <= 1000 && typeof (obj1.method0) != "undefined") {_RecordType("<533,545,19>",(obj1.method0)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<533,537,19>",(obj1)); Inst7++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (obj1.method0) != "undefined") {_RecordType("<585,597,20>",(obj1.method0)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<585,589,20>",(obj1)); Inst13++; } } catch(e) {}
  protoObj0.v1 = obj1.method0;
try { if (Inst10 <= 1000 && typeof (protoObj0.v1) != "undefined") {_RecordType("<570,582,20>",(protoObj0.v1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<570,579,20>",(protoObj0)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (GiantPrintArray.push) != "undefined") {_RecordType("<601,621,21>",(GiantPrintArray.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<601,616,21>",(GiantPrintArray)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (protoObj0.v1) != "undefined") {_RecordType("<622,634,21>",(protoObj0.v1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<622,631,21>",(protoObj0)); Inst17++; } } catch(e) {}
  GiantPrintArray.push(protoObj0.v1);
};
try { if (Inst5 <= 1000 && typeof (func4) != "undefined") {_RecordType("<509,514,18>",(func4)); Inst5++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (func0) != "undefined") {_RecordType("<656,661,24>",(func0)); Inst20++; } } catch(e) {}
obj1.method0 = func0;
try { if (Inst18 <= 1000 && typeof (obj1.method0) != "undefined") {_RecordType("<641,653,24>",(obj1.method0)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<641,645,24>",(obj1)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (obj1.method0) != "undefined") {_RecordType("<678,690,25>",(obj1.method0)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<678,682,25>",(obj1)); Inst24++; } } catch(e) {}
obj1.method1 = obj1.method0;
try { if (Inst21 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<663,675,25>",(obj1.method1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<663,667,25>",(obj1)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<704,717,26>",(Object.create)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<704,710,26>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<718,722,26>",(obj0)); Inst28++; } } catch(e) {}
protoObj0 = Object.create(obj0);
try { if (Inst25 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<692,701,26>",(protoObj0)); Inst25++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (makeArrayLength) != "undefined") {_RecordType("<744,759,27>",(makeArrayLength)); Inst31++; } } catch(e) {}
protoObj0.length = makeArrayLength();
try { if (Inst29 <= 1000 && typeof (protoObj0.length) != "undefined") {_RecordType("<725,741,27>",(protoObj0.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<725,734,27>",(protoObj0)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<763,775,28>",(obj1.method1)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<763,767,28>",(obj1)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (func4) != "undefined") {_RecordType("<776,781,28>",(func4)); Inst34++; } } catch(e) {}
obj1.method1(func4());
try { if (Inst36 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<793,802,29>",(protoObj0)); Inst36++; } } catch(e) {}
obj1 = protoObj0;
try { if (Inst35 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<786,790,29>",(obj1)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (func4) != "undefined") {_RecordType("<804,809,30>",(func4)); Inst37++; } } catch(e) {}
func4();

try { if (Inst38 <= 1000 && typeof (GiantPrintArray[0]) != "undefined") {_RecordType("<818,836,32>",(GiantPrintArray[0])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<818,833,32>",(GiantPrintArray)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (GiantPrintArray[1]) != "undefined") {_RecordType("<847,865,32>",(GiantPrintArray[1])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<847,862,32>",(GiantPrintArray)); Inst41++; } } catch(e) {}
if (GiantPrintArray[0] !== 99 || GiantPrintArray[1] !== 98) {
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<878,883,33>",(print)); Inst42++; } } catch(e) {}
  print('fail');
} else {
try { if (Inst43 <= 1000 && typeof (print) != "undefined") {_RecordType("<904,909,35>",(print)); Inst43++; } } catch(e) {}
  print('pass');
}

