var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
(function () {
try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<399,405,6>",(Object)); Inst1++; } } catch(e) {}
  var obj0 = new Object();
try { if (Inst0 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<388,392,6>",(obj0)); Inst0++; } } catch(e) {}

  var func1 = function (p0, p1, p2) {
try { if (Inst3 <= 1000 && typeof (p0) != "undefined") {_RecordType("<434,436,8>",(p0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (p1) != "undefined") {_RecordType("<438,440,8>",(p1)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (p2) != "undefined") {_RecordType("<442,444,8>",(p2)); Inst5++; } } catch(e) {}
    ;
  };
try { if (Inst2 <= 1000 && typeof (func1) != "undefined") {_RecordType("<416,421,8>",(func1)); Inst2++; } } catch(e) {}

  var d = 1;
try { if (Inst6 <= 1000 && typeof (d) != "undefined") {_RecordType("<466,467,12>",(d)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (func4) != "undefined") {_RecordType("<485,490,14>",(func4)); Inst7++; } } catch(e) {}
  function func4(p0, p1, p2, p3) {
try { if (Inst8 <= 1000 && typeof (p0) != "undefined") {_RecordType("<491,493,14>",(p0)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p1) != "undefined") {_RecordType("<495,497,14>",(p1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p2) != "undefined") {_RecordType("<499,501,14>",(p2)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (p3) != "undefined") {_RecordType("<503,505,14>",(p3)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<523,524,15>",(d)); Inst14++; } } catch(e) {}
    obj0.e %= d;
try { if (Inst12 <= 1000 && typeof (obj0.e) != "undefined") {_RecordType("<513,519,15>",(obj0.e)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<513,517,15>",(obj0)); Inst13++; } } catch(e) {}
  }

  var i = 0;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<537,538,18>",(i)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<662,663,28>",(i)); Inst16++; } } catch(e) {}
  do {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<556,557,21>",(i)); Inst17++; } } catch(e) {}
    i++;
try { if (Inst18 <= 1000 && typeof (func1) != "undefined") {_RecordType("<565,570,22>",(func1)); Inst18++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<582,583,22>",(d)); Inst21++; } } catch(e) {}
    func1(obj0.e = ++d);
try { if (Inst19 <= 1000 && typeof (obj0.e) != "undefined") {_RecordType("<571,577,22>",(obj0.e)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<571,575,22>",(obj0)); Inst20++; } } catch(e) {}
    var j = 0;
try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<594,595,23>",(j)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (d) != "undefined") {_RecordType("<613,614,25>",(d)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (j) != "undefined") {_RecordType("<620,621,25>",(j)); Inst24++; } } catch(e) {}
    while (d++ && j < 3) {
try { if (Inst25 <= 1000 && typeof (j) != "undefined") {_RecordType("<635,636,26>",(j)); Inst25++; } } catch(e) {}
      j++;
    }
  } while (1 && i < 3);

try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<673,678,30>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj0.e) != "undefined") {_RecordType("<694,700,30>",(obj0.e)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<694,698,30>",(obj0)); Inst28++; } } catch(e) {}
  print("obj0.e = " + (obj0.e | 0));
})();

