var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// -force:fieldhoist -off:inlinegetters -off:fixedmethods -mic:1 -msjrc:1
var obj1 = {};
try { if (Inst0 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<445,449,6>",(obj1)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<456,477,7>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<456,462,7>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<478,482,7>",(obj1)); Inst3++; } } catch(e) {}
Object.defineProperty(obj1, "prop0", {
  get: function () {
try { if (Inst4 <= 1000 && typeof (this._prop0) != "undefined") {_RecordType("<527,538,9>",(this._prop0)); Inst4++; } } catch(e) {}
    return this._prop0;
  },
  set: function (a) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<562,563,11>",(a)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<585,586,12>",(a)); Inst7++; } } catch(e) {}
    this._prop0 = a;
try { if (Inst6 <= 1000 && typeof (this._prop0) != "undefined") {_RecordType("<571,582,12>",(this._prop0)); Inst6++; } } catch(e) {}
  },
  configurable: true
});
arrObj0 = [];
try { if (Inst8 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<618,625,16>",(arrObj0)); Inst8++; } } catch(e) {}
var ret;
try { if (Inst9 <= 1000 && typeof (ret) != "undefined") {_RecordType("<636,639,17>",(ret)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<651,654,19>",(foo)); Inst10++; } } catch(e) {}
function foo(arrObj0, obj1) {
try { if (Inst11 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<655,662,19>",(arrObj0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<664,668,19>",(obj1)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arrObj0.length) != "undefined") {_RecordType("<674,688,20>",(arrObj0.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<674,681,20>",(arrObj0)); Inst14++; } } catch(e) {}
  arrObj0.length;
  obj1.prop0 = 1;
try { if (Inst15 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<692,702,21>",(obj1.prop0)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<692,696,21>",(obj1)); Inst16++; } } catch(e) {}

  for (var i = 0; i < 3; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<720,721,23>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<727,728,23>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<734,735,23>",(i)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<758,759,24>",(i)); Inst22++; } } catch(e) {}
    obj1.prop0 = i;
try { if (Inst20 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<745,755,24>",(obj1.prop0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<745,749,24>",(obj1)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<771,781,25>",(obj1.prop0)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<771,775,25>",(obj1)); Inst25++; } } catch(e) {}
    ret = obj1.prop0;
try { if (Inst23 <= 1000 && typeof (ret) != "undefined") {_RecordType("<765,768,25>",(ret)); Inst23++; } } catch(e) {}
  }
}

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<790,793,29>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<794,801,29>",(arrObj0)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<803,807,29>",(obj1)); Inst28++; } } catch(e) {}
foo(arrObj0, obj1);
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<810,815,30>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ret) != "undefined") {_RecordType("<816,819,30>",(ret)); Inst30++; } } catch(e) {}
print(ret);
try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<822,825,31>",(foo)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<826,833,31>",(arrObj0)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<835,839,31>",(obj1)); Inst33++; } } catch(e) {}
foo(arrObj0, obj1);
try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<842,847,32>",(print)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ret) != "undefined") {_RecordType("<848,851,32>",(ret)); Inst35++; } } catch(e) {}
print(ret);
try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<854,857,33>",(foo)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<858,865,33>",(arrObj0)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<867,871,33>",(obj1)); Inst38++; } } catch(e) {}
foo(arrObj0, obj1);
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<874,879,34>",(print)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ret) != "undefined") {_RecordType("<880,883,34>",(ret)); Inst40++; } } catch(e) {}
print(ret);

