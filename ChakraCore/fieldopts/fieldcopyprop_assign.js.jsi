var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Make sure assign to the object kill it's field's value for field copy prop.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<455,456,6>",(f)); Inst0++; } } catch(e) {}
function f(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<457,458,6>",(o)); Inst1++; } } catch(e) {}
  var v = 0;
try { if (Inst2 <= 1000 && typeof (v) != "undefined") {_RecordType("<468,469,7>",(v)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<487,488,9>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<494,495,9>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<502,503,9>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<521,524,10>",(o.x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<521,522,10>",(o)); Inst8++; } } catch(e) {}
    var a = o.x;
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<517,518,10>",(a)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<534,537,11>",(o.y)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<534,535,11>",(o)); Inst11++; } } catch(e) {}
    o = o.y;
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<530,531,11>",(o)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<551,554,12>",(o.x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<551,552,12>",(o)); Inst14++; } } catch(e) {}
    var b = o.x;
try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<547,548,12>",(b)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<565,566,13>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<569,570,13>",(b)); Inst17++; } } catch(e) {}
    v += a + b;
try { if (Inst15 <= 1000 && typeof (v) != "undefined") {_RecordType("<560,561,13>",(v)); Inst15++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (v) != "undefined") {_RecordType("<586,587,16>",(v)); Inst18++; } } catch(e) {}
  return v;
}

try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<604,610,19>",(Object)); Inst20++; } } catch(e) {}
var o = new Object();
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<596,597,19>",(o)); Inst19++; } } catch(e) {}
o.x = -1;
try { if (Inst21 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<614,617,20>",(o.x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<614,615,20>",(o)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<632,633,21>",(o)); Inst24++; } } catch(e) {}
var a = o;
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<628,629,21>",(a)); Inst23++; } } catch(e) {}

for (var i = 0; i < 10; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<645,646,23>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<652,653,23>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<660,661,23>",(i)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<679,685,24>",(Object)); Inst30++; } } catch(e) {}
  o.y = new Object();
try { if (Inst28 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<669,672,24>",(o.y)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<669,670,24>",(o)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<695,698,25>",(o.y)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<695,696,25>",(o)); Inst33++; } } catch(e) {}
  o = o.y;
try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<691,692,25>",(o)); Inst31++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<708,709,26>",(i)); Inst36++; } } catch(e) {}
  o.x = i;
try { if (Inst34 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<702,705,26>",(o.x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<702,703,26>",(o)); Inst35++; } } catch(e) {}
}

try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<720,721,29>",(a)); Inst39++; } } catch(e) {}
o.y = a;
try { if (Inst37 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<714,717,29>",(o.y)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<714,715,29>",(o)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<723,728,30>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<729,730,30>",(f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<731,732,30>",(a)); Inst42++; } } catch(e) {}
print(f(a) == 80 ? "PASS" : "FAIL");

