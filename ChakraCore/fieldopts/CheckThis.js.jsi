var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Flavors of inlined LdThis, some of which will bail out if we force the optimization.
(function () {
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<481,482,7>",(f)); Inst0++; } } catch(e) {}
  function f() {
try { if (Inst1 <= 1000 && typeof (this.foo) != "undefined") {_RecordType("<498,506,8>",(this.foo)); Inst1++; } } catch(e) {}
    return this.foo();
  }

  var t = this;
try { if (Inst2 <= 1000 && typeof (t) != "undefined") {_RecordType("<521,522,11>",(t)); Inst2++; } } catch(e) {}
  var x = {
    foo: function () {
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<572,577,14>",(print)); Inst4++; } } catch(e) {}
      print(this);
    }
  };
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<537,538,12>",(x)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<604,605,17>",(f)); Inst7++; } } catch(e) {}
  x.f = f;
try { if (Inst5 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<598,601,17>",(x.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<598,599,17>",(x)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<609,612,18>",(x.f)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<609,610,18>",(x)); Inst9++; } } catch(e) {}
  x.f();

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<645,646,22>",(e)); Inst11++; } } catch(e) {}
  try {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<629,630,21>",(f)); Inst10++; } } catch(e) {}
    f();
  } catch (e) {
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<654,659,23>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<660,669,23>",(e.message)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<660,661,23>",(e)); Inst14++; } } catch(e) {}
    print(e.message);
  }

try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<679,684,26>",(print)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (t) != "undefined") {_RecordType("<685,686,26>",(t)); Inst16++; } } catch(e) {}
  print(t === this);
})();

(function () {
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<731,732,30>",(f)); Inst17++; } } catch(e) {}
  function f(o) {
try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<733,734,30>",(o)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (o.foo) != "undefined") {_RecordType("<749,754,31>",(o.foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<749,750,31>",(o)); Inst20++; } } catch(e) {}
    return o.foo();
  }

  var x = {
    foo: function () {
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<804,809,36>",(print)); Inst22++; } } catch(e) {}
      print(this);
    }
  };
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<769,770,34>",(x)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<830,831,39>",(f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<832,833,39>",(x)); Inst24++; } } catch(e) {}
  f(x);
})();

try { if (Inst25 <= 1000 && typeof (test) != "undefined") {_RecordType("<852,856,42>",(test)); Inst25++; } } catch(e) {}
function test() {
  Object.prototype['foo'] = function () {
    return this;
  };
try { if (Inst26 <= 1000 && typeof (Object.prototype['foo']) != "undefined") {_RecordType("<863,886,43>",(Object.prototype['foo'])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<863,879,43>",(Object.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<863,869,43>",(Object)); Inst28++; } } catch(e) {}

  var c = {};
try { if (Inst29 <= 1000 && typeof (c) != "undefined") {_RecordType("<932,933,47>",(c)); Inst29++; } } catch(e) {}
  var x;
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<946,947,48>",(x)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<951,952,49>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (c.foo) != "undefined") {_RecordType("<955,960,49>",(c.foo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (c) != "undefined") {_RecordType("<955,956,49>",(c)); Inst33++; } } catch(e) {}
  x + c.foo("a");
try { if (Inst34 <= 1000 && typeof ((function () {
    return 1;
  })().foo) != "undefined") {_RecordType("<969,1008,50>",((function () {
    return 1;
  })().foo)); Inst34++; } } catch(e) {}
  (function () {
    return 1;
  })().foo();
}

;
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<1017,1022,56>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<1023,1027,56>",(test)); Inst36++; } } catch(e) {}
print(test());
try { if (Inst37 <= 1000 && typeof (print) != "undefined") {_RecordType("<1032,1037,57>",(print)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<1038,1042,57>",(test)); Inst38++; } } catch(e) {}
print(test());

