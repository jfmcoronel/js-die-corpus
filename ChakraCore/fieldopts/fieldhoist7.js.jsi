var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
(function () {
  for (var __loopvar0 = 0; obj3.c < 1 && __loopvar0 < 3; obj3.c++ + __loopvar0++) {
try { if (Inst0 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<393,403,6>",(__loopvar0)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (obj3.c) != "undefined") {_RecordType("<409,415,6>",(obj3.c)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<409,413,6>",(obj3)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<423,433,6>",(__loopvar0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj3.c) != "undefined") {_RecordType("<439,445,6>",(obj3.c)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<439,443,6>",(obj3)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<450,460,6>",(__loopvar0)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (obj8.length) != "undefined") {_RecordType("<492,503,7>",(obj8.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj8) != "undefined") {_RecordType("<492,496,7>",(obj8)); Inst10++; } } catch(e) {}
    if (obj7.d ^= 1 ? 1 : obj8.length) {
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<513,518,8>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj2.d) != "undefined") {_RecordType("<534,540,8>",(obj2.d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<534,538,8>",(obj2)); Inst13++; } } catch(e) {}
      print("obj2.d = " + (obj2.d | 0));
try { if (Inst16 <= 1000 && typeof (obj8.d) != "undefined") {_RecordType("<563,569,9>",(obj8.d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj8) != "undefined") {_RecordType("<563,567,9>",(obj8)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj7.c) != "undefined") {_RecordType("<576,582,9>",(obj7.c)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj7) != "undefined") {_RecordType("<576,580,9>",(obj7)); Inst19++; } } catch(e) {}
      obj6.e = obj8.d * 1 - obj7.c;
try { if (Inst14 <= 1000 && typeof (obj6.e) != "undefined") {_RecordType("<554,560,9>",(obj6.e)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj6) != "undefined") {_RecordType("<554,558,9>",(obj6)); Inst15++; } } catch(e) {}
    }
try { if (Inst7 <= 1000 && typeof (obj7.d) != "undefined") {_RecordType("<474,480,7>",(obj7.d)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj7) != "undefined") {_RecordType("<474,478,7>",(obj7)); Inst8++; } } catch(e) {}

    var __loopvar1 = 0;
try { if (Inst20 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<599,609,12>",(__loopvar1)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (LABEL0) != "undefined") {_RecordType("<620,626,14>",(LABEL0)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj8.length) != "undefined") {_RecordType("<666,677,16>",(obj8.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj8) != "undefined") {_RecordType("<666,670,16>",(obj8)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj7.length) != "undefined") {_RecordType("<692,703,16>",(obj7.length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj7) != "undefined") {_RecordType("<692,696,16>",(obj7)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj7.length) != "undefined") {_RecordType("<717,728,16>",(obj7.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj7) != "undefined") {_RecordType("<717,721,16>",(obj7)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<733,743,16>",(__loopvar1)); Inst28++; } } catch(e) {}
    LABEL0: do {
try { if (Inst29 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<639,649,15>",(__loopvar1)); Inst29++; } } catch(e) {}
      __loopvar1++;
    } while (obj8.length-- * (1 + (1 ? obj7.length : 1)) * (1 - obj7.length) && __loopvar1 < 3);
  }
})();

