var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(args) {
try { if (Inst1 <= 1000 && typeof (args) != "undefined") {_RecordType("<382,386,5>",(args)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<392,397,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (args) != "undefined") {_RecordType("<398,402,6>",(args)); Inst3++; } } catch(e) {}
  print(args);
}

var a = "#$%&";
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<412,413,9>",(a)); Inst4++; } } catch(e) {}
a += "0123456789";
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<424,425,10>",(a)); Inst5++; } } catch(e) {}
a += "<=>?@";
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<443,444,11>",(a)); Inst6++; } } catch(e) {}
a += "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<457,458,12>",(a)); Inst7++; } } catch(e) {}
a += "[\]^_`";
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<492,493,13>",(a)); Inst8++; } } catch(e) {}
a += "abcdefghijklmnopqrstuvwXYZ";
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<507,508,14>",(a)); Inst9++; } } catch(e) {}
a += "{|}~";
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<542,543,15>",(a)); Inst10++; } } catch(e) {}
var regexNoCase = [/[K-Z]+/gi, /[C-\{]+/gi, /[L-e]+/gi, /[F-e]+/gi, /[K-_]+/gi, /[e-p]+/gi, /[r-\~]+/gi, /[9-Z]+/gi, /[9-k]+/gi, /[\]-k]+/gi, /[\{-\}]+/gi, /[0-z]+/gi, /[0-K]+/gi, /[5-\}]+/gi, /[a-zA-Z]+/gi, /[afkl]+/gi, /[a-z0-9_]+/gi, /[abc]+/gi, /[E-f]+/gi, /[abc]+/gi, /[E-fk-o]+/gi, /[a-dk-lx-z]+/gi, /[\[\]]+/gi, /[\[\}]+/gi, /[0-\}]+/gi, /[A-z]+/gi, /[@-k]+/gi, /[0-_]+/gi, /[Z-z]+/gi, /[A-a]+/gi, /[X-kK-b]+/gi];
try { if (Inst11 <= 1000 && typeof (regexNoCase) != "undefined") {_RecordType("<559,570,16>",(regexNoCase)); Inst11++; } } catch(e) {}
var regexCase = [/[K-Z]+/g, /[C-\{]+/g, /[L-e]+/g, /[F-e]+/g, /[K-_]+/g, /[e-p]+/g, /[r-\~]+/g, /[9-Z]+/g, /[9-k]+/g, /[\]-k]+/g, /[\{-\}]+/g, /[0-z]+/g, /[0-K]+/g, /[5-\}]+/g, /[a-zA-Z]+/g, /[afkl]+/g, /[a-z0-9_]+/g, /[abc]+/g, /[E-f]+/g, /[abc]+/g, /[E-fk-o]+/g, /[a-dk-lx-z]+/g, /[\[\]]+/g, /[\[\}]+/g, /[0-\}]+/g, /[A-z]+/g, /[@-k]+/g, /[0-_]+/g, /[Z-z]+/g, /[A-a]+/g, /[X-kK-b]+/g];
try { if (Inst12 <= 1000 && typeof (regexCase) != "undefined") {_RecordType("<980,989,17>",(regexCase)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (write) != "undefined") {_RecordType("<1364,1369,18>",(write)); Inst13++; } } catch(e) {}
write("Scenario RegEx case insensitive...");
var count = 1;
try { if (Inst14 <= 1000 && typeof (count) != "undefined") {_RecordType("<1413,1418,19>",(count)); Inst14++; } } catch(e) {}

for (var i in regexNoCase) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<1434,1435,21>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (regexNoCase) != "undefined") {_RecordType("<1439,1450,21>",(regexNoCase)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (write) != "undefined") {_RecordType("<1456,1461,22>",(write)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (count) != "undefined") {_RecordType("<1477,1482,22>",(count)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (regexNoCase[i]) != "undefined") {_RecordType("<1491,1505,22>",(regexNoCase[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (regexNoCase) != "undefined") {_RecordType("<1491,1502,22>",(regexNoCase)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (regexNoCase[i].exec) != "undefined") {_RecordType("<1522,1541,22>",(regexNoCase[i].exec)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (regexNoCase[i]) != "undefined") {_RecordType("<1522,1536,22>",(regexNoCase[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (regexNoCase) != "undefined") {_RecordType("<1522,1533,22>",(regexNoCase)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<1542,1543,22>",(a)); Inst24++; } } catch(e) {}
  write("Test case " + count + " " + regexNoCase[i] + " - exec :" + regexNoCase[i].exec(a));
try { if (Inst25 <= 1000 && typeof (count) != "undefined") {_RecordType("<1549,1554,23>",(count)); Inst25++; } } catch(e) {}
  count++;
try { if (Inst26 <= 1000 && typeof (write) != "undefined") {_RecordType("<1560,1565,24>",(write)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (count) != "undefined") {_RecordType("<1581,1586,24>",(count)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (regexNoCase[i]) != "undefined") {_RecordType("<1595,1609,24>",(regexNoCase[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (regexNoCase) != "undefined") {_RecordType("<1595,1606,24>",(regexNoCase)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a.match) != "undefined") {_RecordType("<1626,1633,24>",(a.match)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<1626,1627,24>",(a)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (regexNoCase[i]) != "undefined") {_RecordType("<1634,1648,24>",(regexNoCase[i])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (regexNoCase) != "undefined") {_RecordType("<1634,1645,24>",(regexNoCase)); Inst33++; } } catch(e) {}
  write("Test case " + count + " " + regexNoCase[i] + " - match:" + a.match(regexNoCase[i]));
try { if (Inst34 <= 1000 && typeof (count) != "undefined") {_RecordType("<1654,1659,25>",(count)); Inst34++; } } catch(e) {}
  count++;
}

try { if (Inst35 <= 1000 && typeof (write) != "undefined") {_RecordType("<1666,1671,28>",(write)); Inst35++; } } catch(e) {}
write("Scenario RegEx case sensitive...");

for (var j in regexCase) {
try { if (Inst36 <= 1000 && typeof (j) != "undefined") {_RecordType("<1719,1720,30>",(j)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (regexCase) != "undefined") {_RecordType("<1724,1733,30>",(regexCase)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (write) != "undefined") {_RecordType("<1739,1744,31>",(write)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (count) != "undefined") {_RecordType("<1760,1765,31>",(count)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (regexCase[j]) != "undefined") {_RecordType("<1774,1786,31>",(regexCase[j])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (regexCase) != "undefined") {_RecordType("<1774,1783,31>",(regexCase)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (regexCase[j].exec) != "undefined") {_RecordType("<1803,1820,31>",(regexCase[j].exec)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (regexCase[j]) != "undefined") {_RecordType("<1803,1815,31>",(regexCase[j])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (regexCase) != "undefined") {_RecordType("<1803,1812,31>",(regexCase)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1821,1822,31>",(a)); Inst45++; } } catch(e) {}
  write("Test case " + count + " " + regexCase[j] + " - exec :" + regexCase[j].exec(a));
try { if (Inst46 <= 1000 && typeof (count) != "undefined") {_RecordType("<1828,1833,32>",(count)); Inst46++; } } catch(e) {}
  count++;
try { if (Inst47 <= 1000 && typeof (write) != "undefined") {_RecordType("<1839,1844,33>",(write)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (count) != "undefined") {_RecordType("<1860,1865,33>",(count)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (regexCase[j]) != "undefined") {_RecordType("<1874,1886,33>",(regexCase[j])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (regexCase) != "undefined") {_RecordType("<1874,1883,33>",(regexCase)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a.match) != "undefined") {_RecordType("<1903,1910,33>",(a.match)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1903,1904,33>",(a)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (regexCase[j]) != "undefined") {_RecordType("<1911,1923,33>",(regexCase[j])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (regexCase) != "undefined") {_RecordType("<1911,1920,33>",(regexCase)); Inst54++; } } catch(e) {}
  write("Test case " + count + " " + regexCase[j] + " - match:" + a.match(regexCase[j]));
try { if (Inst55 <= 1000 && typeof (count) != "undefined") {_RecordType("<1929,1934,34>",(count)); Inst55++; } } catch(e) {}
  count++;
}

