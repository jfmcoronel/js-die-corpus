var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<382,383,5>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<396,397,6>",(a)); Inst2++; } } catch(e) {}
  return a + 1.1;
}

try { if (Inst3 <= 1000 && typeof (echo) != "undefined") {_RecordType("<408,412,9>",(echo)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (test0) != "undefined") {_RecordType("<413,418,9>",(test0)); Inst4++; } } catch(e) {}
echo(test0(1.1));

try { if (Inst5 <= 1000 && typeof (test1) != "undefined") {_RecordType("<436,441,11>",(test1)); Inst5++; } } catch(e) {}
function test1() {
try { if (Inst6 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<455,463,12>",(Math.sin)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<455,459,12>",(Math)); Inst7++; } } catch(e) {}
  return Math.sin(1.1) + 1.1;
}

try { if (Inst8 <= 1000 && typeof (echo) != "undefined") {_RecordType("<479,483,15>",(echo)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (test1) != "undefined") {_RecordType("<484,489,15>",(test1)); Inst9++; } } catch(e) {}
echo(test1());

try { if (Inst10 <= 1000 && typeof (test2) != "undefined") {_RecordType("<504,509,17>",(test2)); Inst10++; } } catch(e) {}
function test2(a) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<510,511,17>",(a)); Inst11++; } } catch(e) {}
  a[0] = 1.1;
try { if (Inst12 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<517,521,18>",(a[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<517,518,18>",(a)); Inst13++; } } catch(e) {}
}

try { if (Inst15 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<544,556,21>",(Float64Array)); Inst15++; } } catch(e) {}
var a = new Float64Array(1);
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<536,537,21>",(a)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (test2) != "undefined") {_RecordType("<561,566,22>",(test2)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<567,568,22>",(a)); Inst17++; } } catch(e) {}
test2(a);
try { if (Inst18 <= 1000 && typeof (echo) != "undefined") {_RecordType("<571,575,23>",(echo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<576,580,23>",(a[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<576,577,23>",(a)); Inst20++; } } catch(e) {}
echo(a[0]);

try { if (Inst21 <= 1000 && typeof (test3) != "undefined") {_RecordType("<593,598,25>",(test3)); Inst21++; } } catch(e) {}
function test3(a) {
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<599,600,25>",(a)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<613,614,26>",(a)); Inst23++; } } catch(e) {}
  return a | 0;
}

try { if (Inst24 <= 1000 && typeof (echo) != "undefined") {_RecordType("<623,627,29>",(echo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (test3) != "undefined") {_RecordType("<628,633,29>",(test3)); Inst25++; } } catch(e) {}
echo(test3(1.1));
try { if (Inst26 <= 1000 && typeof (echo) != "undefined") {_RecordType("<641,645,30>",(echo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<646,654,30>",(Math.abs)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math) != "undefined") {_RecordType("<646,650,30>",(Math)); Inst28++; } } catch(e) {}
echo(Math.abs(-1.1));

try { if (Inst29 <= 1000 && typeof (echo) != "undefined") {_RecordType("<673,677,32>",(echo)); Inst29++; } } catch(e) {}
function echo(n) {
try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<678,679,32>",(n)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<685,690,33>",(print)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<691,701,33>",(Math.round)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<691,695,33>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<702,703,33>",(n)); Inst34++; } } catch(e) {}
  print(Math.round(n * 100));
}

