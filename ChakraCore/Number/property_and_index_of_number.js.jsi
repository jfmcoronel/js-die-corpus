var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Number tests
var one = 1;
try { if (Inst0 <= 1000 && typeof (one) != "undefined") {_RecordType("<387,390,6>",(one)); Inst0++; } } catch(e) {}
one.a = 12;
try { if (Inst1 <= 1000 && typeof (one.a) != "undefined") {_RecordType("<396,401,7>",(one.a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (one) != "undefined") {_RecordType("<396,399,7>",(one)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<408,413,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<414,423,8>",(undefined)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (one.a) != "undefined") {_RecordType("<425,430,8>",(one.a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (one) != "undefined") {_RecordType("<425,428,8>",(one)); Inst6++; } } catch(e) {}
print(undefined, one.a);

(function () {
  var one = 1;
try { if (Inst7 <= 1000 && typeof (one) != "undefined") {_RecordType("<455,458,11>",(one)); Inst7++; } } catch(e) {}
  "use strict";

  one.a = 1;
try { if (Inst8 <= 1000 && typeof (one.a) != "undefined") {_RecordType("<483,488,14>",(one.a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (one) != "undefined") {_RecordType("<483,486,14>",(one)); Inst9++; } } catch(e) {}
})();

var one = 1;
try { if (Inst10 <= 1000 && typeof (one) != "undefined") {_RecordType("<505,508,17>",(one)); Inst10++; } } catch(e) {}
one['a'] = 12;
try { if (Inst11 <= 1000 && typeof (one['a']) != "undefined") {_RecordType("<514,522,18>",(one['a'])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (one) != "undefined") {_RecordType("<514,517,18>",(one)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<529,534,19>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<535,544,19>",(undefined)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (one.a) != "undefined") {_RecordType("<546,551,19>",(one.a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (one) != "undefined") {_RecordType("<546,549,19>",(one)); Inst16++; } } catch(e) {}
print(undefined, one.a);

(function () {
  var one = 1;
try { if (Inst17 <= 1000 && typeof (one) != "undefined") {_RecordType("<576,579,22>",(one)); Inst17++; } } catch(e) {}
  "use strict";

  one['a'] = 1;
try { if (Inst18 <= 1000 && typeof (one['a']) != "undefined") {_RecordType("<604,612,25>",(one['a'])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (one) != "undefined") {_RecordType("<604,607,25>",(one)); Inst19++; } } catch(e) {}
})();

var one = 1;
try { if (Inst20 <= 1000 && typeof (one) != "undefined") {_RecordType("<629,632,28>",(one)); Inst20++; } } catch(e) {}
one[66] = 12;
try { if (Inst21 <= 1000 && typeof (one[66]) != "undefined") {_RecordType("<638,645,29>",(one[66])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (one) != "undefined") {_RecordType("<638,641,29>",(one)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<652,657,30>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<658,667,30>",(undefined)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (one.a) != "undefined") {_RecordType("<669,674,30>",(one.a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (one) != "undefined") {_RecordType("<669,672,30>",(one)); Inst26++; } } catch(e) {}
print(undefined, one.a);

(function () {
  var one = 1;
try { if (Inst27 <= 1000 && typeof (one) != "undefined") {_RecordType("<699,702,33>",(one)); Inst27++; } } catch(e) {}
  "use strict";

  one[66] = 1;
try { if (Inst28 <= 1000 && typeof (one[66]) != "undefined") {_RecordType("<727,734,36>",(one[66])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (one) != "undefined") {_RecordType("<727,730,36>",(one)); Inst29++; } } catch(e) {}
})();

