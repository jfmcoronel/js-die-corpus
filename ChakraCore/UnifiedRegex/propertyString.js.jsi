var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (propCacheTest) != "undefined") {_RecordType("<376,389,5>",(propCacheTest)); Inst0++; } } catch(e) {}
function propCacheTest() {
  var obj = {};
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<400,403,6>",(obj)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof ("aabccddeeffaaggaabbaabaabaab".match) != "undefined") {_RecordType("<426,462,7>",("aabccddeeffaaggaabbaabaabaab".match)); Inst3++; } } catch(e) {}
  var matches = "aabccddeeffaaggaabbaabaabaab".match(/((aa))/);
try { if (Inst2 <= 1000 && typeof (matches) != "undefined") {_RecordType("<416,423,7>",(matches)); Inst2++; } } catch(e) {}

  for (var str in matches) {
try { if (Inst4 <= 1000 && typeof (str) != "undefined") {_RecordType("<486,489,9>",(str)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (matches) != "undefined") {_RecordType("<493,500,9>",(matches)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (obj[matches[str]]) != "undefined") {_RecordType("<512,529,10>",(obj[matches[str]])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<512,515,10>",(obj)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (matches[str]) != "undefined") {_RecordType("<516,528,10>",(matches[str])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (matches) != "undefined") {_RecordType("<516,523,10>",(matches)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<534,543,10>",(undefined)); Inst10++; } } catch(e) {}
    if (obj[matches[str]] !== undefined) {
try { if (Inst11 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<553,565,11>",(WScript.Echo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<553,560,11>",(WScript)); Inst12++; } } catch(e) {}
      WScript.Echo("propertyFound");
    }
  }

try { if (Inst13 <= 1000 && typeof (matches) != "undefined") {_RecordType("<604,611,15>",(matches)); Inst13++; } } catch(e) {}
  return matches;
}

try { if (Inst15 <= 1000 && typeof (propCacheTest) != "undefined") {_RecordType("<628,641,18>",(propCacheTest)); Inst15++; } } catch(e) {}
var props = propCacheTest();
try { if (Inst14 <= 1000 && typeof (props) != "undefined") {_RecordType("<620,625,18>",(props)); Inst14++; } } catch(e) {}

for (var i = 0; i < props.length; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<655,656,20>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<662,663,20>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (props.length) != "undefined") {_RecordType("<666,678,20>",(props.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (props) != "undefined") {_RecordType("<666,671,20>",(props)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<680,681,20>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<689,701,21>",(WScript.Echo)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<689,696,21>",(WScript)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<702,710,21>",(props[i])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (props) != "undefined") {_RecordType("<702,707,21>",(props)); Inst24++; } } catch(e) {}
  WScript.Echo(props[i]);
}

try { if (Inst25 <= 1000 && typeof (CollectGarbage) != "undefined") {_RecordType("<716,730,24>",(CollectGarbage)); Inst25++; } } catch(e) {}
CollectGarbage();
try { if (Inst26 <= 1000 && typeof (CollectGarbage) != "undefined") {_RecordType("<734,748,25>",(CollectGarbage)); Inst26++; } } catch(e) {}
CollectGarbage();
try { if (Inst27 <= 1000 && typeof (CollectGarbage) != "undefined") {_RecordType("<752,766,26>",(CollectGarbage)); Inst27++; } } catch(e) {}
CollectGarbage();
try { if (Inst29 <= 1000 && typeof (propCacheTest) != "undefined") {_RecordType("<778,791,27>",(propCacheTest)); Inst29++; } } catch(e) {}
props = propCacheTest();
try { if (Inst28 <= 1000 && typeof (props) != "undefined") {_RecordType("<770,775,27>",(props)); Inst28++; } } catch(e) {}

for (var i = 0; i < props.length; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<805,806,29>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<812,813,29>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (props.length) != "undefined") {_RecordType("<816,828,29>",(props.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (props) != "undefined") {_RecordType("<816,821,29>",(props)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<830,831,29>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<839,851,30>",(WScript.Echo)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<839,846,30>",(WScript)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<852,860,30>",(props[i])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (props) != "undefined") {_RecordType("<852,857,30>",(props)); Inst38++; } } catch(e) {}
  WScript.Echo(props[i]);
}

