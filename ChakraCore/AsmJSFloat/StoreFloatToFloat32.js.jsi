var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// 5th store float in float32
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<406,415,6>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(stdlib, foreign, buffer) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<416,422,6>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<424,431,6>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<433,439,6>",(buffer)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (stdlib.Math.fround) != "undefined") {_RecordType("<468,486,9>",(stdlib.Math.fround)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<468,479,9>",(stdlib.Math)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<468,474,9>",(stdlib)); Inst7++; } } catch(e) {}
  var m1 = stdlib.Math.fround;
try { if (Inst4 <= 1000 && typeof (m1) != "undefined") {_RecordType("<463,465,9>",(m1)); Inst4++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (foreign.fun1) != "undefined") {_RecordType("<502,514,10>",(foreign.fun1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<502,509,10>",(foreign)); Inst10++; } } catch(e) {}
  var func1 = foreign.fun1; //views
try { if (Inst8 <= 1000 && typeof (func1) != "undefined") {_RecordType("<494,499,10>",(func1)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (stdlib.Float32Array) != "undefined") {_RecordType("<544,563,12>",(stdlib.Float32Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<544,550,12>",(stdlib)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<564,570,12>",(buffer)); Inst14++; } } catch(e) {}
  var HEAP32 = new stdlib.Float32Array(buffer);
try { if (Inst11 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<531,537,12>",(HEAP32)); Inst11++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (f1) != "undefined") {_RecordType("<585,587,14>",(f1)); Inst15++; } } catch(e) {}
  function f1() {
try { if (Inst17 <= 1000 && typeof (m1) != "undefined") {_RecordType("<604,606,15>",(m1)); Inst17++; } } catch(e) {}
    var x = m1(1.5);
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<600,601,15>",(x)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (m1) != "undefined") {_RecordType("<621,623,16>",(m1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<624,625,16>",(x)); Inst20++; } } catch(e) {}
    x = m1(x);
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<617,618,16>",(x)); Inst18++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<644,645,17>",(x)); Inst23++; } } catch(e) {}
    HEAP32[1] = x;
try { if (Inst21 <= 1000 && typeof (HEAP32[1]) != "undefined") {_RecordType("<632,641,17>",(HEAP32[1])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<632,638,17>",(HEAP32)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (m1) != "undefined") {_RecordType("<658,660,18>",(m1)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (HEAP32[1]) != "undefined") {_RecordType("<661,670,18>",(HEAP32[1])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<661,667,18>",(HEAP32)); Inst26++; } } catch(e) {}
    return m1(HEAP32[1]);
  }

try { if (Inst27 <= 1000 && typeof (f1) != "undefined") {_RecordType("<687,689,21>",(f1)); Inst27++; } } catch(e) {}
  return f1;
}

try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<717,721,25>",(Math)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<739,751,26>",(Float32Array)); Inst30++; } } catch(e) {}
var global = {
  Math: Math,
  Float32Array: Float32Array
};
try { if (Inst28 <= 1000 && typeof (global) != "undefined") {_RecordType("<698,704,24>",(global)); Inst28++; } } catch(e) {}
var env = {
  fun1: function (x1, x2, x3, x4, x5, x6, x7, x8) {
try { if (Inst32 <= 1000 && typeof (x1) != "undefined") {_RecordType("<785,787,29>",(x1)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (x2) != "undefined") {_RecordType("<789,791,29>",(x2)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x3) != "undefined") {_RecordType("<793,795,29>",(x3)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (x4) != "undefined") {_RecordType("<797,799,29>",(x4)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x5) != "undefined") {_RecordType("<801,803,29>",(x5)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x6) != "undefined") {_RecordType("<805,807,29>",(x6)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x7) != "undefined") {_RecordType("<809,811,29>",(x7)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (x8) != "undefined") {_RecordType("<813,815,29>",(x8)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<823,828,30>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x1) != "undefined") {_RecordType("<829,831,30>",(x1)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (x2) != "undefined") {_RecordType("<833,835,30>",(x2)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x3) != "undefined") {_RecordType("<837,839,30>",(x3)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x4) != "undefined") {_RecordType("<841,843,30>",(x4)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x5) != "undefined") {_RecordType("<845,847,30>",(x5)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x6) != "undefined") {_RecordType("<849,851,30>",(x6)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (x7) != "undefined") {_RecordType("<853,855,30>",(x7)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (x8) != "undefined") {_RecordType("<857,859,30>",(x8)); Inst48++; } } catch(e) {}
    print(x1, x2, x3, x4, x5, x6, x7, x8);
  },
  fun2: function (x, y) {
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<885,886,32>",(x)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (y) != "undefined") {_RecordType("<888,889,32>",(y)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (print) != "undefined") {_RecordType("<897,902,33>",(print)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<903,904,33>",(x)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (y) != "undefined") {_RecordType("<906,907,33>",(y)); Inst53++; } } catch(e) {}
    print(x, y);
  },
  x: 155,
  i2: 658,
  d1: 68.25,
  d2: 3.14156,
  f1: 48.1523,
  f2: 14896.2514
};
try { if (Inst31 <= 1000 && typeof (env) != "undefined") {_RecordType("<759,762,28>",(env)); Inst31++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<1016,1027,42>",(ArrayBuffer)); Inst55++; } } catch(e) {}
var buffer = new ArrayBuffer(1 << 20);
try { if (Inst54 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1003,1009,42>",(buffer)); Inst54++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<1054,1063,43>",(AsmModule)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (global) != "undefined") {_RecordType("<1064,1070,43>",(global)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (env) != "undefined") {_RecordType("<1072,1075,43>",(env)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1077,1083,43>",(buffer)); Inst60++; } } catch(e) {}
var asmModule = AsmModule(global, env, buffer);
try { if (Inst56 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1042,1051,43>",(asmModule)); Inst56++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (print) != "undefined") {_RecordType("<1086,1091,44>",(print)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1092,1101,44>",(asmModule)); Inst62++; } } catch(e) {}
print(asmModule());
try { if (Inst63 <= 1000 && typeof (print) != "undefined") {_RecordType("<1106,1111,45>",(print)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1112,1121,45>",(asmModule)); Inst64++; } } catch(e) {}
print(asmModule());

