var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(v) {
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<382,383,5>",(v)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<389,394,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<395,396,6>",(v)); Inst3++; } } catch(e) {}
  print(v + "");
}

try { if (Inst4 <= 1000 && typeof (write) != "undefined") {_RecordType("<407,412,9>",(write)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (toString) != "undefined") {_RecordType("<413,421,9>",(toString)); Inst5++; } } catch(e) {}
write(toString(["a"]));

try { if (Inst6 <= 1000 && typeof (toString) != "undefined") {_RecordType("<441,449,11>",(toString)); Inst6++; } } catch(e) {}
function toString(o, quoteStrings) {
try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<450,451,11>",(o)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (quoteStrings) != "undefined") {_RecordType("<453,465,11>",(quoteStrings)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (quoteStrings) != "undefined") {_RecordType("<475,487,12>",(quoteStrings)); Inst9++; } } catch(e) {}
  if (quoteStrings === true) {
    return "recursive call";
  }

  for (var i = 0; i < o.length; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<545,546,16>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<552,553,16>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<556,564,16>",(o.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<556,557,16>",(o)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<568,569,16>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (toString) != "undefined") {_RecordType("<584,592,17>",(toString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<593,597,17>",(o[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<593,594,17>",(o)); Inst17++; } } catch(e) {}
    return toString(o[0], true);
  }
}

var o = {};
try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<617,618,21>",(o)); Inst18++; } } catch(e) {}
Object.prototype.x = 20;
try { if (Inst19 <= 1000 && typeof (Object.prototype.x) != "undefined") {_RecordType("<625,643,22>",(Object.prototype.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<625,641,22>",(Object.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<625,631,22>",(Object)); Inst21++; } } catch(e) {}
var x = 10;
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<654,655,23>",(x)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<668,669,24>",(o)); Inst23++; } } catch(e) {}
with (o) {
try { if (Inst24 <= 1000 && typeof (write) != "undefined") {_RecordType("<675,680,25>",(write)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<681,682,25>",(x)); Inst25++; } } catch(e) {}
  write(x);
}

