var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//Parse Int Test cases
var id = 0;
try { if (Inst0 <= 1000 && typeof (id) != "undefined") {_RecordType("<394,396,6>",(id)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (verify) != "undefined") {_RecordType("<412,418,8>",(verify)); Inst1++; } } catch(e) {}
function verify(get_actual, get_expected, id, testdesc) {
try { if (Inst2 <= 1000 && typeof (get_actual) != "undefined") {_RecordType("<419,429,8>",(get_actual)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (get_expected) != "undefined") {_RecordType("<431,443,8>",(get_expected)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (id) != "undefined") {_RecordType("<445,447,8>",(id)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (testdesc) != "undefined") {_RecordType("<449,457,8>",(testdesc)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<467,472,9>",(isNaN)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (get_actual) != "undefined") {_RecordType("<473,483,9>",(get_actual)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<488,493,9>",(isNaN)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (get_expected) != "undefined") {_RecordType("<494,506,9>",(get_expected)); Inst9++; } } catch(e) {}
  if (isNaN(get_actual) && isNaN(get_expected)) {
    return;
  }

try { if (Inst10 <= 1000 && typeof (get_actual) != "undefined") {_RecordType("<534,544,13>",(get_actual)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (get_expected) != "undefined") {_RecordType("<549,561,13>",(get_expected)); Inst11++; } } catch(e) {}
  if (get_actual !== get_expected) {
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<569,574,14>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (id) != "undefined") {_RecordType("<575,577,14>",(id)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (testdesc) != "undefined") {_RecordType("<586,594,14>",(testdesc)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (get_actual) != "undefined") {_RecordType("<623,633,14>",(get_actual)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (get_expected) != "undefined") {_RecordType("<652,664,14>",(get_expected)); Inst16++; } } catch(e) {}
    print(id + ":" + testdesc + "\t" + "failed Actual:" + get_actual + " Excpected:" + get_expected);
  }
} //White space at the begining


try { if (Inst17 <= 1000 && typeof (verify) != "undefined") {_RecordType("<705,711,19>",(verify)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<712,720,19>",(parseInt)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (id) != "undefined") {_RecordType("<743,745,19>",(id)); Inst19++; } } catch(e) {}
verify(parseInt("     123", 10), 123, id++, "\"Testing WhiteSpace at the begining of the string\""); //Escape characters at the begining

try { if (Inst20 <= 1000 && typeof (verify) != "undefined") {_RecordType("<843,849,21>",(verify)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<850,858,21>",(parseInt)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (id) != "undefined") {_RecordType("<884,886,21>",(id)); Inst22++; } } catch(e) {}
verify(parseInt("\t\n\f\r123", 10), 123, id++, "\"Testing WhiteSpace with escape at the begining of the string\""); // only white spaces

try { if (Inst23 <= 1000 && typeof (verify) != "undefined") {_RecordType("<981,987,23>",(verify)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<988,996,23>",(parseInt)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1014,1017,23>",(NaN)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (id) != "undefined") {_RecordType("<1019,1021,23>",(id)); Inst26++; } } catch(e) {}
verify(parseInt("\t\n\f\r", 10), NaN, id++, "\"Only whitespaces\""); // embedded null

try { if (Inst27 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1068,1074,25>",(verify)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1075,1083,25>",(parseInt)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (id) != "undefined") {_RecordType("<1103,1105,25>",(id)); Inst29++; } } catch(e) {}
verify(parseInt("32\032", 10), 32, id++, "\"Embedded null\""); //White Spaces in the End

try { if (Inst30 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1158,1164,27>",(verify)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1165,1173,27>",(parseInt)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (id) != "undefined") {_RecordType("<1196,1198,27>",(id)); Inst32++; } } catch(e) {}
verify(parseInt("123     ", 10), 123, id++, "\"Testing WhiteSpace at the End of the string\""); //Escape characters at the end

try { if (Inst33 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1286,1292,29>",(verify)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1293,1301,29>",(parseInt)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (id) != "undefined") {_RecordType("<1327,1329,29>",(id)); Inst35++; } } catch(e) {}
verify(parseInt("123\t\n\f\r", 10), 123, id++, "\"Testing WhiteSpace with escape at the end of the string\""); //Space in between Strings

try { if (Inst36 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1425,1431,31>",(verify)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1432,1440,31>",(parseInt)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (id) != "undefined") {_RecordType("<1459,1461,31>",(id)); Inst38++; } } catch(e) {}
verify(parseInt("12  3", 10), 12, id++, "\"Testing WhiteSpace in between strings\""); //Escape Characters in between Strings

try { if (Inst39 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1551,1557,33>",(verify)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1558,1566,33>",(parseInt)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (id) != "undefined") {_RecordType("<1591,1593,33>",(id)); Inst41++; } } catch(e) {}
verify(parseInt("12\n\t\r\f3", 10), 12, id++, "\"Testing Escape Characters in between of the strings\""); //Default Radix Testing: Null

try { if (Inst42 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1688,1694,35>",(verify)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1695,1703,35>",(parseInt)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (id) != "undefined") {_RecordType("<1723,1725,35>",(id)); Inst44++; } } catch(e) {}
verify(parseInt("123", null), 123, id++, "\"Default Radix Null\""); //Default Radix Testing: NaN

try { if (Inst45 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1786,1792,37>",(verify)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1793,1801,37>",(parseInt)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1809,1812,37>",(NaN)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (id) != "undefined") {_RecordType("<1820,1822,37>",(id)); Inst48++; } } catch(e) {}
verify(parseInt("123", NaN), 123, id++, "\"Default Radix NaN\""); //Default Radix Testing: Undefined

try { if (Inst49 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1888,1894,39>",(verify)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1895,1903,39>",(parseInt)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1911,1920,39>",(undefined)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (id) != "undefined") {_RecordType("<1928,1930,39>",(id)); Inst52++; } } catch(e) {}
verify(parseInt("123", undefined), 123, id++, "\"Default Radix Undefined\""); //Default Radix Testing: 0

try { if (Inst53 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1994,2000,41>",(verify)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2001,2009,41>",(parseInt)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (id) != "undefined") {_RecordType("<2026,2028,41>",(id)); Inst55++; } } catch(e) {}
verify(parseInt("123", 0), 123, id++, "\"Default Radix 0\""); //Default Radix Testing with 0X String :Basic

try { if (Inst56 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2103,2109,43>",(verify)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2110,2118,43>",(parseInt)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (id) != "undefined") {_RecordType("<2136,2138,43>",(id)); Inst58++; } } catch(e) {}
verify(parseInt("0x19", 16), 25, id++, "\"Default Radix With 0x String: Basic\""); //Default Radix Testing With 0x String: Null

try { if (Inst59 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2232,2238,45>",(verify)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2239,2247,45>",(parseInt)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (id) != "undefined") {_RecordType("<2268,2270,45>",(id)); Inst61++; } } catch(e) {}
verify(parseInt("0xFF", null), 255, id++, "\"Default Radix With 0x String: Null\""); //Default Radix Testing With 0x: NaN

try { if (Inst62 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2355,2361,47>",(verify)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2362,2370,47>",(parseInt)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<2379,2382,47>",(NaN)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (id) != "undefined") {_RecordType("<2390,2392,47>",(id)); Inst65++; } } catch(e) {}
verify(parseInt("0xFF", NaN), 255, id++, "\"Default Radix With 0x String:NaN\""); //Default Radix Testing With 0x: Undefined

try { if (Inst66 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2481,2487,49>",(verify)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2488,2496,49>",(parseInt)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2505,2514,49>",(undefined)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (id) != "undefined") {_RecordType("<2522,2524,49>",(id)); Inst69++; } } catch(e) {}
verify(parseInt("0xFF", undefined), 255, id++, "\"Default Radix With 0x String: undefined\""); //Default Radix Testing With 0x: 0

try { if (Inst70 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2612,2618,51>",(verify)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2619,2627,51>",(parseInt)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (id) != "undefined") {_RecordType("<2645,2647,51>",(id)); Inst72++; } } catch(e) {}
verify(parseInt("0xFF", 0), 255, id++, "\"Default Radix With 0x String: 0\""); //Default Radix Testing With 0X String: Null

try { if (Inst73 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2737,2743,53>",(verify)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2744,2752,53>",(parseInt)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (id) != "undefined") {_RecordType("<2773,2775,53>",(id)); Inst75++; } } catch(e) {}
verify(parseInt("0XFF", null), 255, id++, "\"Default Radix With 0X String: Null\""); //Default Radix Testing With 0X: NaN

try { if (Inst76 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2860,2866,55>",(verify)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2867,2875,55>",(parseInt)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<2884,2887,55>",(NaN)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (id) != "undefined") {_RecordType("<2895,2897,55>",(id)); Inst79++; } } catch(e) {}
verify(parseInt("0XFF", NaN), 255, id++, "\"Default Radix With 0X String:NaN\""); //Default Radix Testing With 0X: Undefined

try { if (Inst80 <= 1000 && typeof (verify) != "undefined") {_RecordType("<2986,2992,57>",(verify)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2993,3001,57>",(parseInt)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3010,3019,57>",(undefined)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (id) != "undefined") {_RecordType("<3027,3029,57>",(id)); Inst83++; } } catch(e) {}
verify(parseInt("0XFF", undefined), 255, id++, "\"Default Radix With 0X String: undefined\""); //Default Radix Testing With 0X: 0

try { if (Inst84 <= 1000 && typeof (verify) != "undefined") {_RecordType("<3117,3123,59>",(verify)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<3124,3132,59>",(parseInt)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (id) != "undefined") {_RecordType("<3150,3152,59>",(id)); Inst86++; } } catch(e) {}
verify(parseInt("0XFF", 0), 255, id++, "\"Default Radix With 0X String: 0\""); //Default Radix Negative Testing: Out of bound Strings: Null

try { if (Inst88 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<3266,3274,61>",(parseInt)); Inst88++; } } catch(e) {}
var x = parseInt("A123", null);
try { if (Inst87 <= 1000 && typeof (x) != "undefined") {_RecordType("<3262,3263,61>",(x)); Inst87++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (verify) != "undefined") {_RecordType("<3290,3296,62>",(verify)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<3297,3302,62>",(isNaN)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (x) != "undefined") {_RecordType("<3303,3304,62>",(x)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (id) != "undefined") {_RecordType("<3313,3315,62>",(id)); Inst92++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix:null  Negative Testing Null\""); //Default Radix Negative Testing : Out of bound Strings: NaN

try { if (Inst94 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<3439,3447,64>",(parseInt)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3456,3459,64>",(NaN)); Inst95++; } } catch(e) {}
var x = parseInt("A123", NaN);
try { if (Inst93 <= 1000 && typeof (x) != "undefined") {_RecordType("<3435,3436,64>",(x)); Inst93++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (verify) != "undefined") {_RecordType("<3462,3468,65>",(verify)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<3469,3474,65>",(isNaN)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (x) != "undefined") {_RecordType("<3475,3476,65>",(x)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (id) != "undefined") {_RecordType("<3485,3487,65>",(id)); Inst99++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix Negative Testing NaN\""); //Default Radix Negative Testing : Out of bound Strings: undefined

try { if (Inst101 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<3610,3618,67>",(parseInt)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3627,3636,67>",(undefined)); Inst102++; } } catch(e) {}
var x = parseInt("A123", undefined);
try { if (Inst100 <= 1000 && typeof (x) != "undefined") {_RecordType("<3606,3607,67>",(x)); Inst100++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (verify) != "undefined") {_RecordType("<3639,3645,68>",(verify)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<3646,3651,68>",(isNaN)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (x) != "undefined") {_RecordType("<3652,3653,68>",(x)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (id) != "undefined") {_RecordType("<3662,3664,68>",(id)); Inst106++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix Negative Testing undefined\""); //Default Radix Negative Testing : Out of bound Strings: 0

try { if (Inst108 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<3785,3793,70>",(parseInt)); Inst108++; } } catch(e) {}
var x = parseInt("A123", 0);
try { if (Inst107 <= 1000 && typeof (x) != "undefined") {_RecordType("<3781,3782,70>",(x)); Inst107++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof (verify) != "undefined") {_RecordType("<3806,3812,71>",(verify)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<3813,3818,71>",(isNaN)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (x) != "undefined") {_RecordType("<3819,3820,71>",(x)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (id) != "undefined") {_RecordType("<3829,3831,71>",(id)); Inst112++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix Negative Testing 0\""); //Default Radix Negative Testing: Out of bound Strings with 0x: Null

try { if (Inst114 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<3954,3962,73>",(parseInt)); Inst114++; } } catch(e) {}
var x = parseInt("0xG123", null);
try { if (Inst113 <= 1000 && typeof (x) != "undefined") {_RecordType("<3950,3951,73>",(x)); Inst113++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (verify) != "undefined") {_RecordType("<3980,3986,74>",(verify)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<3987,3992,74>",(isNaN)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (x) != "undefined") {_RecordType("<3993,3994,74>",(x)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (id) != "undefined") {_RecordType("<4003,4005,74>",(id)); Inst118++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0x String  Negative Testing Null\""); //Default Radix Negative Testing: Out of bound Strings with 0x: NaN

try { if (Inst120 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<4146,4154,76>",(parseInt)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<4165,4168,76>",(NaN)); Inst121++; } } catch(e) {}
var x = parseInt("0xG123", NaN);
try { if (Inst119 <= 1000 && typeof (x) != "undefined") {_RecordType("<4142,4143,76>",(x)); Inst119++; } } catch(e) {}
try { if (Inst122 <= 1000 && typeof (verify) != "undefined") {_RecordType("<4171,4177,77>",(verify)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<4178,4183,77>",(isNaN)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (x) != "undefined") {_RecordType("<4184,4185,77>",(x)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (id) != "undefined") {_RecordType("<4194,4196,77>",(id)); Inst125++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0x String  Negative Testing NaN\""); //Default Radix Negative Testing: Out of bound Strings with 0x: undefined

try { if (Inst127 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<4342,4350,79>",(parseInt)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4361,4370,79>",(undefined)); Inst128++; } } catch(e) {}
var x = parseInt("0xG123", undefined);
try { if (Inst126 <= 1000 && typeof (x) != "undefined") {_RecordType("<4338,4339,79>",(x)); Inst126++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (verify) != "undefined") {_RecordType("<4373,4379,80>",(verify)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<4380,4385,80>",(isNaN)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (x) != "undefined") {_RecordType("<4386,4387,80>",(x)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (id) != "undefined") {_RecordType("<4396,4398,80>",(id)); Inst132++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0x String  Negative Testing undefined\""); //Default Radix Negative Testing: Out of bound Strings with 0x: 0

try { if (Inst134 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<4542,4550,82>",(parseInt)); Inst134++; } } catch(e) {}
var x = parseInt("0xG123", 0);
try { if (Inst133 <= 1000 && typeof (x) != "undefined") {_RecordType("<4538,4539,82>",(x)); Inst133++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (verify) != "undefined") {_RecordType("<4565,4571,83>",(verify)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<4572,4577,83>",(isNaN)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (x) != "undefined") {_RecordType("<4578,4579,83>",(x)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (id) != "undefined") {_RecordType("<4588,4590,83>",(id)); Inst138++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0x String  Negative Testing 0\""); //Default Radix Negative Testing: Out of bound Strings with 0X: Null

try { if (Inst140 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<4729,4737,85>",(parseInt)); Inst140++; } } catch(e) {}
var x = parseInt("0XG123", null);
try { if (Inst139 <= 1000 && typeof (x) != "undefined") {_RecordType("<4725,4726,85>",(x)); Inst139++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (verify) != "undefined") {_RecordType("<4755,4761,86>",(verify)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<4762,4767,86>",(isNaN)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (x) != "undefined") {_RecordType("<4768,4769,86>",(x)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (id) != "undefined") {_RecordType("<4778,4780,86>",(id)); Inst144++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0X String  Negative Testing Null\""); //Default Radix Negative Testing: Out of bound Strings with 0X: NaN

try { if (Inst146 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<4921,4929,88>",(parseInt)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<4940,4943,88>",(NaN)); Inst147++; } } catch(e) {}
var x = parseInt("0XG123", NaN);
try { if (Inst145 <= 1000 && typeof (x) != "undefined") {_RecordType("<4917,4918,88>",(x)); Inst145++; } } catch(e) {}
try { if (Inst148 <= 1000 && typeof (verify) != "undefined") {_RecordType("<4946,4952,89>",(verify)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<4953,4958,89>",(isNaN)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (x) != "undefined") {_RecordType("<4959,4960,89>",(x)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (id) != "undefined") {_RecordType("<4969,4971,89>",(id)); Inst151++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0X String  Negative Testing NaN\""); //Default Radix Negative Testing: Out of bound Strings with 0X: undefined

try { if (Inst153 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<5117,5125,91>",(parseInt)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5136,5145,91>",(undefined)); Inst154++; } } catch(e) {}
var x = parseInt("0XG123", undefined);
try { if (Inst152 <= 1000 && typeof (x) != "undefined") {_RecordType("<5113,5114,91>",(x)); Inst152++; } } catch(e) {}
try { if (Inst155 <= 1000 && typeof (verify) != "undefined") {_RecordType("<5148,5154,92>",(verify)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<5155,5160,92>",(isNaN)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (x) != "undefined") {_RecordType("<5161,5162,92>",(x)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (id) != "undefined") {_RecordType("<5171,5173,92>",(id)); Inst158++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0X String  Negative Testing undefined\""); //Default Radix Negative Testing: Out of bound Strings with 0X: 0

try { if (Inst160 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<5317,5325,94>",(parseInt)); Inst160++; } } catch(e) {}
var x = parseInt("0XG123", 0);
try { if (Inst159 <= 1000 && typeof (x) != "undefined") {_RecordType("<5313,5314,94>",(x)); Inst159++; } } catch(e) {}
try { if (Inst161 <= 1000 && typeof (verify) != "undefined") {_RecordType("<5340,5346,95>",(verify)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<5347,5352,95>",(isNaN)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (x) != "undefined") {_RecordType("<5353,5354,95>",(x)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (id) != "undefined") {_RecordType("<5363,5365,95>",(id)); Inst164++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Default Radix with 0X String  Negative Testing 0\""); //Radix Testing Limits: Lower Limit 2

try { if (Inst165 <= 1000 && typeof (verify) != "undefined") {_RecordType("<5465,5471,97>",(verify)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<5472,5480,97>",(parseInt)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (id) != "undefined") {_RecordType("<5495,5497,97>",(id)); Inst167++; } } catch(e) {}
verify(parseInt("101", 2), 5, id++, "\"Radix Testing Limits: Lower Limit 2\""); //Radix Testing Limits: upper limit 36

try { if (Inst168 <= 1000 && typeof (verify) != "undefined") {_RecordType("<5585,5591,99>",(verify)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<5592,5600,99>",(parseInt)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (id) != "undefined") {_RecordType("<5622,5624,99>",(id)); Inst170++; } } catch(e) {}
verify(parseInt("aAzZ", 36), 480815, id++, "\"Radix Testing Limits: Upper Limit 36\""); //Radix Testing Limits:  +0

try { if (Inst171 <= 1000 && typeof (verify) != "undefined") {_RecordType("<5702,5708,101>",(verify)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<5709,5717,101>",(parseInt)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (id) != "undefined") {_RecordType("<5733,5735,101>",(id)); Inst173++; } } catch(e) {}
verify(parseInt("11", +0), 11, id++, "\"Radix Testing Limits: +0\""); //Radix Testing Limits:  -0

try { if (Inst174 <= 1000 && typeof (verify) != "undefined") {_RecordType("<5801,5807,103>",(verify)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<5808,5816,103>",(parseInt)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (id) != "undefined") {_RecordType("<5832,5834,103>",(id)); Inst176++; } } catch(e) {}
verify(parseInt("11", -0), 11, id++, "\"Radix Testing Limits: -0\""); //Radix Testing Limits:  -0.0

try { if (Inst177 <= 1000 && typeof (verify) != "undefined") {_RecordType("<5902,5908,105>",(verify)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<5909,5917,105>",(parseInt)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (id) != "undefined") {_RecordType("<5935,5937,105>",(id)); Inst179++; } } catch(e) {}
verify(parseInt("11", -0.0), 11, id++, "\"Radix Testing Limits: -0.0\""); //Radix Testing Limits:  Infinity

try { if (Inst180 <= 1000 && typeof (verify) != "undefined") {_RecordType("<6011,6017,107>",(verify)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<6018,6026,107>",(parseInt)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<6033,6041,107>",(Infinity)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (id) != "undefined") {_RecordType("<6048,6050,107>",(id)); Inst183++; } } catch(e) {}
verify(parseInt("11", Infinity), 11, id++, "\"Radix Testing Limits: Infinity\""); //Radix Testing Limits: check for 1

try { if (Inst185 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<6138,6146,109>",(parseInt)); Inst185++; } } catch(e) {}
var x = parseInt("10", 1);
try { if (Inst184 <= 1000 && typeof (x) != "undefined") {_RecordType("<6134,6135,109>",(x)); Inst184++; } } catch(e) {}
try { if (Inst186 <= 1000 && typeof (verify) != "undefined") {_RecordType("<6157,6163,110>",(verify)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<6164,6169,110>",(isNaN)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (x) != "undefined") {_RecordType("<6170,6171,110>",(x)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (id) != "undefined") {_RecordType("<6180,6182,110>",(id)); Inst189++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Radix Testing Limits check for 1\""); //Radix Testing Limits: check for -1

try { if (Inst191 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<6273,6281,112>",(parseInt)); Inst191++; } } catch(e) {}
var x = parseInt("10", -1);
try { if (Inst190 <= 1000 && typeof (x) != "undefined") {_RecordType("<6269,6270,112>",(x)); Inst190++; } } catch(e) {}
try { if (Inst192 <= 1000 && typeof (verify) != "undefined") {_RecordType("<6293,6299,113>",(verify)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<6300,6305,113>",(isNaN)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (x) != "undefined") {_RecordType("<6306,6307,113>",(x)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (id) != "undefined") {_RecordType("<6316,6318,113>",(id)); Inst195++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Radix Testing Limits check for -1\""); //Radix Testing Limits: check for 37

try { if (Inst197 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<6410,6418,115>",(parseInt)); Inst197++; } } catch(e) {}
var x = parseInt("10", 37);
try { if (Inst196 <= 1000 && typeof (x) != "undefined") {_RecordType("<6406,6407,115>",(x)); Inst196++; } } catch(e) {}
try { if (Inst198 <= 1000 && typeof (verify) != "undefined") {_RecordType("<6430,6436,116>",(verify)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<6437,6442,116>",(isNaN)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (x) != "undefined") {_RecordType("<6443,6444,116>",(x)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (id) != "undefined") {_RecordType("<6453,6455,116>",(id)); Inst201++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Radix Testing Limits check for 37\""); //Radix Testing : Non Integer: String

try { if (Inst202 <= 1000 && typeof (verify) != "undefined") {_RecordType("<6540,6546,118>",(verify)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<6547,6555,118>",(parseInt)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (id) != "undefined") {_RecordType("<6572,6574,118>",(id)); Inst204++; } } catch(e) {}
verify(parseInt("11", "+2"), 3, id++, "\"Radix Testing : Non Integer: String \""); //Radix Testing : Non Integer : Boolean: true is replaced with a 1

try { if (Inst206 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<6699,6707,120>",(parseInt)); Inst206++; } } catch(e) {}
var x = parseInt("10", true);
try { if (Inst205 <= 1000 && typeof (x) != "undefined") {_RecordType("<6695,6696,120>",(x)); Inst205++; } } catch(e) {}
try { if (Inst207 <= 1000 && typeof (verify) != "undefined") {_RecordType("<6721,6727,121>",(verify)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<6728,6733,121>",(isNaN)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (x) != "undefined") {_RecordType("<6734,6735,121>",(x)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (id) != "undefined") {_RecordType("<6744,6746,121>",(id)); Inst210++; } } catch(e) {}
verify(isNaN(x), true, id++, "\"Radix Testing : Non Integer : Boolean:true is replaced with a 1\""); //Radix Testing : Non Integer : Boolean: false is replaced with a 0

try { if (Inst211 <= 1000 && typeof (verify) != "undefined") {_RecordType("<6891,6897,123>",(verify)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<6898,6906,123>",(parseInt)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (id) != "undefined") {_RecordType("<6925,6927,123>",(id)); Inst213++; } } catch(e) {}
verify(parseInt("11", false), 11, id++, "\"Radix Testing : Non Integer : Boolean: false is replaced with a 0 \""); //Radix Testing : Output from a Constructor: Number

try { if (Inst214 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7059,7065,125>",(verify)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7066,7074,125>",(parseInt)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (Number) != "undefined") {_RecordType("<7084,7090,125>",(Number)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (id) != "undefined") {_RecordType("<7101,7103,125>",(id)); Inst217++; } } catch(e) {}
verify(parseInt("A", new Number(16)), 10, id++, "\"Radix testing: Constructor-Number \""); //Radix Testing Output from a constructor : String

try { if (Inst218 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7202,7208,127>",(verify)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7209,7217,127>",(parseInt)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (String) != "undefined") {_RecordType("<7227,7233,127>",(String)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (id) != "undefined") {_RecordType("<7246,7248,127>",(id)); Inst221++; } } catch(e) {}
verify(parseInt("A", new String("16")), 10, id++, "\"Radix testing: Constructor-String \""); //Radix Testing Output from a variable

var obj = 36;
try { if (Inst222 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7339,7342,129>",(obj)); Inst222++; } } catch(e) {}
try { if (Inst223 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7349,7355,130>",(verify)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7356,7364,130>",(parseInt)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (obj.toString) != "undefined") {_RecordType("<7373,7385,130>",(obj.toString)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7373,7376,130>",(obj)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (id) != "undefined") {_RecordType("<7398,7400,130>",(id)); Inst227++; } } catch(e) {}
verify(parseInt("aAzZ", obj.toString()), 480815, id++, "\"Radix testing: Variable \""); //Radix Testing Function

try { if (Inst228 <= 1000 && typeof (fun) != "undefined") {_RecordType("<7472,7475,132>",(fun)); Inst228++; } } catch(e) {}
function fun() {
  return "35";
}

try { if (Inst229 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7498,7504,136>",(verify)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7505,7513,136>",(parseInt)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (fun) != "undefined") {_RecordType("<7520,7523,136>",(fun)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (id) != "undefined") {_RecordType("<7533,7535,136>",(id)); Inst232++; } } catch(e) {}
verify(parseInt("bY", fun()), 419, id++, "\"Radix testing:Function \""); //String Testing : Null

try { if (Inst233 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7596,7602,138>",(verify)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<7603,7608,138>",(isNaN)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7609,7617,138>",(parseInt)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (id) != "undefined") {_RecordType("<7634,7636,138>",(id)); Inst236++; } } catch(e) {}
verify(isNaN(parseInt("", 10)), true, id++, "\"String Testing :null\""); //String Testing 2^32

try { if (Inst237 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7692,7698,140>",(verify)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7699,7707,140>",(parseInt)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (id) != "undefined") {_RecordType("<7739,7741,140>",(id)); Inst239++; } } catch(e) {}
verify(parseInt("4294967296", 10), 4294967296, id++, "\"String Testing :2^32 \""); //String Testing -2^32

try { if (Inst240 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7799,7805,142>",(verify)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7806,7814,142>",(parseInt)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (id) != "undefined") {_RecordType("<7848,7850,142>",(id)); Inst242++; } } catch(e) {}
verify(parseInt("-4294967296", 10), -4294967296, id++, "\"String Testing :2^32 \"");
try { if (Inst243 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7884,7890,143>",(verify)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7891,7899,143>",(parseInt)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (id) != "undefined") {_RecordType("<7929,7931,143>",(id)); Inst245++; } } catch(e) {}
verify(parseInt("999999999", 10), 999999999, id++, "\"Large int :999999999 \"");
try { if (Inst246 <= 1000 && typeof (verify) != "undefined") {_RecordType("<7965,7971,144>",(verify)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<7972,7980,144>",(parseInt)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (id) != "undefined") {_RecordType("<8012,8014,144>",(id)); Inst248++; } } catch(e) {}
verify(parseInt("-FFFFFFFF", 16), -0xFFFFFFFF, id++, "\"Max Neg int (Base 16) :FFFFFFFF \"");
try { if (Inst249 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8059,8065,145>",(verify)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8066,8074,145>",(parseInt)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (id) != "undefined") {_RecordType("<8108,8110,145>",(id)); Inst251++; } } catch(e) {}
verify(parseInt("-0xFFFFFFFF", 16), -0xFFFFFFFF, id++, "\"Max Neg int (Base 16) :FFFFFFFF \"");
try { if (Inst252 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8155,8161,146>",(verify)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8162,8170,146>",(parseInt)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (id) != "undefined") {_RecordType("<8200,8202,146>",(id)); Inst254++; } } catch(e) {}
verify(parseInt("-0xABCDEF", 16), -0xabcdef, id++, "\"Base 16 number\"");
try { if (Inst255 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8229,8235,147>",(verify)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8236,8244,147>",(parseInt)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (id) != "undefined") {_RecordType("<8274,8276,147>",(id)); Inst257++; } } catch(e) {}
verify(parseInt("-0xabcdef", 16), -0xabcdef, id++, "\"Base 16 number\"");
try { if (Inst258 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8303,8309,148>",(verify)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8310,8318,148>",(parseInt)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (id) != "undefined") {_RecordType("<8363,8365,148>",(id)); Inst260++; } } catch(e) {}
verify(parseInt("abcdefghijklm", 34), 24661871785383067000, id++, "\" Base 34 number \"");
try { if (Inst261 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8394,8400,149>",(verify)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8401,8409,149>",(parseInt)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (id) != "undefined") {_RecordType("<8437,8439,149>",(id)); Inst263++; } } catch(e) {}
verify(parseInt("lmnXYZ", 36), 1307858363, id++, "\"Base 36 number - fast path \"");
try { if (Inst264 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8479,8485,150>",(verify)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8486,8494,150>",(parseInt)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (id) != "undefined") {_RecordType("<8529,8531,150>",(id)); Inst266++; } } catch(e) {}
verify(parseInt("lmnXYZabc", 36), 61019439797496, id++, "\"Base 36 number - slow path \""); //String Testing : Unmatched numbers for the radix

try { if (Inst267 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8623,8629,152>",(verify)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8630,8638,152>",(parseInt)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (id) != "undefined") {_RecordType("<8654,8656,152>",(id)); Inst269++; } } catch(e) {}
verify(parseInt("AB", 11), 10, id++, "\"String Testing: unmatched numbers for radix\""); //String Testing :Expressions

try { if (Inst270 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8743,8749,154>",(verify)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8750,8758,154>",(parseInt)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (id) != "undefined") {_RecordType("<8775,8777,154>",(id)); Inst272++; } } catch(e) {}
verify(parseInt("A+5", 11), 10, id++, "\"String Testing: Expressions\""); //String Testing : floating point

try { if (Inst273 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8852,8858,156>",(verify)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8859,8867,156>",(parseInt)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (id) != "undefined") {_RecordType("<8884,8886,156>",(id)); Inst275++; } } catch(e) {}
verify(parseInt("5.67", 10), 5, id++, "\"String Testing: Floating point numbers\""); //String Testing : Octal Numbers

try { if (Inst276 <= 1000 && typeof (verify) != "undefined") {_RecordType("<8971,8977,158>",(verify)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<8978,8986,158>",(parseInt)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (id) != "undefined") {_RecordType("<9005,9007,158>",(id)); Inst278++; } } catch(e) {}
verify(parseInt("00789", 008), 7, id++, "\"String Testing: Octal Numbers\""); //Substring scenarios

try { if (Inst280 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<9142,9145,164>",(NaN)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<9165,9168,165>",(NaN)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<9227,9230,170>",(NaN)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<9250,9253,171>",(NaN)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<9393,9396,182>",(NaN)); Inst284++; } } catch(e) {}
var strings = [{
  str: "+0x32",
  start: 0,
  length: 1,
  expected: NaN,
  expectedBase10: NaN
}, {
  str: "+0x32",
  start: 0,
  length: 1,
  expected: NaN,
  expectedBase10: NaN
}, {
  str: "+0x32",
  start: 0,
  length: 2,
  expected: 0,
  expectedBase10: 0
}, {
  str: "+0x32",
  start: 0,
  length: 3,
  expected: NaN,
  expectedBase10: 0
}, {
  str: "+0x32",
  start: 0,
  length: 4,
  expected: 3,
  expectedBase10: 0
}];
try { if (Inst279 <= 1000 && typeof (strings) != "undefined") {_RecordType("<9076,9083,160>",(strings)); Inst279++; } } catch(e) {}

for (var i = 0; i < strings.length; i++) {
try { if (Inst285 <= 1000 && typeof (i) != "undefined") {_RecordType("<9513,9514,192>",(i)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (i) != "undefined") {_RecordType("<9520,9521,192>",(i)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (strings.length) != "undefined") {_RecordType("<9524,9538,192>",(strings.length)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (strings) != "undefined") {_RecordType("<9524,9531,192>",(strings)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (i) != "undefined") {_RecordType("<9540,9541,192>",(i)); Inst289++; } } catch(e) {}
try { if (Inst291 <= 1000 && typeof (strings[i]) != "undefined") {_RecordType("<9563,9573,193>",(strings[i])); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (strings) != "undefined") {_RecordType("<9563,9570,193>",(strings)); Inst292++; } } catch(e) {}
  var current = strings[i];
try { if (Inst290 <= 1000 && typeof (current) != "undefined") {_RecordType("<9553,9560,193>",(current)); Inst290++; } } catch(e) {}
try { if (Inst294 <= 1000 && typeof (current.str.substring) != "undefined") {_RecordType("<9590,9611,194>",(current.str.substring)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (current.str) != "undefined") {_RecordType("<9590,9601,194>",(current.str)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (current) != "undefined") {_RecordType("<9590,9597,194>",(current)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (current.start) != "undefined") {_RecordType("<9612,9625,194>",(current.start)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (current) != "undefined") {_RecordType("<9612,9619,194>",(current)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (current.length) != "undefined") {_RecordType("<9627,9641,194>",(current.length)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (current) != "undefined") {_RecordType("<9627,9634,194>",(current)); Inst300++; } } catch(e) {}
  var substr = current.str.substring(current.start, current.length);
try { if (Inst293 <= 1000 && typeof (substr) != "undefined") {_RecordType("<9581,9587,194>",(substr)); Inst293++; } } catch(e) {}
try { if (Inst301 <= 1000 && typeof (verify) != "undefined") {_RecordType("<9646,9652,195>",(verify)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<9653,9661,195>",(parseInt)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (substr) != "undefined") {_RecordType("<9662,9668,195>",(substr)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (current.expected) != "undefined") {_RecordType("<9671,9687,195>",(current.expected)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (current) != "undefined") {_RecordType("<9671,9678,195>",(current)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (id) != "undefined") {_RecordType("<9689,9691,195>",(id)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (substr) != "undefined") {_RecordType("<9740,9746,195>",(substr)); Inst307++; } } catch(e) {}
  verify(parseInt(substr), current.expected, id++, "Substring testing base: implicit string:" + substr);
try { if (Inst308 <= 1000 && typeof (verify) != "undefined") {_RecordType("<9751,9757,196>",(verify)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<9758,9766,196>",(parseInt)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (substr) != "undefined") {_RecordType("<9767,9773,196>",(substr)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (current.expectedBase10) != "undefined") {_RecordType("<9780,9802,196>",(current.expectedBase10)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (current) != "undefined") {_RecordType("<9780,9787,196>",(current)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (id) != "undefined") {_RecordType("<9804,9806,196>",(id)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (substr) != "undefined") {_RecordType("<9849,9855,196>",(substr)); Inst314++; } } catch(e) {}
  verify(parseInt(substr, 10), current.expectedBase10, id++, "Substring testing base: 10 string:" + substr);
try { if (Inst315 <= 1000 && typeof (verify) != "undefined") {_RecordType("<9860,9866,197>",(verify)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<9867,9875,197>",(parseInt)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (substr) != "undefined") {_RecordType("<9876,9882,197>",(substr)); Inst317++; } } catch(e) {}try { if (Inst318 <= 1000 && typeof (current.expected) != "undefined") {_RecordType("<9889,9905,197>",(current.expected)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (current) != "undefined") {_RecordType("<9889,9896,197>",(current)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (id) != "undefined") {_RecordType("<9907,9909,197>",(id)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (substr) != "undefined") {_RecordType("<9952,9958,197>",(substr)); Inst321++; } } catch(e) {}
  verify(parseInt(substr, 16), current.expected, id++, "Substring testing base: 16 string:" + substr);
}

try { if (Inst322 <= 1000 && typeof (print) != "undefined") {_RecordType("<9964,9969,200>",(print)); Inst322++; } } catch(e) {}
print("Done");

