var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(v) {
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<382,383,5>",(v)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<389,394,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<395,396,6>",(v)); Inst3++; } } catch(e) {}
  print(v + "");
} // Bailout cases


try { if (Inst4 <= 1000 && typeof (modByNeg) != "undefined") {_RecordType("<434,442,10>",(modByNeg)); Inst4++; } } catch(e) {}
function modByNeg(x) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<443,444,10>",(x)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<462,463,11>",(x)); Inst6++; } } catch(e) {}
  return 32 % x;
}

try { if (Inst7 <= 1000 && typeof (modByNonPowerOf2) != "undefined") {_RecordType("<477,493,14>",(modByNonPowerOf2)); Inst7++; } } catch(e) {}
function modByNonPowerOf2(x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<494,495,14>",(x)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<513,514,15>",(x)); Inst9++; } } catch(e) {}
  return 32 % x;
}

try { if (Inst10 <= 1000 && typeof (modOfNeg) != "undefined") {_RecordType("<528,536,18>",(modOfNeg)); Inst10++; } } catch(e) {}
function modOfNeg(a, x) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<537,538,18>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<540,541,18>",(x)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<551,552,19>",(a)); Inst14++; } } catch(e) {}
  a = a | 0; // forces typespec
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<547,548,19>",(a)); Inst13++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<587,588,21>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<591,592,21>",(x)); Inst16++; } } catch(e) {}
  return a % x;
}

try { if (Inst17 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<606,613,24>",(runTest)); Inst17++; } } catch(e) {}
function runTest() {
try { if (Inst18 <= 1000 && typeof (write) != "undefined") {_RecordType("<620,625,25>",(write)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (modByNeg) != "undefined") {_RecordType("<626,634,25>",(modByNeg)); Inst19++; } } catch(e) {}
  write(modByNeg(16)); // by power of 2

try { if (Inst20 <= 1000 && typeof (write) != "undefined") {_RecordType("<661,666,27>",(write)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (modByNeg) != "undefined") {_RecordType("<667,675,27>",(modByNeg)); Inst21++; } } catch(e) {}
  write(modByNeg(-3)); // cause bailout

try { if (Inst22 <= 1000 && typeof (write) != "undefined") {_RecordType("<702,707,29>",(write)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (modByNonPowerOf2) != "undefined") {_RecordType("<708,724,29>",(modByNonPowerOf2)); Inst23++; } } catch(e) {}
  write(modByNonPowerOf2(16 * 16)); // by power of 2

try { if (Inst24 <= 1000 && typeof (write) != "undefined") {_RecordType("<756,761,31>",(write)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (modByNonPowerOf2) != "undefined") {_RecordType("<762,778,31>",(modByNonPowerOf2)); Inst25++; } } catch(e) {}
  write(modByNonPowerOf2(23)); // cause bailout

try { if (Inst26 <= 1000 && typeof (write) != "undefined") {_RecordType("<805,810,33>",(write)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (modOfNeg) != "undefined") {_RecordType("<811,819,33>",(modOfNeg)); Inst27++; } } catch(e) {}
  write(modOfNeg(100, 32));
try { if (Inst28 <= 1000 && typeof (write) != "undefined") {_RecordType("<833,838,34>",(write)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (modOfNeg) != "undefined") {_RecordType("<839,847,34>",(modOfNeg)); Inst29++; } } catch(e) {}
  write(modOfNeg(-12, 32)); // cause bailout

  for (var i = 0; i < 500; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<888,889,36>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<895,896,36>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<904,905,36>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (modByNeg) != "undefined") {_RecordType("<915,923,37>",(modByNeg)); Inst33++; } } catch(e) {}
    modByNeg(-3); // cause rejit
  }
}

try { if (Inst34 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<951,958,41>",(runTest)); Inst34++; } } catch(e) {}
runTest();

