var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//
// This test includes Date.toString output. Don't use a baseline.
//
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<448,451,8>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  ;
}

try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<474,483,12>",(undefined)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<508,515,12>",(Boolean)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<527,534,12>",(Boolean)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<543,546,12>",(NaN)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<574,590,12>",(Number.MAX_VALUE)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Number) != "undefined") {_RecordType("<574,580,12>",(Number)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<592,608,12>",(Number.MIN_VALUE)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Number) != "undefined") {_RecordType("<592,598,12>",(Number)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<610,620,12>",(Number.NaN)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<610,616,12>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<622,646,12>",(Number.POSITIVE_INFINITY)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Number) != "undefined") {_RecordType("<622,628,12>",(Number)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<648,672,12>",(Number.NEGATIVE_INFINITY)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<648,654,12>",(Number)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Number) != "undefined") {_RecordType("<678,684,12>",(Number)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<685,688,12>",(NaN)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number) != "undefined") {_RecordType("<695,701,12>",(Number)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<711,717,12>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Number) != "undefined") {_RecordType("<727,733,12>",(Number)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Number) != "undefined") {_RecordType("<742,748,12>",(Number)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Number) != "undefined") {_RecordType("<757,763,12>",(Number)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Number) != "undefined") {_RecordType("<775,781,12>",(Number)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number) != "undefined") {_RecordType("<793,799,12>",(Number)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<800,816,12>",(Number.MAX_VALUE)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number) != "undefined") {_RecordType("<800,806,12>",(Number)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number) != "undefined") {_RecordType("<823,829,12>",(Number)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<830,846,12>",(Number.MIN_VALUE)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Number) != "undefined") {_RecordType("<830,836,12>",(Number)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<853,859,12>",(Number)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<860,870,12>",(Number.NaN)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number) != "undefined") {_RecordType("<860,866,12>",(Number)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<877,883,12>",(Number)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<884,908,12>",(Number.POSITIVE_INFINITY)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Number) != "undefined") {_RecordType("<884,890,12>",(Number)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number) != "undefined") {_RecordType("<915,921,12>",(Number)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<922,946,12>",(Number.NEGATIVE_INFINITY)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Number) != "undefined") {_RecordType("<922,928,12>",(Number)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (String) != "undefined") {_RecordType("<980,986,12>",(String)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (String) != "undefined") {_RecordType("<996,1002,12>",(String)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (String) != "undefined") {_RecordType("<1017,1023,12>",(String)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1043,1049,12>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1068,1074,12>",(Object)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1089,1092,12>",(foo)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1098,1102,12>",(Date)); Inst45++; } } catch(e) {}
var all = [undefined, null, true, false, new Boolean(true), new Boolean(false), NaN, +0, -0, 0, 1, 10.0, 10.1, Number.MAX_VALUE, Number.MIN_VALUE, Number.NaN, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, new Number(NaN), new Number(+0), new Number(-0), new Number(0), new Number(1), new Number(10.0), new Number(10.1), new Number(Number.MAX_VALUE), new Number(Number.MIN_VALUE), new Number(Number.NaN), new Number(Number.POSITIVE_INFINITY), new Number(Number.NEGATIVE_INFINITY), "", "hello", "hel" + "lo", new String(""), new String("hello"), new String("he" + "llo"), new Object(), [1, 2, 3], new Object(), [1, 2, 3], foo, new Date("2011-12-14T12:47:42.658Z")];
try { if (Inst1 <= 1000 && typeof (all) != "undefined") {_RecordType("<467,470,12>",(all)); Inst1++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (addcross) != "undefined") {_RecordType("<1143,1151,14>",(addcross)); Inst46++; } } catch(e) {}
function addcross(a1, a2) {
try { if (Inst47 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1152,1154,14>",(a1)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1156,1158,14>",(a2)); Inst48++; } } catch(e) {}
  for (var i = 0; i < a1.length; ++i) {
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1173,1174,15>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1180,1181,15>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a1.length) != "undefined") {_RecordType("<1184,1193,15>",(a1.length)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1184,1186,15>",(a1)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1197,1198,15>",(i)); Inst53++; } } catch(e) {}
    for (var j = 0; j < a2.length; ++j) {
try { if (Inst54 <= 1000 && typeof (j) != "undefined") {_RecordType("<1215,1216,16>",(j)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (j) != "undefined") {_RecordType("<1222,1223,16>",(j)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (a2.length) != "undefined") {_RecordType("<1226,1235,16>",(a2.length)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1226,1228,16>",(a2)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (j) != "undefined") {_RecordType("<1239,1240,16>",(j)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (print) != "undefined") {_RecordType("<1250,1255,17>",(print)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1263,1264,17>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (a1[i]) != "undefined") {_RecordType("<1274,1279,17>",(a1[i])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1274,1276,17>",(a1)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (j) != "undefined") {_RecordType("<1293,1294,17>",(j)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (a2[j]) != "undefined") {_RecordType("<1304,1309,17>",(a2[j])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1304,1306,17>",(a2)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (a1[i]) != "undefined") {_RecordType("<1322,1327,17>",(a1[i])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1322,1324,17>",(a1)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (a2[j]) != "undefined") {_RecordType("<1330,1335,17>",(a2[j])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1330,1332,17>",(a2)); Inst69++; } } catch(e) {}
      print("a[" + i + "](" + a1[i] + ") + a[" + j + "](" + a2[j] + ") = " + (a1[i] + a2[j]));
    }
  }
}

try { if (Inst70 <= 1000 && typeof (print) != "undefined") {_RecordType("<1352,1357,22>",(print)); Inst70++; } } catch(e) {}
print("==== self var + crosscontext var ====");
try { if (Inst71 <= 1000 && typeof (addcross) != "undefined") {_RecordType("<1400,1408,23>",(addcross)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (this.all) != "undefined") {_RecordType("<1409,1417,23>",(this.all)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (all) != "undefined") {_RecordType("<1419,1422,23>",(all)); Inst73++; } } catch(e) {}
addcross(this.all, all);
try { if (Inst74 <= 1000 && typeof (print) != "undefined") {_RecordType("<1425,1430,24>",(print)); Inst74++; } } catch(e) {}
print();
try { if (Inst75 <= 1000 && typeof (print) != "undefined") {_RecordType("<1434,1439,25>",(print)); Inst75++; } } catch(e) {}
print("==== crosscontext var + self var ====");
try { if (Inst76 <= 1000 && typeof (addcross) != "undefined") {_RecordType("<1482,1490,26>",(addcross)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (all) != "undefined") {_RecordType("<1491,1494,26>",(all)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (this.all) != "undefined") {_RecordType("<1496,1504,26>",(this.all)); Inst78++; } } catch(e) {}
addcross(all, this.all);

