var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(v) {
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<382,383,5>",(v)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<389,394,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<395,396,6>",(v)); Inst3++; } } catch(e) {}
  print(v + "");
}

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<416,419,9>",(foo)); Inst4++; } } catch(e) {}
function foo() {
  ;
}

try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<442,451,13>",(undefined)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<476,483,13>",(Boolean)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<495,502,13>",(Boolean)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<511,514,13>",(NaN)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<542,558,13>",(Number.MAX_VALUE)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<542,548,13>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<560,576,13>",(Number.MIN_VALUE)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Number) != "undefined") {_RecordType("<560,566,13>",(Number)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<578,588,13>",(Number.NaN)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<578,584,13>",(Number)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<590,614,13>",(Number.POSITIVE_INFINITY)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Number) != "undefined") {_RecordType("<590,596,13>",(Number)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<616,640,13>",(Number.NEGATIVE_INFINITY)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<616,622,13>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Number) != "undefined") {_RecordType("<646,652,13>",(Number)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<653,656,13>",(NaN)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Number) != "undefined") {_RecordType("<663,669,13>",(Number)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Number) != "undefined") {_RecordType("<679,685,13>",(Number)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number) != "undefined") {_RecordType("<695,701,13>",(Number)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number) != "undefined") {_RecordType("<710,716,13>",(Number)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number) != "undefined") {_RecordType("<725,731,13>",(Number)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number) != "undefined") {_RecordType("<743,749,13>",(Number)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Number) != "undefined") {_RecordType("<761,767,13>",(Number)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<768,784,13>",(Number.MAX_VALUE)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<768,774,13>",(Number)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number) != "undefined") {_RecordType("<791,797,13>",(Number)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<798,814,13>",(Number.MIN_VALUE)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<798,804,13>",(Number)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Number) != "undefined") {_RecordType("<821,827,13>",(Number)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<828,838,13>",(Number.NaN)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number) != "undefined") {_RecordType("<828,834,13>",(Number)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Number) != "undefined") {_RecordType("<845,851,13>",(Number)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<852,876,13>",(Number.POSITIVE_INFINITY)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Number) != "undefined") {_RecordType("<852,858,13>",(Number)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Number) != "undefined") {_RecordType("<883,889,13>",(Number)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<890,914,13>",(Number.NEGATIVE_INFINITY)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Number) != "undefined") {_RecordType("<890,896,13>",(Number)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (String) != "undefined") {_RecordType("<948,954,13>",(String)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (String) != "undefined") {_RecordType("<964,970,13>",(String)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (String) != "undefined") {_RecordType("<985,991,13>",(String)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1011,1017,13>",(Object)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1036,1042,13>",(Object)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1057,1060,13>",(foo)); Inst48++; } } catch(e) {}
var all = [undefined, null, true, false, new Boolean(true), new Boolean(false), NaN, +0, -0, 0, 1, 10.0, 10.1, Number.MAX_VALUE, Number.MIN_VALUE, Number.NaN, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, new Number(NaN), new Number(+0), new Number(-0), new Number(0), new Number(1), new Number(10.0), new Number(10.1), new Number(Number.MAX_VALUE), new Number(Number.MIN_VALUE), new Number(Number.NaN), new Number(Number.POSITIVE_INFINITY), new Number(Number.NEGATIVE_INFINITY), "", "hello", "hel" + "lo", new String(""), new String("hello"), new String("he" + "llo"), new Object(), [1, 2, 3], new Object(), [1, 2, 3], foo];
try { if (Inst5 <= 1000 && typeof (all) != "undefined") {_RecordType("<435,438,13>",(all)); Inst5++; } } catch(e) {}

for (var i = 0; i < all.length; ++i) {
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1073,1074,15>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1080,1081,15>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (all.length) != "undefined") {_RecordType("<1084,1094,15>",(all.length)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (all) != "undefined") {_RecordType("<1084,1087,15>",(all)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1098,1099,15>",(i)); Inst53++; } } catch(e) {}
  for (var j = 0; j < all.length; ++j) {
try { if (Inst54 <= 1000 && typeof (j) != "undefined") {_RecordType("<1114,1115,16>",(j)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (j) != "undefined") {_RecordType("<1121,1122,16>",(j)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (all.length) != "undefined") {_RecordType("<1125,1135,16>",(all.length)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (all) != "undefined") {_RecordType("<1125,1128,16>",(all)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (j) != "undefined") {_RecordType("<1139,1140,16>",(j)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (write) != "undefined") {_RecordType("<1148,1153,17>",(write)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1161,1162,17>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<1172,1178,17>",(all[i])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (all) != "undefined") {_RecordType("<1172,1175,17>",(all)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (j) != "undefined") {_RecordType("<1192,1193,17>",(j)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<1203,1209,17>",(all[j])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (all) != "undefined") {_RecordType("<1203,1206,17>",(all)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<1222,1228,17>",(all[i])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (all) != "undefined") {_RecordType("<1222,1225,17>",(all)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<1231,1237,17>",(all[j])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (all) != "undefined") {_RecordType("<1231,1234,17>",(all)); Inst69++; } } catch(e) {}
    write("a[" + i + "](" + all[i] + ") + a[" + j + "](" + all[j] + ") = " + (all[i] + all[j]));
  }
}

