var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (TwoProperty) != "undefined") {_RecordType("<376,387,5>",(TwoProperty)); Inst0++; } } catch(e) {}
function TwoProperty(arg0, arg1) {
try { if (Inst1 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<388,392,5>",(arg0)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<394,398,5>",(arg1)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<417,421,6>",(arg1)); Inst4++; } } catch(e) {}
  this.prop2 = arg1;
try { if (Inst3 <= 1000 && typeof (this.prop2) != "undefined") {_RecordType("<404,414,6>",(this.prop2)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<438,442,7>",(arg0)); Inst6++; } } catch(e) {}
  this.prop1 = arg0;
try { if (Inst5 <= 1000 && typeof (this.prop1) != "undefined") {_RecordType("<425,435,7>",(this.prop1)); Inst5++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (TwoProperty) != "undefined") {_RecordType("<461,472,10>",(TwoProperty)); Inst8++; } } catch(e) {}
var obj = new TwoProperty(1, 2);
try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<451,454,10>",(obj)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<495,508,11>",(Object.create)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<495,501,11>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<509,512,11>",(obj)); Inst12++; } } catch(e) {}
var protoObj = Object.create(obj);
try { if (Inst9 <= 1000 && typeof (protoObj) != "undefined") {_RecordType("<484,492,11>",(protoObj)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<515,520,12>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (protoObj.prop1) != "undefined") {_RecordType("<521,535,12>",(protoObj.prop1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (protoObj) != "undefined") {_RecordType("<521,529,12>",(protoObj)); Inst15++; } } catch(e) {}
print(protoObj.prop1);
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<538,543,13>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (protoObj.prop2) != "undefined") {_RecordType("<544,558,13>",(protoObj.prop2)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (protoObj) != "undefined") {_RecordType("<544,552,13>",(protoObj)); Inst18++; } } catch(e) {}
print(protoObj.prop2);
obj.prop3 = 10;
try { if (Inst19 <= 1000 && typeof (obj.prop3) != "undefined") {_RecordType("<561,570,14>",(obj.prop3)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<561,564,14>",(obj)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<577,582,15>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (protoObj.prop1) != "undefined") {_RecordType("<583,597,15>",(protoObj.prop1)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (protoObj) != "undefined") {_RecordType("<583,591,15>",(protoObj)); Inst23++; } } catch(e) {}
print(protoObj.prop1);
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<600,605,16>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (protoObj.prop2) != "undefined") {_RecordType("<606,620,16>",(protoObj.prop2)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (protoObj) != "undefined") {_RecordType("<606,614,16>",(protoObj)); Inst26++; } } catch(e) {}
print(protoObj.prop2);
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<623,628,17>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (protoObj.prop3) != "undefined") {_RecordType("<629,643,17>",(protoObj.prop3)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (protoObj) != "undefined") {_RecordType("<629,637,17>",(protoObj)); Inst29++; } } catch(e) {}
print(protoObj.prop3);

