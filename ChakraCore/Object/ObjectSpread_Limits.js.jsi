var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<376,378,5>",(t1)); Inst0++; } } catch(e) {}
function t1() {
try { if (Inst1 <= 1000 && typeof (testRange) != "undefined") {_RecordType("<394,403,6>",(testRange)); Inst1++; } } catch(e) {}
  function testRange(start, end) {
try { if (Inst2 <= 1000 && typeof (start) != "undefined") {_RecordType("<404,409,6>",(start)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (end) != "undefined") {_RecordType("<411,414,6>",(end)); Inst3++; } } catch(e) {}
    let arr = [];
try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<426,429,7>",(arr)); Inst4++; } } catch(e) {}

    for (i = start; i < end; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,9>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (start) != "undefined") {_RecordType("<450,455,9>",(start)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<457,458,9>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (end) != "undefined") {_RecordType("<461,464,9>",(end)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<466,467,9>",(i)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<488,489,10>",(i)); Inst12++; } } catch(e) {}
      arr[i] = i;
try { if (Inst10 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<479,485,10>",(arr[i])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<479,482,10>",(arr)); Inst11++; } } catch(e) {}
    }

try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<517,520,13>",(arr)); Inst14++; } } catch(e) {}
    let obj = { ...arr
    };
try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<506,509,13>",(obj)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (end) != "undefined") {_RecordType("<532,535,15>",(end)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (start) != "undefined") {_RecordType("<538,543,15>",(start)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.keys(obj).length) != "undefined") {_RecordType("<548,571,15>",(Object.keys(obj).length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<548,559,15>",(Object.keys)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<548,554,15>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<560,563,15>",(obj)); Inst20++; } } catch(e) {}
    end - start === Object.keys(obj).length;

    for (var propName in obj) {
try { if (Inst21 <= 1000 && typeof (propName) != "undefined") {_RecordType("<587,595,17>",(propName)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<599,602,17>",(obj)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (obj[propName]) != "undefined") {_RecordType("<624,637,18>",(obj[propName])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<624,627,18>",(obj)); Inst25++; } } catch(e) {}
      propValue = obj[propName];
try { if (Inst23 <= 1000 && typeof (propValue) != "undefined") {_RecordType("<612,621,18>",(propValue)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (propName) != "undefined") {_RecordType("<645,653,19>",(propName)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (propValue.toString) != "undefined") {_RecordType("<658,676,19>",(propValue.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (propValue) != "undefined") {_RecordType("<658,667,19>",(propValue)); Inst28++; } } catch(e) {}
      propName === propValue.toString();
    }
  }

  ;
try { if (Inst29 <= 1000 && typeof (testRange) != "undefined") {_RecordType("<697,706,24>",(testRange)); Inst29++; } } catch(e) {}
  testRange(2 ** 31 - 100, 2 ** 31 + 100);
try { if (Inst30 <= 1000 && typeof (testRange) != "undefined") {_RecordType("<740,749,25>",(testRange)); Inst30++; } } catch(e) {}
  testRange(2 ** 32 - 100, 2 ** 32 + 100);
}

try { if (Inst31 <= 1000 && typeof (t1) != "undefined") {_RecordType("<784,786,28>",(t1)); Inst31++; } } catch(e) {}
t1();

