var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var test = false;
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<371,375,5>",(test)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (OneProperty) != "undefined") {_RecordType("<395,406,7>",(OneProperty)); Inst1++; } } catch(e) {}
function OneProperty(arg0) {
try { if (Inst2 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<407,411,7>",(arg0)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<430,434,8>",(arg0)); Inst4++; } } catch(e) {}
  this.prop0 = arg0;
try { if (Inst3 <= 1000 && typeof (this.prop0) != "undefined") {_RecordType("<417,427,8>",(this.prop0)); Inst3++; } } catch(e) {}
}

var AddMoreProperties = function () {
try { if (Inst7 <= 1000 && typeof (OneProperty) != "undefined") {_RecordType("<489,500,12>",(OneProperty)); Inst7++; } } catch(e) {}
  obj = new OneProperty(3);
try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<479,482,12>",(obj)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (test) != "undefined") {_RecordType("<512,516,14>",(test)); Inst8++; } } catch(e) {}
  if (test) {
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<524,529,15>",(print)); Inst9++; } } catch(e) {}
    print("A");
  }

  ;
  obj.prop1 = 1;
try { if (Inst10 <= 1000 && typeof (obj.prop1) != "undefined") {_RecordType("<547,556,19>",(obj.prop1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<547,550,19>",(obj)); Inst11++; } } catch(e) {}
  obj.prop2 = 4;
try { if (Inst12 <= 1000 && typeof (obj.prop2) != "undefined") {_RecordType("<564,573,20>",(obj.prop2)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<564,567,20>",(obj)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<581,586,21>",(print)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj.prop0) != "undefined") {_RecordType("<587,596,21>",(obj.prop0)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<587,590,21>",(obj)); Inst16++; } } catch(e) {}
  print(obj.prop0);
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<601,606,22>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj.prop1) != "undefined") {_RecordType("<607,616,22>",(obj.prop1)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<607,610,22>",(obj)); Inst19++; } } catch(e) {}
  print(obj.prop1);
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<621,626,23>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj.prop2) != "undefined") {_RecordType("<627,636,23>",(obj.prop2)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<627,630,23>",(obj)); Inst22++; } } catch(e) {}
  print(obj.prop2);
try { if (Inst23 <= 1000 && typeof (obj[0]) != "undefined") {_RecordType("<641,647,24>",(obj[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj) != "undefined") {_RecordType("<641,644,24>",(obj)); Inst24++; } } catch(e) {}
  obj[0];
};
try { if (Inst5 <= 1000 && typeof (AddMoreProperties) != "undefined") {_RecordType("<443,460,11>",(AddMoreProperties)); Inst5++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (AddMoreProperties) != "undefined") {_RecordType("<653,670,27>",(AddMoreProperties)); Inst25++; } } catch(e) {}
AddMoreProperties();
try { if (Inst26 <= 1000 && typeof (AddMoreProperties) != "undefined") {_RecordType("<674,691,28>",(AddMoreProperties)); Inst26++; } } catch(e) {}
AddMoreProperties();
try { if (Inst27 <= 1000 && typeof (AddMoreProperties) != "undefined") {_RecordType("<695,712,29>",(AddMoreProperties)); Inst27++; } } catch(e) {}
AddMoreProperties();

