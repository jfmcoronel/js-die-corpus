var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Tests that getOwnPropertyDescriptor is not supported in IE8-mode for non-DOM objects.
try { if (Inst0 <= 1000 && typeof (TestGetOwnPropertyDescriptor) != "undefined") {_RecordType("<465,493,6>",(TestGetOwnPropertyDescriptor)); Inst0++; } } catch(e) {}
function TestGetOwnPropertyDescriptor(obj, property) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<494,497,6>",(obj)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (property) != "undefined") {_RecordType("<499,507,6>",(property)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (CatchAndWriteExceptions) != "undefined") {_RecordType("<513,536,7>",(CatchAndWriteExceptions)); Inst3++; } } catch(e) {}
  CatchAndWriteExceptions(function () {
try { if (Inst5 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<566,597,8>",(Object.getOwnPropertyDescriptor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<566,572,8>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<598,601,8>",(obj)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (property) != "undefined") {_RecordType("<603,611,8>",(property)); Inst8++; } } catch(e) {}
    var desc = Object.getOwnPropertyDescriptor(obj, property);
try { if (Inst4 <= 1000 && typeof (desc) != "undefined") {_RecordType("<559,563,8>",(desc)); Inst4++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (desc) != "undefined") {_RecordType("<631,635,9>",(desc)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<639,648,9>",(undefined)); Inst11++; } } catch(e) {}
    var exists = desc != undefined;
try { if (Inst9 <= 1000 && typeof (exists) != "undefined") {_RecordType("<622,628,9>",(exists)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<654,659,10>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (property) != "undefined") {_RecordType("<686,694,10>",(property)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (exists) != "undefined") {_RecordType("<704,710,10>",(exists)); Inst14++; } } catch(e) {}
    print("Found descriptor for " + property + ": " + exists);

try { if (Inst15 <= 1000 && typeof (exists) != "undefined") {_RecordType("<722,728,12>",(exists)); Inst15++; } } catch(e) {}
    if (exists) {
      for (var i in desc) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<747,748,13>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (desc) != "undefined") {_RecordType("<752,756,13>",(desc)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<768,773,14>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<774,775,14>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (desc[i]) != "undefined") {_RecordType("<784,791,14>",(desc[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (desc) != "undefined") {_RecordType("<784,788,14>",(desc)); Inst21++; } } catch(e) {}
        print(i + "=" + desc[i]);
      }
    }
  });
}

try { if (Inst22 <= 1000 && typeof (CatchAndWriteExceptions) != "undefined") {_RecordType("<826,849,20>",(CatchAndWriteExceptions)); Inst22++; } } catch(e) {}
function CatchAndWriteExceptions(func) {
try { if (Inst23 <= 1000 && typeof (func) != "undefined") {_RecordType("<850,854,20>",(func)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<889,890,23>",(e)); Inst25++; } } catch(e) {}
  try {
try { if (Inst24 <= 1000 && typeof (func) != "undefined") {_RecordType("<870,874,22>",(func)); Inst24++; } } catch(e) {}
    func();
  } catch (e) {
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<898,903,24>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<904,910,24>",(e.name)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<904,905,24>",(e)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (e.number) != "undefined") {_RecordType("<920,928,24>",(e.number)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<920,921,24>",(e)); Inst30++; } } catch(e) {}
    print(e.name + ": " + e.number);
  }
}

try { if (Inst31 <= 1000 && typeof (TestGetOwnPropertyDescriptor) != "undefined") {_RecordType("<938,966,28>",(TestGetOwnPropertyDescriptor)); Inst31++; } } catch(e) {}
TestGetOwnPropertyDescriptor({
  foo: "fooValue"
}, "foo");

