var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
Object.prototype.prop0 = -4;
try { if (Inst0 <= 1000 && typeof (Object.prototype.prop0) != "undefined") {_RecordType("<367,389,5>",(Object.prototype.prop0)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<367,383,5>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<367,373,5>",(Object)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (test0) != "undefined") {_RecordType("<406,411,7>",(test0)); Inst3++; } } catch(e) {}
function test0(arg) {
try { if (Inst4 <= 1000 && typeof (arg) != "undefined") {_RecordType("<412,415,7>",(arg)); Inst4++; } } catch(e) {}
  var obj1 = {};
try { if (Inst5 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<425,429,8>",(obj1)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<445,449,9>",(obj1)); Inst7++; } } catch(e) {}
  obj0 = obj1;
try { if (Inst6 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<438,442,9>",(obj0)); Inst6++; } } catch(e) {}
  obj1.prop1 += 0;
try { if (Inst8 <= 1000 && typeof (obj1.prop1) != "undefined") {_RecordType("<453,463,10>",(obj1.prop1)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<453,457,10>",(obj1)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (arg) != "undefined") {_RecordType("<477,480,12>",(arg)); Inst10++; } } catch(e) {}
  if (arg) {
try { if (Inst13 <= 1000 && typeof (obj1.prop1.prop0) != "undefined") {_RecordType("<501,517,13>",(obj1.prop1.prop0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj1.prop1) != "undefined") {_RecordType("<501,511,13>",(obj1.prop1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<501,505,13>",(obj1)); Inst15++; } } catch(e) {}
    obj1.prop1 = obj1.prop1.prop0;
try { if (Inst11 <= 1000 && typeof (obj1.prop1) != "undefined") {_RecordType("<488,498,13>",(obj1.prop1)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<488,492,13>",(obj1)); Inst12++; } } catch(e) {}
  } else {
try { if (Inst18 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<547,557,15>",(obj0.prop0)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<547,551,15>",(obj0)); Inst19++; } } catch(e) {}
    obj1.prop1 = obj0.prop0;
try { if (Inst16 <= 1000 && typeof (obj1.prop1) != "undefined") {_RecordType("<534,544,15>",(obj1.prop1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<534,538,15>",(obj1)); Inst17++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<576,580,16>",(obj1)); Inst22++; } } catch(e) {}
    obj0.prop0 = obj1;
try { if (Inst20 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<563,573,16>",(obj0.prop0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<563,567,16>",(obj0)); Inst21++; } } catch(e) {}
  }
}

try { if (Inst23 <= 1000 && typeof (test0) != "undefined") {_RecordType("<589,594,20>",(test0)); Inst23++; } } catch(e) {}
test0(true);
try { if (Inst24 <= 1000 && typeof (test0) != "undefined") {_RecordType("<602,607,21>",(test0)); Inst24++; } } catch(e) {}
test0(true);
try { if (Inst25 <= 1000 && typeof (test0) != "undefined") {_RecordType("<615,620,22>",(test0)); Inst25++; } } catch(e) {}
test0(true);
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<628,633,23>",(print)); Inst26++; } } catch(e) {}
print("PASSED");

