var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (makeobj) != "undefined") {_RecordType("<376,383,5>",(makeobj)); Inst0++; } } catch(e) {}
function makeobj(n) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<384,385,5>",(n)); Inst1++; } } catch(e) {}
  var obj = {};
try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<395,398,6>",(obj)); Inst2++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,8>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<424,425,8>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<428,429,8>",(n)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<433,434,8>",(i)); Inst6++; } } catch(e) {}
    obj[i] = 1;
try { if (Inst7 <= 1000 && typeof (obj[i]) != "undefined") {_RecordType("<442,448,9>",(obj[i])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<442,445,9>",(obj)); Inst8++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<468,471,12>",(obj)); Inst9++; } } catch(e) {}
  return obj;
}

try { if (Inst10 <= 1000 && typeof (testdelete) != "undefined") {_RecordType("<485,495,15>",(testdelete)); Inst10++; } } catch(e) {}
function testdelete(n) {
try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<496,497,15>",(n)); Inst11++; } } catch(e) {}
  for (var propToDelete = 0; propToDelete <= n; ++propToDelete) {
try { if (Inst12 <= 1000 && typeof (propToDelete) != "undefined") {_RecordType("<512,524,16>",(propToDelete)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (propToDelete) != "undefined") {_RecordType("<530,542,16>",(propToDelete)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (n) != "undefined") {_RecordType("<546,547,16>",(n)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (propToDelete) != "undefined") {_RecordType("<551,563,16>",(propToDelete)); Inst15++; } } catch(e) {}
    for (var iterToDelete = 0; iterToDelete <= n; ++iterToDelete) {
try { if (Inst16 <= 1000 && typeof (iterToDelete) != "undefined") {_RecordType("<580,592,17>",(iterToDelete)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (iterToDelete) != "undefined") {_RecordType("<598,610,17>",(iterToDelete)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (n) != "undefined") {_RecordType("<614,615,17>",(n)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (iterToDelete) != "undefined") {_RecordType("<619,631,17>",(iterToDelete)); Inst19++; } } catch(e) {}
      for (var iterToAdd = 0; iterToAdd <= n; ++iterToAdd) {
try { if (Inst20 <= 1000 && typeof (iterToAdd) != "undefined") {_RecordType("<650,659,18>",(iterToAdd)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (iterToAdd) != "undefined") {_RecordType("<665,674,18>",(iterToAdd)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (n) != "undefined") {_RecordType("<678,679,18>",(n)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (iterToAdd) != "undefined") {_RecordType("<683,692,18>",(iterToAdd)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<704,709,19>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (n) != "undefined") {_RecordType("<728,729,19>",(n)); Inst25++; } } catch(e) {}
        print("testing with " + n + " properties");
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<756,761,20>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (propToDelete) != "undefined") {_RecordType("<792,804,20>",(propToDelete)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (iterToDelete) != "undefined") {_RecordType("<826,838,20>",(iterToDelete)); Inst28++; } } catch(e) {}
        print("deleting property number " + propToDelete + " on iteration " + iterToDelete);
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<849,854,21>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (iterToAdd) != "undefined") {_RecordType("<891,900,21>",(iterToAdd)); Inst30++; } } catch(e) {}
        print("adding a property on iteration " + iterToAdd);
        var iter = 0;
try { if (Inst31 <= 1000 && typeof (iter) != "undefined") {_RecordType("<915,919,22>",(iter)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (makeobj) != "undefined") {_RecordType("<941,948,23>",(makeobj)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<949,950,23>",(n)); Inst34++; } } catch(e) {}
        var o = makeobj(n);
try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<937,938,23>",(o)); Inst32++; } } catch(e) {}

        for (var i in o) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<971,972,25>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<976,977,25>",(o)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (iter) != "undefined") {_RecordType("<995,999,26>",(iter)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (iterToDelete) != "undefined") {_RecordType("<1003,1015,26>",(iterToDelete)); Inst38++; } } catch(e) {}
          if (iter == iterToDelete) {
try { if (Inst39 <= 1000 && typeof (o[propToDelete]) != "undefined") {_RecordType("<1038,1053,27>",(o[propToDelete])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<1038,1039,27>",(o)); Inst40++; } } catch(e) {}
            delete o[propToDelete];
          }

try { if (Inst41 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1082,1086,30>",(iter)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (iterToAdd) != "undefined") {_RecordType("<1090,1099,30>",(iterToAdd)); Inst42++; } } catch(e) {}
          if (iter == iterToAdd) {
            o["xxx"] = 1;
try { if (Inst43 <= 1000 && typeof (o["xxx"]) != "undefined") {_RecordType("<1115,1123,31>",(o["xxx"])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o) != "undefined") {_RecordType("<1115,1116,31>",(o)); Inst44++; } } catch(e) {}
          }

try { if (Inst45 <= 1000 && typeof (print) != "undefined") {_RecordType("<1152,1157,34>",(print)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<1158,1159,34>",(i)); Inst46++; } } catch(e) {}
          print(i);
try { if (Inst47 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1174,1178,35>",(iter)); Inst47++; } } catch(e) {}
          ++iter;
        }
      }
    }
  }
}

for (var i = 0; i < 8; ++i) {
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1220,1221,42>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1227,1228,42>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1236,1237,42>",(i)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (testdelete) != "undefined") {_RecordType("<1243,1253,43>",(testdelete)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<1254,1255,43>",(i)); Inst52++; } } catch(e) {}
  testdelete(i);
}

