var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// https://github.com/Microsoft/ChakraCore/issues/1340
try { if (Inst0 <= 1000 && typeof (find) != "undefined") {_RecordType("<431,435,6>",(find)); Inst0++; } } catch(e) {}
function find(arr, value) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<436,439,6>",(arr)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<441,446,6>",(value)); Inst2++; } } catch(e) {}
  var result = -1;
try { if (Inst3 <= 1000 && typeof (result) != "undefined") {_RecordType("<456,462,7>",(result)); Inst3++; } } catch(e) {}

  for (var i in arr) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<481,482,9>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<486,489,9>",(arr)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<497,502,10>",(print)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<503,504,10>",(i)); Inst7++; } } catch(e) {}
    print(i);

try { if (Inst8 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<516,522,12>",(arr[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<516,519,12>",(arr)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<526,531,12>",(value)); Inst10++; } } catch(e) {}
    if (arr[i] == value) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<550,551,13>",(i)); Inst12++; } } catch(e) {}
      result = i;
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<541,547,13>",(result)); Inst11++; } } catch(e) {}
      break;
    }
  }

try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<586,592,18>",(result)); Inst13++; } } catch(e) {}
  return result;
}

var arr = [0, 1, 2, 3, 4, 5];
try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<601,604,21>",(arr)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (find) != "undefined") {_RecordType("<627,631,22>",(find)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<632,635,22>",(arr)); Inst16++; } } catch(e) {}
find(arr, 3);

try { if (Inst17 <= 1000 && typeof (propCacheTest) != "undefined") {_RecordType("<651,664,24>",(propCacheTest)); Inst17++; } } catch(e) {}
function propCacheTest() {
try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<685,691,25>",(Object)); Inst19++; } } catch(e) {}
  var obj = new Object();
try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<675,678,25>",(obj)); Inst18++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<707,708,27>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<714,715,27>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<722,723,27>",(i)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<757,758,28>",(i)); Inst26++; } } catch(e) {}
    obj["randomprop" + i] = i;
try { if (Inst23 <= 1000 && typeof (obj["randomprop" + i]) != "undefined") {_RecordType("<733,754,28>",(obj["randomprop" + i])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj) != "undefined") {_RecordType("<733,736,28>",(obj)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<752,753,28>",(i)); Inst25++; } } catch(e) {}
  }

try { if (Inst28 <= 1000 && typeof (Array) != "undefined") {_RecordType("<787,792,31>",(Array)); Inst28++; } } catch(e) {}
  var propArray = new Array();
try { if (Inst27 <= 1000 && typeof (propArray) != "undefined") {_RecordType("<771,780,31>",(propArray)); Inst27++; } } catch(e) {}

  for (var prop in obj) {
try { if (Inst29 <= 1000 && typeof (prop) != "undefined") {_RecordType("<808,812,33>",(prop)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj) != "undefined") {_RecordType("<816,819,33>",(obj)); Inst30++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (prop) != "undefined") {_RecordType("<857,861,34>",(prop)); Inst35++; } } catch(e) {}
    propArray[propArray.length] = prop;
try { if (Inst31 <= 1000 && typeof (propArray[propArray.length]) != "undefined") {_RecordType("<827,854,34>",(propArray[propArray.length])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (propArray) != "undefined") {_RecordType("<827,836,34>",(propArray)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (propArray.length) != "undefined") {_RecordType("<837,853,34>",(propArray.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (propArray) != "undefined") {_RecordType("<837,846,34>",(propArray)); Inst34++; } } catch(e) {}
  }

  for (var prop in Array) {
try { if (Inst36 <= 1000 && typeof (prop) != "undefined") {_RecordType("<879,883,37>",(prop)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Array) != "undefined") {_RecordType("<887,892,37>",(Array)); Inst37++; } } catch(e) {}
    ;
  }

  obj = null;
try { if (Inst38 <= 1000 && typeof (obj) != "undefined") {_RecordType("<909,912,41>",(obj)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (propArray) != "undefined") {_RecordType("<930,939,42>",(propArray)); Inst39++; } } catch(e) {}
  return propArray;
}

try { if (Inst41 <= 1000 && typeof (propCacheTest) != "undefined") {_RecordType("<956,969,45>",(propCacheTest)); Inst41++; } } catch(e) {}
var props = propCacheTest();
try { if (Inst40 <= 1000 && typeof (props) != "undefined") {_RecordType("<948,953,45>",(props)); Inst40++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (gc) != "undefined") {_RecordType("<973,975,46>",(gc)); Inst42++; } } catch(e) {}
gc();

for (var i = 0; i < props.length; i++) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<989,990,48>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<996,997,48>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (props.length) != "undefined") {_RecordType("<1000,1012,48>",(props.length)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (props) != "undefined") {_RecordType("<1000,1005,48>",(props)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1014,1015,48>",(i)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<1023,1031,49>",(props[i])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (props) != "undefined") {_RecordType("<1023,1028,49>",(props)); Inst49++; } } catch(e) {}
  props[i];
}

