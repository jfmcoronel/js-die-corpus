var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//
// Test for-in enumerating properties on prototype of primitives
//
try { if (Inst0 <= 1000 && typeof (guard) != "undefined") {_RecordType("<447,452,8>",(guard)); Inst0++; } } catch(e) {}
function guard(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<453,454,8>",(f)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<486,487,11>",(e)); Inst3++; } } catch(e) {}
  try {
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<470,471,10>",(f)); Inst2++; } } catch(e) {}
    f();
  } catch (e) {
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<495,500,12>",(print)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<501,502,12>",(e)); Inst5++; } } catch(e) {}
    print(e);
  }
}

Object.prototype.object_value = "value on Object.prototype";
try { if (Inst6 <= 1000 && typeof (Object.prototype.object_value) != "undefined") {_RecordType("<512,541,16>",(Object.prototype.object_value)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<512,528,16>",(Object.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<512,518,16>",(Object)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<573,594,17>",(Object.defineProperty)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<573,579,17>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<595,611,17>",(Object.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<595,601,17>",(Object)); Inst12++; } } catch(e) {}
Object.defineProperty(Object.prototype, "object_getter", {
  get: function () {
    return "getter on Object.prototype: " + typeof this + " " + this;
  },
  enumerable: true,
  configurable: true
});
Number.prototype.number_proto = "Value on Number.prototype";
try { if (Inst13 <= 1000 && typeof (Number.prototype.number_proto) != "undefined") {_RecordType("<773,802,24>",(Number.prototype.number_proto)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<773,789,24>",(Number.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<773,779,24>",(Number)); Inst15++; } } catch(e) {}
Boolean.prototype.boolean_proto = "Value on Boolean.prototype";
try { if (Inst16 <= 1000 && typeof (Boolean.prototype.boolean_proto) != "undefined") {_RecordType("<834,865,25>",(Boolean.prototype.boolean_proto)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<834,851,25>",(Boolean.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<834,841,25>",(Boolean)); Inst18++; } } catch(e) {}
String.prototype.string_proto = "Value on String.prototype"; // Test on special values and primitives
try { if (Inst19 <= 1000 && typeof (String.prototype.string_proto) != "undefined") {_RecordType("<898,927,26>",(String.prototype.string_proto)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<898,914,26>",(String.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (String) != "undefined") {_RecordType("<898,904,26>",(String)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1020,1029,28>",(undefined)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1031,1041,28>",(Number.NaN)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1031,1037,28>",(Number)); Inst25++; } } catch(e) {}
var tests = [null, undefined, Number.NaN, 0.4, -0, 0, 1, "", true, false, // Special values around Int32/Int31 boundary
0x80000000, 0x7FFFFFFF, 0x40000000, 0x3FFFFFFF, -0x3FFFFFFF, -0x40000000, -0x40000001, -0x80000000, -0x80000001];
try { if (Inst22 <= 1000 && typeof (tests) != "undefined") {_RecordType("<1005,1010,28>",(tests)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (tests.forEach) != "undefined") {_RecordType("<1235,1248,30>",(tests.forEach)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (tests) != "undefined") {_RecordType("<1235,1240,30>",(tests)); Inst27++; } } catch(e) {}
tests.forEach(function (a) {
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<1259,1260,30>",(a)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<1266,1271,31>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<1286,1287,31>",(a)); Inst30++; } } catch(e) {}
  print("---- Test:", a, "----");
try { if (Inst31 <= 1000 && typeof (guard) != "undefined") {_RecordType("<1300,1305,32>",(guard)); Inst31++; } } catch(e) {}
  guard(function () {
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1324,1329,33>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a.object_value) != "undefined") {_RecordType("<1330,1344,33>",(a.object_value)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<1330,1331,33>",(a)); Inst34++; } } catch(e) {}
    print(a.object_value); // Get from prototype
  });
try { if (Inst35 <= 1000 && typeof (guard) != "undefined") {_RecordType("<1377,1382,35>",(guard)); Inst35++; } } catch(e) {}
  guard(function () {
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<1401,1406,36>",(print)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a.object_getter) != "undefined") {_RecordType("<1407,1422,36>",(a.object_getter)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<1407,1408,36>",(a)); Inst38++; } } catch(e) {}
    print(a.object_getter); // Getter on prototype
  });
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<1456,1461,38>",(print)); Inst39++; } } catch(e) {}
  print();

  for (var p in a) {
try { if (Inst40 <= 1000 && typeof (p) != "undefined") {_RecordType("<1477,1478,40>",(p)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<1482,1483,40>",(a)); Inst41++; } } catch(e) {}
    // Enumerate properties should walk prototype
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1541,1546,42>",(print)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (p) != "undefined") {_RecordType("<1552,1553,42>",(p)); Inst43++; } } catch(e) {}
    print(" ", p);
  }

try { if (Inst44 <= 1000 && typeof (print) != "undefined") {_RecordType("<1563,1568,45>",(print)); Inst44++; } } catch(e) {}
  print();
});

