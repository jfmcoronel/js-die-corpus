var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var i = 0;
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,5>",(i)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<388,389,7>",(f)); Inst1++; } } catch(e) {}
function f() {
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<396,401,8>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,8>",(i)); Inst3++; } } catch(e) {}
  print("condition, i = " + i);
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,9>",(i)); Inst4++; } } catch(e) {}
  return i < 10;
}

try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<446,451,12>",(print)); Inst5++; } } catch(e) {}
print("--- test 1 ---");

try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<563,564,22>",(f)); Inst6++; } } catch(e) {}
do {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<481,482,15>",(i)); Inst7++; } } catch(e) {}
  ++i;

try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<491,492,17>",(i)); Inst8++; } } catch(e) {}
  if (i > 5) {
    continue;
  }

try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<521,526,21>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<548,549,21>",(i)); Inst10++; } } catch(e) {}
  print("after continue: " + i++);
} while (f());

i = 0;
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<570,571,24>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<577,582,25>",(print)); Inst12++; } } catch(e) {}
print("--- test 2 ---");

try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<790,791,43>",(f)); Inst13++; } } catch(e) {}
do {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<618,619,28>",(i)); Inst14++; } } catch(e) {}
  switch (i++) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      continue;

    default:
try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<733,738,38>",(print)); Inst15++; } } catch(e) {}
      print("default");

    case 9:
      break;
  }
} while (f());

try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<797,802,45>",(print)); Inst16++; } } catch(e) {}
print("done");

