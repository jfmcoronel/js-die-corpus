var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var x = 6;
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,5>",(x)); Inst0++; } } catch(e) {}
var giraffe = 8;
try { if (Inst1 <= 1000 && typeof (giraffe) != "undefined") {_RecordType("<382,389,6>",(giraffe)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<407,408,7>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (giraffe) != "undefined") {_RecordType("<411,418,7>",(giraffe)); Inst4++; } } catch(e) {}
var zebra = x + giraffe;
try { if (Inst2 <= 1000 && typeof (zebra) != "undefined") {_RecordType("<399,404,7>",(zebra)); Inst2++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<430,431,9>",(f)); Inst5++; } } catch(e) {}
function f(t) {
try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<432,433,9>",(t)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (t) != "undefined") {_RecordType("<446,447,10>",(t)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (t) != "undefined") {_RecordType("<450,451,10>",(t)); Inst8++; } } catch(e) {}
  return t + t;
}

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<466,467,13>",(f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (zebra) != "undefined") {_RecordType("<468,473,13>",(zebra)); Inst11++; } } catch(e) {}
var cat = f(zebra);
try { if (Inst9 <= 1000 && typeof (cat) != "undefined") {_RecordType("<460,463,13>",(cat)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (cat) != "undefined") {_RecordType("<482,485,14>",(cat)); Inst13++; } } catch(e) {}
rat = cat * 2;
try { if (Inst12 <= 1000 && typeof (rat) != "undefined") {_RecordType("<476,479,14>",(rat)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (rat) != "undefined") {_RecordType("<540,543,19>",(rat)); Inst14++; } } catch(e) {}
do {
try { if (Inst16 <= 1000 && typeof (rat) != "undefined") {_RecordType("<505,508,17>",(rat)); Inst16++; } } catch(e) {}
  rat = rat - 3;
try { if (Inst15 <= 1000 && typeof (rat) != "undefined") {_RecordType("<499,502,17>",(rat)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (cat) != "undefined") {_RecordType("<522,525,18>",(cat)); Inst18++; } } catch(e) {}
  cat = cat + 4;
try { if (Inst17 <= 1000 && typeof (cat) != "undefined") {_RecordType("<516,519,18>",(cat)); Inst17++; } } catch(e) {}
} while (rat > 4);

try { if (Inst20 <= 1000 && typeof (rat) != "undefined") {_RecordType("<564,567,21>",(rat)); Inst20++; } } catch(e) {}
var dragon = rat / 2;
try { if (Inst19 <= 1000 && typeof (dragon) != "undefined") {_RecordType("<555,561,21>",(dragon)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<573,578,22>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<579,580,22>",(x)); Inst22++; } } catch(e) {}
print(x);
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<583,588,23>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (giraffe) != "undefined") {_RecordType("<589,596,23>",(giraffe)); Inst24++; } } catch(e) {}
print(giraffe);
try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<599,604,24>",(print)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (zebra) != "undefined") {_RecordType("<605,610,24>",(zebra)); Inst26++; } } catch(e) {}
print(zebra);
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<613,618,25>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (cat) != "undefined") {_RecordType("<619,622,25>",(cat)); Inst28++; } } catch(e) {}
print(cat);
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<625,630,26>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (rat) != "undefined") {_RecordType("<631,634,26>",(rat)); Inst30++; } } catch(e) {}
print(rat);
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<637,642,27>",(print)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (dragon) != "undefined") {_RecordType("<643,649,27>",(dragon)); Inst32++; } } catch(e) {}
print(dragon);

do {
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<660,665,30>",(print)); Inst33++; } } catch(e) {}
  print("Should print once - 0");
} while (0);

do {
try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<713,718,34>",(print)); Inst34++; } } catch(e) {}
  print("Should print once - false");
} while (false);

try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<767,768,37>",(a)); Inst35++; } } catch(e) {}
a: do {
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<777,782,38>",(print)); Inst36++; } } catch(e) {}
  print("Should print once - label");

  do {
try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<831,832,41>",(a)); Inst37++; } } catch(e) {}
    break a;
  } while (false);

try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<856,861,44>",(print)); Inst38++; } } catch(e) {}
  print("Should not print");
} while (false);

