var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<376,378,5>",(t1)); Inst0++; } } catch(e) {}
function t1() {
try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<394,398,6>",(test)); Inst1++; } } catch(e) {}
  function test(locale, options, left, right, expected) {
try { if (Inst2 <= 1000 && typeof (locale) != "undefined") {_RecordType("<399,405,6>",(locale)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (options) != "undefined") {_RecordType("<407,414,6>",(options)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (left) != "undefined") {_RecordType("<416,420,6>",(left)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (right) != "undefined") {_RecordType("<422,427,6>",(right)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (expected) != "undefined") {_RecordType("<429,437,6>",(expected)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (left) != "undefined") {_RecordType("<470,474,7>",(left)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (right) != "undefined") {_RecordType("<482,487,7>",(right)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<504,518,7>",(JSON.stringify)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<504,508,7>",(JSON)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (options) != "undefined") {_RecordType("<519,526,7>",(options)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (locale) != "undefined") {_RecordType("<542,548,7>",(locale)); Inst13++; } } catch(e) {}
    const msg = `Comparing ${left} and ${right} with options ${JSON.stringify(options)} and locale ${locale}`;
try { if (Inst7 <= 1000 && typeof (msg) != "undefined") {_RecordType("<451,454,7>",(msg)); Inst7++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<556,567,8>",(console.log)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (console) != "undefined") {_RecordType("<556,563,8>",(console)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (expected) != "undefined") {_RecordType("<568,576,8>",(expected)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (new Intl.Collator(locale, options).compare) != "undefined") {_RecordType("<578,620,8>",(new Intl.Collator(locale, options).compare)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<582,595,8>",(Intl.Collator)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<582,586,8>",(Intl)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (locale) != "undefined") {_RecordType("<596,602,8>",(locale)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (options) != "undefined") {_RecordType("<604,611,8>",(options)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (left) != "undefined") {_RecordType("<621,625,8>",(left)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (right) != "undefined") {_RecordType("<627,632,8>",(right)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (msg) != "undefined") {_RecordType("<638,641,8>",(msg)); Inst24++; } } catch(e) {}
    console.log(expected, new Intl.Collator(locale, options).compare(left, right), `${msg} using Intl.Collator`);
try { if (Inst25 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<670,681,9>",(console.log)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (console) != "undefined") {_RecordType("<670,677,9>",(console)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (expected) != "undefined") {_RecordType("<682,690,9>",(expected)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (left.localeCompare) != "undefined") {_RecordType("<692,710,9>",(left.localeCompare)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (left) != "undefined") {_RecordType("<692,696,9>",(left)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (right) != "undefined") {_RecordType("<711,716,9>",(right)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (locale) != "undefined") {_RecordType("<718,724,9>",(locale)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (options) != "undefined") {_RecordType("<726,733,9>",(options)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (msg) != "undefined") {_RecordType("<739,742,9>",(msg)); Inst33++; } } catch(e) {}
    console.log(expected, left.localeCompare(right, locale, options), `${msg} using String.prototype.localeCompare`);
  }

try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<791,795,12>",(test)); Inst34++; } } catch(e) {}
  test("en-US", {
    sensitivity: "base"
  }, "A", "a", 0);
try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<852,856,15>",(test)); Inst35++; } } catch(e) {}
  test("en-US", {
    sensitivity: "base"
  }, "A", "B", -1);
try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<914,918,18>",(test)); Inst36++; } } catch(e) {}
  test("en-US", {
    sensitivity: "base"
  }, "a", "\u00E2", 0);
try { if (Inst37 <= 1000 && typeof (test) != "undefined") {_RecordType("<980,984,21>",(test)); Inst37++; } } catch(e) {}
  test("en-US", {
    sensitivity: "accent"
  }, "A", "a", 0);
try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<1043,1047,24>",(test)); Inst38++; } } catch(e) {}
  test("en-US", {
    sensitivity: "accent"
  }, "A", "B", -1);
try { if (Inst39 <= 1000 && typeof (test) != "undefined") {_RecordType("<1107,1111,27>",(test)); Inst39++; } } catch(e) {}
  test("en-US", {
    sensitivity: "accent"
  }, "a", "\u00E2", -1);
try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<1176,1180,30>",(test)); Inst40++; } } catch(e) {}
  test("en-US", {
    sensitivity: "case"
  }, "A", "a", 1);
try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<1237,1241,33>",(test)); Inst41++; } } catch(e) {}
  test("en-US", {
    sensitivity: "case"
  }, "A", "B", -1);
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<1299,1303,36>",(test)); Inst42++; } } catch(e) {}
  test("en-US", {
    sensitivity: "case"
  }, "a", "\u00E2", 0);
try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<1365,1369,39>",(test)); Inst43++; } } catch(e) {}
  test("en-US", {
    sensitivity: "variant"
  }, "A", "a", 1);
try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<1429,1433,42>",(test)); Inst44++; } } catch(e) {}
  test("en-US", {
    sensitivity: "variant"
  }, "A", "B", -1);
try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<1494,1498,45>",(test)); Inst45++; } } catch(e) {}
  test("en-US", {
    sensitivity: "variant"
  }, "a", "\u00E2", -1);
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1564,1568,48>",(test)); Inst46++; } } catch(e) {}
  test("en-US", {
    ignorePunctuation: true
  }, ".a", "a", 0);
try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<1630,1634,51>",(test)); Inst47++; } } catch(e) {}
  test("en-US", {
    ignorePunctuation: false
  }, ".a", "a", -1);
try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<1698,1702,54>",(test)); Inst48++; } } catch(e) {}
  test("en-US", {
    numeric: true
  }, "10", "9", 1);
try { if (Inst49 <= 1000 && typeof (test) != "undefined") {_RecordType("<1754,1758,57>",(test)); Inst49++; } } catch(e) {}
  test("en-US", {
    numeric: false
  }, "10", "9", -1);
try { if (Inst50 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1812,1823,60>",(console.log)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (console) != "undefined") {_RecordType("<1812,1819,60>",(console)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Intl.Collator.supportedLocalesOf("de-DE")[0]) != "undefined") {_RecordType("<1833,1877,60>",(Intl.Collator.supportedLocalesOf("de-DE")[0])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Intl.Collator.supportedLocalesOf) != "undefined") {_RecordType("<1833,1865,60>",(Intl.Collator.supportedLocalesOf)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<1833,1846,60>",(Intl.Collator)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1833,1837,60>",(Intl)); Inst55++; } } catch(e) {}
  console.log("de-DE", Intl.Collator.supportedLocalesOf("de-DE")[0]);
try { if (Inst56 <= 1000 && typeof (test) != "undefined") {_RecordType("<1882,1886,61>",(test)); Inst56++; } } catch(e) {}
  test("de-DE-u-co-phonebk", {}, "\u00e4b", "ada", 1);
try { if (Inst57 <= 1000 && typeof (test) != "undefined") {_RecordType("<1937,1941,62>",(test)); Inst57++; } } catch(e) {}
  test("de-DE-u-co-phonebk", {}, "äb", "ada", 1);
try { if (Inst58 <= 1000 && typeof (test) != "undefined") {_RecordType("<1987,1991,63>",(test)); Inst58++; } } catch(e) {}
  test("de-DE", {}, "\u00e4b", "ada", -1);
try { if (Inst59 <= 1000 && typeof (test) != "undefined") {_RecordType("<2030,2034,64>",(test)); Inst59++; } } catch(e) {}
  test("de-DE", {}, "äb", "ada", -1);
try { if (Inst60 <= 1000 && typeof (test) != "undefined") {_RecordType("<2068,2072,65>",(test)); Inst60++; } } catch(e) {}
  test("de-DE", {
    numeric: true
  }, "21", "100", -1);
try { if (Inst61 <= 1000 && typeof (test) != "undefined") {_RecordType("<2127,2131,68>",(test)); Inst61++; } } catch(e) {}
  test("de-DE-u-kn-true", {}, "21", "100", -1);
try { if (Inst62 <= 1000 && typeof (test) != "undefined") {_RecordType("<2175,2179,69>",(test)); Inst62++; } } catch(e) {}
  test("de-DE", {
    numeric: false
  }, "21", "100", 1);
try { if (Inst63 <= 1000 && typeof (test) != "undefined") {_RecordType("<2234,2238,72>",(test)); Inst63++; } } catch(e) {}
  test("de-DE-u-kn-false", {}, "21", "100", 1);
try { if (Inst64 <= 1000 && typeof (test) != "undefined") {_RecordType("<2282,2286,73>",(test)); Inst64++; } } catch(e) {}
  test("de-DE-u-kn-true-co-phonebk", {}, "21", "100", -1);
try { if (Inst65 <= 1000 && typeof (test) != "undefined") {_RecordType("<2341,2345,74>",(test)); Inst65++; } } catch(e) {}
  test("de-DE-u-kn-true-co-phonebk", {}, "\u00e4b", "ada", 1);
try { if (Inst66 <= 1000 && typeof (test) != "undefined") {_RecordType("<2404,2408,75>",(test)); Inst66++; } } catch(e) {}
  test("de-DE-u-kn-false-co-phonebk", {}, "21", "100", 1);
try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<2463,2467,76>",(test)); Inst67++; } } catch(e) {}
  test("de-DE-u-kn-false-co-phonebk", {}, "\u00e4b", "ada", 1);
try { if (Inst68 <= 1000 && typeof (test) != "undefined") {_RecordType("<2527,2531,77>",(test)); Inst68++; } } catch(e) {}
  test("en-US", {
    ignorePunctuation: true
  }, "aa", "a!a", 0);
try { if (Inst69 <= 1000 && typeof (test) != "undefined") {_RecordType("<2595,2599,80>",(test)); Inst69++; } } catch(e) {}
  test("en-US", {
    ignorePunctuation: false
  }, "aa", "a!a", 1);
}

try { if (Inst70 <= 1000 && typeof (t1) != "undefined") {_RecordType("<2665,2667,85>",(t1)); Inst70++; } } catch(e) {}
t1();

try { if (Inst71 <= 1000 && typeof (t2) != "undefined") {_RecordType("<2681,2683,87>",(t2)); Inst71++; } } catch(e) {}
function t2() {
try { if (Inst72 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2690,2701,88>",(console.log)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (console) != "undefined") {_RecordType("<2690,2697,88>",(console)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Intl.Collator.supportedLocalesOf("es")[0]) != "undefined") {_RecordType("<2708,2749,88>",(Intl.Collator.supportedLocalesOf("es")[0])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Intl.Collator.supportedLocalesOf) != "undefined") {_RecordType("<2708,2740,88>",(Intl.Collator.supportedLocalesOf)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<2708,2721,88>",(Intl.Collator)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2708,2712,88>",(Intl)); Inst77++; } } catch(e) {}
  console.log("es", Intl.Collator.supportedLocalesOf("es")[0]);
try { if (Inst78 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2754,2765,89>",(console.log)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (console) != "undefined") {_RecordType("<2754,2761,89>",(console)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (new Intl.Collator("es", {
    collation: "trad"
  }).resolvedOptions().collation) != "undefined") {_RecordType("<2777,2857,89>",(new Intl.Collator("es", {
    collation: "trad"
  }).resolvedOptions().collation)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (new Intl.Collator("es", {
    collation: "trad"
  }).resolvedOptions) != "undefined") {_RecordType("<2777,2845,89>",(new Intl.Collator("es", {
    collation: "trad"
  }).resolvedOptions)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<2781,2794,89>",(Intl.Collator)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2781,2785,89>",(Intl)); Inst83++; } } catch(e) {}
  console.log("default", new Intl.Collator("es", {
    collation: "trad"
  }).resolvedOptions().collation);
try { if (Inst84 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2862,2873,92>",(console.log)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (console) != "undefined") {_RecordType("<2862,2869,92>",(console)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (new Intl.Collator("es-u-co-trad").resolvedOptions().collation) != "undefined") {_RecordType("<2882,2943,92>",(new Intl.Collator("es-u-co-trad").resolvedOptions().collation)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (new Intl.Collator("es-u-co-trad").resolvedOptions) != "undefined") {_RecordType("<2882,2931,92>",(new Intl.Collator("es-u-co-trad").resolvedOptions)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<2886,2899,92>",(Intl.Collator)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2886,2890,92>",(Intl)); Inst89++; } } catch(e) {}
  console.log("trad", new Intl.Collator("es-u-co-trad").resolvedOptions().collation);

try { if (Inst90 <= 1000 && typeof (test) != "undefined") {_RecordType("<2958,2962,94>",(test)); Inst90++; } } catch(e) {}
  function test(locale, options, expectedResolved) {
try { if (Inst91 <= 1000 && typeof (locale) != "undefined") {_RecordType("<2963,2969,94>",(locale)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (options) != "undefined") {_RecordType("<2971,2978,94>",(options)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (expectedResolved) != "undefined") {_RecordType("<2980,2996,94>",(expectedResolved)); Inst93++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<3021,3034,95>",(Intl.Collator)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3021,3025,95>",(Intl)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (locale) != "undefined") {_RecordType("<3035,3041,95>",(locale)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (options) != "undefined") {_RecordType("<3043,3050,95>",(options)); Inst98++; } } catch(e) {}
    const coll = new Intl.Collator(locale, options);
try { if (Inst94 <= 1000 && typeof (coll) != "undefined") {_RecordType("<3010,3014,95>",(coll)); Inst94++; } } catch(e) {}
try { if (Inst100 <= 1000 && typeof (coll.resolvedOptions) != "undefined") {_RecordType("<3074,3094,96>",(coll.resolvedOptions)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (coll) != "undefined") {_RecordType("<3074,3078,96>",(coll)); Inst101++; } } catch(e) {}
    const resolved = coll.resolvedOptions();
try { if (Inst99 <= 1000 && typeof (resolved) != "undefined") {_RecordType("<3063,3071,96>",(resolved)); Inst99++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (expectedResolved) != "undefined") {_RecordType("<3119,3135,97>",(expectedResolved)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (options) != "undefined") {_RecordType("<3139,3146,97>",(options)); Inst104++; } } catch(e) {}
    const expected = expectedResolved || options;
try { if (Inst102 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3108,3116,97>",(expected)); Inst102++; } } catch(e) {}

    for (const prop of Object.getOwnPropertyNames(expected)) {
try { if (Inst105 <= 1000 && typeof (prop) != "undefined") {_RecordType("<3164,3168,99>",(prop)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<3172,3198,99>",(Object.getOwnPropertyNames)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3172,3178,99>",(Object)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3199,3207,99>",(expected)); Inst108++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<3218,3229,100>",(console.log)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (console) != "undefined") {_RecordType("<3218,3225,100>",(console)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (expected[prop]) != "undefined") {_RecordType("<3230,3244,100>",(expected[prop])); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3230,3238,100>",(expected)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (resolved[prop]) != "undefined") {_RecordType("<3246,3260,100>",(resolved[prop])); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (resolved) != "undefined") {_RecordType("<3246,3254,100>",(resolved)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (prop) != "undefined") {_RecordType("<3289,3293,100>",(prop)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (locale) != "undefined") {_RecordType("<3309,3315,100>",(locale)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<3331,3345,100>",(JSON.stringify)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<3331,3335,100>",(JSON)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (options) != "undefined") {_RecordType("<3346,3353,100>",(options)); Inst119++; } } catch(e) {}
      console.log(expected[prop], resolved[prop], `Testing option property ${prop} with locale ${locale} and options ${JSON.stringify(options)}`);
    }
  }

try { if (Inst120 <= 1000 && typeof (test) != "undefined") {_RecordType("<3372,3376,104>",(test)); Inst120++; } } catch(e) {}
  test("en-US", {
    sensitivity: "variant"
  });
try { if (Inst121 <= 1000 && typeof (test) != "undefined") {_RecordType("<3423,3427,107>",(test)); Inst121++; } } catch(e) {}
  test("en-US", {
    sensitivity: "case"
  });
try { if (Inst122 <= 1000 && typeof (test) != "undefined") {_RecordType("<3471,3475,110>",(test)); Inst122++; } } catch(e) {}
  test("en-US", {
    sensitivity: "accent"
  });
try { if (Inst123 <= 1000 && typeof (test) != "undefined") {_RecordType("<3521,3525,113>",(test)); Inst123++; } } catch(e) {}
  test("en-US", {
    sensitivity: "base"
  });
try { if (Inst124 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<3569,3580,116>",(console.log)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (console) != "undefined") {_RecordType("<3569,3576,116>",(console)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Intl.Collator.supportedLocalesOf("de-DE")[0]) != "undefined") {_RecordType("<3590,3634,116>",(Intl.Collator.supportedLocalesOf("de-DE")[0])); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Intl.Collator.supportedLocalesOf) != "undefined") {_RecordType("<3590,3622,116>",(Intl.Collator.supportedLocalesOf)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<3590,3603,116>",(Intl.Collator)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3590,3594,116>",(Intl)); Inst129++; } } catch(e) {}
  console.log("de-DE", Intl.Collator.supportedLocalesOf("de-DE")[0]); // collation can not be passed via options object

try { if (Inst130 <= 1000 && typeof (test) != "undefined") {_RecordType("<3690,3694,118>",(test)); Inst130++; } } catch(e) {}
  test("de-DE", {
    collation: "phonebk"
  }, {
    collation: "default"
  });
try { if (Inst131 <= 1000 && typeof (test) != "undefined") {_RecordType("<3771,3775,123>",(test)); Inst131++; } } catch(e) {}
  test("de-DE-u-co-phonebk", {
    collation: "phonebk"
  }); // Defaults

try { if (Inst132 <= 1000 && typeof (test) != "undefined") {_RecordType("<3846,3850,127>",(test)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3860,3869,127>",(undefined)); Inst133++; } } catch(e) {}
  test("de-DE", undefined, {
    numeric: false,
    caseFirst: "false",
    collation: "default",
    sensitivity: "variant",
    ignorePunctuation: false
  }); // numeric option

try { if (Inst134 <= 1000 && typeof (test) != "undefined") {_RecordType("<4027,4031,135>",(test)); Inst134++; } } catch(e) {}
  test("de-DE", {
    numeric: false
  });
try { if (Inst135 <= 1000 && typeof (test) != "undefined") {_RecordType("<4070,4074,138>",(test)); Inst135++; } } catch(e) {}
  test("de-DE", {
    numeric: true
  });
try { if (Inst136 <= 1000 && typeof (test) != "undefined") {_RecordType("<4112,4116,141>",(test)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4136,4145,141>",(undefined)); Inst137++; } } catch(e) {}
  test("de-DE-u-kn-true", undefined, {
    numeric: true
  });
try { if (Inst138 <= 1000 && typeof (test) != "undefined") {_RecordType("<4175,4179,144>",(test)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4200,4209,144>",(undefined)); Inst139++; } } catch(e) {}
  test("de-DE-u-kn-false", undefined, {
    numeric: false
  }); // options object takes precedence

try { if (Inst140 <= 1000 && typeof (test) != "undefined") {_RecordType("<4276,4280,148>",(test)); Inst140++; } } catch(e) {}
  test("de-DE-u-kn-true", {
    numeric: false
  });
try { if (Inst141 <= 1000 && typeof (test) != "undefined") {_RecordType("<4329,4333,151>",(test)); Inst141++; } } catch(e) {}
  test("de-DE-u-kn-false", {
    numeric: true
  }); // caseFirst option

try { if (Inst142 <= 1000 && typeof (test) != "undefined") {_RecordType("<4403,4407,155>",(test)); Inst142++; } } catch(e) {}
  test("de-DE", {
    caseFirst: "upper"
  });
try { if (Inst143 <= 1000 && typeof (test) != "undefined") {_RecordType("<4450,4454,158>",(test)); Inst143++; } } catch(e) {}
  test("de-DE", {
    caseFirst: "lower"
  });
try { if (Inst144 <= 1000 && typeof (test) != "undefined") {_RecordType("<4497,4501,161>",(test)); Inst144++; } } catch(e) {}
  test("de-DE", {
    caseFirst: "false"
  });
try { if (Inst145 <= 1000 && typeof (test) != "undefined") {_RecordType("<4544,4548,164>",(test)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4569,4578,164>",(undefined)); Inst146++; } } catch(e) {}
  test("de-DE-u-kf-upper", undefined, {
    caseFirst: "upper"
  });
try { if (Inst147 <= 1000 && typeof (test) != "undefined") {_RecordType("<4613,4617,167>",(test)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4638,4647,167>",(undefined)); Inst148++; } } catch(e) {}
  test("de-DE-u-kf-lower", undefined, {
    caseFirst: "lower"
  });
try { if (Inst149 <= 1000 && typeof (test) != "undefined") {_RecordType("<4682,4686,170>",(test)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4707,4716,170>",(undefined)); Inst150++; } } catch(e) {}
  test("de-DE-u-kf-false", undefined, {
    caseFirst: "false"
  }); // options object takes precedence

try { if (Inst151 <= 1000 && typeof (test) != "undefined") {_RecordType("<4787,4791,174>",(test)); Inst151++; } } catch(e) {}
  test("de-DE-u-kf-upper", {
    caseFirst: "lower"
  });
try { if (Inst152 <= 1000 && typeof (test) != "undefined") {_RecordType("<4845,4849,177>",(test)); Inst152++; } } catch(e) {}
  test("de-DE-u-kf-false", {
    caseFirst: "upper"
  }); // mixing unicode extensions and options object

try { if (Inst153 <= 1000 && typeof (test) != "undefined") {_RecordType("<4952,4956,181>",(test)); Inst153++; } } catch(e) {}
  test("de-DE-u-co-phonebk", {
    numeric: false
  }, {
    numeric: false,
    collation: "phonebk"
  });
try { if (Inst154 <= 1000 && typeof (test) != "undefined") {_RecordType("<5060,5064,187>",(test)); Inst154++; } } catch(e) {}
  test("de-DE-u-co-phonebk-kn-true", {
    numeric: false,
    caseFirst: "upper",
    ignorePunctuation: true
  }, {
    numeric: false,
    caseFirst: "upper",
    ignorePunctuation: true,
    collation: "phonebk"
  });
}

try { if (Inst155 <= 1000 && typeof (t2) != "undefined") {_RecordType("<5283,5285,199>",(t2)); Inst155++; } } catch(e) {}
t2();

try { if (Inst156 <= 1000 && typeof (t3) != "undefined") {_RecordType("<5299,5301,201>",(t3)); Inst156++; } } catch(e) {}
function t3() {
try { if (Inst157 <= 1000 && typeof (test) != "undefined") {_RecordType("<5317,5321,202>",(test)); Inst157++; } } catch(e) {}
  function test(locale, options) {
try { if (Inst158 <= 1000 && typeof (locale) != "undefined") {_RecordType("<5322,5328,202>",(locale)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (options) != "undefined") {_RecordType("<5330,5337,202>",(options)); Inst159++; } } catch(e) {}
try { if (Inst164 <= 1000 && typeof (e) != "undefined") {_RecordType("<5406,5407,205>",(e)); Inst164++; } } catch(e) {}
    try {
try { if (Inst160 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<5361,5374,204>",(Intl.Collator)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<5361,5365,204>",(Intl)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (locale) != "undefined") {_RecordType("<5375,5381,204>",(locale)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (options) != "undefined") {_RecordType("<5383,5390,204>",(options)); Inst163++; } } catch(e) {}
      new Intl.Collator(locale, options);
    } catch (e) {
      ;
    }

try { if (Inst168 <= 1000 && typeof (e) != "undefined") {_RecordType("<5496,5497,211>",(e)); Inst168++; } } catch(e) {}
    try {
try { if (Inst165 <= 1000 && typeof ("a".localeCompare) != "undefined") {_RecordType("<5442,5459,210>",("a".localeCompare)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (locale) != "undefined") {_RecordType("<5465,5471,210>",(locale)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (options) != "undefined") {_RecordType("<5473,5480,210>",(options)); Inst167++; } } catch(e) {}
      "a".localeCompare("b", locale, options);
    } catch (e) {
      ;
    }
  }

try { if (Inst169 <= 1000 && typeof (test) != "undefined") {_RecordType("<5522,5526,216>",(test)); Inst169++; } } catch(e) {}
  test("en-US", {
    usage: "invalid"
  });
try { if (Inst170 <= 1000 && typeof (test) != "undefined") {_RecordType("<5567,5571,219>",(test)); Inst170++; } } catch(e) {}
  test("en-US", {
    localeMatcher: "invalid"
  });
try { if (Inst171 <= 1000 && typeof (test) != "undefined") {_RecordType("<5620,5624,222>",(test)); Inst171++; } } catch(e) {}
  test("en-US", {
    caseFirst: "invalid"
  });
try { if (Inst172 <= 1000 && typeof (test) != "undefined") {_RecordType("<5669,5673,225>",(test)); Inst172++; } } catch(e) {}
  test("en-US", {
    sensitivity: "invalid"
  });
}

try { if (Inst173 <= 1000 && typeof (t3) != "undefined") {_RecordType("<5721,5723,230>",(t3)); Inst173++; } } catch(e) {}
t3();

try { if (Inst174 <= 1000 && typeof (t4) != "undefined") {_RecordType("<5737,5739,232>",(t4)); Inst174++; } } catch(e) {}
function t4() {
  // this test is adapted from test262's `canonically-equivalent-strings` test
try { if (Inst176 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<5846,5859,234>",(Intl.Collator)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<5846,5850,234>",(Intl)); Inst177++; } } catch(e) {}
  const collator = new Intl.Collator();
try { if (Inst175 <= 1000 && typeof (collator) != "undefined") {_RecordType("<5831,5839,234>",(collator)); Inst175++; } } catch(e) {}
  const pairs = [// example from Unicode 5.0, section 3.7, definition D70
  ["o\u0308", "ö"], // examples from Unicode 5.0, chapter 3.11
  ["ä\u0323", "a\u0323\u0308"], ["a\u0308\u0323", "a\u0323\u0308"], ["ạ\u0308", "a\u0323\u0308"], ["ä\u0306", "a\u0308\u0306"], ["ă\u0308", "a\u0306\u0308"], // example from Unicode 5.0, chapter 3.12
  ["\u1111\u1171\u11B6", "퓛"], // examples from UTS 10, Unicode Collation Algorithm
  ["Å", "Å"], ["Å", "A\u030A"], ["x\u031B\u0323", "x\u0323\u031B"], ["ự", "ụ\u031B"], ["ự", "u\u031B\u0323"], ["ự", "ư\u0323"], ["ự", "u\u0323\u031B"], // examples from UAX 15, Unicode Normalization Forms
  ["Ç", "C\u0327"], ["q\u0307\u0323", "q\u0323\u0307"], ["가", "\u1100\u1161"], ["Å", "A\u030A"], ["Ω", "Ω"], ["Å", "A\u030A"], ["ô", "o\u0302"], ["ṩ", "s\u0323\u0307"], ["ḋ\u0323", "d\u0323\u0307"], ["ḋ\u0323", "ḍ\u0307"], ["q\u0307\u0323", "q\u0323\u0307"], // examples involving supplementary characters from UCD NormalizationTest.txt
  ["\uD834\uDD5E", "\uD834\uDD57\uD834\uDD65"], ["\uD87E\uDC2B", "北"]];
try { if (Inst178 <= 1000 && typeof (pairs) != "undefined") {_RecordType("<5871,5876,235>",(pairs)); Inst178++; } } catch(e) {}

try { if (Inst179 <= 1000 && typeof (test) != "undefined") {_RecordType("<6910,6914,243>",(test)); Inst179++; } } catch(e) {}
  function test(left, right) {
try { if (Inst180 <= 1000 && typeof (left) != "undefined") {_RecordType("<6915,6919,243>",(left)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (right) != "undefined") {_RecordType("<6921,6926,243>",(right)); Inst181++; } } catch(e) {}
try { if (Inst182 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<6934,6945,244>",(console.log)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (console) != "undefined") {_RecordType("<6934,6941,244>",(console)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (collator.compare) != "undefined") {_RecordType("<6949,6965,244>",(collator.compare)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (collator) != "undefined") {_RecordType("<6949,6957,244>",(collator)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (left) != "undefined") {_RecordType("<6966,6970,244>",(left)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (right) != "undefined") {_RecordType("<6972,6977,244>",(right)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (left) != "undefined") {_RecordType("<6983,6987,244>",(left)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (right) != "undefined") {_RecordType("<6995,7000,244>",(right)); Inst189++; } } catch(e) {}
    console.log(0, collator.compare(left, right), `${left} and ${right} were not equal using Intl.Collator`);
try { if (Inst190 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<7044,7055,245>",(console.log)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (console) != "undefined") {_RecordType("<7044,7051,245>",(console)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (left.localeCompare) != "undefined") {_RecordType("<7059,7077,245>",(left.localeCompare)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (left) != "undefined") {_RecordType("<7059,7063,245>",(left)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (right) != "undefined") {_RecordType("<7078,7083,245>",(right)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (left) != "undefined") {_RecordType("<7089,7093,245>",(left)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (right) != "undefined") {_RecordType("<7101,7106,245>",(right)); Inst196++; } } catch(e) {}
    console.log(0, left.localeCompare(right), `${left} and ${right} were not equal using String.prototype.localeCompare`);
  }

try { if (Inst197 <= 1000 && typeof (pairs.forEach) != "undefined") {_RecordType("<7170,7183,248>",(pairs.forEach)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (pairs) != "undefined") {_RecordType("<7170,7175,248>",(pairs)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (pair) != "undefined") {_RecordType("<7184,7188,248>",(pair)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (test) != "undefined") {_RecordType("<7192,7196,248>",(test)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (pair[0]) != "undefined") {_RecordType("<7197,7204,248>",(pair[0])); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (pair) != "undefined") {_RecordType("<7197,7201,248>",(pair)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (pair[1]) != "undefined") {_RecordType("<7206,7213,248>",(pair[1])); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (pair) != "undefined") {_RecordType("<7206,7210,248>",(pair)); Inst204++; } } catch(e) {}
  pairs.forEach(pair => test(pair[0], pair[1]));
}

try { if (Inst205 <= 1000 && typeof (t4) != "undefined") {_RecordType("<7220,7222,251>",(t4)); Inst205++; } } catch(e) {}
t4();

try { if (Inst206 <= 1000 && typeof (t5) != "undefined") {_RecordType("<7236,7238,253>",(t5)); Inst206++; } } catch(e) {}
function t5() {
try { if (Inst208 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<7285,7294,254>",(undefined)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (toString) != "undefined") {_RecordType("<7302,7310,255>",(toString)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (ToStringTag) != "undefined") {_RecordType("<7378,7389,259>",(ToStringTag)); Inst210++; } } catch(e) {}
  const cases = [0, 1, true, false, null, undefined, {
    toString() {
      return "hello!";
    }

  }, [1, 2, 3, 4], {}, new class ToStringTag {
    get [Symbol.toStringTag]() {
      return "MyClass";
    }

  }()];
try { if (Inst207 <= 1000 && typeof (cases) != "undefined") {_RecordType("<7251,7256,254>",(cases)); Inst207++; } } catch(e) {}
try { if (Inst212 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<7483,7496,265>",(Intl.Collator)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<7483,7487,265>",(Intl)); Inst213++; } } catch(e) {}
  const coll = new Intl.Collator();
try { if (Inst211 <= 1000 && typeof (coll) != "undefined") {_RecordType("<7472,7476,265>",(coll)); Inst211++; } } catch(e) {}
try { if (Inst214 <= 1000 && typeof (cases.forEach) != "undefined") {_RecordType("<7502,7515,266>",(cases.forEach)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (cases) != "undefined") {_RecordType("<7502,7507,266>",(cases)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (test) != "undefined") {_RecordType("<7516,7520,266>",(test)); Inst216++; } } catch(e) {}
  cases.forEach(test => {
try { if (Inst217 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<7530,7541,267>",(console.log)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (console) != "undefined") {_RecordType("<7530,7537,267>",(console)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (("" + test).localeCompare) != "undefined") {_RecordType("<7545,7570,267>",(("" + test).localeCompare)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (test) != "undefined") {_RecordType("<7551,7555,267>",(test)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (test) != "undefined") {_RecordType("<7571,7575,267>",(test)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (test) != "undefined") {_RecordType("<7581,7585,267>",(test)); Inst222++; } } catch(e) {}
    console.log(0, ("" + test).localeCompare(test), `${test} did not compare equal to itself using String.prototype.localeCompare`);
try { if (Inst223 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<7663,7674,268>",(console.log)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (console) != "undefined") {_RecordType("<7663,7670,268>",(console)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (coll.compare) != "undefined") {_RecordType("<7678,7690,268>",(coll.compare)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (coll) != "undefined") {_RecordType("<7678,7682,268>",(coll)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (test) != "undefined") {_RecordType("<7696,7700,268>",(test)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (test) != "undefined") {_RecordType("<7702,7706,268>",(test)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (test) != "undefined") {_RecordType("<7712,7716,268>",(test)); Inst229++; } } catch(e) {}
    console.log(0, coll.compare("" + test, test), `${test} did not compare equal to itself using Collator.prototype.compare`);
  });
}

try { if (Inst230 <= 1000 && typeof (t5) != "undefined") {_RecordType("<7795,7797,272>",(t5)); Inst230++; } } catch(e) {}
t5();

try { if (Inst231 <= 1000 && typeof (t6) != "undefined") {_RecordType("<7811,7813,274>",(t6)); Inst231++; } } catch(e) {}
function t6() {
try { if (Inst232 <= 1000 && typeof (test) != "undefined") {_RecordType("<7829,7833,275>",(test)); Inst232++; } } catch(e) {}
  function test(locale, usage, expectedLocale, expectedUsage, expectedCollation, expectedArray) {
try { if (Inst233 <= 1000 && typeof (locale) != "undefined") {_RecordType("<7834,7840,275>",(locale)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (usage) != "undefined") {_RecordType("<7842,7847,275>",(usage)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (expectedLocale) != "undefined") {_RecordType("<7849,7863,275>",(expectedLocale)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (expectedUsage) != "undefined") {_RecordType("<7865,7878,275>",(expectedUsage)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (expectedCollation) != "undefined") {_RecordType("<7880,7897,275>",(expectedCollation)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (expectedArray) != "undefined") {_RecordType("<7899,7912,275>",(expectedArray)); Inst238++; } } catch(e) {}
    const input = ["AE", "A", "B", "Ä"];
try { if (Inst239 <= 1000 && typeof (input) != "undefined") {_RecordType("<7926,7931,276>",(input)); Inst239++; } } catch(e) {}
try { if (Inst241 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<7982,7995,277>",(Intl.Collator)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<7982,7986,277>",(Intl)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (locale) != "undefined") {_RecordType("<7996,8002,277>",(locale)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (usage) != "undefined") {_RecordType("<8012,8017,278>",(usage)); Inst244++; } } catch(e) {}
    const collator = new Intl.Collator(locale, {
      usage
    });
try { if (Inst240 <= 1000 && typeof (collator) != "undefined") {_RecordType("<7967,7975,277>",(collator)); Inst240++; } } catch(e) {}
try { if (Inst245 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8030,8041,280>",(console.log)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (console) != "undefined") {_RecordType("<8030,8037,280>",(console)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (expectedLocale) != "undefined") {_RecordType("<8042,8056,280>",(expectedLocale)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (collator.resolvedOptions().locale) != "undefined") {_RecordType("<8058,8091,280>",(collator.resolvedOptions().locale)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (collator.resolvedOptions) != "undefined") {_RecordType("<8058,8082,280>",(collator.resolvedOptions)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (collator) != "undefined") {_RecordType("<8058,8066,280>",(collator)); Inst250++; } } catch(e) {}
    console.log(expectedLocale, collator.resolvedOptions().locale);
try { if (Inst251 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8098,8109,281>",(console.log)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (console) != "undefined") {_RecordType("<8098,8105,281>",(console)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (expectedUsage) != "undefined") {_RecordType("<8110,8123,281>",(expectedUsage)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (collator.resolvedOptions().usage) != "undefined") {_RecordType("<8125,8157,281>",(collator.resolvedOptions().usage)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (collator.resolvedOptions) != "undefined") {_RecordType("<8125,8149,281>",(collator.resolvedOptions)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (collator) != "undefined") {_RecordType("<8125,8133,281>",(collator)); Inst256++; } } catch(e) {}
    console.log(expectedUsage, collator.resolvedOptions().usage);
try { if (Inst257 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8164,8175,282>",(console.log)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (console) != "undefined") {_RecordType("<8164,8171,282>",(console)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (expectedCollation) != "undefined") {_RecordType("<8176,8193,282>",(expectedCollation)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (collator.resolvedOptions().collation) != "undefined") {_RecordType("<8195,8231,282>",(collator.resolvedOptions().collation)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (collator.resolvedOptions) != "undefined") {_RecordType("<8195,8219,282>",(collator.resolvedOptions)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (collator) != "undefined") {_RecordType("<8195,8203,282>",(collator)); Inst262++; } } catch(e) {}
    console.log(expectedCollation, collator.resolvedOptions().collation);
try { if (Inst263 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8238,8249,283>",(console.log)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (console) != "undefined") {_RecordType("<8238,8245,283>",(console)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (expectedArray) != "undefined") {_RecordType("<8250,8263,283>",(expectedArray)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (input.sort(collator.compare).join) != "undefined") {_RecordType("<8265,8298,283>",(input.sort(collator.compare).join)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (input.sort) != "undefined") {_RecordType("<8265,8275,283>",(input.sort)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (input) != "undefined") {_RecordType("<8265,8270,283>",(input)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (collator.compare) != "undefined") {_RecordType("<8276,8292,283>",(collator.compare)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (collator) != "undefined") {_RecordType("<8276,8284,283>",(collator)); Inst270++; } } catch(e) {}
    console.log(expectedArray, input.sort(collator.compare).join(","));
  }

try { if (Inst271 <= 1000 && typeof (test) != "undefined") {_RecordType("<8313,8317,286>",(test)); Inst271++; } } catch(e) {}
  test("de", "sort", "de", "sort", "default", "A,Ä,AE,B");
try { if (Inst272 <= 1000 && typeof (test) != "undefined") {_RecordType("<8372,8376,287>",(test)); Inst272++; } } catch(e) {}
  test("de", "search", "de", "search", "default", "A,AE,Ä,B");
try { if (Inst273 <= 1000 && typeof (test) != "undefined") {_RecordType("<8435,8439,288>",(test)); Inst273++; } } catch(e) {}
  test("de-u-co-phonebk", "sort", "de-u-co-phonebk", "sort", "phonebk", "A,AE,Ä,B");
try { if (Inst274 <= 1000 && typeof (test) != "undefined") {_RecordType("<8520,8524,289>",(test)); Inst274++; } } catch(e) {}
  test("de-u-co-phonebk", "search", "de", "search", "default", "A,AE,Ä,B");
}

try { if (Inst275 <= 1000 && typeof (t6) != "undefined") {_RecordType("<8597,8599,292>",(t6)); Inst275++; } } catch(e) {}
t6();

