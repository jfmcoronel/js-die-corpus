var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (testBuiltInFunction) != "undefined") {_RecordType("<376,395,5>",(testBuiltInFunction)); Inst0++; } } catch(e) {}
function testBuiltInFunction(options, builtInConstructor, builtInName, builtInFunc, intlConstructor, intlFunc, args) {
try { if (Inst1 <= 1000 && typeof (options) != "undefined") {_RecordType("<396,403,5>",(options)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (builtInConstructor) != "undefined") {_RecordType("<405,423,5>",(builtInConstructor)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (builtInName) != "undefined") {_RecordType("<425,436,5>",(builtInName)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (builtInFunc) != "undefined") {_RecordType("<438,449,5>",(builtInFunc)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (intlConstructor) != "undefined") {_RecordType("<451,466,5>",(intlConstructor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (intlFunc) != "undefined") {_RecordType("<468,476,5>",(intlFunc)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (args) != "undefined") {_RecordType("<478,482,5>",(args)); Inst7++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1053,1055,13>",(ex)); Inst52++; } } catch(e) {}
  try {
try { if (Inst9 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<517,528,7>",(args.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<517,521,7>",(args)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (new builtInConstructor(args[0])[builtInFunc]) != "undefined") {_RecordType("<537,581,7>",(new builtInConstructor(args[0])[builtInFunc])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (builtInConstructor) != "undefined") {_RecordType("<541,559,7>",(builtInConstructor)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<560,567,7>",(args[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (args) != "undefined") {_RecordType("<560,564,7>",(args)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (options) != "undefined") {_RecordType("<591,598,7>",(options)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (new builtInConstructor(args[0])[builtInFunc]) != "undefined") {_RecordType("<602,646,7>",(new builtInConstructor(args[0])[builtInFunc])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (builtInConstructor) != "undefined") {_RecordType("<606,624,7>",(builtInConstructor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<625,632,7>",(args[0])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<625,629,7>",(args)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (args[1]) != "undefined") {_RecordType("<647,654,7>",(args[1])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (args) != "undefined") {_RecordType("<647,651,7>",(args)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (options) != "undefined") {_RecordType("<665,672,7>",(options)); Inst22++; } } catch(e) {}
    var builtInValue = args.length === 1 ? new builtInConstructor(args[0])[builtInFunc]("en-US", options) : new builtInConstructor(args[0])[builtInFunc](args[1], "en-US", options);
try { if (Inst8 <= 1000 && typeof (builtInValue) != "undefined") {_RecordType("<502,514,7>",(builtInValue)); Inst8++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (new Intl[intlConstructor]("en-US", options)[intlFunc]) != "undefined") {_RecordType("<695,748,8>",(new Intl[intlConstructor]("en-US", options)[intlFunc])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Intl[intlConstructor]) != "undefined") {_RecordType("<699,720,8>",(Intl[intlConstructor])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<699,703,8>",(Intl)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (options) != "undefined") {_RecordType("<730,737,8>",(options)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<749,756,8>",(args[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (args) != "undefined") {_RecordType("<749,753,8>",(args)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (args[1]) != "undefined") {_RecordType("<758,765,8>",(args[1])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (args) != "undefined") {_RecordType("<758,762,8>",(args)); Inst31++; } } catch(e) {}
    var intlValue = new Intl[intlConstructor]("en-US", options)[intlFunc](args[0], args[1]);
try { if (Inst23 <= 1000 && typeof (intlValue) != "undefined") {_RecordType("<683,692,8>",(intlValue)); Inst23++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (builtInValue) != "undefined") {_RecordType("<777,789,10>",(builtInValue)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (intlValue) != "undefined") {_RecordType("<794,803,10>",(intlValue)); Inst33++; } } catch(e) {}
    if (builtInValue !== intlValue) {
try { if (Inst34 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<813,824,11>",(console.log)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (console) != "undefined") {_RecordType("<813,820,11>",(console)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (builtInConstructor.name) != "undefined") {_RecordType("<839,862,11>",(builtInConstructor.name)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (builtInConstructor) != "undefined") {_RecordType("<839,857,11>",(builtInConstructor)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<866,873,11>",(args[0])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (args) != "undefined") {_RecordType("<866,870,11>",(args)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (builtInFunc) != "undefined") {_RecordType("<878,889,11>",(builtInFunc)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (builtInValue) != "undefined") {_RecordType("<898,910,11>",(builtInValue)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (intlConstructor) != "undefined") {_RecordType("<927,942,11>",(intlConstructor)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<955,969,11>",(JSON.stringify)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<955,959,11>",(JSON)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (options) != "undefined") {_RecordType("<970,977,11>",(options)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (intlFunc) != "undefined") {_RecordType("<983,991,11>",(intlFunc)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<995,1002,11>",(args[0])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (args) != "undefined") {_RecordType("<995,999,11>",(args)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (args[1]) != "undefined") {_RecordType("<1007,1014,11>",(args[1])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (args) != "undefined") {_RecordType("<1007,1011,11>",(args)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (intlValue) != "undefined") {_RecordType("<1022,1031,11>",(intlValue)); Inst51++; } } catch(e) {}
      console.log(`ERROR: new ${builtInConstructor.name}(${args[0]}).${builtInFunc}() -> ${builtInValue} !== new Intl.${intlConstructor}("en-US", ${JSON.stringify(options)}).${intlFunc}(${args[0]}, ${args[1]}) -> ${intlValue}`);
    }
  } catch (ex) {
try { if (Inst53 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1063,1074,14>",(console.log)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (console) != "undefined") {_RecordType("<1063,1070,14>",(console)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof ([...arguments].join) != "undefined") {_RecordType("<1105,1124,14>",([...arguments].join)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1109,1118,14>",(arguments)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (ex.message) != "undefined") {_RecordType("<1148,1158,14>",(ex.message)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1148,1150,14>",(ex)); Inst58++; } } catch(e) {}
    console.log(`Error: testBuiltInFunction(${[...arguments].join(",")}) threw message ${ex.message}`);
  }
}

try { if (Inst59 <= 1000 && typeof (testBuiltInFunction) != "undefined") {_RecordType("<1170,1189,18>",(testBuiltInFunction)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1222,1228,20>",(Number)); Inst60++; } } catch(e) {}
testBuiltInFunction({
  minimumFractionDigits: 3
}, Number, "Number", "toLocaleString", "NumberFormat", "format", [5]);
try { if (Inst61 <= 1000 && typeof (testBuiltInFunction) != "undefined") {_RecordType("<1290,1309,21>",(testBuiltInFunction)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (String) != "undefined") {_RecordType("<1337,1343,23>",(String)); Inst62++; } } catch(e) {}
testBuiltInFunction({
  sensitivity: "base"
}, String, "String", "localeCompare", "Collator", "compare", ["A", "a"]);
try { if (Inst63 <= 1000 && typeof (testBuiltInFunction) != "undefined") {_RecordType("<1408,1427,24>",(testBuiltInFunction)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1470,1474,27>",(Date)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1535,1539,27>",(Date)); Inst65++; } } catch(e) {}
testBuiltInFunction({
  hour: "numeric",
  timeZone: "UTC"
}, Date, "Date", "toLocaleString", "DateTimeFormat", "format", [new Date(2000, 1, 1)]);
try { if (Inst66 <= 1000 && typeof (testBuiltInFunction) != "undefined") {_RecordType("<1555,1574,28>",(testBuiltInFunction)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1617,1621,31>",(Date)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1686,1690,31>",(Date)); Inst68++; } } catch(e) {}
testBuiltInFunction({
  hour: "numeric",
  timeZone: "UTC"
}, Date, "Date", "toLocaleTimeString", "DateTimeFormat", "format", [new Date(2000, 1, 1)]);
try { if (Inst69 <= 1000 && typeof (testBuiltInFunction) != "undefined") {_RecordType("<1706,1725,32>",(testBuiltInFunction)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1769,1773,35>",(Date)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1838,1842,35>",(Date)); Inst71++; } } catch(e) {}
testBuiltInFunction({
  month: "numeric",
  timeZone: "UTC"
}, Date, "Date", "toLocaleDateString", "DateTimeFormat", "format", [new Date(2000, 1, 1)]);
try { if (Inst72 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1858,1869,36>",(console.log)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (console) != "undefined") {_RecordType("<1858,1865,36>",(console)); Inst73++; } } catch(e) {}
console.log("Pass");

