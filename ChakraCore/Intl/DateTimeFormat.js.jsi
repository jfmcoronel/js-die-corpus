var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
var Inst671 = 0;
var Inst672 = 0;
var Inst673 = 0;
var Inst674 = 0;
var Inst675 = 0;
var Inst676 = 0;
var Inst677 = 0;
var Inst678 = 0;
var Inst679 = 0;
var Inst680 = 0;
var Inst681 = 0;
var Inst682 = 0;
var Inst683 = 0;
var Inst684 = 0;
var Inst685 = 0;
var Inst686 = 0;
var Inst687 = 0;
var Inst688 = 0;
var Inst689 = 0;
var Inst690 = 0;
var Inst691 = 0;
var Inst692 = 0;
var Inst693 = 0;
var Inst694 = 0;
var Inst695 = 0;
var Inst696 = 0;
var Inst697 = 0;
var Inst698 = 0;
var Inst699 = 0;
var Inst700 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
const nonAsciiRegex = /[^\x00-\x7F]/g;
try { if (Inst0 <= 1000 && typeof (nonAsciiRegex) != "undefined") {_RecordType("<373,386,5>",(nonAsciiRegex)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<416,421,7>",(ascii)); Inst1++; } } catch(e) {}
function ascii(str) {
try { if (Inst2 <= 1000 && typeof (str) != "undefined") {_RecordType("<422,425,7>",(str)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<438,449,8>",(str.replace)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (str) != "undefined") {_RecordType("<438,441,8>",(str)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (nonAsciiRegex) != "undefined") {_RecordType("<450,463,8>",(nonAsciiRegex)); Inst5++; } } catch(e) {}
  return str.replace(nonAsciiRegex, "");
}

const isICU = true;
try { if (Inst6 <= 1000 && typeof (isICU) != "undefined") {_RecordType("<479,484,11>",(isICU)); Inst6++; } } catch(e) {}
const isWinGlob = true;
try { if (Inst7 <= 1000 && typeof (isWinGlob) != "undefined") {_RecordType("<499,508,12>",(isWinGlob)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (assertFormat) != "undefined") {_RecordType("<527,539,14>",(assertFormat)); Inst8++; } } catch(e) {}
function assertFormat(expected, fmt, date, msg = "assertFormat") {
try { if (Inst9 <= 1000 && typeof (expected) != "undefined") {_RecordType("<540,548,14>",(expected)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<550,553,14>",(fmt)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (date) != "undefined") {_RecordType("<555,559,14>",(date)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (msg) != "undefined") {_RecordType("<561,564,14>",(msg)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<587,598,15>",(console.log)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (console) != "undefined") {_RecordType("<587,594,15>",(console)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<599,604,15>",(ascii)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (expected) != "undefined") {_RecordType("<605,613,15>",(expected)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<616,621,15>",(ascii)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (fmt.format) != "undefined") {_RecordType("<622,632,15>",(fmt.format)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<622,625,15>",(fmt)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (date) != "undefined") {_RecordType("<633,637,15>",(date)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (msg) != "undefined") {_RecordType("<644,647,15>",(msg)); Inst21++; } } catch(e) {}
  console.log(ascii(expected), ascii(fmt.format(date)), `${msg}: fmt.format(date) did not match expected value`);

try { if (Inst22 <= 1000 && typeof (isICU) != "undefined") {_RecordType("<706,711,17>",(isICU)); Inst22++; } } catch(e) {}
  if (isICU) {
try { if (Inst24 <= 1000 && typeof (fmt.formatToParts) != "undefined") {_RecordType("<733,750,18>",(fmt.formatToParts)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<733,736,18>",(fmt)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (date) != "undefined") {_RecordType("<751,755,18>",(date)); Inst26++; } } catch(e) {}
    const parts = fmt.formatToParts(date);
try { if (Inst23 <= 1000 && typeof (parts) != "undefined") {_RecordType("<725,730,18>",(parts)); Inst23++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<762,773,19>",(console.log)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (console) != "undefined") {_RecordType("<762,769,19>",(console)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (expected) != "undefined") {_RecordType("<774,782,19>",(expected)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (parts.map(part => part.value).join) != "undefined") {_RecordType("<784,818,19>",(parts.map(part => part.value).join)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (parts.map) != "undefined") {_RecordType("<784,793,19>",(parts.map)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (parts) != "undefined") {_RecordType("<784,789,19>",(parts)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (part) != "undefined") {_RecordType("<794,798,19>",(part)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<802,812,19>",(part.value)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (part) != "undefined") {_RecordType("<802,806,19>",(part)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (msg) != "undefined") {_RecordType("<827,830,19>",(msg)); Inst36++; } } catch(e) {}
    console.log(expected, parts.map(part => part.value).join(""), `${msg}: fmt.formatToParts(date) did not match expected value`);
try { if (Inst38 <= 1000 && typeof (parts.filter(part => part.type != "literal").map) != "undefined") {_RecordType("<907,955,20>",(parts.filter(part => part.type != "literal").map)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (parts.filter) != "undefined") {_RecordType("<907,919,20>",(parts.filter)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (parts) != "undefined") {_RecordType("<907,912,20>",(parts)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (part) != "undefined") {_RecordType("<920,924,20>",(part)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (part.type) != "undefined") {_RecordType("<928,937,20>",(part.type)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (part) != "undefined") {_RecordType("<928,932,20>",(part)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (part) != "undefined") {_RecordType("<956,960,20>",(part)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (part.type) != "undefined") {_RecordType("<964,973,20>",(part.type)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (part) != "undefined") {_RecordType("<964,968,20>",(part)); Inst46++; } } catch(e) {}
    const types = parts.filter(part => part.type != "literal").map(part => part.type);
try { if (Inst37 <= 1000 && typeof (types) != "undefined") {_RecordType("<899,904,20>",(types)); Inst37++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<980,991,21>",(console.log)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (console) != "undefined") {_RecordType("<980,987,21>",(console)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (new Set(types).size) != "undefined") {_RecordType("<992,1011,21>",(new Set(types).size)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Set) != "undefined") {_RecordType("<996,999,21>",(Set)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (types) != "undefined") {_RecordType("<1000,1005,21>",(types)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (types.length) != "undefined") {_RecordType("<1013,1025,21>",(types.length)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (types) != "undefined") {_RecordType("<1013,1018,21>",(types)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1070,1084,21>",(JSON.stringify)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1070,1074,21>",(JSON)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (parts) != "undefined") {_RecordType("<1085,1090,21>",(parts)); Inst56++; } } catch(e) {}
    console.log(new Set(types).size, types.length, `Duplicate non-literal parts detected in ${JSON.stringify(parts)}`);
  }
}

try { if (Inst57 <= 1000 && typeof (t1) != "undefined") {_RecordType("<1112,1114,25>",(t1)); Inst57++; } } catch(e) {}
function t1() {
try { if (Inst59 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1138,1142,26>",(Date)); Inst59++; } } catch(e) {}
  const date = new Date(2000, 1, 1, 1, 1, 1);
try { if (Inst58 <= 1000 && typeof (date) != "undefined") {_RecordType("<1127,1131,26>",(date)); Inst58++; } } catch(e) {}

try { if (Inst60 <= 1000 && typeof (test) != "undefined") {_RecordType("<1177,1181,28>",(test)); Inst60++; } } catch(e) {}
  function test(options, expected) {
try { if (Inst61 <= 1000 && typeof (options) != "undefined") {_RecordType("<1182,1189,28>",(options)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1191,1199,28>",(expected)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1207,1215,29>",(expected)); Inst63++; } } catch(e) {}
    expected;
try { if (Inst64 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<1225,1244,30>",(Intl.DateTimeFormat)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1225,1229,30>",(Intl)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (options) != "undefined") {_RecordType("<1254,1261,30>",(options)); Inst66++; } } catch(e) {}
    new Intl.DateTimeFormat("en-US", options);
try { if (Inst67 <= 1000 && typeof (date) != "undefined") {_RecordType("<1268,1272,31>",(date)); Inst67++; } } catch(e) {}
    date;
try { if (Inst68 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1278,1289,32>",(console.log)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (console) != "undefined") {_RecordType("<1278,1285,32>",(console)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1290,1298,32>",(expected)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<1300,1305,32>",(ascii)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (date.toLocaleString) != "undefined") {_RecordType("<1306,1325,32>",(date.toLocaleString)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (date) != "undefined") {_RecordType("<1306,1310,32>",(date)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (options) != "undefined") {_RecordType("<1335,1342,32>",(options)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1378,1392,32>",(JSON.stringify)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1378,1382,32>",(JSON)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (options) != "undefined") {_RecordType("<1393,1400,32>",(options)); Inst77++; } } catch(e) {}
    console.log(expected, ascii(date.toLocaleString("en-US", options)), `date.toLocaleString("en-US", ${JSON.stringify(options)})`);
  }

try { if (Inst78 <= 1000 && typeof (testPlatformSpecific) != "undefined") {_RecordType("<1423,1443,35>",(testPlatformSpecific)); Inst78++; } } catch(e) {}
  function testPlatformSpecific(options, expectedWinGlob, expectedICU) {
try { if (Inst79 <= 1000 && typeof (options) != "undefined") {_RecordType("<1444,1451,35>",(options)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (expectedWinGlob) != "undefined") {_RecordType("<1453,1468,35>",(expectedWinGlob)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (expectedICU) != "undefined") {_RecordType("<1470,1481,35>",(expectedICU)); Inst81++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (isICU) != "undefined") {_RecordType("<1493,1498,36>",(isICU)); Inst82++; } } catch(e) {}
    if (isICU) {
try { if (Inst83 <= 1000 && typeof (test) != "undefined") {_RecordType("<1508,1512,37>",(test)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (options) != "undefined") {_RecordType("<1513,1520,37>",(options)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (expectedICU) != "undefined") {_RecordType("<1522,1533,37>",(expectedICU)); Inst85++; } } catch(e) {}
      test(options, expectedICU);
    } else {
try { if (Inst86 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1555,1566,39>",(console.log)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (console) != "undefined") {_RecordType("<1555,1562,39>",(console)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (isWinGlob) != "undefined") {_RecordType("<1567,1576,39>",(isWinGlob)); Inst88++; } } catch(e) {}
      console.log(isWinGlob);
try { if (Inst89 <= 1000 && typeof (test) != "undefined") {_RecordType("<1585,1589,40>",(test)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (options) != "undefined") {_RecordType("<1590,1597,40>",(options)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (expectedWinGlob) != "undefined") {_RecordType("<1599,1614,40>",(expectedWinGlob)); Inst91++; } } catch(e) {}
      test(options, expectedWinGlob);
    }
  }

try { if (Inst92 <= 1000 && typeof (test) != "undefined") {_RecordType("<1630,1634,44>",(test)); Inst92++; } } catch(e) {}
  test({
    year: "numeric"
  }, "2000");
try { if (Inst93 <= 1000 && typeof (test) != "undefined") {_RecordType("<1673,1677,47>",(test)); Inst93++; } } catch(e) {}
  test({
    year: "2-digit"
  }, "00");
try { if (Inst94 <= 1000 && typeof (test) != "undefined") {_RecordType("<1714,1718,50>",(test)); Inst94++; } } catch(e) {}
  test({
    month: "numeric"
  }, "2");
try { if (Inst95 <= 1000 && typeof (test) != "undefined") {_RecordType("<1755,1759,53>",(test)); Inst95++; } } catch(e) {}
  test({
    month: "2-digit"
  }, "02");
try { if (Inst96 <= 1000 && typeof (test) != "undefined") {_RecordType("<1797,1801,56>",(test)); Inst96++; } } catch(e) {}
  test({
    month: "long"
  }, "February");
try { if (Inst97 <= 1000 && typeof (test) != "undefined") {_RecordType("<1842,1846,59>",(test)); Inst97++; } } catch(e) {}
  test({
    month: "short"
  }, "Feb"); // WinGlob narrow is Feb, ICU narrow is F

try { if (Inst98 <= 1000 && typeof (testPlatformSpecific) != "undefined") {_RecordType("<1926,1946,63>",(testPlatformSpecific)); Inst98++; } } catch(e) {}
  testPlatformSpecific({
    month: "narrow"
  }, "Feb", "F");
try { if (Inst99 <= 1000 && typeof (test) != "undefined") {_RecordType("<1989,1993,66>",(test)); Inst99++; } } catch(e) {}
  test({
    day: "2-digit"
  }, "01");
try { if (Inst100 <= 1000 && typeof (test) != "undefined") {_RecordType("<2029,2033,69>",(test)); Inst100++; } } catch(e) {}
  test({
    day: "numeric"
  }, "1");
try { if (Inst101 <= 1000 && typeof (test) != "undefined") {_RecordType("<2068,2072,72>",(test)); Inst101++; } } catch(e) {}
  test({
    hour: "2-digit"
  }, "01 AM");
try { if (Inst102 <= 1000 && typeof (test) != "undefined") {_RecordType("<2112,2116,75>",(test)); Inst102++; } } catch(e) {}
  test({
    hour: "numeric"
  }, "1 AM");
try { if (Inst103 <= 1000 && typeof (test) != "undefined") {_RecordType("<2155,2159,78>",(test)); Inst103++; } } catch(e) {}
  test({
    hour: "numeric",
    minute: "2-digit"
  }, "1:01 AM");
try { if (Inst104 <= 1000 && typeof (test) != "undefined") {_RecordType("<2224,2228,82>",(test)); Inst104++; } } catch(e) {}
  test({
    hour: "numeric",
    minute: "numeric"
  }, "1:01 AM");
try { if (Inst105 <= 1000 && typeof (test) != "undefined") {_RecordType("<2293,2297,86>",(test)); Inst105++; } } catch(e) {}
  test({
    hour: "numeric",
    minute: "2-digit",
    second: "2-digit"
  }, "1:01:01 AM"); // WinGlob doesn't have non-2-digit seconds

try { if (Inst106 <= 1000 && typeof (testPlatformSpecific) != "undefined") {_RecordType("<2433,2453,92>",(testPlatformSpecific)); Inst106++; } } catch(e) {}
  testPlatformSpecific({
    hour: "numeric",
    minute: "2-digit",
    second: "numeric"
  }, "1:01:01 AM", "1:01:1 AM");
try { if (Inst107 <= 1000 && typeof (test) != "undefined") {_RecordType("<2557,2561,97>",(test)); Inst107++; } } catch(e) {}
  test({
    hour: "numeric",
    hour12: true
  }, "1 AM");
try { if (Inst108 <= 1000 && typeof (testPlatformSpecific) != "undefined") {_RecordType("<2618,2638,101>",(testPlatformSpecific)); Inst108++; } } catch(e) {}
  testPlatformSpecific({
    hour: "numeric",
    hour12: false
  }, "1:00", "01");
try { if (Inst110 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<2720,2728,105>",(parseInt)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<2729,2734,105>",(ascii)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    timeZone: "UTC"
  }).format) != "undefined") {_RecordType("<2735,2822,105>",(new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    timeZone: "UTC"
  }).format)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<2739,2758,105>",(Intl.DateTimeFormat)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2739,2743,105>",(Intl)); Inst114++; } } catch(e) {}
  const epochYear = parseInt(ascii(new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    timeZone: "UTC"
  }).format(0)), 10);
try { if (Inst109 <= 1000 && typeof (epochYear) != "undefined") {_RecordType("<2708,2717,105>",(epochYear)); Inst109++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2835,2846,109>",(console.log)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (console) != "undefined") {_RecordType("<2835,2842,109>",(console)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (epochYear) != "undefined") {_RecordType("<2847,2856,109>",(epochYear)); Inst117++; } } catch(e) {}
  console.log(epochYear === 1970); // By default, DateTimeFormat formats year, month, and day. Technically, Date.now() in the second call will be slightly after
  // the defaulted Date.now() in the first call, but this should only produce a different string if the first call runs before
  // midnight on day X and the second call runs after midnight on day X+1. That seems unlikely enough that it will only cause
  // flakiness in the rarest of circumstances

try { if (Inst118 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<3296,3307,114>",(console.log)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (console) != "undefined") {_RecordType("<3296,3303,114>",(console)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (new Intl.DateTimeFormat().format) != "undefined") {_RecordType("<3308,3340,114>",(new Intl.DateTimeFormat().format)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<3312,3331,114>",(Intl.DateTimeFormat)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3312,3316,114>",(Intl)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (new Intl.DateTimeFormat().format) != "undefined") {_RecordType("<3344,3376,114>",(new Intl.DateTimeFormat().format)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<3348,3367,114>",(Intl.DateTimeFormat)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3348,3352,114>",(Intl)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<3377,3385,114>",(Date.now)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3377,3381,114>",(Date)); Inst127++; } } catch(e) {}
  console.log(new Intl.DateTimeFormat().format(), new Intl.DateTimeFormat().format(Date.now()));
}

try { if (Inst128 <= 1000 && typeof (t1) != "undefined") {_RecordType("<3394,3396,117>",(t1)); Inst128++; } } catch(e) {}
t1();

try { if (Inst129 <= 1000 && typeof (t2) != "undefined") {_RecordType("<3410,3412,119>",(t2)); Inst129++; } } catch(e) {}
function t2() {
try { if (Inst130 <= 1000 && typeof (test) != "undefined") {_RecordType("<3428,3432,120>",(test)); Inst130++; } } catch(e) {}
  function test(locale, options, expected, message) {
try { if (Inst131 <= 1000 && typeof (locale) != "undefined") {_RecordType("<3433,3439,120>",(locale)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (options) != "undefined") {_RecordType("<3441,3448,120>",(options)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3450,3458,120>",(expected)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (message) != "undefined") {_RecordType("<3460,3467,120>",(message)); Inst134++; } } catch(e) {}
try { if (Inst136 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<3486,3499,121>",(Object.assign)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3486,3492,121>",(Object)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3612,3620,126>",(expected)); Inst138++; } } catch(e) {}
    expected = Object.assign({}, {
      locale: /en/,
      numberingSystem: "latn",
      calendar: "gregory",
      timeZone: /.+/
    }, expected);
try { if (Inst135 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3475,3483,121>",(expected)); Inst135++; } } catch(e) {}
try { if (Inst140 <= 1000 && typeof (new Intl.DateTimeFormat(locale, options).resolvedOptions) != "undefined") {_RecordType("<3642,3698,127>",(new Intl.DateTimeFormat(locale, options).resolvedOptions)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<3646,3665,127>",(Intl.DateTimeFormat)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3646,3650,127>",(Intl)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (locale) != "undefined") {_RecordType("<3666,3672,127>",(locale)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (options) != "undefined") {_RecordType("<3674,3681,127>",(options)); Inst144++; } } catch(e) {}
    const actual = new Intl.DateTimeFormat(locale, options).resolvedOptions();
try { if (Inst139 <= 1000 && typeof (actual) != "undefined") {_RecordType("<3633,3639,127>",(actual)); Inst139++; } } catch(e) {}

    for (const key in expected) {
try { if (Inst145 <= 1000 && typeof (key) != "undefined") {_RecordType("<3718,3721,129>",(key)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3725,3733,129>",(expected)); Inst146++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (expected[key]) != "undefined") {_RecordType("<3747,3760,130>",(expected[key])); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3747,3755,130>",(expected)); Inst148++; } } catch(e) {}
      if (expected[key] !== null) {
try { if (Inst149 <= 1000 && typeof (expected[key]) != "undefined") {_RecordType("<3781,3794,131>",(expected[key])); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3781,3789,131>",(expected)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3806,3812,131>",(RegExp)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (expected[key]) != "undefined") {_RecordType("<3815,3828,131>",(expected[key])); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3815,3823,131>",(expected)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (actual[key]) != "undefined") {_RecordType("<3833,3844,131>",(actual[key])); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (actual) != "undefined") {_RecordType("<3833,3839,131>",(actual)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (expected[key]) != "undefined") {_RecordType("<3847,3860,131>",(expected[key])); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3847,3855,131>",(expected)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (actual[key]) != "undefined") {_RecordType("<3865,3876,131>",(actual[key])); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (actual) != "undefined") {_RecordType("<3865,3871,131>",(actual)); Inst159++; } } catch(e) {}
        expected[key] instanceof RegExp ? expected[key] === actual[key] : expected[key] === actual[key];
      } else {
try { if (Inst160 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<3901,3912,133>",(console.log)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (console) != "undefined") {_RecordType("<3901,3908,133>",(console)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (actual.hasOwnProperty) != "undefined") {_RecordType("<3913,3934,133>",(actual.hasOwnProperty)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (actual) != "undefined") {_RecordType("<3913,3919,133>",(actual)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (key) != "undefined") {_RecordType("<3935,3938,133>",(key)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (message) != "undefined") {_RecordType("<3944,3951,133>",(message)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (key) != "undefined") {_RecordType("<3957,3960,133>",(key)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<3989,4003,133>",(JSON.stringify)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<3989,3993,133>",(JSON)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (actual) != "undefined") {_RecordType("<4004,4010,133>",(actual)); Inst169++; } } catch(e) {}
        console.log(actual.hasOwnProperty(key), `${message} - ${key} should not be present in ${JSON.stringify(actual, null, 2)}`);
      }
    }
  }

try { if (Inst170 <= 1000 && typeof (test) != "undefined") {_RecordType("<4046,4050,138>",(test)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4060,4069,138>",(undefined)); Inst171++; } } catch(e) {}
  test("en-US", undefined, {
    year: "numeric",
    month: "numeric",
    day: "numeric"
  }, "Default options do not match");
try { if (Inst172 <= 1000 && typeof (test) != "undefined") {_RecordType("<4175,4179,143>",(test)); Inst172++; } } catch(e) {}
  test("en-US", {
    year: "numeric"
  }, {
    year: "numeric",
    month: null,
    day: null
  }, "Requesting year should not fill in other date or time options");
try { if (Inst173 <= 1000 && typeof (test) != "undefined") {_RecordType("<4343,4347,150>",(test)); Inst173++; } } catch(e) {}
  test("en-US", {
    hour: "numeric"
  }, {
    hour: "numeric",
    minute: null,
    month: null
  }, "Requesting hour should not fill in other date or time options");
try { if (Inst174 <= 1000 && typeof (test) != "undefined") {_RecordType("<4514,4518,157>",(test)); Inst174++; } } catch(e) {}
  test("en-US", {
    hour12: false
  }, {
    hour12: null
  }, "Requesting hour12 without hour shouldn't do anything");
try { if (Inst175 <= 1000 && typeof (test) != "undefined") {_RecordType("<4636,4640,162>",(test)); Inst175++; } } catch(e) {}
  test("en-US", {
    hour: "numeric",
    hour12: "non-falsy value"
  }, {
    hour: "numeric",
    hour12: true
  });
}

try { if (Inst176 <= 1000 && typeof (t2) != "undefined") {_RecordType("<4757,4759,171>",(t2)); Inst176++; } } catch(e) {}
t2();

try { if (Inst177 <= 1000 && typeof (t3) != "undefined") {_RecordType("<4773,4775,173>",(t3)); Inst177++; } } catch(e) {}
function t3() {
try { if (Inst178 <= 1000 && typeof (test) != "undefined") {_RecordType("<4791,4795,174>",(test)); Inst178++; } } catch(e) {}
  function test(key, validOptions, kind = RangeError) {
try { if (Inst179 <= 1000 && typeof (key) != "undefined") {_RecordType("<4796,4799,174>",(key)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (validOptions) != "undefined") {_RecordType("<4801,4813,174>",(validOptions)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (kind) != "undefined") {_RecordType("<4815,4819,174>",(kind)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<4822,4832,174>",(RangeError)); Inst182++; } } catch(e) {}
    for (const option of validOptions) {
try { if (Inst183 <= 1000 && typeof (option) != "undefined") {_RecordType("<4851,4857,175>",(option)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (validOptions) != "undefined") {_RecordType("<4861,4873,175>",(validOptions)); Inst184++; } } catch(e) {}
try { if (Inst190 <= 1000 && typeof (e) != "undefined") {_RecordType("<4994,4995,180>",(e)); Inst190++; } } catch(e) {}
      try {
try { if (Inst185 <= 1000 && typeof (new Intl.DateTimeFormat(undefined, {
          [key]: option
        }).format) != "undefined") {_RecordType("<4897,4975,177>",(new Intl.DateTimeFormat(undefined, {
          [key]: option
        }).format)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<4901,4920,177>",(Intl.DateTimeFormat)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<4901,4905,177>",(Intl)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4921,4930,177>",(undefined)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (option) != "undefined") {_RecordType("<4951,4957,178>",(option)); Inst189++; } } catch(e) {}
        new Intl.DateTimeFormat(undefined, {
          [key]: option
        }).format();
      } catch (e) {
        ;
      }
    }

try { if (Inst195 <= 1000 && typeof (e) != "undefined") {_RecordType("<5134,5135,189>",(e)); Inst195++; } } catch(e) {}
    try {
try { if (Inst191 <= 1000 && typeof (new Intl.DateTimeFormat(undefined, {
        [key]: "invalid"
      }).format) != "undefined") {_RecordType("<5040,5117,186>",(new Intl.DateTimeFormat(undefined, {
        [key]: "invalid"
      }).format)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<5044,5063,186>",(Intl.DateTimeFormat)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<5044,5048,186>",(Intl)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5064,5073,186>",(undefined)); Inst194++; } } catch(e) {}
      new Intl.DateTimeFormat(undefined, {
        [key]: "invalid"
      }).format();
    } catch (e) {
      ;
    }
  }

  const twoDigitNumeric = ["2-digit", "numeric"];
try { if (Inst196 <= 1000 && typeof (twoDigitNumeric) != "undefined") {_RecordType("<5166,5181,194>",(twoDigitNumeric)); Inst196++; } } catch(e) {}
  const narrowShortLong = ["narrow", "short", "long"];
try { if (Inst197 <= 1000 && typeof (narrowShortLong) != "undefined") {_RecordType("<5216,5231,195>",(narrowShortLong)); Inst197++; } } catch(e) {}
try { if (Inst199 <= 1000 && typeof (twoDigitNumeric.concat) != "undefined") {_RecordType("<5289,5311,196>",(twoDigitNumeric.concat)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (twoDigitNumeric) != "undefined") {_RecordType("<5289,5304,196>",(twoDigitNumeric)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (narrowShortLong) != "undefined") {_RecordType("<5312,5327,196>",(narrowShortLong)); Inst201++; } } catch(e) {}
  const allOptionValues = twoDigitNumeric.concat(narrowShortLong);
try { if (Inst198 <= 1000 && typeof (allOptionValues) != "undefined") {_RecordType("<5271,5286,196>",(allOptionValues)); Inst198++; } } catch(e) {}
try { if (Inst203 <= 1000 && typeof (narrowShortLong) != "undefined") {_RecordType("<5363,5378,198>",(narrowShortLong)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (narrowShortLong) != "undefined") {_RecordType("<5389,5404,199>",(narrowShortLong)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (twoDigitNumeric) != "undefined") {_RecordType("<5416,5431,200>",(twoDigitNumeric)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (allOptionValues) != "undefined") {_RecordType("<5444,5459,201>",(allOptionValues)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (twoDigitNumeric) != "undefined") {_RecordType("<5470,5485,202>",(twoDigitNumeric)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (twoDigitNumeric) != "undefined") {_RecordType("<5497,5512,203>",(twoDigitNumeric)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (twoDigitNumeric) != "undefined") {_RecordType("<5526,5541,204>",(twoDigitNumeric)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (twoDigitNumeric) != "undefined") {_RecordType("<5555,5570,205>",(twoDigitNumeric)); Inst210++; } } catch(e) {}
  const options = {
    weekday: narrowShortLong,
    era: narrowShortLong,
    year: twoDigitNumeric,
    month: allOptionValues,
    day: twoDigitNumeric,
    hour: twoDigitNumeric,
    minute: twoDigitNumeric,
    second: twoDigitNumeric,
    localeMatcher: ["lookup", "best fit"],
    formatMatcher: ["basic", "best fit"]
  }; // see https://github.com/Microsoft/ChakraCore/issues/3096
try { if (Inst202 <= 1000 && typeof (options) != "undefined") {_RecordType("<5338,5345,197>",(options)); Inst202++; } } catch(e) {}

try { if (Inst211 <= 1000 && typeof (isICU) != "undefined") {_RecordType("<5727,5732,210>",(isICU)); Inst211++; } } catch(e) {}
  if (isICU) {
try { if (Inst214 <= 1000 && typeof (narrowShortLong.slice) != "undefined") {_RecordType("<5763,5784,211>",(narrowShortLong.slice)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (narrowShortLong) != "undefined") {_RecordType("<5763,5778,211>",(narrowShortLong)); Inst215++; } } catch(e) {}
    options.timeZoneName = narrowShortLong.slice(1);
try { if (Inst212 <= 1000 && typeof (options.timeZoneName) != "undefined") {_RecordType("<5740,5760,211>",(options.timeZoneName)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (options) != "undefined") {_RecordType("<5740,5747,211>",(options)); Inst213++; } } catch(e) {}
  }

  for (const option of Object.keys(options)) {
try { if (Inst216 <= 1000 && typeof (option) != "undefined") {_RecordType("<5807,5813,214>",(option)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<5817,5828,214>",(Object.keys)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5817,5823,214>",(Object)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (options) != "undefined") {_RecordType("<5829,5836,214>",(options)); Inst219++; } } catch(e) {}
try { if (Inst220 <= 1000 && typeof (test) != "undefined") {_RecordType("<5845,5849,215>",(test)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (option) != "undefined") {_RecordType("<5850,5856,215>",(option)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (options[option]) != "undefined") {_RecordType("<5858,5873,215>",(options[option])); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (options) != "undefined") {_RecordType("<5858,5865,215>",(options)); Inst223++; } } catch(e) {}
    test(option, options[option]);
  }
}

try { if (Inst224 <= 1000 && typeof (t3) != "undefined") {_RecordType("<5883,5885,219>",(t3)); Inst224++; } } catch(e) {}
t3();

try { if (Inst225 <= 1000 && typeof (t4) != "undefined") {_RecordType("<5899,5901,221>",(t4)); Inst225++; } } catch(e) {}
function t4() {
  // WinGlob does not implement formatToParts
try { if (Inst226 <= 1000 && typeof (isWinGlob) != "undefined") {_RecordType("<5958,5967,223>",(isWinGlob)); Inst226++; } } catch(e) {}
  if (isWinGlob) {
    return;
  }

try { if (Inst227 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<5990,6001,227>",(console.log)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (console) != "undefined") {_RecordType("<5990,5997,227>",(console)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (isICU) != "undefined") {_RecordType("<6002,6007,227>",(isICU)); Inst229++; } } catch(e) {}
  console.log(isICU);
try { if (Inst231 <= 1000 && typeof (Date) != "undefined") {_RecordType("<6029,6033,228>",(Date)); Inst231++; } } catch(e) {}
  const date = new Date(2000, 0, 1, 0, 0, 0);
try { if (Inst230 <= 1000 && typeof (date) != "undefined") {_RecordType("<6018,6022,228>",(date)); Inst230++; } } catch(e) {}

try { if (Inst232 <= 1000 && typeof (test) != "undefined") {_RecordType("<6068,6072,230>",(test)); Inst232++; } } catch(e) {}
  function test(options, key, value, message = "Error") {
try { if (Inst233 <= 1000 && typeof (options) != "undefined") {_RecordType("<6073,6080,230>",(options)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (key) != "undefined") {_RecordType("<6082,6085,230>",(key)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (value) != "undefined") {_RecordType("<6087,6092,230>",(value)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (message) != "undefined") {_RecordType("<6094,6101,230>",(message)); Inst236++; } } catch(e) {}
try { if (Inst238 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<6135,6154,231>",(Intl.DateTimeFormat)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<6135,6139,231>",(Intl)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (options) != "undefined") {_RecordType("<6164,6171,231>",(options)); Inst240++; } } catch(e) {}
    const fmt = new Intl.DateTimeFormat("en-US", options);
try { if (Inst237 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<6125,6128,231>",(fmt)); Inst237++; } } catch(e) {}
try { if (Inst242 <= 1000 && typeof (fmt.format) != "undefined") {_RecordType("<6195,6205,232>",(fmt.format)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<6195,6198,232>",(fmt)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (date) != "undefined") {_RecordType("<6206,6210,232>",(date)); Inst244++; } } catch(e) {}
    const toString = fmt.format(date);
try { if (Inst241 <= 1000 && typeof (toString) != "undefined") {_RecordType("<6184,6192,232>",(toString)); Inst241++; } } catch(e) {}
try { if (Inst246 <= 1000 && typeof (fmt.formatToParts) != "undefined") {_RecordType("<6233,6250,233>",(fmt.formatToParts)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<6233,6236,233>",(fmt)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (date) != "undefined") {_RecordType("<6251,6255,233>",(date)); Inst248++; } } catch(e) {}
    const toParts = fmt.formatToParts(date);
try { if (Inst245 <= 1000 && typeof (toParts) != "undefined") {_RecordType("<6223,6230,233>",(toParts)); Inst245++; } } catch(e) {}
try { if (Inst249 <= 1000 && typeof (toString) != "undefined") {_RecordType("<6262,6270,234>",(toString)); Inst249++; } } catch(e) {}
    toString;
try { if (Inst250 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<6276,6279,235>",(fmt)); Inst250++; } } catch(e) {}
    fmt;
try { if (Inst251 <= 1000 && typeof (date) != "undefined") {_RecordType("<6285,6289,236>",(date)); Inst251++; } } catch(e) {}
    date;

try { if (Inst252 <= 1000 && typeof (key) != "undefined") {_RecordType("<6307,6310,238>",(key)); Inst252++; } } catch(e) {}
    if (typeof key === "string") {
try { if (Inst254 <= 1000 && typeof (toParts.find) != "undefined") {_RecordType("<6346,6358,239>",(toParts.find)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (toParts) != "undefined") {_RecordType("<6346,6353,239>",(toParts)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (p) != "undefined") {_RecordType("<6359,6360,239>",(p)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (p.type) != "undefined") {_RecordType("<6364,6370,239>",(p.type)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (p) != "undefined") {_RecordType("<6364,6365,239>",(p)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (key) != "undefined") {_RecordType("<6375,6378,239>",(key)); Inst259++; } } catch(e) {}
      const part = toParts.find(p => p.type === key);
try { if (Inst253 <= 1000 && typeof (part) != "undefined") {_RecordType("<6339,6343,239>",(part)); Inst253++; } } catch(e) {}
try { if (Inst260 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<6387,6398,240>",(console.log)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (console) != "undefined") {_RecordType("<6387,6394,240>",(console)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (part) != "undefined") {_RecordType("<6399,6403,240>",(part)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<6414,6424,240>",(part.value)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (part) != "undefined") {_RecordType("<6414,6418,240>",(part)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (message) != "undefined") {_RecordType("<6442,6449,240>",(message)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<6455,6469,240>",(JSON.stringify)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<6455,6459,240>",(JSON)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (toParts) != "undefined") {_RecordType("<6470,6477,240>",(toParts)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (key) != "undefined") {_RecordType("<6515,6518,240>",(key)); Inst269++; } } catch(e) {}
      console.log(part && typeof part.value === "string", `${message} - ${JSON.stringify(toParts)} expected to have part with type "${key}"`);
try { if (Inst270 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<6530,6541,241>",(console.log)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (console) != "undefined") {_RecordType("<6530,6537,241>",(console)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (value) != "undefined") {_RecordType("<6542,6547,241>",(value)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<6549,6559,241>",(part.value)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (part) != "undefined") {_RecordType("<6549,6553,241>",(part)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (message) != "undefined") {_RecordType("<6564,6571,241>",(message)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (key) != "undefined") {_RecordType("<6586,6589,241>",(key)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (value) != "undefined") {_RecordType("<6599,6604,241>",(value)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<6626,6636,241>",(part.value)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (part) != "undefined") {_RecordType("<6626,6630,241>",(part)); Inst279++; } } catch(e) {}
      console.log(value, part.value, `${message} - expected ${key} to be ${value}, but was actually ${part.value}`);
    } else {
try { if (Inst280 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<6660,6671,243>",(console.log)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (console) != "undefined") {_RecordType("<6660,6667,243>",(console)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (key.length) != "undefined") {_RecordType("<6672,6682,243>",(key.length)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (key) != "undefined") {_RecordType("<6672,6675,243>",(key)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (value.length) != "undefined") {_RecordType("<6684,6696,243>",(value.length)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (value) != "undefined") {_RecordType("<6684,6689,243>",(value)); Inst285++; } } catch(e) {}
      console.log(key.length, value.length);
try { if (Inst286 <= 1000 && typeof (key.forEach) != "undefined") {_RecordType("<6705,6716,244>",(key.forEach)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (key) != "undefined") {_RecordType("<6705,6708,244>",(key)); Inst287++; } } catch(e) {}
      key.forEach(function (k, i) {
try { if (Inst288 <= 1000 && typeof (k) != "undefined") {_RecordType("<6727,6728,244>",(k)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (i) != "undefined") {_RecordType("<6730,6731,244>",(i)); Inst289++; } } catch(e) {}
try { if (Inst291 <= 1000 && typeof (value[i]) != "undefined") {_RecordType("<6753,6761,245>",(value[i])); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (value) != "undefined") {_RecordType("<6753,6758,245>",(value)); Inst292++; } } catch(e) {}
        const v = value[i];
try { if (Inst290 <= 1000 && typeof (v) != "undefined") {_RecordType("<6749,6750,245>",(v)); Inst290++; } } catch(e) {}
try { if (Inst294 <= 1000 && typeof (toParts.find) != "undefined") {_RecordType("<6784,6796,246>",(toParts.find)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (toParts) != "undefined") {_RecordType("<6784,6791,246>",(toParts)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (p) != "undefined") {_RecordType("<6797,6798,246>",(p)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (p.type) != "undefined") {_RecordType("<6802,6808,246>",(p.type)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (p) != "undefined") {_RecordType("<6802,6803,246>",(p)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (k) != "undefined") {_RecordType("<6813,6814,246>",(k)); Inst299++; } } catch(e) {}
        const part = toParts.find(p => p.type === k);
try { if (Inst293 <= 1000 && typeof (part) != "undefined") {_RecordType("<6777,6781,246>",(part)); Inst293++; } } catch(e) {}
try { if (Inst300 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<6825,6836,247>",(console.log)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (console) != "undefined") {_RecordType("<6825,6832,247>",(console)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (part) != "undefined") {_RecordType("<6837,6841,247>",(part)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<6852,6862,247>",(part.value)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (part) != "undefined") {_RecordType("<6852,6856,247>",(part)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (message) != "undefined") {_RecordType("<6880,6887,247>",(message)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<6893,6907,247>",(JSON.stringify)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<6893,6897,247>",(JSON)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (toParts) != "undefined") {_RecordType("<6908,6915,247>",(toParts)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (k) != "undefined") {_RecordType("<6953,6954,247>",(k)); Inst309++; } } catch(e) {}
        console.log(part && typeof part.value === "string", `${message} - ${JSON.stringify(toParts)} expected to have part with type "${k}"`);
try { if (Inst310 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<6968,6979,248>",(console.log)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (console) != "undefined") {_RecordType("<6968,6975,248>",(console)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (v) != "undefined") {_RecordType("<6980,6981,248>",(v)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<6983,6993,248>",(part.value)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (part) != "undefined") {_RecordType("<6983,6987,248>",(part)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (message) != "undefined") {_RecordType("<6998,7005,248>",(message)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (k) != "undefined") {_RecordType("<7020,7021,248>",(k)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (v) != "undefined") {_RecordType("<7031,7032,248>",(v)); Inst317++; } } catch(e) {}try { if (Inst318 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<7054,7064,248>",(part.value)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (part) != "undefined") {_RecordType("<7054,7058,248>",(part)); Inst319++; } } catch(e) {}
        console.log(v, part.value, `${message} - expected ${k} to be ${v}, but was actually ${part.value}`);
      });
    }
  }

try { if (Inst320 <= 1000 && typeof (test) != "undefined") {_RecordType("<7092,7096,253>",(test)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<7097,7106,253>",(undefined)); Inst321++; } } catch(e) {}
  test(undefined, ["year", "month", "day"], ["2000", "1", "1"]);
try { if (Inst322 <= 1000 && typeof (test) != "undefined") {_RecordType("<7157,7161,254>",(test)); Inst322++; } } catch(e) {}
  test({
    year: "2-digit",
    month: "2-digit",
    day: "2-digit"
  }, ["year", "month", "day"], ["00", "01", "01"]);
try { if (Inst323 <= 1000 && typeof (test) != "undefined") {_RecordType("<7280,7284,259>",(test)); Inst323++; } } catch(e) {}
  test({
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  }, ["hour", "minute", "second"], ["12", "00", "00"]);
try { if (Inst324 <= 1000 && typeof (test) != "undefined") {_RecordType("<7411,7415,264>",(test)); Inst324++; } } catch(e) {}
  test({
    month: "long"
  }, "month", "January"); // the "literal" tested here is the first of two literals, the second of which is a space between "12" and "AM"

try { if (Inst325 <= 1000 && typeof (test) != "undefined") {_RecordType("<7577,7581,268>",(test)); Inst325++; } } catch(e) {}
  test({
    hour: "numeric",
    weekday: "long"
  }, ["weekday", "literal", "hour", "dayPeriod"], ["Saturday", ", ", "12", "AM"]);
}

try { if (Inst326 <= 1000 && typeof (t4) != "undefined") {_RecordType("<7711,7713,274>",(t4)); Inst326++; } } catch(e) {}
t4();

try { if (Inst327 <= 1000 && typeof (t5) != "undefined") {_RecordType("<7727,7729,276>",(t5)); Inst327++; } } catch(e) {}
function t5() {
  // WinGlob does not implement hourCycle
try { if (Inst328 <= 1000 && typeof (isWinGlob) != "undefined") {_RecordType("<7782,7791,278>",(isWinGlob)); Inst328++; } } catch(e) {}
  if (isWinGlob) {
    return;
  }

try { if (Inst329 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<7814,7825,282>",(console.log)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (console) != "undefined") {_RecordType("<7814,7821,282>",(console)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (isICU) != "undefined") {_RecordType("<7826,7831,282>",(isICU)); Inst331++; } } catch(e) {}
  console.log(isICU);
try { if (Inst333 <= 1000 && typeof (Date) != "undefined") {_RecordType("<7857,7861,283>",(Date)); Inst333++; } } catch(e) {}
  const midnight = new Date(2000, 0, 1, 0, 0, 0);
try { if (Inst332 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<7842,7850,283>",(midnight)); Inst332++; } } catch(e) {}
try { if (Inst335 <= 1000 && typeof (Date) != "undefined") {_RecordType("<7903,7907,284>",(Date)); Inst335++; } } catch(e) {}
  const noon = new Date(2000, 0, 1, 12, 0, 0);
try { if (Inst334 <= 1000 && typeof (noon) != "undefined") {_RecordType("<7892,7896,284>",(noon)); Inst334++; } } catch(e) {}

try { if (Inst336 <= 1000 && typeof (test) != "undefined") {_RecordType("<7943,7947,286>",(test)); Inst336++; } } catch(e) {}
  function test(locale, useHourField, options, expectedHC, expectedHour12) {
try { if (Inst337 <= 1000 && typeof (locale) != "undefined") {_RecordType("<7948,7954,286>",(locale)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (useHourField) != "undefined") {_RecordType("<7956,7968,286>",(useHourField)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (options) != "undefined") {_RecordType("<7970,7977,286>",(options)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (expectedHC) != "undefined") {_RecordType("<7979,7989,286>",(expectedHC)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (expectedHour12) != "undefined") {_RecordType("<7991,8005,286>",(expectedHour12)); Inst341++; } } catch(e) {}
try { if (Inst343 <= 1000 && typeof (useHourField) != "undefined") {_RecordType("<8023,8035,287>",(useHourField)); Inst343++; } } catch(e) {}try { if (Inst344 <= 1000 && typeof (options) != "undefined") {_RecordType("<8048,8055,287>",(options)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<8058,8071,287>",(Object.assign)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (Object) != "undefined") {_RecordType("<8058,8064,287>",(Object)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (options) != "undefined") {_RecordType("<8107,8114,289>",(options)); Inst347++; } } catch(e) {}
    options = useHourField === false ? options : Object.assign({}, {
      hour: "2-digit"
    }, options);
try { if (Inst342 <= 1000 && typeof (options) != "undefined") {_RecordType("<8013,8020,287>",(options)); Inst342++; } } catch(e) {}
try { if (Inst349 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<8137,8156,290>",(Intl.DateTimeFormat)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<8137,8141,290>",(Intl)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (locale) != "undefined") {_RecordType("<8157,8163,290>",(locale)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (options) != "undefined") {_RecordType("<8165,8172,290>",(options)); Inst352++; } } catch(e) {}
    const fmt = new Intl.DateTimeFormat(locale, options);
try { if (Inst348 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<8127,8130,290>",(fmt)); Inst348++; } } catch(e) {}
try { if (Inst354 <= 1000 && typeof (locale) != "undefined") {_RecordType("<8207,8213,291>",(locale)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<8228,8242,291>",(JSON.stringify)); Inst355++; } } catch(e) {}try { if (Inst356 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<8228,8232,291>",(JSON)); Inst356++; } } catch(e) {}try { if (Inst357 <= 1000 && typeof (options) != "undefined") {_RecordType("<8243,8250,291>",(options)); Inst357++; } } catch(e) {}
    const message = `locale: "${locale}", options: ${JSON.stringify(options)}`;
try { if (Inst353 <= 1000 && typeof (message) != "undefined") {_RecordType("<8185,8192,291>",(message)); Inst353++; } } catch(e) {}
try { if (Inst358 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8259,8270,292>",(console.log)); Inst358++; } } catch(e) {}try { if (Inst359 <= 1000 && typeof (console) != "undefined") {_RecordType("<8259,8266,292>",(console)); Inst359++; } } catch(e) {}try { if (Inst360 <= 1000 && typeof (expectedHC) != "undefined") {_RecordType("<8271,8281,292>",(expectedHC)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (fmt.resolvedOptions().hourCycle) != "undefined") {_RecordType("<8283,8314,292>",(fmt.resolvedOptions().hourCycle)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (fmt.resolvedOptions) != "undefined") {_RecordType("<8283,8302,292>",(fmt.resolvedOptions)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<8283,8286,292>",(fmt)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (message) != "undefined") {_RecordType("<8319,8326,292>",(message)); Inst364++; } } catch(e) {}
    console.log(expectedHC, fmt.resolvedOptions().hourCycle, `${message} - hourCycle is not correct`);
try { if (Inst365 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8362,8373,293>",(console.log)); Inst365++; } } catch(e) {}try { if (Inst366 <= 1000 && typeof (console) != "undefined") {_RecordType("<8362,8369,293>",(console)); Inst366++; } } catch(e) {}try { if (Inst367 <= 1000 && typeof (expectedHour12) != "undefined") {_RecordType("<8374,8388,293>",(expectedHour12)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (fmt.resolvedOptions().hour12) != "undefined") {_RecordType("<8390,8418,293>",(fmt.resolvedOptions().hour12)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (fmt.resolvedOptions) != "undefined") {_RecordType("<8390,8409,293>",(fmt.resolvedOptions)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<8390,8393,293>",(fmt)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (message) != "undefined") {_RecordType("<8423,8430,293>",(message)); Inst371++; } } catch(e) {}
    console.log(expectedHour12, fmt.resolvedOptions().hour12, `${message} - hour12 is not correct`);

try { if (Inst372 <= 1000 && typeof (useHourField) != "undefined") {_RecordType("<8468,8480,295>",(useHourField)); Inst372++; } } catch(e) {}
    if (useHourField === true) {
try { if (Inst374 <= 1000 && typeof ({
        h11: "00",
        h12: "12",
        h23: "12",
        h24: "12"
      }[expectedHC]) != "undefined") {_RecordType("<8520,8616,296>",({
        h11: "00",
        h12: "12",
        h23: "12",
        h24: "12"
      }[expectedHC])); Inst374++; } } catch(e) {}
      const expectedNoon = {
        h11: "00",
        h12: "12",
        h23: "12",
        h24: "12"
      }[expectedHC];
try { if (Inst373 <= 1000 && typeof (expectedNoon) != "undefined") {_RecordType("<8505,8517,296>",(expectedNoon)); Inst373++; } } catch(e) {}
try { if (Inst376 <= 1000 && typeof ({
        h11: "00",
        h12: "12",
        h23: "00",
        h24: "24"
      }[expectedHC]) != "undefined") {_RecordType("<8649,8745,302>",({
        h11: "00",
        h12: "12",
        h23: "00",
        h24: "24"
      }[expectedHC])); Inst376++; } } catch(e) {}
      const expectedMidnight = {
        h11: "00",
        h12: "12",
        h23: "00",
        h24: "24"
      }[expectedHC];
try { if (Inst375 <= 1000 && typeof (expectedMidnight) != "undefined") {_RecordType("<8630,8646,302>",(expectedMidnight)); Inst375++; } } catch(e) {}
try { if (Inst377 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8753,8764,308>",(console.log)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (console) != "undefined") {_RecordType("<8753,8760,308>",(console)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (expectedMidnight) != "undefined") {_RecordType("<8765,8781,308>",(expectedMidnight)); Inst379++; } } catch(e) {}try { if (Inst380 <= 1000 && typeof (fmt.formatToParts(midnight).find(p => p.type === "hour").value) != "undefined") {_RecordType("<8783,8845,308>",(fmt.formatToParts(midnight).find(p => p.type === "hour").value)); Inst380++; } } catch(e) {}try { if (Inst381 <= 1000 && typeof (fmt.formatToParts(midnight).find) != "undefined") {_RecordType("<8783,8815,308>",(fmt.formatToParts(midnight).find)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (fmt.formatToParts) != "undefined") {_RecordType("<8783,8800,308>",(fmt.formatToParts)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<8783,8786,308>",(fmt)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<8801,8809,308>",(midnight)); Inst384++; } } catch(e) {}try { if (Inst385 <= 1000 && typeof (p) != "undefined") {_RecordType("<8816,8817,308>",(p)); Inst385++; } } catch(e) {}try { if (Inst386 <= 1000 && typeof (p.type) != "undefined") {_RecordType("<8821,8827,308>",(p.type)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (p) != "undefined") {_RecordType("<8821,8822,308>",(p)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (message) != "undefined") {_RecordType("<8850,8857,308>",(message)); Inst388++; } } catch(e) {}
      console.log(expectedMidnight, fmt.formatToParts(midnight).find(p => p.type === "hour").value, `${message} - midnight value was incorrect`);
try { if (Inst389 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<8899,8910,309>",(console.log)); Inst389++; } } catch(e) {}try { if (Inst390 <= 1000 && typeof (console) != "undefined") {_RecordType("<8899,8906,309>",(console)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (expectedNoon) != "undefined") {_RecordType("<8911,8923,309>",(expectedNoon)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (fmt.formatToParts(noon).find(p => p.type === "hour").value) != "undefined") {_RecordType("<8925,8983,309>",(fmt.formatToParts(noon).find(p => p.type === "hour").value)); Inst392++; } } catch(e) {}try { if (Inst393 <= 1000 && typeof (fmt.formatToParts(noon).find) != "undefined") {_RecordType("<8925,8953,309>",(fmt.formatToParts(noon).find)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (fmt.formatToParts) != "undefined") {_RecordType("<8925,8942,309>",(fmt.formatToParts)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<8925,8928,309>",(fmt)); Inst395++; } } catch(e) {}try { if (Inst396 <= 1000 && typeof (noon) != "undefined") {_RecordType("<8943,8947,309>",(noon)); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (p) != "undefined") {_RecordType("<8954,8955,309>",(p)); Inst397++; } } catch(e) {}try { if (Inst398 <= 1000 && typeof (p.type) != "undefined") {_RecordType("<8959,8965,309>",(p.type)); Inst398++; } } catch(e) {}try { if (Inst399 <= 1000 && typeof (p) != "undefined") {_RecordType("<8959,8960,309>",(p)); Inst399++; } } catch(e) {}try { if (Inst400 <= 1000 && typeof (message) != "undefined") {_RecordType("<8988,8995,309>",(message)); Inst400++; } } catch(e) {}
      console.log(expectedNoon, fmt.formatToParts(noon).find(p => p.type === "hour").value, `${message} - noon value was incorrect`);
    } else {
try { if (Inst401 <= 1000 && typeof (assert.isUndefined) != "undefined") {_RecordType("<9046,9064,311>",(assert.isUndefined)); Inst401++; } } catch(e) {}try { if (Inst402 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9046,9052,311>",(assert)); Inst402++; } } catch(e) {}try { if (Inst403 <= 1000 && typeof (fmt.formatToParts(midnight).find) != "undefined") {_RecordType("<9065,9097,311>",(fmt.formatToParts(midnight).find)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (fmt.formatToParts) != "undefined") {_RecordType("<9065,9082,311>",(fmt.formatToParts)); Inst404++; } } catch(e) {}try { if (Inst405 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<9065,9068,311>",(fmt)); Inst405++; } } catch(e) {}try { if (Inst406 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<9083,9091,311>",(midnight)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (p) != "undefined") {_RecordType("<9098,9099,311>",(p)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (p.type) != "undefined") {_RecordType("<9103,9109,311>",(p.type)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (p) != "undefined") {_RecordType("<9103,9104,311>",(p)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (message) != "undefined") {_RecordType("<9126,9133,311>",(message)); Inst410++; } } catch(e) {}
      assert.isUndefined(fmt.formatToParts(midnight).find(p => p.type === "hour"), `${message} - unexpected hour field`);
    }
  }

try { if (Inst411 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9184,9195,315>",(withoutHour)); Inst411++; } } catch(e) {}
  function withoutHour(locale, options) {
try { if (Inst412 <= 1000 && typeof (locale) != "undefined") {_RecordType("<9196,9202,315>",(locale)); Inst412++; } } catch(e) {}try { if (Inst413 <= 1000 && typeof (options) != "undefined") {_RecordType("<9204,9211,315>",(options)); Inst413++; } } catch(e) {}
try { if (Inst414 <= 1000 && typeof (test) != "undefined") {_RecordType("<9219,9223,316>",(test)); Inst414++; } } catch(e) {}try { if (Inst415 <= 1000 && typeof (locale) != "undefined") {_RecordType("<9224,9230,316>",(locale)); Inst415++; } } catch(e) {}try { if (Inst416 <= 1000 && typeof (options) != "undefined") {_RecordType("<9239,9246,316>",(options)); Inst416++; } } catch(e) {}try { if (Inst417 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<9248,9257,316>",(undefined)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<9259,9268,316>",(undefined)); Inst418++; } } catch(e) {}
    test(locale, false, options, undefined, undefined);
  }

try { if (Inst419 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<9287,9295,319>",(withHour)); Inst419++; } } catch(e) {}
  function withHour(locale, options, expectedHC, expectedHour12) {
try { if (Inst420 <= 1000 && typeof (locale) != "undefined") {_RecordType("<9296,9302,319>",(locale)); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (options) != "undefined") {_RecordType("<9304,9311,319>",(options)); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (expectedHC) != "undefined") {_RecordType("<9313,9323,319>",(expectedHC)); Inst422++; } } catch(e) {}try { if (Inst423 <= 1000 && typeof (expectedHour12) != "undefined") {_RecordType("<9325,9339,319>",(expectedHour12)); Inst423++; } } catch(e) {}
try { if (Inst424 <= 1000 && typeof (test) != "undefined") {_RecordType("<9347,9351,320>",(test)); Inst424++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (locale) != "undefined") {_RecordType("<9352,9358,320>",(locale)); Inst425++; } } catch(e) {}try { if (Inst426 <= 1000 && typeof (options) != "undefined") {_RecordType("<9366,9373,320>",(options)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (expectedHC) != "undefined") {_RecordType("<9375,9385,320>",(expectedHC)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (expectedHour12) != "undefined") {_RecordType("<9387,9401,320>",(expectedHour12)); Inst428++; } } catch(e) {}
    test(locale, true, options, expectedHC, expectedHour12);
  } // ensure hourCycle and hour properties are not there when we don't ask for them


try { if (Inst429 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9493,9504,324>",(withoutHour)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<9514,9523,324>",(undefined)); Inst430++; } } catch(e) {}
  withoutHour("en-US", undefined);
try { if (Inst431 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9528,9539,325>",(withoutHour)); Inst431++; } } catch(e) {}
  withoutHour("en-US", {
    hourCycle: "h11"
  });
try { if (Inst432 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9580,9591,328>",(withoutHour)); Inst432++; } } catch(e) {}
  withoutHour("en-US", {
    hour12: true
  });
try { if (Inst433 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9628,9639,331>",(withoutHour)); Inst433++; } } catch(e) {}
  withoutHour("en-US", {
    hourCycle: "h11",
    hour12: false
  });
try { if (Inst434 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9699,9710,335>",(withoutHour)); Inst434++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<9729,9738,335>",(undefined)); Inst435++; } } catch(e) {}
  withoutHour("en-US-u-hc-h24", undefined);
try { if (Inst436 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9743,9754,336>",(withoutHour)); Inst436++; } } catch(e) {}
  withoutHour("en-US-u-hc-h24", {
    hourCycle: "h11"
  });
try { if (Inst437 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9804,9815,339>",(withoutHour)); Inst437++; } } catch(e) {}
  withoutHour("en-US-u-hc-h24", {
    hour12: true
  });
try { if (Inst438 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<9861,9872,342>",(withoutHour)); Inst438++; } } catch(e) {}
  withoutHour("en-US-u-hc-h24", {
    hourCycle: "h11",
    hour12: false
  }); // ensure hourCycle and hour12 properties along with hour values are correct when we do ask for hour

try { if (Inst439 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10043,10051,347>",(withHour)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<10061,10070,347>",(undefined)); Inst440++; } } catch(e) {}
  withHour("en-US", undefined, "h12", true);
try { if (Inst441 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10088,10096,348>",(withHour)); Inst441++; } } catch(e) {}
  withHour("en-US", {
    hour12: false
  }, "h23", false);
try { if (Inst442 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10148,10156,351>",(withHour)); Inst442++; } } catch(e) {}
  withHour("en-US", {
    hourCycle: "h24"
  }, "h24", false);
try { if (Inst443 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10211,10219,354>",(withHour)); Inst443++; } } catch(e) {}
  withHour("en-US", {
    hourCycle: "h24",
    hour12: true
  }, "h12", true);
try { if (Inst444 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10291,10299,358>",(withHour)); Inst444++; } } catch(e) {}
  withHour("en-US", {
    hourCycle: "h11",
    hour12: false
  }, "h23", false);
try { if (Inst445 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10373,10381,362>",(withHour)); Inst445++; } } catch(e) {}try { if (Inst446 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<10400,10409,362>",(undefined)); Inst446++; } } catch(e) {}
  withHour("en-US-u-hc-h24", undefined, "h24", false);
try { if (Inst447 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10428,10436,363>",(withHour)); Inst447++; } } catch(e) {}
  withHour("en-US-u-hc-h24", {
    hourCycle: "h23"
  }, "h23", false);
try { if (Inst448 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10500,10508,366>",(withHour)); Inst448++; } } catch(e) {}
  withHour("en-US-u-hc-h24", {
    hourCycle: "h11"
  }, "h11", true);
try { if (Inst449 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10571,10579,369>",(withHour)); Inst449++; } } catch(e) {}
  withHour("en-US-u-hc-h24", {
    hour12: false
  }, "h23", false);
try { if (Inst450 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10640,10648,372>",(withHour)); Inst450++; } } catch(e) {}
  withHour("en-US-u-hc-h24", {
    hour12: true
  }, "h12", true);

try { if (Inst451 <= 1000 && typeof (new Intl.DateTimeFormat("en-GB").resolvedOptions().locale) != "undefined") {_RecordType("<10712,10769,376>",(new Intl.DateTimeFormat("en-GB").resolvedOptions().locale)); Inst451++; } } catch(e) {}try { if (Inst452 <= 1000 && typeof (new Intl.DateTimeFormat("en-GB").resolvedOptions) != "undefined") {_RecordType("<10712,10760,376>",(new Intl.DateTimeFormat("en-GB").resolvedOptions)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<10716,10735,376>",(Intl.DateTimeFormat)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<10716,10720,376>",(Intl)); Inst454++; } } catch(e) {}
  if (new Intl.DateTimeFormat("en-GB").resolvedOptions().locale === "en-GB") {
try { if (Inst455 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<10789,10800,377>",(withoutHour)); Inst455++; } } catch(e) {}try { if (Inst456 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<10810,10819,377>",(undefined)); Inst456++; } } catch(e) {}
    withoutHour("en-GB", undefined);
try { if (Inst457 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10826,10834,378>",(withHour)); Inst457++; } } catch(e) {}try { if (Inst458 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<10844,10853,378>",(undefined)); Inst458++; } } catch(e) {}
    withHour("en-GB", undefined, "h23", false);
try { if (Inst459 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10874,10882,379>",(withHour)); Inst459++; } } catch(e) {}
    withHour("en-GB", {
      hour12: true
    }, "h12", true);
try { if (Inst460 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<10938,10946,382>",(withHour)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<10965,10974,382>",(undefined)); Inst461++; } } catch(e) {}
    withHour("en-GB-u-hc-h24", undefined, "h24", false);
  }

try { if (Inst462 <= 1000 && typeof (new Intl.DateTimeFormat("ja-JP").resolvedOptions().locale) != "undefined") {_RecordType("<11002,11059,385>",(new Intl.DateTimeFormat("ja-JP").resolvedOptions().locale)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (new Intl.DateTimeFormat("ja-JP").resolvedOptions) != "undefined") {_RecordType("<11002,11050,385>",(new Intl.DateTimeFormat("ja-JP").resolvedOptions)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<11006,11025,385>",(Intl.DateTimeFormat)); Inst464++; } } catch(e) {}try { if (Inst465 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<11006,11010,385>",(Intl)); Inst465++; } } catch(e) {}
  if (new Intl.DateTimeFormat("ja-JP").resolvedOptions().locale === "ja-JP") {
try { if (Inst466 <= 1000 && typeof (withoutHour) != "undefined") {_RecordType("<11079,11090,386>",(withoutHour)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<11100,11109,386>",(undefined)); Inst467++; } } catch(e) {}
    withoutHour("ja-JP", undefined);
try { if (Inst468 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<11116,11124,387>",(withHour)); Inst468++; } } catch(e) {}try { if (Inst469 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<11134,11143,387>",(undefined)); Inst469++; } } catch(e) {}
    withHour("ja-JP", undefined, "h23", false);
try { if (Inst470 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<11164,11172,388>",(withHour)); Inst470++; } } catch(e) {}
    withHour("ja-JP", {
      hour12: true
    }, "h11", true);
try { if (Inst471 <= 1000 && typeof (withHour) != "undefined") {_RecordType("<11228,11236,391>",(withHour)); Inst471++; } } catch(e) {}try { if (Inst472 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<11255,11264,391>",(undefined)); Inst472++; } } catch(e) {}
    withHour("ja-JP-u-hc-h12", undefined, "h12", true);
  }
}

try { if (Inst473 <= 1000 && typeof (t5) != "undefined") {_RecordType("<11287,11289,395>",(t5)); Inst473++; } } catch(e) {}
t5();

try { if (Inst474 <= 1000 && typeof (t6) != "undefined") {_RecordType("<11303,11305,397>",(t6)); Inst474++; } } catch(e) {}
function t6() {
  // WinGlob does not implement formatToParts, which is used for more easily testing
  // Also, bizarrely, WinGlob code throws an exception *only in ch* when using timeZoneName
  // Bug: https://github.com/Microsoft/ChakraCore/issues/3096
try { if (Inst475 <= 1000 && typeof (isWinGlob) != "undefined") {_RecordType("<11555,11564,401>",(isWinGlob)); Inst475++; } } catch(e) {}
  if (isWinGlob) {
    return;
  }

try { if (Inst476 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<11587,11598,405>",(console.log)); Inst476++; } } catch(e) {}try { if (Inst477 <= 1000 && typeof (console) != "undefined") {_RecordType("<11587,11594,405>",(console)); Inst477++; } } catch(e) {}try { if (Inst478 <= 1000 && typeof (isICU) != "undefined") {_RecordType("<11599,11604,405>",(isICU)); Inst478++; } } catch(e) {}
  console.log(isICU);

try { if (Inst479 <= 1000 && typeof (innerTest) != "undefined") {_RecordType("<11619,11628,407>",(innerTest)); Inst479++; } } catch(e) {}
  function innerTest(date, timeZone, timeZoneName, expectedPart, expectedTimeZone) {
try { if (Inst480 <= 1000 && typeof (date) != "undefined") {_RecordType("<11629,11633,407>",(date)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<11635,11643,407>",(timeZone)); Inst481++; } } catch(e) {}try { if (Inst482 <= 1000 && typeof (timeZoneName) != "undefined") {_RecordType("<11645,11657,407>",(timeZoneName)); Inst482++; } } catch(e) {}try { if (Inst483 <= 1000 && typeof (expectedPart) != "undefined") {_RecordType("<11659,11671,407>",(expectedPart)); Inst483++; } } catch(e) {}try { if (Inst484 <= 1000 && typeof (expectedTimeZone) != "undefined") {_RecordType("<11673,11689,407>",(expectedTimeZone)); Inst484++; } } catch(e) {}
try { if (Inst486 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<11744,11752,410>",(timeZone)); Inst486++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (timeZoneName) != "undefined") {_RecordType("<11760,11772,411>",(timeZoneName)); Inst487++; } } catch(e) {}
    const options = {
      hour: "numeric",
      timeZone,
      timeZoneName
    };
try { if (Inst485 <= 1000 && typeof (options) != "undefined") {_RecordType("<11703,11710,408>",(options)); Inst485++; } } catch(e) {}
try { if (Inst489 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<11800,11819,413>",(Intl.DateTimeFormat)); Inst489++; } } catch(e) {}try { if (Inst490 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<11800,11804,413>",(Intl)); Inst490++; } } catch(e) {}try { if (Inst491 <= 1000 && typeof (options) != "undefined") {_RecordType("<11829,11836,413>",(options)); Inst491++; } } catch(e) {}
    const fmt = new Intl.DateTimeFormat("en-US", options);
try { if (Inst488 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<11790,11793,413>",(fmt)); Inst488++; } } catch(e) {}
try { if (Inst493 <= 1000 && typeof (fmt.resolvedOptions().timeZone) != "undefined") {_RecordType("<11866,11896,414>",(fmt.resolvedOptions().timeZone)); Inst493++; } } catch(e) {}try { if (Inst494 <= 1000 && typeof (fmt.resolvedOptions) != "undefined") {_RecordType("<11866,11885,414>",(fmt.resolvedOptions)); Inst494++; } } catch(e) {}try { if (Inst495 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<11866,11869,414>",(fmt)); Inst495++; } } catch(e) {}
    const actualTimeZone = fmt.resolvedOptions().timeZone;
try { if (Inst492 <= 1000 && typeof (actualTimeZone) != "undefined") {_RecordType("<11849,11863,414>",(actualTimeZone)); Inst492++; } } catch(e) {}
try { if (Inst496 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<11902,11913,415>",(console.log)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (console) != "undefined") {_RecordType("<11902,11909,415>",(console)); Inst497++; } } catch(e) {}try { if (Inst498 <= 1000 && typeof (expectedTimeZone) != "undefined") {_RecordType("<11914,11930,415>",(expectedTimeZone)); Inst498++; } } catch(e) {}try { if (Inst499 <= 1000 && typeof (actualTimeZone) != "undefined") {_RecordType("<11932,11946,415>",(actualTimeZone)); Inst499++; } } catch(e) {}
    console.log(expectedTimeZone, actualTimeZone, `resolvedOptions().timeZone was incorrect`);
try { if (Inst501 <= 1000 && typeof (fmt.formatToParts) != "undefined") {_RecordType("<12011,12028,416>",(fmt.formatToParts)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<12011,12014,416>",(fmt)); Inst502++; } } catch(e) {}try { if (Inst503 <= 1000 && typeof (date) != "undefined") {_RecordType("<12029,12033,416>",(date)); Inst503++; } } catch(e) {}
    const parts = fmt.formatToParts(date);
try { if (Inst500 <= 1000 && typeof (parts) != "undefined") {_RecordType("<12003,12008,416>",(parts)); Inst500++; } } catch(e) {}
try { if (Inst504 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<12040,12051,417>",(console.log)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (console) != "undefined") {_RecordType("<12040,12047,417>",(console)); Inst505++; } } catch(e) {}try { if (Inst506 <= 1000 && typeof (parts.length) != "undefined") {_RecordType("<12052,12064,417>",(parts.length)); Inst506++; } } catch(e) {}try { if (Inst507 <= 1000 && typeof (parts) != "undefined") {_RecordType("<12052,12057,417>",(parts)); Inst507++; } } catch(e) {}try { if (Inst508 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<12124,12138,417>",(JSON.stringify)); Inst508++; } } catch(e) {}try { if (Inst509 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<12124,12128,417>",(JSON)); Inst509++; } } catch(e) {}try { if (Inst510 <= 1000 && typeof (parts) != "undefined") {_RecordType("<12139,12144,417>",(parts)); Inst510++; } } catch(e) {}
    console.log(parts.length > 2, `There must at least be a time and timeZone part of ${JSON.stringify(parts)}`);
try { if (Inst512 <= 1000 && typeof (parts.filter(part => part.type === "timeZoneName")[0]) != "undefined") {_RecordType("<12173,12226,418>",(parts.filter(part => part.type === "timeZoneName")[0])); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (parts.filter) != "undefined") {_RecordType("<12173,12185,418>",(parts.filter)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (parts) != "undefined") {_RecordType("<12173,12178,418>",(parts)); Inst514++; } } catch(e) {}try { if (Inst515 <= 1000 && typeof (part) != "undefined") {_RecordType("<12186,12190,418>",(part)); Inst515++; } } catch(e) {}try { if (Inst516 <= 1000 && typeof (part.type) != "undefined") {_RecordType("<12194,12203,418>",(part.type)); Inst516++; } } catch(e) {}try { if (Inst517 <= 1000 && typeof (part) != "undefined") {_RecordType("<12194,12198,418>",(part)); Inst517++; } } catch(e) {}
    const actualPart = parts.filter(part => part.type === "timeZoneName")[0];
try { if (Inst511 <= 1000 && typeof (actualPart) != "undefined") {_RecordType("<12160,12170,418>",(actualPart)); Inst511++; } } catch(e) {}
try { if (Inst518 <= 1000 && typeof (assert.isNotUndefined) != "undefined") {_RecordType("<12232,12253,419>",(assert.isNotUndefined)); Inst518++; } } catch(e) {}try { if (Inst519 <= 1000 && typeof (assert) != "undefined") {_RecordType("<12232,12238,419>",(assert)); Inst519++; } } catch(e) {}try { if (Inst520 <= 1000 && typeof (actualPart) != "undefined") {_RecordType("<12254,12264,419>",(actualPart)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<12289,12303,419>",(JSON.stringify)); Inst521++; } } catch(e) {}try { if (Inst522 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<12289,12293,419>",(JSON)); Inst522++; } } catch(e) {}try { if (Inst523 <= 1000 && typeof (parts) != "undefined") {_RecordType("<12304,12309,419>",(parts)); Inst523++; } } catch(e) {}
    assert.isNotUndefined(actualPart, `No timeZone part in ${JSON.stringify(parts)}`);
try { if (Inst524 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<12319,12330,420>",(console.log)); Inst524++; } } catch(e) {}try { if (Inst525 <= 1000 && typeof (console) != "undefined") {_RecordType("<12319,12326,420>",(console)); Inst525++; } } catch(e) {}try { if (Inst526 <= 1000 && typeof (expectedPart) != "undefined") {_RecordType("<12331,12343,420>",(expectedPart)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (actualPart.value) != "undefined") {_RecordType("<12345,12361,420>",(actualPart.value)); Inst527++; } } catch(e) {}try { if (Inst528 <= 1000 && typeof (actualPart) != "undefined") {_RecordType("<12345,12355,420>",(actualPart)); Inst528++; } } catch(e) {}try { if (Inst529 <= 1000 && typeof (date.toString) != "undefined") {_RecordType("<12393,12406,420>",(date.toString)); Inst529++; } } catch(e) {}try { if (Inst530 <= 1000 && typeof (date) != "undefined") {_RecordType("<12393,12397,420>",(date)); Inst530++; } } catch(e) {}try { if (Inst531 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<12425,12439,420>",(JSON.stringify)); Inst531++; } } catch(e) {}try { if (Inst532 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<12425,12429,420>",(JSON)); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (options) != "undefined") {_RecordType("<12440,12447,420>",(options)); Inst533++; } } catch(e) {}
    console.log(expectedPart, actualPart.value, `Incorrect timeZoneName for ${date.toString()} with options ${JSON.stringify(options)}`);
  }

try { if (Inst534 <= 1000 && typeof (test) != "undefined") {_RecordType("<12469,12473,423>",(test)); Inst534++; } } catch(e) {}
  function test(date, timeZone, expectedShortPart, expectedLongPart, expectedTimeZone) {
try { if (Inst535 <= 1000 && typeof (date) != "undefined") {_RecordType("<12474,12478,423>",(date)); Inst535++; } } catch(e) {}try { if (Inst536 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<12480,12488,423>",(timeZone)); Inst536++; } } catch(e) {}try { if (Inst537 <= 1000 && typeof (expectedShortPart) != "undefined") {_RecordType("<12490,12507,423>",(expectedShortPart)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (expectedLongPart) != "undefined") {_RecordType("<12509,12525,423>",(expectedLongPart)); Inst538++; } } catch(e) {}try { if (Inst539 <= 1000 && typeof (expectedTimeZone) != "undefined") {_RecordType("<12527,12543,423>",(expectedTimeZone)); Inst539++; } } catch(e) {}
try { if (Inst540 <= 1000 && typeof (innerTest) != "undefined") {_RecordType("<12551,12560,424>",(innerTest)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (date) != "undefined") {_RecordType("<12561,12565,424>",(date)); Inst541++; } } catch(e) {}try { if (Inst542 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<12567,12575,424>",(timeZone)); Inst542++; } } catch(e) {}try { if (Inst543 <= 1000 && typeof (expectedShortPart) != "undefined") {_RecordType("<12586,12603,424>",(expectedShortPart)); Inst543++; } } catch(e) {}try { if (Inst544 <= 1000 && typeof (expectedTimeZone) != "undefined") {_RecordType("<12605,12621,424>",(expectedTimeZone)); Inst544++; } } catch(e) {}
    innerTest(date, timeZone, "short", expectedShortPart, expectedTimeZone);
try { if (Inst545 <= 1000 && typeof (innerTest) != "undefined") {_RecordType("<12628,12637,425>",(innerTest)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (date) != "undefined") {_RecordType("<12638,12642,425>",(date)); Inst546++; } } catch(e) {}try { if (Inst547 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<12644,12652,425>",(timeZone)); Inst547++; } } catch(e) {}try { if (Inst548 <= 1000 && typeof (expectedLongPart) != "undefined") {_RecordType("<12662,12678,425>",(expectedLongPart)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (expectedTimeZone) != "undefined") {_RecordType("<12680,12696,425>",(expectedTimeZone)); Inst549++; } } catch(e) {}
    innerTest(date, timeZone, "long", expectedLongPart, expectedTimeZone);
  }

try { if (Inst551 <= 1000 && typeof (Date) != "undefined") {_RecordType("<12727,12731,428>",(Date)); Inst551++; } } catch(e) {}try { if (Inst552 <= 1000 && typeof (Date.parse) != "undefined") {_RecordType("<12732,12742,428>",(Date.parse)); Inst552++; } } catch(e) {}try { if (Inst553 <= 1000 && typeof (Date) != "undefined") {_RecordType("<12732,12736,428>",(Date)); Inst553++; } } catch(e) {}
  const newYears = new Date(Date.parse("2018-01-01T00:00:00.000Z"));
try { if (Inst550 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<12712,12720,428>",(newYears)); Inst550++; } } catch(e) {}
try { if (Inst555 <= 1000 && typeof (Date) != "undefined") {_RecordType("<12797,12801,429>",(Date)); Inst555++; } } catch(e) {}try { if (Inst556 <= 1000 && typeof (Date.parse) != "undefined") {_RecordType("<12802,12812,429>",(Date.parse)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (Date) != "undefined") {_RecordType("<12802,12806,429>",(Date)); Inst557++; } } catch(e) {}
  const juneFirst = new Date(Date.parse("2018-06-01T00:00:00.000Z")); // see https://github.com/tc39/ecma402/issues/121 for edge cases here
try { if (Inst554 <= 1000 && typeof (juneFirst) != "undefined") {_RecordType("<12781,12790,429>",(juneFirst)); Inst554++; } } catch(e) {}
  // ICU ~55 formats GMT-like time zones as GMT, but ICU ~60 formats them as UTC

try { if (Inst559 <= 1000 && typeof (WScript.Platform.ICU_VERSION) != "undefined") {_RecordType("<13014,13042,432>",(WScript.Platform.ICU_VERSION)); Inst559++; } } catch(e) {}try { if (Inst560 <= 1000 && typeof (WScript.Platform) != "undefined") {_RecordType("<13014,13030,432>",(WScript.Platform)); Inst560++; } } catch(e) {}try { if (Inst561 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<13014,13021,432>",(WScript)); Inst561++; } } catch(e) {}
  const UTCshort = WScript.Platform.ICU_VERSION >= 59 ? "UTC" : "GMT";
try { if (Inst558 <= 1000 && typeof (UTCshort) != "undefined") {_RecordType("<13003,13011,432>",(UTCshort)); Inst558++; } } catch(e) {}
try { if (Inst563 <= 1000 && typeof (WScript.Platform.ICU_VERSION) != "undefined") {_RecordType("<13084,13112,433>",(WScript.Platform.ICU_VERSION)); Inst563++; } } catch(e) {}try { if (Inst564 <= 1000 && typeof (WScript.Platform) != "undefined") {_RecordType("<13084,13100,433>",(WScript.Platform)); Inst564++; } } catch(e) {}try { if (Inst565 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<13084,13091,433>",(WScript)); Inst565++; } } catch(e) {}
  const UTClong = WScript.Platform.ICU_VERSION >= 59 ? "Coordinated Universal Time" : "GMT";
try { if (Inst562 <= 1000 && typeof (UTClong) != "undefined") {_RecordType("<13074,13081,433>",(UTClong)); Inst562++; } } catch(e) {}
try { if (Inst566 <= 1000 && typeof (test) != "undefined") {_RecordType("<13161,13165,434>",(test)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13166,13174,434>",(newYears)); Inst567++; } } catch(e) {}try { if (Inst568 <= 1000 && typeof (UTCshort) != "undefined") {_RecordType("<13183,13191,434>",(UTCshort)); Inst568++; } } catch(e) {}try { if (Inst569 <= 1000 && typeof (UTClong) != "undefined") {_RecordType("<13193,13200,434>",(UTClong)); Inst569++; } } catch(e) {}
  test(newYears, "GMT", UTCshort, UTClong, "UTC");
try { if (Inst570 <= 1000 && typeof (test) != "undefined") {_RecordType("<13212,13216,435>",(test)); Inst570++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13217,13225,435>",(newYears)); Inst571++; } } catch(e) {}try { if (Inst572 <= 1000 && typeof (UTCshort) != "undefined") {_RecordType("<13238,13246,435>",(UTCshort)); Inst572++; } } catch(e) {}try { if (Inst573 <= 1000 && typeof (UTClong) != "undefined") {_RecordType("<13248,13255,435>",(UTClong)); Inst573++; } } catch(e) {}
  test(newYears, "Etc/GMT", UTCshort, UTClong, "UTC");
try { if (Inst574 <= 1000 && typeof (test) != "undefined") {_RecordType("<13267,13271,436>",(test)); Inst574++; } } catch(e) {}try { if (Inst575 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13272,13280,436>",(newYears)); Inst575++; } } catch(e) {}try { if (Inst576 <= 1000 && typeof (UTCshort) != "undefined") {_RecordType("<13293,13301,436>",(UTCshort)); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (UTClong) != "undefined") {_RecordType("<13303,13310,436>",(UTClong)); Inst577++; } } catch(e) {}
  test(newYears, "Etc/UTC", UTCshort, UTClong, "UTC");
try { if (Inst578 <= 1000 && typeof (test) != "undefined") {_RecordType("<13322,13326,437>",(test)); Inst578++; } } catch(e) {}try { if (Inst579 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13327,13335,437>",(newYears)); Inst579++; } } catch(e) {}try { if (Inst580 <= 1000 && typeof (UTCshort) != "undefined") {_RecordType("<13348,13356,437>",(UTCshort)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (UTClong) != "undefined") {_RecordType("<13358,13365,437>",(UTClong)); Inst581++; } } catch(e) {}
  test(newYears, "Etc/UCT", UTCshort, UTClong, "UTC");
try { if (Inst582 <= 1000 && typeof (test) != "undefined") {_RecordType("<13377,13381,438>",(test)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13382,13390,438>",(newYears)); Inst583++; } } catch(e) {}
  test(newYears, "US/Pacific", "PST", "Pacific Standard Time", "America/Los_Angeles");
try { if (Inst584 <= 1000 && typeof (test) != "undefined") {_RecordType("<13464,13468,439>",(test)); Inst584++; } } catch(e) {}try { if (Inst585 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13469,13477,439>",(newYears)); Inst585++; } } catch(e) {}
  test(newYears, "Etc/GMT-2", "GMT+2", "GMT+02:00", "Etc/GMT-2");
try { if (Inst586 <= 1000 && typeof (test) != "undefined") {_RecordType("<13530,13534,440>",(test)); Inst586++; } } catch(e) {}try { if (Inst587 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13535,13543,440>",(newYears)); Inst587++; } } catch(e) {}
  test(newYears, "America/New_York", "EST", "Eastern Standard Time", "America/New_York");
try { if (Inst588 <= 1000 && typeof (test) != "undefined") {_RecordType("<13620,13624,441>",(test)); Inst588++; } } catch(e) {}try { if (Inst589 <= 1000 && typeof (newYears) != "undefined") {_RecordType("<13625,13633,441>",(newYears)); Inst589++; } } catch(e) {}
  test(newYears, "America/Los_Angeles", "PST", "Pacific Standard Time", "America/Los_Angeles");
try { if (Inst590 <= 1000 && typeof (test) != "undefined") {_RecordType("<13716,13720,442>",(test)); Inst590++; } } catch(e) {}try { if (Inst591 <= 1000 && typeof (juneFirst) != "undefined") {_RecordType("<13721,13730,442>",(juneFirst)); Inst591++; } } catch(e) {}
  test(juneFirst, "America/New_York", "EDT", "Eastern Daylight Time", "America/New_York");
try { if (Inst592 <= 1000 && typeof (test) != "undefined") {_RecordType("<13807,13811,443>",(test)); Inst592++; } } catch(e) {}try { if (Inst593 <= 1000 && typeof (juneFirst) != "undefined") {_RecordType("<13812,13821,443>",(juneFirst)); Inst593++; } } catch(e) {}
  test(juneFirst, "America/Los_Angeles", "PDT", "Pacific Daylight Time", "America/Los_Angeles");
}

try { if (Inst594 <= 1000 && typeof (t6) != "undefined") {_RecordType("<13905,13907,446>",(t6)); Inst594++; } } catch(e) {}
t6();

try { if (Inst595 <= 1000 && typeof (t7) != "undefined") {_RecordType("<13921,13923,448>",(t7)); Inst595++; } } catch(e) {}
function t7() {
try { if (Inst596 <= 1000 && typeof (isWinGlob) != "undefined") {_RecordType("<13934,13943,449>",(isWinGlob)); Inst596++; } } catch(e) {}
  if (isWinGlob) {
    return;
  } // This test raised Microsoft/ChakraCore#4885 and tc39/ecma402#225 - In the original ICU implementation
  // of Intl.DateTimeFormat, we would generate the date pattern using the fully resolved locale, including
  // any unicode extension keys to specify the calendar and numbering system.
  // This caused ICU to generate more accurate patterns in the given calendar system, but is not spec
  // compliant by #sec-initializedatetimeformat as of Intl 2018.
  // Revisit the values for chinese and dangi calendars in particular in the future if pattern generation
  // switches to using the full locale instead of just the basename, as those calendar systems prefer to
  // to be represented in ICU by a year name and a related gregorian year.


try { if (Inst598 <= 1000 && typeof (Date) != "undefined") {_RecordType("<14723,14727,461>",(Date)); Inst598++; } } catch(e) {}try { if (Inst599 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<14728,14736,461>",(Date.UTC)); Inst599++; } } catch(e) {}try { if (Inst600 <= 1000 && typeof (Date) != "undefined") {_RecordType("<14728,14732,461>",(Date)); Inst600++; } } catch(e) {}
  const d = new Date(Date.UTC(2018, 2, 27, 12, 0, 0)); // lists of calendars and aliases taken from https://unicode.org/repos/cldr/trunk/common/bcp47/calendar.xml
try { if (Inst597 <= 1000 && typeof (d) != "undefined") {_RecordType("<14715,14716,461>",(d)); Inst597++; } } catch(e) {}
  // as of March 27th, 2018

  const yearForCalendar = {
    buddhist: {
      latn: "2561",
      thai: "๒๕๖๑"
    },
    // TODO(jahorto): investigate chinese and dangi calendars - Microsoft/ChakraCore#4885
    chinese: {
      latn: "35",
      thai: "๓๕"
    },
    coptic: {
      latn: "1734",
      thai: "๑๗๓๔"
    },
    dangi: {
      latn: "35",
      thai: "๓๕"
    },
    ethioaa: {
      latn: "7510",
      thai: "๗๕๑๐"
    },
    ethiopic: {
      latn: "2010",
      thai: "๒๐๑๐"
    },
    gregory: {
      latn: "2018",
      thai: "๒๐๑๘"
    },
    hebrew: {
      latn: "5778",
      thai: "๕๗๗๘"
    },
    indian: {
      latn: "1940",
      thai: "๑๙๔๐"
    },
    islamic: {
      latn: "1439",
      thai: "๑๔๓๙"
    },
    "islamic-umalqura": {
      latn: "1439",
      thai: "๑๔๓๙"
    },
    "islamic-tbla": {
      latn: "1439",
      thai: "๑๔๓๙"
    },
    "islamic-civil": {
      latn: "1439",
      thai: "๑๔๓๙"
    },
    "islamic-rgsa": {
      latn: "1439",
      thai: "๑๔๓๙"
    },
    iso8601: {
      latn: "2018",
      thai: "๒๐๑๘"
    },
    japanese: {
      latn: "30",
      thai: "๓๐"
    },
    persian: {
      latn: "1397",
      thai: "๑๓๙๗"
    },
    roc: {
      latn: "107",
      thai: "๑๐๗"
    }
  };
try { if (Inst601 <= 1000 && typeof (yearForCalendar) != "undefined") {_RecordType("<14907,14922,464>",(yearForCalendar)); Inst601++; } } catch(e) {}
  const calendarAliases = {
    ethioaa: ["ethiopic-amete-alem"],
    // ICU does not recognize "gregorian" as a valid alias
    // gregory: ["gregorian"],
    "islamic-civil": ["islamicc"]
  };
try { if (Inst602 <= 1000 && typeof (calendarAliases) != "undefined") {_RecordType("<16140,16155,539>",(calendarAliases)); Inst602++; } } catch(e) {}

try { if (Inst603 <= 1000 && typeof (test) != "undefined") {_RecordType("<16339,16343,546>",(test)); Inst603++; } } catch(e) {}
  function test(expected, base, calendar, numberingSystem) {
try { if (Inst604 <= 1000 && typeof (expected) != "undefined") {_RecordType("<16344,16352,546>",(expected)); Inst604++; } } catch(e) {}try { if (Inst605 <= 1000 && typeof (base) != "undefined") {_RecordType("<16354,16358,546>",(base)); Inst605++; } } catch(e) {}try { if (Inst606 <= 1000 && typeof (calendar) != "undefined") {_RecordType("<16360,16368,546>",(calendar)); Inst606++; } } catch(e) {}try { if (Inst607 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<16370,16385,546>",(numberingSystem)); Inst607++; } } catch(e) {}
try { if (Inst609 <= 1000 && typeof (base) != "undefined") {_RecordType("<16410,16414,547>",(base)); Inst609++; } } catch(e) {}try { if (Inst610 <= 1000 && typeof (calendar) != "undefined") {_RecordType("<16423,16431,547>",(calendar)); Inst610++; } } catch(e) {}
    let langtag = `${base}-u-ca-${calendar}`;
try { if (Inst608 <= 1000 && typeof (langtag) != "undefined") {_RecordType("<16397,16404,547>",(langtag)); Inst608++; } } catch(e) {}

try { if (Inst611 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<16444,16459,549>",(numberingSystem)); Inst611++; } } catch(e) {}
    if (numberingSystem) {
try { if (Inst613 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<16487,16502,550>",(numberingSystem)); Inst613++; } } catch(e) {}
      langtag += `-nu-${numberingSystem}`;
try { if (Inst612 <= 1000 && typeof (langtag) != "undefined") {_RecordType("<16469,16476,550>",(langtag)); Inst612++; } } catch(e) {}
    } // Extract just the year out of the string to ensure we don't get confused by added information, like eras.


try { if (Inst615 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<16642,16661,554>",(Intl.DateTimeFormat)); Inst615++; } } catch(e) {}try { if (Inst616 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<16642,16646,554>",(Intl)); Inst616++; } } catch(e) {}try { if (Inst617 <= 1000 && typeof (langtag) != "undefined") {_RecordType("<16662,16669,554>",(langtag)); Inst617++; } } catch(e) {}
    const fmt = new Intl.DateTimeFormat(langtag, {
      year: "numeric"
    });
try { if (Inst614 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<16632,16635,554>",(fmt)); Inst614++; } } catch(e) {}
try { if (Inst618 <= 1000 && typeof (fmt.format) != "undefined") {_RecordType("<16707,16717,557>",(fmt.format)); Inst618++; } } catch(e) {}try { if (Inst619 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<16707,16710,557>",(fmt)); Inst619++; } } catch(e) {}try { if (Inst620 <= 1000 && typeof (d) != "undefined") {_RecordType("<16718,16719,557>",(d)); Inst620++; } } catch(e) {}
    fmt.format(d);
try { if (Inst621 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<16726,16729,558>",(fmt)); Inst621++; } } catch(e) {}
    fmt;
try { if (Inst622 <= 1000 && typeof (d) != "undefined") {_RecordType("<16735,16736,559>",(d)); Inst622++; } } catch(e) {}
    d;
try { if (Inst623 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<16742,16753,560>",(console.log)); Inst623++; } } catch(e) {}try { if (Inst624 <= 1000 && typeof (console) != "undefined") {_RecordType("<16742,16749,560>",(console)); Inst624++; } } catch(e) {}try { if (Inst625 <= 1000 && typeof (expected) != "undefined") {_RecordType("<16754,16762,560>",(expected)); Inst625++; } } catch(e) {}try { if (Inst626 <= 1000 && typeof (fmt.formatToParts(d).filter(part => part.type === "year")[0].value) != "undefined") {_RecordType("<16764,16830,560>",(fmt.formatToParts(d).filter(part => part.type === "year")[0].value)); Inst626++; } } catch(e) {}try { if (Inst627 <= 1000 && typeof (fmt.formatToParts(d).filter(part => part.type === "year")[0]) != "undefined") {_RecordType("<16764,16824,560>",(fmt.formatToParts(d).filter(part => part.type === "year")[0])); Inst627++; } } catch(e) {}try { if (Inst628 <= 1000 && typeof (fmt.formatToParts(d).filter) != "undefined") {_RecordType("<16764,16791,560>",(fmt.formatToParts(d).filter)); Inst628++; } } catch(e) {}try { if (Inst629 <= 1000 && typeof (fmt.formatToParts) != "undefined") {_RecordType("<16764,16781,560>",(fmt.formatToParts)); Inst629++; } } catch(e) {}try { if (Inst630 <= 1000 && typeof (fmt) != "undefined") {_RecordType("<16764,16767,560>",(fmt)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (d) != "undefined") {_RecordType("<16782,16783,560>",(d)); Inst631++; } } catch(e) {}try { if (Inst632 <= 1000 && typeof (part) != "undefined") {_RecordType("<16792,16796,560>",(part)); Inst632++; } } catch(e) {}try { if (Inst633 <= 1000 && typeof (part.type) != "undefined") {_RecordType("<16800,16809,560>",(part.type)); Inst633++; } } catch(e) {}try { if (Inst634 <= 1000 && typeof (part) != "undefined") {_RecordType("<16800,16804,560>",(part)); Inst634++; } } catch(e) {}try { if (Inst635 <= 1000 && typeof (langtag) != "undefined") {_RecordType("<16835,16842,560>",(langtag)); Inst635++; } } catch(e) {}
    console.log(expected, fmt.formatToParts(d).filter(part => part.type === "year")[0].value, `${langtag} did not produce the correct year`);
  }

try { if (Inst636 <= 1000 && typeof (testEachCalendar) != "undefined") {_RecordType("<16896,16912,563>",(testEachCalendar)); Inst636++; } } catch(e) {}
  function testEachCalendar(numberingSystem) {
try { if (Inst637 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<16913,16928,563>",(numberingSystem)); Inst637++; } } catch(e) {}
    for (const calendar of Object.getOwnPropertyNames(yearForCalendar)) {
try { if (Inst638 <= 1000 && typeof (calendar) != "undefined") {_RecordType("<16947,16955,564>",(calendar)); Inst638++; } } catch(e) {}try { if (Inst639 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<16959,16985,564>",(Object.getOwnPropertyNames)); Inst639++; } } catch(e) {}try { if (Inst640 <= 1000 && typeof (Object) != "undefined") {_RecordType("<16959,16965,564>",(Object)); Inst640++; } } catch(e) {}try { if (Inst641 <= 1000 && typeof (yearForCalendar) != "undefined") {_RecordType("<16986,17001,564>",(yearForCalendar)); Inst641++; } } catch(e) {}
try { if (Inst642 <= 1000 && typeof (test) != "undefined") {_RecordType("<17012,17016,565>",(test)); Inst642++; } } catch(e) {}try { if (Inst643 <= 1000 && typeof (yearForCalendar[calendar][numberingSystem || "latn"]) != "undefined") {_RecordType("<17017,17069,565>",(yearForCalendar[calendar][numberingSystem || "latn"])); Inst643++; } } catch(e) {}try { if (Inst644 <= 1000 && typeof (yearForCalendar[calendar]) != "undefined") {_RecordType("<17017,17042,565>",(yearForCalendar[calendar])); Inst644++; } } catch(e) {}try { if (Inst645 <= 1000 && typeof (yearForCalendar) != "undefined") {_RecordType("<17017,17032,565>",(yearForCalendar)); Inst645++; } } catch(e) {}try { if (Inst646 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<17043,17058,565>",(numberingSystem)); Inst646++; } } catch(e) {}try { if (Inst647 <= 1000 && typeof (calendar) != "undefined") {_RecordType("<17077,17085,565>",(calendar)); Inst647++; } } catch(e) {}try { if (Inst648 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<17087,17102,565>",(numberingSystem)); Inst648++; } } catch(e) {}
      test(yearForCalendar[calendar][numberingSystem || "latn"], "en", calendar, numberingSystem);

try { if (Inst649 <= 1000 && typeof (calendar) != "undefined") {_RecordType("<17116,17124,567>",(calendar)); Inst649++; } } catch(e) {}try { if (Inst650 <= 1000 && typeof (calendarAliases) != "undefined") {_RecordType("<17128,17143,567>",(calendarAliases)); Inst650++; } } catch(e) {}
      if (calendar in calendarAliases) {
try { if (Inst652 <= 1000 && typeof (calendarAliases[calendar]) != "undefined") {_RecordType("<17171,17196,568>",(calendarAliases[calendar])); Inst652++; } } catch(e) {}try { if (Inst653 <= 1000 && typeof (calendarAliases) != "undefined") {_RecordType("<17171,17186,568>",(calendarAliases)); Inst653++; } } catch(e) {}
        const aliases = calendarAliases[calendar];
try { if (Inst651 <= 1000 && typeof (aliases) != "undefined") {_RecordType("<17161,17168,568>",(aliases)); Inst651++; } } catch(e) {}

        for (const alias of aliases) {
try { if (Inst654 <= 1000 && typeof (alias) != "undefined") {_RecordType("<17218,17223,570>",(alias)); Inst654++; } } catch(e) {}try { if (Inst655 <= 1000 && typeof (aliases) != "undefined") {_RecordType("<17227,17234,570>",(aliases)); Inst655++; } } catch(e) {}
try { if (Inst656 <= 1000 && typeof (test) != "undefined") {_RecordType("<17248,17252,571>",(test)); Inst656++; } } catch(e) {}try { if (Inst657 <= 1000 && typeof (yearForCalendar[calendar][numberingSystem || "latn"]) != "undefined") {_RecordType("<17253,17305,571>",(yearForCalendar[calendar][numberingSystem || "latn"])); Inst657++; } } catch(e) {}try { if (Inst658 <= 1000 && typeof (yearForCalendar[calendar]) != "undefined") {_RecordType("<17253,17278,571>",(yearForCalendar[calendar])); Inst658++; } } catch(e) {}try { if (Inst659 <= 1000 && typeof (yearForCalendar) != "undefined") {_RecordType("<17253,17268,571>",(yearForCalendar)); Inst659++; } } catch(e) {}try { if (Inst660 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<17279,17294,571>",(numberingSystem)); Inst660++; } } catch(e) {}try { if (Inst661 <= 1000 && typeof (alias) != "undefined") {_RecordType("<17313,17318,571>",(alias)); Inst661++; } } catch(e) {}try { if (Inst662 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<17320,17335,571>",(numberingSystem)); Inst662++; } } catch(e) {}
          test(yearForCalendar[calendar][numberingSystem || "latn"], "en", alias, numberingSystem);
        }
      }
    }
  }

  for (const numberingSystem of [undefined, "latn", "thai"]) {
try { if (Inst663 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<17380,17395,577>",(numberingSystem)); Inst663++; } } catch(e) {}try { if (Inst664 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<17400,17409,577>",(undefined)); Inst664++; } } catch(e) {}
try { if (Inst665 <= 1000 && typeof (testEachCalendar) != "undefined") {_RecordType("<17434,17450,578>",(testEachCalendar)); Inst665++; } } catch(e) {}try { if (Inst666 <= 1000 && typeof (numberingSystem) != "undefined") {_RecordType("<17451,17466,578>",(numberingSystem)); Inst666++; } } catch(e) {}
    testEachCalendar(numberingSystem);
  }
}

try { if (Inst667 <= 1000 && typeof (t7) != "undefined") {_RecordType("<17476,17478,582>",(t7)); Inst667++; } } catch(e) {}
t7();

try { if (Inst668 <= 1000 && typeof (t8) != "undefined") {_RecordType("<17492,17494,584>",(t8)); Inst668++; } } catch(e) {}
function t8() {
try { if (Inst669 <= 1000 && typeof (isWinGlob) != "undefined") {_RecordType("<17505,17514,585>",(isWinGlob)); Inst669++; } } catch(e) {}
  if (isWinGlob) {
    return;
  }

try { if (Inst671 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<17553,17572,589>",(Intl.DateTimeFormat)); Inst671++; } } catch(e) {}try { if (Inst672 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<17553,17557,589>",(Intl)); Inst672++; } } catch(e) {}
  const dtf = new Intl.DateTimeFormat("en", {
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  });
try { if (Inst670 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<17543,17546,589>",(dtf)); Inst670++; } } catch(e) {}

  for (const nearZero of [-0.9, -0.1, -Number.MIN_VALUE, -0, +0, Number.MIN_VALUE, 0.1, 0.9]) {
try { if (Inst673 <= 1000 && typeof (nearZero) != "undefined") {_RecordType("<17667,17675,595>",(nearZero)); Inst673++; } } catch(e) {}try { if (Inst674 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<17693,17709,595>",(Number.MIN_VALUE)); Inst674++; } } catch(e) {}try { if (Inst675 <= 1000 && typeof (Number) != "undefined") {_RecordType("<17693,17699,595>",(Number)); Inst675++; } } catch(e) {}try { if (Inst676 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<17719,17735,595>",(Number.MIN_VALUE)); Inst676++; } } catch(e) {}try { if (Inst677 <= 1000 && typeof (Number) != "undefined") {_RecordType("<17719,17725,595>",(Number)); Inst677++; } } catch(e) {}
try { if (Inst678 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<17754,17765,596>",(console.log)); Inst678++; } } catch(e) {}try { if (Inst679 <= 1000 && typeof (console) != "undefined") {_RecordType("<17754,17761,596>",(console)); Inst679++; } } catch(e) {}try { if (Inst680 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<17766,17776,596>",(dtf.format)); Inst680++; } } catch(e) {}try { if (Inst681 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<17766,17769,596>",(dtf)); Inst681++; } } catch(e) {}try { if (Inst682 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<17781,17791,596>",(dtf.format)); Inst682++; } } catch(e) {}try { if (Inst683 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<17781,17784,596>",(dtf)); Inst683++; } } catch(e) {}try { if (Inst684 <= 1000 && typeof (nearZero) != "undefined") {_RecordType("<17792,17800,596>",(nearZero)); Inst684++; } } catch(e) {}try { if (Inst685 <= 1000 && typeof (nearZero) != "undefined") {_RecordType("<17823,17831,596>",(nearZero)); Inst685++; } } catch(e) {}
    console.log(dtf.format(0), dtf.format(nearZero), `Formatting 0 and ${nearZero} should produce the same result`);
  }

try { if (Inst688 <= 1000 && typeof (e) != "undefined") {_RecordType("<17921,17922,601>",(e)); Inst688++; } } catch(e) {}
  try {
try { if (Inst686 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<17884,17894,600>",(dtf.format)); Inst686++; } } catch(e) {}try { if (Inst687 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<17884,17887,600>",(dtf)); Inst687++; } } catch(e) {}
    dtf.format(-8.64e15 - 1);
  } catch (e) {
    ;
  }

try { if (Inst689 <= 1000 && typeof (assert.doesNotThrow) != "undefined") {_RecordType("<17939,17958,605>",(assert.doesNotThrow)); Inst689++; } } catch(e) {}try { if (Inst690 <= 1000 && typeof (assert) != "undefined") {_RecordType("<17939,17945,605>",(assert)); Inst690++; } } catch(e) {}try { if (Inst691 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<17965,17975,605>",(dtf.format)); Inst691++; } } catch(e) {}try { if (Inst692 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<17965,17968,605>",(dtf)); Inst692++; } } catch(e) {}
  assert.doesNotThrow(() => dtf.format(-8.64e15), "Formatting the beginning of ES time");
try { if (Inst693 <= 1000 && typeof (assert.doesNotThrow) != "undefined") {_RecordType("<18029,18048,606>",(assert.doesNotThrow)); Inst693++; } } catch(e) {}try { if (Inst694 <= 1000 && typeof (assert) != "undefined") {_RecordType("<18029,18035,606>",(assert)); Inst694++; } } catch(e) {}try { if (Inst695 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<18055,18065,606>",(dtf.format)); Inst695++; } } catch(e) {}try { if (Inst696 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<18055,18058,606>",(dtf)); Inst696++; } } catch(e) {}
  assert.doesNotThrow(() => dtf.format(8.64e15), "Formatting the end of ES time");

try { if (Inst699 <= 1000 && typeof (e) != "undefined") {_RecordType("<18159,18160,610>",(e)); Inst699++; } } catch(e) {}
  try {
try { if (Inst697 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<18123,18133,609>",(dtf.format)); Inst697++; } } catch(e) {}try { if (Inst698 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<18123,18126,609>",(dtf)); Inst698++; } } catch(e) {}
    dtf.format(8.64e15 + 1);
  } catch (e) {
    ;
  }
}

try { if (Inst700 <= 1000 && typeof (t8) != "undefined") {_RecordType("<18177,18179,615>",(t8)); Inst700++; } } catch(e) {}
t8();

