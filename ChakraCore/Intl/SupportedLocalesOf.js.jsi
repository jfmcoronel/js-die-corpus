var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst1 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<382,395,5>",(Intl.Collator)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<382,386,5>",(Intl)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<397,414,5>",(Intl.NumberFormat)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<397,401,5>",(Intl)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<416,435,5>",(Intl.DateTimeFormat)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<416,420,5>",(Intl)); Inst6++; } } catch(e) {}
const ctors = [Intl.Collator, Intl.NumberFormat, Intl.DateTimeFormat];
try { if (Inst0 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<373,378,5>",(ctors)); Inst0++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (assertEachIsOneOf) != "undefined") {_RecordType("<448,465,7>",(assertEachIsOneOf)); Inst7++; } } catch(e) {}
function assertEachIsOneOf(expectedList, actualList, msg) {
try { if (Inst8 <= 1000 && typeof (expectedList) != "undefined") {_RecordType("<466,478,7>",(expectedList)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (actualList) != "undefined") {_RecordType("<480,490,7>",(actualList)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (msg) != "undefined") {_RecordType("<492,495,7>",(msg)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (actualList) != "undefined") {_RecordType("<506,516,8>",(actualList)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (actualList.length) != "undefined") {_RecordType("<520,537,8>",(actualList.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (actualList) != "undefined") {_RecordType("<520,530,8>",(actualList)); Inst13++; } } catch(e) {}
  if (!actualList || actualList.length === 0) {
    ;
  }

  for (a of actualList) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<565,566,12>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (actualList) != "undefined") {_RecordType("<570,580,12>",(actualList)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<588,599,13>",(console.log)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (console) != "undefined") {_RecordType("<588,595,13>",(console)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (expectedList.includes) != "undefined") {_RecordType("<600,621,13>",(expectedList.includes)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (expectedList) != "undefined") {_RecordType("<600,612,13>",(expectedList)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<622,623,13>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (msg) != "undefined") {_RecordType("<626,629,13>",(msg)); Inst21++; } } catch(e) {}
    console.log(expectedList.includes(a), msg);
  }
}

try { if (Inst22 <= 1000 && typeof (t1) != "undefined") {_RecordType("<648,650,17>",(t1)); Inst22++; } } catch(e) {}
function t1() {
  const rangeErrorMessage = "Option value 'incorrect' for 'localeMatcher' is outside of valid range. Expected: ['best fit', 'lookup']";
try { if (Inst23 <= 1000 && typeof (rangeErrorMessage) != "undefined") {_RecordType("<663,680,18>",(rangeErrorMessage)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (length) != "undefined") {_RecordType("<823,829,20>",(length)); Inst25++; } } catch(e) {}
  const fakeLocales = {
    get length() {
try { if (Inst26 <= 1000 && typeof (Error) != "undefined") {_RecordType("<850,855,21>",(Error)); Inst26++; } } catch(e) {}
      throw new Error("User-provided locale object throws");
    }

  };
try { if (Inst24 <= 1000 && typeof (fakeLocales) != "undefined") {_RecordType("<799,810,19>",(fakeLocales)); Inst24++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<919,923,26>",(test)); Inst27++; } } catch(e) {}
  function test(ctor) {
try { if (Inst28 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<924,928,26>",(ctor)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<992,993,29>",(e)); Inst31++; } } catch(e) {}
    try {
try { if (Inst29 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<952,975,28>",(ctor.supportedLocalesOf)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<952,956,28>",(ctor)); Inst30++; } } catch(e) {}
      new ctor.supportedLocalesOf();
    } catch (e) {
      ;
    }

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<1122,1123,37>",(e)); Inst36++; } } catch(e) {}
    try {
try { if (Inst32 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<1028,1045,34>",(Reflect.construct)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1028,1035,34>",(Reflect)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1083,1106,36>",(ctor.supportedLocalesOf)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1083,1087,36>",(ctor)); Inst35++; } } catch(e) {}
      Reflect.construct(function () {
        ;
      }, [], ctor.supportedLocalesOf);
    } catch (e) {
      ;
    }

try { if (Inst39 <= 1000 && typeof (e) != "undefined") {_RecordType("<1253,1254,45>",(e)); Inst39++; } } catch(e) {}
    try {
try { if (Inst37 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1158,1181,42>",(ctor.supportedLocalesOf)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1158,1162,42>",(ctor)); Inst38++; } } catch(e) {}
      ctor.supportedLocalesOf(["en-US"], {
        localeMatcher: "incorrect"
      });
    } catch (e) {
      ;
    }

try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<1333,1334,51>",(e)); Inst42++; } } catch(e) {}
    try {
try { if (Inst40 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1289,1312,50>",(ctor.supportedLocalesOf)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1289,1293,50>",(ctor)); Inst41++; } } catch(e) {}
      ctor.supportedLocalesOf(null);
    } catch (e) {
      ;
    }

try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<1420,1421,57>",(e)); Inst46++; } } catch(e) {}
    try {
try { if (Inst43 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1369,1392,56>",(ctor.supportedLocalesOf)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1369,1373,56>",(ctor)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (fakeLocales) != "undefined") {_RecordType("<1393,1404,56>",(fakeLocales)); Inst45++; } } catch(e) {}
      ctor.supportedLocalesOf(fakeLocales);
    } catch (e) {
      ;
    }
  }

try { if (Inst47 <= 1000 && typeof (ctors.forEach) != "undefined") {_RecordType("<1446,1459,62>",(ctors.forEach)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<1446,1451,62>",(ctors)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (test) != "undefined") {_RecordType("<1460,1464,62>",(test)); Inst49++; } } catch(e) {}
  ctors.forEach(test);
}

try { if (Inst50 <= 1000 && typeof (t1) != "undefined") {_RecordType("<1470,1472,65>",(t1)); Inst50++; } } catch(e) {}
t1();

try { if (Inst51 <= 1000 && typeof (t2) != "undefined") {_RecordType("<1486,1488,67>",(t2)); Inst51++; } } catch(e) {}
function t2() {
try { if (Inst52 <= 1000 && typeof (test) != "undefined") {_RecordType("<1504,1508,68>",(test)); Inst52++; } } catch(e) {}
  function test(ctor) {
try { if (Inst53 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1509,1513,68>",(ctor)); Inst53++; } } catch(e) {}
    ["en", "en-US"];
try { if (Inst54 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1542,1565,70>",(ctor.supportedLocalesOf)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1542,1546,70>",(ctor)); Inst55++; } } catch(e) {}
    ctor.supportedLocalesOf(["en"]);
    ["en", "en-US"];
try { if (Inst56 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1600,1623,72>",(ctor.supportedLocalesOf)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1600,1604,72>",(ctor)); Inst57++; } } catch(e) {}
    ctor.supportedLocalesOf(["en"], {
      localeMatcher: "lookup"
    });
    ["en", "en-US"];
try { if (Inst58 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1697,1720,76>",(ctor.supportedLocalesOf)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1697,1701,76>",(ctor)); Inst59++; } } catch(e) {}
    ctor.supportedLocalesOf(["en"], {
      localeMatcher: "best fit"
    });
    ['de', 'de-DE'];
try { if (Inst60 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1796,1819,80>",(ctor.supportedLocalesOf)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1796,1800,80>",(ctor)); Inst61++; } } catch(e) {}
    ctor.supportedLocalesOf(['de-de']);
    ['ja', 'ja-JP'];
try { if (Inst62 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1857,1880,82>",(ctor.supportedLocalesOf)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1857,1861,82>",(ctor)); Inst63++; } } catch(e) {}
    ctor.supportedLocalesOf(['ja-JP']);
    ['zh', 'zh-CN', 'zh-Hans-CN'];
try { if (Inst64 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<1932,1955,84>",(ctor.supportedLocalesOf)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1932,1936,84>",(ctor)); Inst65++; } } catch(e) {}
    ctor.supportedLocalesOf(['zh-cn']);
    ['en', 'en-US', 'de', 'de-DE', 'ja', 'ja-JP', 'zh', 'zh-CN', 'zh-Hans-CN'];
try { if (Inst66 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2052,2075,86>",(ctor.supportedLocalesOf)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2052,2056,86>",(ctor)); Inst67++; } } catch(e) {}
    ctor.supportedLocalesOf(['en-us', 'de-de', 'ja-JP', 'zh-cn']);
  }

try { if (Inst68 <= 1000 && typeof (ctors.forEach) != "undefined") {_RecordType("<2122,2135,89>",(ctors.forEach)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<2122,2127,89>",(ctors)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (test) != "undefined") {_RecordType("<2136,2140,89>",(test)); Inst70++; } } catch(e) {}
  ctors.forEach(test);
}

try { if (Inst71 <= 1000 && typeof (t2) != "undefined") {_RecordType("<2146,2148,92>",(t2)); Inst71++; } } catch(e) {}
t2();

try { if (Inst72 <= 1000 && typeof (t3) != "undefined") {_RecordType("<2162,2164,94>",(t3)); Inst72++; } } catch(e) {}
function t3() {
try { if (Inst73 <= 1000 && typeof (test) != "undefined") {_RecordType("<2180,2184,95>",(test)); Inst73++; } } catch(e) {}
  function test(ctor) {
try { if (Inst74 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2185,2189,95>",(ctor)); Inst74++; } } catch(e) {}
    ["en", "en-US"];
try { if (Inst75 <= 1000 && typeof (ctor.supportedLocalesOf.call) != "undefined") {_RecordType("<2218,2246,97>",(ctor.supportedLocalesOf.call)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2218,2241,97>",(ctor.supportedLocalesOf)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2218,2222,97>",(ctor)); Inst77++; } } catch(e) {}
    ctor.supportedLocalesOf.call({}, ["en"]);
    ["en", "en-US"];
try { if (Inst78 <= 1000 && typeof (ctor.supportedLocalesOf.call) != "undefined") {_RecordType("<2285,2313,99>",(ctor.supportedLocalesOf.call)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2285,2308,99>",(ctor.supportedLocalesOf)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2285,2289,99>",(ctor)); Inst80++; } } catch(e) {}
    ctor.supportedLocalesOf.call({}, ["en"], {
      localeMatcher: "lookup"
    });
    ["en", "en-US"];
try { if (Inst81 <= 1000 && typeof (ctor.supportedLocalesOf.call) != "undefined") {_RecordType("<2391,2419,103>",(ctor.supportedLocalesOf.call)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2391,2414,103>",(ctor.supportedLocalesOf)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2391,2395,103>",(ctor)); Inst83++; } } catch(e) {}
    ctor.supportedLocalesOf.call({}, ["en"], {
      localeMatcher: "best fit"
    });
    ["en", "en-US"];
try { if (Inst84 <= 1000 && typeof (ctor.supportedLocalesOf.bind) != "undefined") {_RecordType("<2499,2527,107>",(ctor.supportedLocalesOf.bind)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2499,2522,107>",(ctor.supportedLocalesOf)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2499,2503,107>",(ctor)); Inst86++; } } catch(e) {}
    ctor.supportedLocalesOf.bind({})(["en"]);
    ["en", "en-US"];
try { if (Inst87 <= 1000 && typeof (ctor.supportedLocalesOf.bind) != "undefined") {_RecordType("<2566,2594,109>",(ctor.supportedLocalesOf.bind)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2566,2589,109>",(ctor.supportedLocalesOf)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2566,2570,109>",(ctor)); Inst89++; } } catch(e) {}
    ctor.supportedLocalesOf.bind({})(["en"], {
      localeMatcher: "lookup"
    });
    ["en", "en-US"];
try { if (Inst90 <= 1000 && typeof (ctor.supportedLocalesOf.bind) != "undefined") {_RecordType("<2672,2700,113>",(ctor.supportedLocalesOf.bind)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2672,2695,113>",(ctor.supportedLocalesOf)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2672,2676,113>",(ctor)); Inst92++; } } catch(e) {}
    ctor.supportedLocalesOf.bind({})(["en"], {
      localeMatcher: "best fit"
    });
  }

try { if (Inst93 <= 1000 && typeof (ctors.forEach) != "undefined") {_RecordType("<2762,2775,118>",(ctors.forEach)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<2762,2767,118>",(ctors)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (test) != "undefined") {_RecordType("<2776,2780,118>",(test)); Inst95++; } } catch(e) {}
  ctors.forEach(test);
}

try { if (Inst96 <= 1000 && typeof (t3) != "undefined") {_RecordType("<2786,2788,121>",(t3)); Inst96++; } } catch(e) {}
t3();

try { if (Inst97 <= 1000 && typeof (t4) != "undefined") {_RecordType("<2802,2804,123>",(t4)); Inst97++; } } catch(e) {}
function t4() {
try { if (Inst98 <= 1000 && typeof (test) != "undefined") {_RecordType("<2820,2824,124>",(test)); Inst98++; } } catch(e) {}
  function test(ctor) {
try { if (Inst99 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2825,2829,124>",(ctor)); Inst99++; } } catch(e) {}
try { if (Inst100 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2837,2848,125>",(console.log)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (console) != "undefined") {_RecordType("<2837,2844,125>",(console)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (ctor.supportedLocalesOf(undefined).length) != "undefined") {_RecordType("<2852,2893,125>",(ctor.supportedLocalesOf(undefined).length)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2852,2875,125>",(ctor.supportedLocalesOf)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2852,2856,125>",(ctor)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2876,2885,125>",(undefined)); Inst105++; } } catch(e) {}
    console.log(0, ctor.supportedLocalesOf(undefined).length);
try { if (Inst106 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2900,2911,126>",(console.log)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (console) != "undefined") {_RecordType("<2900,2907,126>",(console)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (ctor.supportedLocalesOf(undefined, {
      localeMatcher: "lookup"
    }).length) != "undefined") {_RecordType("<2915,2995,126>",(ctor.supportedLocalesOf(undefined, {
      localeMatcher: "lookup"
    }).length)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<2915,2938,126>",(ctor.supportedLocalesOf)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<2915,2919,126>",(ctor)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2939,2948,126>",(undefined)); Inst111++; } } catch(e) {}
    console.log(0, ctor.supportedLocalesOf(undefined, {
      localeMatcher: "lookup"
    }).length);
try { if (Inst112 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<3002,3013,129>",(console.log)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (console) != "undefined") {_RecordType("<3002,3009,129>",(console)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (ctor.supportedLocalesOf(undefined, {
      localeMatcher: "best fit"
    }).length) != "undefined") {_RecordType("<3017,3099,129>",(ctor.supportedLocalesOf(undefined, {
      localeMatcher: "best fit"
    }).length)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (ctor.supportedLocalesOf) != "undefined") {_RecordType("<3017,3040,129>",(ctor.supportedLocalesOf)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<3017,3021,129>",(ctor)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3041,3050,129>",(undefined)); Inst117++; } } catch(e) {}
    console.log(0, ctor.supportedLocalesOf(undefined, {
      localeMatcher: "best fit"
    }).length);
  }
}

try { if (Inst118 <= 1000 && typeof (t4) != "undefined") {_RecordType("<3109,3111,135>",(t4)); Inst118++; } } catch(e) {}
t4();

