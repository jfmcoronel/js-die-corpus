var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
"use strict";

try { if (Inst0 <= 1000 && typeof (Test1) != "undefined") {_RecordType("<392,397,7>",(Test1)); Inst0++; } } catch(e) {}
(function Test1(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<398,399,7>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<401,402,7>",(y)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<408,413,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<414,415,8>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<424,436,8>",(arguments[0])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<424,433,8>",(arguments)); Inst6++; } } catch(e) {}
  print(x + " " + arguments[0]);
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<441,446,9>",(print)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<447,448,9>",(y)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<457,469,9>",(arguments[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<457,466,9>",(arguments)); Inst10++; } } catch(e) {}
  print(y + " " + arguments[1]);
  x = 100;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<474,475,10>",(x)); Inst11++; } } catch(e) {}
  y = 200;
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<485,486,11>",(y)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<496,501,12>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<502,503,12>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<512,524,12>",(arguments[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<512,521,12>",(arguments)); Inst16++; } } catch(e) {}
  print(x + " " + arguments[0]);
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<529,534,13>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (y) != "undefined") {_RecordType("<535,536,13>",(y)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<545,557,13>",(arguments[1])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<545,554,13>",(arguments)); Inst20++; } } catch(e) {}
  print(y + " " + arguments[1]);
})(10, 20);

try { if (Inst21 <= 1000 && typeof (Test2) != "undefined") {_RecordType("<583,588,16>",(Test2)); Inst21++; } } catch(e) {}
(function Test2(x, y) {
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<589,590,16>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<592,593,16>",(y)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<599,604,17>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<605,606,17>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<615,627,17>",(arguments[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<615,624,17>",(arguments)); Inst27++; } } catch(e) {}
  print(x + " " + arguments[0]);
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<632,637,18>",(print)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (y) != "undefined") {_RecordType("<638,639,18>",(y)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<648,660,18>",(arguments[1])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<648,657,18>",(arguments)); Inst31++; } } catch(e) {}
  print(y + " " + arguments[1]);
  arguments[0] = 100;
try { if (Inst32 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<665,677,19>",(arguments[0])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<665,674,19>",(arguments)); Inst33++; } } catch(e) {}
  arguments[1] = 200;
try { if (Inst34 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<687,699,20>",(arguments[1])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<687,696,20>",(arguments)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<709,714,21>",(print)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<715,716,21>",(x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<725,737,21>",(arguments[0])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<725,734,21>",(arguments)); Inst39++; } } catch(e) {}
  print(x + " " + arguments[0]);
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<742,747,22>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (y) != "undefined") {_RecordType("<748,749,22>",(y)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<758,770,22>",(arguments[1])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<758,767,22>",(arguments)); Inst43++; } } catch(e) {}
  print(y + " " + arguments[1]);
})(10, 20);

