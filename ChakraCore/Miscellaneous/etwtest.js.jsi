var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//
// Test etw rundown.
//
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<403,406,8>",(bar)); Inst0++; } } catch(e) {}
function bar() {
  var s = "";
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<417,418,9>",(s)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 40; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<437,438,11>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<444,445,11>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<452,453,11>",(i)); Inst4++; } } catch(e) {}
    s += "bar";
try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<463,464,12>",(s)); Inst5++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (s) != "undefined") {_RecordType("<509,510,17>",(s)); Inst7++; } } catch(e) {}
  (function (a) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<493,494,15>",(a)); Inst6++; } } catch(e) {}
    ;
  })(s);
}

var MAX_TIME = 2000; //max ms to run the following loop (and bound etw rundown time)
try { if (Inst8 <= 1000 && typeof (MAX_TIME) != "undefined") {_RecordType("<520,528,20>",(MAX_TIME)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (Date) != "undefined") {_RecordType("<622,626,22>",(Date)); Inst10++; } } catch(e) {}
var beginTime = new Date(); // Keep generating new functions.
try { if (Inst9 <= 1000 && typeof (beginTime) != "undefined") {_RecordType("<606,615,22>",(beginTime)); Inst9++; } } catch(e) {}

for (var i = 0; i < 1000; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<674,675,24>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<681,682,24>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<691,692,24>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<718,719,25>",(i)); Inst15++; } } catch(e) {}
  var foo = "foo" + i; // different function names
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<704,707,25>",(foo)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (bar) != "undefined") {_RecordType("<752,755,27>",(bar)); Inst16++; } } catch(e) {}
  bar();
try { if (Inst18 <= 1000 && typeof (Date) != "undefined") {_RecordType("<775,779,28>",(Date)); Inst18++; } } catch(e) {}
  var now = new Date();
try { if (Inst17 <= 1000 && typeof (now) != "undefined") {_RecordType("<765,768,28>",(now)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (now) != "undefined") {_RecordType("<790,793,30>",(now)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (beginTime) != "undefined") {_RecordType("<796,805,30>",(beginTime)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (MAX_TIME) != "undefined") {_RecordType("<809,817,30>",(MAX_TIME)); Inst21++; } } catch(e) {}
  if (now - beginTime >= MAX_TIME) {
    break;
  }
}

