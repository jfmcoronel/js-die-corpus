var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Try variants of a pattern known to cause exploitable trashing of the Null
// object's vtable: access a local var/function only within the non-evaluated
// branch of a ?: operator, then do instanceof null to force virtual call using
// the Null object's vtable.
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<640,645,9>",(write)); Inst0++; } } catch(e) {}
function write(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<646,647,9>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<653,658,10>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<659,660,10>",(x)); Inst3++; } } catch(e) {}
  print(x + '');
}

(function () {
  (function () {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<728,729,15>",(x)); Inst4++; } } catch(e) {}
    return true ? true : x;
  })();

try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<751,752,18>",(x)); Inst5++; } } catch(e) {}
  function x() {
    ;
  }

  ;
})();

try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<828,829,27>",(e)); Inst8++; } } catch(e) {}
try {
try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<795,801,26>",(Object)); Inst7++; } } catch(e) {}
  var z = Object instanceof null;
try { if (Inst6 <= 1000 && typeof (z) != "undefined") {_RecordType("<791,792,26>",(z)); Inst6++; } } catch(e) {}
} catch (e) {
try { if (Inst9 <= 1000 && typeof (write) != "undefined") {_RecordType("<835,840,28>",(write)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<841,850,28>",(e.message)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<841,842,28>",(e)); Inst11++; } } catch(e) {}
  write(e.message);
}

(function () {
  (function () {
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<913,914,33>",(x)); Inst12++; } } catch(e) {}
    return true ? true : x;
  })();

  var x;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<931,932,36>",(x)); Inst13++; } } catch(e) {}
})();

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<990,991,41>",(e)); Inst16++; } } catch(e) {}
try {
try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<957,963,40>",(Object)); Inst15++; } } catch(e) {}
  var z = Object instanceof null;
try { if (Inst14 <= 1000 && typeof (z) != "undefined") {_RecordType("<953,954,40>",(z)); Inst14++; } } catch(e) {}
} catch (e) {
try { if (Inst17 <= 1000 && typeof (write) != "undefined") {_RecordType("<997,1002,42>",(write)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1003,1012,42>",(e.message)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<1003,1004,42>",(e)); Inst19++; } } catch(e) {}
  write(e.message);
}

(function () {
  (function () {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<1069,1070,47>",(x)); Inst20++; } } catch(e) {}
    return false ? x : false;
  })();

try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<1100,1101,50>",(x)); Inst21++; } } catch(e) {}
  function x() {
    ;
  }

  ;
})();

try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<1177,1178,59>",(e)); Inst24++; } } catch(e) {}
try {
try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1144,1150,58>",(Object)); Inst23++; } } catch(e) {}
  var z = Object instanceof null;
try { if (Inst22 <= 1000 && typeof (z) != "undefined") {_RecordType("<1140,1141,58>",(z)); Inst22++; } } catch(e) {}
} catch (e) {
try { if (Inst25 <= 1000 && typeof (write) != "undefined") {_RecordType("<1184,1189,60>",(write)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1190,1199,60>",(e.message)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<1190,1191,60>",(e)); Inst27++; } } catch(e) {}
  write(e.message);
}

(function () {
  (function () {
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<1256,1257,65>",(x)); Inst28++; } } catch(e) {}
    return false ? x : false;
  })();

  var x;
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<1282,1283,68>",(x)); Inst29++; } } catch(e) {}
})();

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<1341,1342,73>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1308,1314,72>",(Object)); Inst31++; } } catch(e) {}
  var z = Object instanceof null;
try { if (Inst30 <= 1000 && typeof (z) != "undefined") {_RecordType("<1304,1305,72>",(z)); Inst30++; } } catch(e) {}
} catch (e) {
try { if (Inst33 <= 1000 && typeof (write) != "undefined") {_RecordType("<1348,1353,74>",(write)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1354,1363,74>",(e.message)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<1354,1355,74>",(e)); Inst35++; } } catch(e) {}
  write(e.message);
}

