var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<376,377,5>",(f)); Inst0++; } } catch(e) {}
function f() {
  var y = "before modification";
try { if (Inst1 <= 1000 && typeof (y) != "undefined") {_RecordType("<388,389,6>",(y)); Inst1++; } } catch(e) {}

  var ret1 = function () {
try { if (Inst3 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<447,458,9>",(console.log)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (console) != "undefined") {_RecordType("<447,454,9>",(console)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<459,460,9>",(y)); Inst5++; } } catch(e) {}
    console.log(y);
  };
try { if (Inst2 <= 1000 && typeof (ret1) != "undefined") {_RecordType("<422,426,8>",(ret1)); Inst2++; } } catch(e) {}

  y = "after modification";
try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<471,472,12>",(y)); Inst6++; } } catch(e) {}

  var ret2 = function () {
try { if (Inst8 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<529,540,15>",(console.log)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (console) != "undefined") {_RecordType("<529,536,15>",(console)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<541,542,15>",(y)); Inst10++; } } catch(e) {}
    console.log(y);
  };
try { if (Inst7 <= 1000 && typeof (ret2) != "undefined") {_RecordType("<504,508,14>",(ret2)); Inst7++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (ret1) != "undefined") {_RecordType("<561,565,18>",(ret1)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ret2) != "undefined") {_RecordType("<567,571,18>",(ret2)); Inst12++; } } catch(e) {}
  return [ret1, ret2];
}

(function () {
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<603,604,22>",(f)); Inst13++; } } catch(e) {}
  function f() {
    ;
  }

try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<631,632,26>",(g)); Inst14++; } } catch(e) {}
  function g() {
    ;
  }

try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<662,663,30>",(f)); Inst16++; } } catch(e) {}
  var savef = f;
try { if (Inst15 <= 1000 && typeof (savef) != "undefined") {_RecordType("<654,659,30>",(savef)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<667,668,31>",(f)); Inst17++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<673,674,31>",(g)); Inst19++; } } catch(e) {}
  f(f = g);
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<669,670,31>",(f)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (savef) != "undefined") {_RecordType("<683,688,32>",(savef)); Inst21++; } } catch(e) {}
  f = savef;
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<679,680,32>",(f)); Inst20++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<702,705,34>",(foo)); Inst22++; } } catch(e) {}
  function foo() {
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<721,722,35>",(f)); Inst23++; } } catch(e) {}
    typeof f;
try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<735,736,36>",(g)); Inst24++; } } catch(e) {}
    typeof g;
  }
})();

try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<758,759,40>",(g)); Inst25++; } } catch(e) {}
function g(funcs) {
try { if (Inst26 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<760,765,40>",(funcs)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (funcs[1]) != "undefined") {_RecordType("<771,779,41>",(funcs[1])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<771,776,41>",(funcs)); Inst28++; } } catch(e) {}
  funcs[1]();
try { if (Inst29 <= 1000 && typeof (funcs[0]) != "undefined") {_RecordType("<785,793,42>",(funcs[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<785,790,42>",(funcs)); Inst30++; } } catch(e) {}
  funcs[0]();
}

try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<810,811,45>",(f)); Inst32++; } } catch(e) {}
var clo = f();
try { if (Inst31 <= 1000 && typeof (clo) != "undefined") {_RecordType("<804,807,45>",(clo)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<815,816,46>",(g)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (clo) != "undefined") {_RecordType("<817,820,46>",(clo)); Inst34++; } } catch(e) {}
g(clo);
try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<823,824,47>",(g)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (clo) != "undefined") {_RecordType("<825,828,47>",(clo)); Inst36++; } } catch(e) {}
g(clo); // Side-effect through a closure without eval.

(function () {
  var f = function () {
    a = 2;
try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<922,923,51>",(a)); Inst38++; } } catch(e) {}
    return 1;
  };
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<900,901,50>",(f)); Inst37++; } } catch(e) {}

  var a = 1;
try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<955,956,55>",(a)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<964,965,56>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<969,970,56>",(f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<975,976,56>",(a)); Inst42++; } } catch(e) {}
  a + (f() + a);
})(); // Side-effect through a closure with eval.


(function () {
  var f = function () {
    a = 2;
try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<1074,1075,62>",(a)); Inst44++; } } catch(e) {}
    return 1;
  };
try { if (Inst43 <= 1000 && typeof (f) != "undefined") {_RecordType("<1052,1053,61>",(f)); Inst43++; } } catch(e) {}

  var a = 1;
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1107,1108,66>",(a)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<1116,1117,67>",(a)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (f) != "undefined") {_RecordType("<1121,1122,67>",(f)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<1127,1128,67>",(a)); Inst48++; } } catch(e) {}
  a + (f() + a);
})(); // Side-effect through a closure inside eval.


(function () {
  var f = function () {
    return 1;
  };
try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<1206,1207,72>",(f)); Inst49++; } } catch(e) {}

  var a = 1;
try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<1250,1251,76>",(a)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<1259,1260,77>",(a)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (f) != "undefined") {_RecordType("<1264,1265,77>",(f)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<1270,1271,77>",(a)); Inst53++; } } catch(e) {}
  a + (f() + a);
})();

