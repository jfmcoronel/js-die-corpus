var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<376,381,5>",(test1)); Inst0++; } } catch(e) {}
function test1() {
try { if (Inst1 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<397,401,6>",(foo1)); Inst1++; } } catch(e) {}
  function foo1() {
    foo1 = 42;
try { if (Inst2 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<410,414,7>",(foo1)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<425,436,8>",(console.log)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (console) != "undefined") {_RecordType("<425,432,8>",(console)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<444,448,8>",(foo1)); Inst5++; } } catch(e) {}
    console.log(typeof foo1 == "number");
try { if (Inst6 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<467,478,9>",(console.log)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (console) != "undefined") {_RecordType("<467,474,9>",(console)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<486,490,9>",(foo1)); Inst8++; } } catch(e) {}
    console.log(42 === foo1);
  }

try { if (Inst9 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<500,504,12>",(foo1)); Inst9++; } } catch(e) {}
  foo1();

try { if (Inst10 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<520,524,14>",(foo2)); Inst10++; } } catch(e) {}
  function foo2() {
    foo2 &= 0;
try { if (Inst11 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<533,537,15>",(foo2)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<548,559,16>",(console.log)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (console) != "undefined") {_RecordType("<548,555,16>",(console)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<567,571,16>",(foo2)); Inst14++; } } catch(e) {}
    console.log(typeof foo2 == "number");
try { if (Inst15 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<590,601,17>",(console.log)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (console) != "undefined") {_RecordType("<590,597,17>",(console)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<608,612,17>",(foo2)); Inst17++; } } catch(e) {}
    console.log(0 === foo2);
  }

try { if (Inst18 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<622,626,20>",(foo2)); Inst18++; } } catch(e) {}
  foo2();

try { if (Inst19 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<642,646,22>",(foo3)); Inst19++; } } catch(e) {}
  function foo3() {
    foo3 <<= 0;
try { if (Inst20 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<655,659,23>",(foo3)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<671,682,24>",(console.log)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (console) != "undefined") {_RecordType("<671,678,24>",(console)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<690,694,24>",(foo3)); Inst23++; } } catch(e) {}
    console.log(typeof foo3 == "number");
try { if (Inst24 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<713,724,25>",(console.log)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (console) != "undefined") {_RecordType("<713,720,25>",(console)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<731,735,25>",(foo3)); Inst26++; } } catch(e) {}
    console.log(0 === foo3);
  }

try { if (Inst27 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<745,749,28>",(foo3)); Inst27++; } } catch(e) {}
  foo3();

try { if (Inst28 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<765,769,30>",(foo4)); Inst28++; } } catch(e) {}
  function foo4() {
try { if (Inst30 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<786,790,31>",(foo4)); Inst30++; } } catch(e) {}
    let x = foo4++;
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<782,783,31>",(x)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<798,809,32>",(console.log)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (console) != "undefined") {_RecordType("<798,805,32>",(console)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<810,815,32>",(isNaN)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<816,817,32>",(x)); Inst34++; } } catch(e) {}
    console.log(isNaN(x));
try { if (Inst35 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<825,836,33>",(console.log)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (console) != "undefined") {_RecordType("<825,832,33>",(console)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<837,842,33>",(isNaN)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<843,847,33>",(foo4)); Inst38++; } } catch(e) {}
    console.log(isNaN(foo4));
  }

try { if (Inst39 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<858,862,36>",(foo4)); Inst39++; } } catch(e) {}
  foo4();

try { if (Inst40 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<878,882,38>",(foo5)); Inst40++; } } catch(e) {}
  function foo5() {
try { if (Inst41 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<893,897,39>",(foo5)); Inst41++; } } catch(e) {}
    ++foo5;
try { if (Inst42 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<903,914,40>",(console.log)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (console) != "undefined") {_RecordType("<903,910,40>",(console)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<915,920,40>",(isNaN)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<921,925,40>",(foo5)); Inst45++; } } catch(e) {}
    console.log(isNaN(foo5));
  }

try { if (Inst46 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<936,940,43>",(foo5)); Inst46++; } } catch(e) {}
  foo5();
}

try { if (Inst47 <= 1000 && typeof (test1) != "undefined") {_RecordType("<947,952,46>",(test1)); Inst47++; } } catch(e) {}
test1();

try { if (Inst48 <= 1000 && typeof (test2) != "undefined") {_RecordType("<966,971,48>",(test2)); Inst48++; } } catch(e) {}
function test2() {
try { if (Inst49 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<988,992,49>",(foo1)); Inst49++; } } catch(e) {}
  (function foo1() {
    foo1 = 42;
try { if (Inst50 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1001,1005,50>",(foo1)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1016,1027,51>",(console.log)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (console) != "undefined") {_RecordType("<1016,1023,51>",(console)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1035,1039,51>",(foo1)); Inst53++; } } catch(e) {}
    console.log(typeof foo1 == "function");
  })();

try { if (Inst54 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1077,1081,54>",(foo2)); Inst54++; } } catch(e) {}
  (function foo2() {
    foo2 &= 0;
try { if (Inst55 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1090,1094,55>",(foo2)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1105,1116,56>",(console.log)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (console) != "undefined") {_RecordType("<1105,1112,56>",(console)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1124,1128,56>",(foo2)); Inst58++; } } catch(e) {}
    console.log(typeof foo2 == "function");
  })();

try { if (Inst59 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<1166,1170,59>",(foo3)); Inst59++; } } catch(e) {}
  (function foo3() {
    foo3 <<= 0;
try { if (Inst60 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<1179,1183,60>",(foo3)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1195,1206,61>",(console.log)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (console) != "undefined") {_RecordType("<1195,1202,61>",(console)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (foo3) != "undefined") {_RecordType("<1214,1218,61>",(foo3)); Inst63++; } } catch(e) {}
    console.log(typeof foo3 == "function");
  })();

try { if (Inst64 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<1256,1260,64>",(foo4)); Inst64++; } } catch(e) {}
  (function foo4() {
try { if (Inst66 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<1277,1281,65>",(foo4)); Inst66++; } } catch(e) {}
    let x = foo4++;
try { if (Inst65 <= 1000 && typeof (x) != "undefined") {_RecordType("<1273,1274,65>",(x)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1289,1300,66>",(console.log)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (console) != "undefined") {_RecordType("<1289,1296,66>",(console)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<1301,1306,66>",(isNaN)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<1307,1308,66>",(x)); Inst70++; } } catch(e) {}
    console.log(isNaN(x));
try { if (Inst71 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1316,1327,67>",(console.log)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (console) != "undefined") {_RecordType("<1316,1323,67>",(console)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<1335,1339,67>",(foo4)); Inst73++; } } catch(e) {}
    console.log(typeof foo4 == "function");
  })();

try { if (Inst74 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<1377,1381,70>",(foo5)); Inst74++; } } catch(e) {}
  (function foo5() {
try { if (Inst75 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<1392,1396,71>",(foo5)); Inst75++; } } catch(e) {}
    ++foo5;
try { if (Inst76 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1402,1413,72>",(console.log)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (console) != "undefined") {_RecordType("<1402,1409,72>",(console)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<1421,1425,72>",(foo5)); Inst78++; } } catch(e) {}
    console.log(typeof foo5 == "function");
  })();
}

try { if (Inst79 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1453,1458,76>",(test2)); Inst79++; } } catch(e) {}
test2();

