var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (XLFuzzTest) != "undefined") {_RecordType("<376,386,5>",(XLFuzzTest)); Inst0++; } } catch(e) {}
function XLFuzzTest() {
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<709,710,22>",(e)); Inst4++; } } catch(e) {}
  try {
    do {
try { if (Inst1 <= 1000 && typeof (apInitTest) != "undefined") {_RecordType("<423,433,8>",(apInitTest)); Inst1++; } } catch(e) {}
      function apInitTest() {
        do {
try { if (Inst2 <= 1000 && typeof (apEndTest) != "undefined") {_RecordType("<470,479,10>",(apEndTest)); Inst2++; } } catch(e) {}
          function apEndTest() {
            do {
try { if (Inst3 <= 1000 && typeof (apInitTest) != "undefined") {_RecordType("<515,525,12>",(apInitTest)); Inst3++; } } catch(e) {}
              apInitTest: if (false) {
                return;
              }

              return;
            } while (false);
          }
        } while (false);
      }
    } while (false);
  } catch (e) {
    ;
  }
}

for (var i = 0; i < 1; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<736,737,27>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<743,744,27>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<750,751,27>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (XLFuzzTest) != "undefined") {_RecordType("<759,769,28>",(XLFuzzTest)); Inst8++; } } catch(e) {}
  XLFuzzTest();
}

try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<776,781,31>",(print)); Inst9++; } } catch(e) {}
print("PASSED");

