var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var i = 0;
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,5>",(i)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (next) != "undefined") {_RecordType("<390,394,7>",(next)); Inst2++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<470,485,14>",(Symbol.iterator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<470,476,14>",(Symbol)); Inst7++; } } catch(e) {}
var o = {
  next() {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<424,425,9>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,10>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<451,452,10>",(i)); Inst5++; } } catch(e) {}
    return {
      done: i == 1,
      value: [i++, i]
    };
  },

  [Symbol.iterator]() {
    return this;
  }

};
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<382,383,6>",(o)); Inst1++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<529,534,19>",(Proxy)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o.next) != "undefined") {_RecordType("<535,541,19>",(o.next)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<535,536,19>",(o)); Inst12++; } } catch(e) {}
o.next = new Proxy(o.next, {});
try { if (Inst8 <= 1000 && typeof (o.next) != "undefined") {_RecordType("<516,522,19>",(o.next)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<516,517,19>",(o)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Map) != "undefined") {_RecordType("<560,563,20>",(Map)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<564,565,20>",(o)); Inst15++; } } catch(e) {}
var m = new Map(o);
try { if (Inst13 <= 1000 && typeof (m) != "undefined") {_RecordType("<552,553,20>",(m)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<573,578,22>",(m.get)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (m) != "undefined") {_RecordType("<573,574,22>",(m)); Inst17++; } } catch(e) {}
if (m.get(0) === 1) {
try { if (Inst18 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<593,605,23>",(WScript.Echo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<593,600,23>",(WScript)); Inst19++; } } catch(e) {}
  WScript.Echo("passed");
} else {
try { if (Inst20 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<628,640,25>",(WScript.Echo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<628,635,25>",(WScript)); Inst21++; } } catch(e) {}
  WScript.Echo("failed");
}

