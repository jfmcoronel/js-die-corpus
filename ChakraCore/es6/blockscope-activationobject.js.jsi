var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Make sure space is allocated on block scope object for delay-captured lexical vars.
(function (arg) {
try { if (Inst0 <= 1000 && typeof (arg) != "undefined") {_RecordType("<465,468,6>",(arg)); Inst0++; } } catch(e) {}
  let a0 = 0;
try { if (Inst1 <= 1000 && typeof (a0) != "undefined") {_RecordType("<478,480,7>",(a0)); Inst1++; } } catch(e) {}
  let a1 = 0;
try { if (Inst2 <= 1000 && typeof (a1) != "undefined") {_RecordType("<492,494,8>",(a1)); Inst2++; } } catch(e) {}
  let a2 = 0;
try { if (Inst3 <= 1000 && typeof (a2) != "undefined") {_RecordType("<506,508,9>",(a2)); Inst3++; } } catch(e) {}
  let a3 = 0;
try { if (Inst4 <= 1000 && typeof (a3) != "undefined") {_RecordType("<520,522,10>",(a3)); Inst4++; } } catch(e) {}
  let a4 = 0;
try { if (Inst5 <= 1000 && typeof (a4) != "undefined") {_RecordType("<534,536,11>",(a4)); Inst5++; } } catch(e) {}
  let a5 = 0;
try { if (Inst6 <= 1000 && typeof (a5) != "undefined") {_RecordType("<548,550,12>",(a5)); Inst6++; } } catch(e) {}
  let a6 = 0;
try { if (Inst7 <= 1000 && typeof (a6) != "undefined") {_RecordType("<562,564,13>",(a6)); Inst7++; } } catch(e) {}
  let a7 = 0;
try { if (Inst8 <= 1000 && typeof (a7) != "undefined") {_RecordType("<576,578,14>",(a7)); Inst8++; } } catch(e) {}

  class class15 {
    constructor() {
try { if (Inst10 <= 1000 && typeof (a0) != "undefined") {_RecordType("<629,631,18>",(a0)); Inst10++; } } catch(e) {}
      a0;
try { if (Inst11 <= 1000 && typeof (a1) != "undefined") {_RecordType("<639,641,19>",(a1)); Inst11++; } } catch(e) {}
      a1;
try { if (Inst12 <= 1000 && typeof (a2) != "undefined") {_RecordType("<649,651,20>",(a2)); Inst12++; } } catch(e) {}
      a2;
try { if (Inst13 <= 1000 && typeof (a3) != "undefined") {_RecordType("<659,661,21>",(a3)); Inst13++; } } catch(e) {}
      a3;
try { if (Inst14 <= 1000 && typeof (a4) != "undefined") {_RecordType("<669,671,22>",(a4)); Inst14++; } } catch(e) {}
      a4;
try { if (Inst15 <= 1000 && typeof (a5) != "undefined") {_RecordType("<679,681,23>",(a5)); Inst15++; } } catch(e) {}
      a5;
try { if (Inst16 <= 1000 && typeof (a6) != "undefined") {_RecordType("<689,691,24>",(a6)); Inst16++; } } catch(e) {}
      a6;
try { if (Inst17 <= 1000 && typeof (a7) != "undefined") {_RecordType("<699,701,25>",(a7)); Inst17++; } } catch(e) {}
      a7;
    }

  }
try { if (Inst9 <= 1000 && typeof (class15) != "undefined") {_RecordType("<593,600,16>",(class15)); Inst9++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<717,729,30>",(arguments[0])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<717,726,30>",(arguments)); Inst19++; } } catch(e) {}
  arguments[0];
})();

try { if (Inst20 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<738,750,33>",(WScript.Echo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<738,745,33>",(WScript)); Inst21++; } } catch(e) {}
WScript.Echo('pass');

