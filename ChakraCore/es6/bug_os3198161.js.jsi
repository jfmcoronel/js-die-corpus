var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
obj = [1, 2, 3, 4, 5];
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<367,370,5>",(obj)); Inst0++; } } catch(e) {}

obj.constructor = function () {
  return {};
};
try { if (Inst1 <= 1000 && typeof (obj.constructor) != "undefined") {_RecordType("<391,406,7>",(obj.constructor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<391,394,7>",(obj)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<440,453,11>",(Object.freeze)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<440,446,11>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<454,457,11>",(obj)); Inst5++; } } catch(e) {}
Object.freeze(obj);

try { if (Inst6 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<476,490,13>",(JSON.stringify)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<476,480,13>",(JSON)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array.prototype.slice.call) != "undefined") {_RecordType("<491,517,13>",(Array.prototype.slice.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype.slice) != "undefined") {_RecordType("<491,512,13>",(Array.prototype.slice)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<491,506,13>",(Array.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<491,496,13>",(Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<518,521,13>",(obj)); Inst12++; } } catch(e) {}
if ('[2,3]' == JSON.stringify(Array.prototype.slice.call(obj, 1, 3))) {
try { if (Inst13 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<535,547,14>",(WScript.Echo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<535,542,14>",(WScript)); Inst14++; } } catch(e) {}
  WScript.Echo('Pass');
} else {
try { if (Inst15 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<568,580,16>",(WScript.Echo)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<568,575,16>",(WScript)); Inst16++; } } catch(e) {}
  WScript.Echo('Fail');
}

