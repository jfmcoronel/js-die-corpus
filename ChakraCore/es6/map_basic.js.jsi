var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<376,378,5>",(t1)); Inst0++; } } catch(e) {}
function t1() {
try { if (Inst1 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<385,396,6>",(console.log)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (console) != "undefined") {_RecordType("<385,392,6>",(console)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Map) != "undefined") {_RecordType("<397,400,6>",(Map)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<405,414,6>",(undefined)); Inst4++; } } catch(e) {}
  console.log(Map !== undefined);
try { if (Inst6 <= 1000 && typeof (Map) != "undefined") {_RecordType("<434,437,7>",(Map)); Inst6++; } } catch(e) {}
  var map1 = new Map(); // Map is no longer allowed to be called as a function unless the object it is given
try { if (Inst5 <= 1000 && typeof (map1) != "undefined") {_RecordType("<423,427,7>",(map1)); Inst5++; } } catch(e) {}
  // for its this argument already has the [[MapData]] property on it.
  // TODO: When we implement @@create support, update this test to reflect it.
  //var map2 = Map();

try { if (Inst7 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<701,712,12>",(console.log)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (console) != "undefined") {_RecordType("<701,708,12>",(console)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (map1) != "undefined") {_RecordType("<713,717,12>",(map1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Map) != "undefined") {_RecordType("<729,732,12>",(Map)); Inst10++; } } catch(e) {}
  console.log(map1 instanceof Map); //assert.isTrue(map2 instanceof Map, "'Map()' should also create a Map object");
  //assert.isTrue(map1 !== map2, "Should be two different Map objects");

try { if (Inst11 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<892,903,15>",(console.log)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (console) != "undefined") {_RecordType("<892,899,15>",(console)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Map.length) != "undefined") {_RecordType("<907,917,15>",(Map.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Map) != "undefined") {_RecordType("<907,910,15>",(Map)); Inst14++; } } catch(e) {}
  console.log(0, Map.length);
}

try { if (Inst15 <= 1000 && typeof (t1) != "undefined") {_RecordType("<923,925,18>",(t1)); Inst15++; } } catch(e) {}
t1();

try { if (Inst16 <= 1000 && typeof (t2) != "undefined") {_RecordType("<939,941,20>",(t2)); Inst16++; } } catch(e) {}
function t2() {
try { if (Inst17 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<948,959,21>",(console.log)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (console) != "undefined") {_RecordType("<948,955,21>",(console)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Map.prototype.constructor) != "undefined") {_RecordType("<960,985,21>",(Map.prototype.constructor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<960,973,21>",(Map.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Map) != "undefined") {_RecordType("<960,963,21>",(Map)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Map) != "undefined") {_RecordType("<990,993,21>",(Map)); Inst22++; } } catch(e) {}
  console.log(Map.prototype.constructor === Map);
try { if (Inst23 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<998,1009,22>",(console.log)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (console) != "undefined") {_RecordType("<998,1005,22>",(console)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Map.prototype.hasOwnProperty) != "undefined") {_RecordType("<1010,1038,22>",(Map.prototype.hasOwnProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1010,1023,22>",(Map.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1010,1013,22>",(Map)); Inst27++; } } catch(e) {}
  console.log(Map.prototype.hasOwnProperty('clear'));
try { if (Inst28 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1052,1063,23>",(console.log)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (console) != "undefined") {_RecordType("<1052,1059,23>",(console)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Map.prototype.hasOwnProperty) != "undefined") {_RecordType("<1064,1092,23>",(Map.prototype.hasOwnProperty)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1064,1077,23>",(Map.prototype)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1064,1067,23>",(Map)); Inst32++; } } catch(e) {}
  console.log(Map.prototype.hasOwnProperty('delete'));
try { if (Inst33 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1107,1118,24>",(console.log)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (console) != "undefined") {_RecordType("<1107,1114,24>",(console)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Map.prototype.hasOwnProperty) != "undefined") {_RecordType("<1119,1147,24>",(Map.prototype.hasOwnProperty)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1119,1132,24>",(Map.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1119,1122,24>",(Map)); Inst37++; } } catch(e) {}
  console.log(Map.prototype.hasOwnProperty('forEach'));
try { if (Inst38 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1163,1174,25>",(console.log)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (console) != "undefined") {_RecordType("<1163,1170,25>",(console)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Map.prototype.hasOwnProperty) != "undefined") {_RecordType("<1175,1203,25>",(Map.prototype.hasOwnProperty)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1175,1188,25>",(Map.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1175,1178,25>",(Map)); Inst42++; } } catch(e) {}
  console.log(Map.prototype.hasOwnProperty('get'));
try { if (Inst43 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1215,1226,26>",(console.log)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (console) != "undefined") {_RecordType("<1215,1222,26>",(console)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Map.prototype.hasOwnProperty) != "undefined") {_RecordType("<1227,1255,26>",(Map.prototype.hasOwnProperty)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1227,1240,26>",(Map.prototype)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1227,1230,26>",(Map)); Inst47++; } } catch(e) {}
  console.log(Map.prototype.hasOwnProperty('has'));
try { if (Inst48 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1267,1278,27>",(console.log)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (console) != "undefined") {_RecordType("<1267,1274,27>",(console)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Map.prototype.hasOwnProperty) != "undefined") {_RecordType("<1279,1307,27>",(Map.prototype.hasOwnProperty)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1279,1292,27>",(Map.prototype)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1279,1282,27>",(Map)); Inst52++; } } catch(e) {}
  console.log(Map.prototype.hasOwnProperty('set'));
try { if (Inst53 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1319,1330,28>",(console.log)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (console) != "undefined") {_RecordType("<1319,1326,28>",(console)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Map.prototype.hasOwnProperty) != "undefined") {_RecordType("<1331,1359,28>",(Map.prototype.hasOwnProperty)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1331,1344,28>",(Map.prototype)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1331,1334,28>",(Map)); Inst57++; } } catch(e) {}
  console.log(Map.prototype.hasOwnProperty('size'));
try { if (Inst58 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1372,1383,29>",(console.log)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (console) != "undefined") {_RecordType("<1372,1379,29>",(console)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Map.prototype.clear.length) != "undefined") {_RecordType("<1384,1410,29>",(Map.prototype.clear.length)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Map.prototype.clear) != "undefined") {_RecordType("<1384,1403,29>",(Map.prototype.clear)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1384,1397,29>",(Map.prototype)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1384,1387,29>",(Map)); Inst63++; } } catch(e) {}
  console.log(Map.prototype.clear.length === 0);
try { if (Inst64 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1421,1432,30>",(console.log)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (console) != "undefined") {_RecordType("<1421,1428,30>",(console)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Map.prototype.delete.length) != "undefined") {_RecordType("<1433,1460,30>",(Map.prototype.delete.length)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Map.prototype.delete) != "undefined") {_RecordType("<1433,1453,30>",(Map.prototype.delete)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1433,1446,30>",(Map.prototype)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1433,1436,30>",(Map)); Inst69++; } } catch(e) {}
  console.log(Map.prototype.delete.length === 1);
try { if (Inst70 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1471,1482,31>",(console.log)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (console) != "undefined") {_RecordType("<1471,1478,31>",(console)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Map.prototype.forEach.length) != "undefined") {_RecordType("<1483,1511,31>",(Map.prototype.forEach.length)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Map.prototype.forEach) != "undefined") {_RecordType("<1483,1504,31>",(Map.prototype.forEach)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1483,1496,31>",(Map.prototype)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1483,1486,31>",(Map)); Inst75++; } } catch(e) {}
  console.log(Map.prototype.forEach.length === 1);
try { if (Inst76 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1522,1533,32>",(console.log)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (console) != "undefined") {_RecordType("<1522,1529,32>",(console)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Map.prototype.get.length) != "undefined") {_RecordType("<1534,1558,32>",(Map.prototype.get.length)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Map.prototype.get) != "undefined") {_RecordType("<1534,1551,32>",(Map.prototype.get)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1534,1547,32>",(Map.prototype)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1534,1537,32>",(Map)); Inst81++; } } catch(e) {}
  console.log(Map.prototype.get.length === 1);
try { if (Inst82 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1569,1580,33>",(console.log)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (console) != "undefined") {_RecordType("<1569,1576,33>",(console)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Map.prototype.has.length) != "undefined") {_RecordType("<1581,1605,33>",(Map.prototype.has.length)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Map.prototype.has) != "undefined") {_RecordType("<1581,1598,33>",(Map.prototype.has)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1581,1594,33>",(Map.prototype)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1581,1584,33>",(Map)); Inst87++; } } catch(e) {}
  console.log(Map.prototype.has.length === 1);
try { if (Inst88 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1616,1627,34>",(console.log)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (console) != "undefined") {_RecordType("<1616,1623,34>",(console)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Map.prototype.set.length) != "undefined") {_RecordType("<1628,1652,34>",(Map.prototype.set.length)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Map.prototype.set) != "undefined") {_RecordType("<1628,1645,34>",(Map.prototype.set)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1628,1641,34>",(Map.prototype)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1628,1631,34>",(Map)); Inst93++; } } catch(e) {}
  console.log(Map.prototype.set.length === 2);
try { if (Inst94 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1663,1674,35>",(console.log)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (console) != "undefined") {_RecordType("<1663,1670,35>",(console)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Object.getOwnPropertyDescriptor(Map.prototype, "size").get) != "undefined") {_RecordType("<1675,1733,35>",(Object.getOwnPropertyDescriptor(Map.prototype, "size").get)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1675,1706,35>",(Object.getOwnPropertyDescriptor)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1675,1681,35>",(Object)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1707,1720,35>",(Map.prototype)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1707,1710,35>",(Map)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1738,1747,35>",(undefined)); Inst101++; } } catch(e) {}
  console.log(Object.getOwnPropertyDescriptor(Map.prototype, "size").get !== undefined);
try { if (Inst102 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1752,1763,36>",(console.log)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (console) != "undefined") {_RecordType("<1752,1759,36>",(console)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Object.getOwnPropertyDescriptor(Map.prototype, "size").set) != "undefined") {_RecordType("<1764,1822,36>",(Object.getOwnPropertyDescriptor(Map.prototype, "size").set)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1764,1795,36>",(Object.getOwnPropertyDescriptor)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1764,1770,36>",(Object)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<1796,1809,36>",(Map.prototype)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1796,1799,36>",(Map)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1827,1836,36>",(undefined)); Inst109++; } } catch(e) {}
  console.log(Object.getOwnPropertyDescriptor(Map.prototype, "size").set === undefined);
}

try { if (Inst110 <= 1000 && typeof (t2) != "undefined") {_RecordType("<1842,1844,39>",(t2)); Inst110++; } } catch(e) {}
t2();

try { if (Inst111 <= 1000 && typeof (t3) != "undefined") {_RecordType("<1858,1860,41>",(t3)); Inst111++; } } catch(e) {}
function t3() {
try { if (Inst113 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1882,1885,42>",(Map)); Inst113++; } } catch(e) {}
  var map1 = new Map(); // Map is no longer allowed to be called as a function unless the object it is given
try { if (Inst112 <= 1000 && typeof (map1) != "undefined") {_RecordType("<1871,1875,42>",(map1)); Inst112++; } } catch(e) {}
  // for its this argument already has the [[MapData]] property on it.
  // TODO: When we implement @@create support, update this test to reflect it.
  //var map2 = Map();

try { if (Inst114 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2149,2160,47>",(console.log)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (console) != "undefined") {_RecordType("<2149,2156,47>",(console)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<2161,2182,47>",(Object.getPrototypeOf)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2161,2167,47>",(Object)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (map1) != "undefined") {_RecordType("<2183,2187,47>",(map1)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<2193,2206,47>",(Map.prototype)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Map) != "undefined") {_RecordType("<2193,2196,47>",(Map)); Inst120++; } } catch(e) {}
  console.log(Object.getPrototypeOf(map1) === Map.prototype); //assert.isTrue(Object.getPrototypeOf(map2) === Map.prototype, "'Map()' should set the prototype of the returned object to Map.prototype");
}

try { if (Inst121 <= 1000 && typeof (t3) != "undefined") {_RecordType("<2352,2354,50>",(t3)); Inst121++; } } catch(e) {}
t3();

try { if (Inst122 <= 1000 && typeof (t4) != "undefined") {_RecordType("<2368,2370,52>",(t4)); Inst122++; } } catch(e) {}
function t4() {
try { if (Inst124 <= 1000 && typeof (Map) != "undefined") {_RecordType("<2391,2394,53>",(Map)); Inst124++; } } catch(e) {}
  var map = new Map();
try { if (Inst123 <= 1000 && typeof (map) != "undefined") {_RecordType("<2381,2384,53>",(map)); Inst123++; } } catch(e) {}
try { if (Inst125 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2400,2411,54>",(console.log)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (console) != "undefined") {_RecordType("<2400,2407,54>",(console)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (map) != "undefined") {_RecordType("<2433,2436,54>",(map)); Inst127++; } } catch(e) {}
  console.log("[object Map]", '' + map);
}

try { if (Inst128 <= 1000 && typeof (t4) != "undefined") {_RecordType("<2442,2444,57>",(t4)); Inst128++; } } catch(e) {}
t4();

try { if (Inst129 <= 1000 && typeof (t5) != "undefined") {_RecordType("<2458,2460,59>",(t5)); Inst129++; } } catch(e) {}
function t5() {
try { if (Inst130 <= 1000 && typeof (countEnumerableProperties) != "undefined") {_RecordType("<2476,2501,60>",(countEnumerableProperties)); Inst130++; } } catch(e) {}
  function countEnumerableProperties(o) {
try { if (Inst131 <= 1000 && typeof (o) != "undefined") {_RecordType("<2502,2503,60>",(o)); Inst131++; } } catch(e) {}
    var count = 0;
try { if (Inst132 <= 1000 && typeof (count) != "undefined") {_RecordType("<2515,2520,61>",(count)); Inst132++; } } catch(e) {}

    for (p in o) {
try { if (Inst133 <= 1000 && typeof (p) != "undefined") {_RecordType("<2536,2537,63>",(p)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (o) != "undefined") {_RecordType("<2541,2542,63>",(o)); Inst134++; } } catch(e) {}
      count += 1;
try { if (Inst135 <= 1000 && typeof (count) != "undefined") {_RecordType("<2552,2557,64>",(count)); Inst135++; } } catch(e) {}
    }

try { if (Inst136 <= 1000 && typeof (count) != "undefined") {_RecordType("<2582,2587,67>",(count)); Inst136++; } } catch(e) {}
    return count;
  }

try { if (Inst138 <= 1000 && typeof (Map) != "undefined") {_RecordType("<2610,2613,70>",(Map)); Inst138++; } } catch(e) {}
  var map = new Map();
try { if (Inst137 <= 1000 && typeof (map) != "undefined") {_RecordType("<2600,2603,70>",(map)); Inst137++; } } catch(e) {}
try { if (Inst139 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2619,2630,71>",(console.log)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (console) != "undefined") {_RecordType("<2619,2626,71>",(console)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (countEnumerableProperties) != "undefined") {_RecordType("<2631,2656,71>",(countEnumerableProperties)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<2657,2670,71>",(Map.prototype)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Map) != "undefined") {_RecordType("<2657,2660,71>",(Map)); Inst143++; } } catch(e) {}
  console.log(countEnumerableProperties(Map.prototype) == 0);
try { if (Inst144 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2681,2692,72>",(console.log)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (console) != "undefined") {_RecordType("<2681,2688,72>",(console)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (countEnumerableProperties) != "undefined") {_RecordType("<2693,2718,72>",(countEnumerableProperties)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (map) != "undefined") {_RecordType("<2719,2722,72>",(map)); Inst147++; } } catch(e) {}
  console.log(countEnumerableProperties(map) == 0);
  map.foo = 10;
try { if (Inst148 <= 1000 && typeof (map.foo) != "undefined") {_RecordType("<2733,2740,73>",(map.foo)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (map) != "undefined") {_RecordType("<2733,2736,73>",(map)); Inst149++; } } catch(e) {}
  map.bar = 'hello';
try { if (Inst150 <= 1000 && typeof (map.bar) != "undefined") {_RecordType("<2749,2756,74>",(map.bar)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (map) != "undefined") {_RecordType("<2749,2752,74>",(map)); Inst151++; } } catch(e) {}
try { if (Inst152 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2770,2781,75>",(console.log)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (console) != "undefined") {_RecordType("<2770,2777,75>",(console)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (countEnumerableProperties) != "undefined") {_RecordType("<2782,2807,75>",(countEnumerableProperties)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (map) != "undefined") {_RecordType("<2808,2811,75>",(map)); Inst155++; } } catch(e) {}
  console.log(countEnumerableProperties(map) == 2);
try { if (Inst156 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2822,2833,76>",(console.log)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (console) != "undefined") {_RecordType("<2822,2829,76>",(console)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (map.foo) != "undefined") {_RecordType("<2834,2841,76>",(map.foo)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (map) != "undefined") {_RecordType("<2834,2837,76>",(map)); Inst159++; } } catch(e) {}
  console.log(map.foo === 10);
try { if (Inst160 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2853,2864,77>",(console.log)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (console) != "undefined") {_RecordType("<2853,2860,77>",(console)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (map.bar) != "undefined") {_RecordType("<2865,2872,77>",(map.bar)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (map) != "undefined") {_RecordType("<2865,2868,77>",(map)); Inst163++; } } catch(e) {}
  console.log(map.bar === 'hello');
try { if (Inst164 <= 1000 && typeof (map.foo) != "undefined") {_RecordType("<2896,2903,78>",(map.foo)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (map) != "undefined") {_RecordType("<2896,2899,78>",(map)); Inst165++; } } catch(e) {}
  delete map.foo;
try { if (Inst166 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2907,2918,79>",(console.log)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (console) != "undefined") {_RecordType("<2907,2914,79>",(console)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (countEnumerableProperties) != "undefined") {_RecordType("<2919,2944,79>",(countEnumerableProperties)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (map) != "undefined") {_RecordType("<2945,2948,79>",(map)); Inst169++; } } catch(e) {}
  console.log(countEnumerableProperties(map) == 1);
try { if (Inst170 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2959,2970,80>",(console.log)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (console) != "undefined") {_RecordType("<2959,2966,80>",(console)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (map.foo) != "undefined") {_RecordType("<2971,2978,80>",(map.foo)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (map) != "undefined") {_RecordType("<2971,2974,80>",(map)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2983,2992,80>",(undefined)); Inst174++; } } catch(e) {}
  console.log(map.foo === undefined);
}

try { if (Inst175 <= 1000 && typeof (t5) != "undefined") {_RecordType("<2998,3000,83>",(t5)); Inst175++; } } catch(e) {}
t5();

try { if (Inst176 <= 1000 && typeof (t6) != "undefined") {_RecordType("<3014,3016,85>",(t6)); Inst176++; } } catch(e) {}
function t6() {
  // Map is no longer allowed to be called as a function unless the object it is given
  // for its this argument already has the [[MapData]] property on it.
  // TODO: When we implement @@create support, update this test to reflect it.
  //
  // For IE11 we simply throw if Map() is called as a function instead of in a new expression
try { if (Inst179 <= 1000 && typeof (e) != "undefined") {_RecordType("<3392,3393,93>",(e)); Inst179++; } } catch(e) {}
  try {
try { if (Inst177 <= 1000 && typeof (Map.call) != "undefined") {_RecordType("<3369,3377,92>",(Map.call)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (Map) != "undefined") {_RecordType("<3369,3372,92>",(Map)); Inst178++; } } catch(e) {}
    Map.call();
  } catch (e) {
    ;
  }

try { if (Inst182 <= 1000 && typeof (e) != "undefined") {_RecordType("<3445,3446,99>",(e)); Inst182++; } } catch(e) {}
  try {
try { if (Inst180 <= 1000 && typeof (Map.call) != "undefined") {_RecordType("<3420,3428,98>",(Map.call)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Map) != "undefined") {_RecordType("<3420,3423,98>",(Map)); Inst181++; } } catch(e) {}
    Map.call({});
  } catch (e) {
    ;
  }

try { if (Inst185 <= 1000 && typeof (e) != "undefined") {_RecordType("<3499,3500,105>",(e)); Inst185++; } } catch(e) {}
  try {
try { if (Inst183 <= 1000 && typeof (Map.call) != "undefined") {_RecordType("<3473,3481,104>",(Map.call)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (Map) != "undefined") {_RecordType("<3473,3476,104>",(Map)); Inst184++; } } catch(e) {}
    Map.call(123);
  } catch (e) {
    ;
  }

try { if (Inst188 <= 1000 && typeof (e) != "undefined") {_RecordType("<3557,3558,111>",(e)); Inst188++; } } catch(e) {}
  try {
try { if (Inst186 <= 1000 && typeof (Map.call) != "undefined") {_RecordType("<3527,3535,110>",(Map.call)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (Map) != "undefined") {_RecordType("<3527,3530,110>",(Map)); Inst187++; } } catch(e) {}
    Map.call("hello");
  } catch (e) {
    ;
  }

try { if (Inst189 <= 1000 && typeof (MyMap) != "undefined") {_RecordType("<3584,3589,115>",(MyMap)); Inst189++; } } catch(e) {}
  function MyMap() {
try { if (Inst190 <= 1000 && typeof (Map.call) != "undefined") {_RecordType("<3598,3606,116>",(Map.call)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (Map) != "undefined") {_RecordType("<3598,3601,116>",(Map)); Inst191++; } } catch(e) {}
    Map.call(this);
  }

try { if (Inst194 <= 1000 && typeof (Map) != "undefined") {_RecordType("<3643,3646,119>",(Map)); Inst194++; } } catch(e) {}
  MyMap.prototype = new Map();
try { if (Inst192 <= 1000 && typeof (MyMap.prototype) != "undefined") {_RecordType("<3621,3636,119>",(MyMap.prototype)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (MyMap) != "undefined") {_RecordType("<3621,3626,119>",(MyMap)); Inst193++; } } catch(e) {}
try { if (Inst198 <= 1000 && typeof (MyMap) != "undefined") {_RecordType("<3682,3687,120>",(MyMap)); Inst198++; } } catch(e) {}
  MyMap.prototype.constructor = MyMap;
try { if (Inst195 <= 1000 && typeof (MyMap.prototype.constructor) != "undefined") {_RecordType("<3652,3679,120>",(MyMap.prototype.constructor)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (MyMap.prototype) != "undefined") {_RecordType("<3652,3667,120>",(MyMap.prototype)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (MyMap) != "undefined") {_RecordType("<3652,3657,120>",(MyMap)); Inst197++; } } catch(e) {}

try { if (Inst201 <= 1000 && typeof (e) != "undefined") {_RecordType("<3738,3739,124>",(e)); Inst201++; } } catch(e) {}
  try {
try { if (Inst200 <= 1000 && typeof (MyMap) != "undefined") {_RecordType("<3718,3723,123>",(MyMap)); Inst200++; } } catch(e) {}
    var mymap = new MyMap();
try { if (Inst199 <= 1000 && typeof (mymap) != "undefined") {_RecordType("<3706,3711,123>",(mymap)); Inst199++; } } catch(e) {}
  } catch (e) {
    ;
  }
}

try { if (Inst202 <= 1000 && typeof (t6) != "undefined") {_RecordType("<3756,3758,129>",(t6)); Inst202++; } } catch(e) {}
t6();

