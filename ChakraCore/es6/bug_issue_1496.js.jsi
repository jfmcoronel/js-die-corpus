var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// GitHub Issue1496: ES6 constructor returns class instead of object upon constructorCache hit
//
// -mic:1 -maxsimplejitruncount:2
var Test = {};
try { if (Inst0 <= 1000 && typeof (Test) != "undefined") {_RecordType("<503,507,8>",(Test)); Inst0++; } } catch(e) {}

class A {
  constructor(foo) {
try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<539,542,11>",(foo)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<561,564,12>",(foo)); Inst4++; } } catch(e) {}
    this.foo = foo;
try { if (Inst3 <= 1000 && typeof (this.foo) != "undefined") {_RecordType("<550,558,12>",(this.foo)); Inst3++; } } catch(e) {}
  }

  toB() {
try { if (Inst5 <= 1000 && typeof (Test.B) != "undefined") {_RecordType("<596,602,16>",(Test.B)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Test) != "undefined") {_RecordType("<596,600,16>",(Test)); Inst6++; } } catch(e) {}
    return new Test.B(this);
  }

}
try { if (Inst1 <= 1000 && typeof (A) != "undefined") {_RecordType("<521,522,10>",(A)); Inst1++; } } catch(e) {}

class B {
  constructor(bar) {
try { if (Inst8 <= 1000 && typeof (bar) != "undefined") {_RecordType("<642,645,22>",(bar)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (bar) != "undefined") {_RecordType("<664,667,23>",(bar)); Inst10++; } } catch(e) {}
    this.bar = bar;
try { if (Inst9 <= 1000 && typeof (this.bar) != "undefined") {_RecordType("<653,661,23>",(this.bar)); Inst9++; } } catch(e) {}
  }

}
try { if (Inst7 <= 1000 && typeof (B) != "undefined") {_RecordType("<624,625,21>",(B)); Inst7++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (B) != "undefined") {_RecordType("<686,687,28>",(B)); Inst13++; } } catch(e) {}
Test.B = B;
try { if (Inst11 <= 1000 && typeof (Test.B) != "undefined") {_RecordType("<677,683,28>",(Test.B)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Test) != "undefined") {_RecordType("<677,681,28>",(Test)); Inst12++; } } catch(e) {}

for (var i = 0; i < 10; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<699,700,30>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<706,707,30>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<714,715,30>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (A) != "undefined") {_RecordType("<735,736,31>",(A)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<737,738,31>",(i)); Inst19++; } } catch(e) {}
  var a = new A(i);
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<727,728,31>",(a)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (a.toB) != "undefined") {_RecordType("<751,756,32>",(a.toB)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<751,752,32>",(a)); Inst22++; } } catch(e) {}
  var b = a.toB();
try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<747,748,32>",(b)); Inst20++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<809,810,36>",(e)); Inst28++; } } catch(e) {}
  try {
try { if (Inst23 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<773,785,35>",(WScript.Echo)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<773,780,35>",(WScript)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (b.bar.foo) != "undefined") {_RecordType("<786,795,35>",(b.bar.foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b.bar) != "undefined") {_RecordType("<786,791,35>",(b.bar)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<786,787,35>",(b)); Inst27++; } } catch(e) {}
    WScript.Echo(b.bar.foo);
  } catch (e) {
try { if (Inst29 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<818,830,37>",(WScript.Echo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<818,825,37>",(WScript)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<831,832,37>",(e)); Inst31++; } } catch(e) {}
    WScript.Echo(e);
try { if (Inst32 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<839,851,38>",(WScript.Echo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<839,846,38>",(WScript)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<852,853,38>",(b)); Inst34++; } } catch(e) {}
    WScript.Echo(b);
    break;
  }
}

