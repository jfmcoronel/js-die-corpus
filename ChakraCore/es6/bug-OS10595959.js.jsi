var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
class BaseClass {}
try { if (Inst0 <= 1000 && typeof (BaseClass) != "undefined") {_RecordType("<373,382,5>",(BaseClass)); Inst0++; } } catch(e) {}

var FloatArr0 = [];
try { if (Inst1 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<391,400,7>",(FloatArr0)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<421,426,8>",(Array)); Inst3++; } } catch(e) {}
var VarArr0 = Array();
try { if (Inst2 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<411,418,8>",(VarArr0)); Inst2++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (BaseClass) != "undefined") {_RecordType("<452,461,10>",(BaseClass)); Inst15++; } } catch(e) {}
class class1 extends BaseClass {
  constructor(argMath24 = 1577048671 ? f32[(e /= arguments[15] ? func0.call(arrObj0) : 'caller') & 255] : typeof a == 'string') {
try { if (Inst5 <= 1000 && typeof (argMath24) != "undefined") {_RecordType("<478,487,11>",(argMath24)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f32[(e /= arguments[15] ? func0.call(arrObj0) : 'caller') & 255]) != "undefined") {_RecordType("<503,567,11>",(f32[(e /= arguments[15] ? func0.call(arrObj0) : 'caller') & 255])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f32) != "undefined") {_RecordType("<503,506,11>",(f32)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<508,509,11>",(e)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments[15]) != "undefined") {_RecordType("<513,526,11>",(arguments[15])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<513,522,11>",(arguments)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (func0.call) != "undefined") {_RecordType("<529,539,11>",(func0.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (func0) != "undefined") {_RecordType("<529,534,11>",(func0)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<540,547,11>",(arrObj0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<577,578,11>",(a)); Inst14++; } } catch(e) {}
    super();
  }

}
try { if (Inst4 <= 1000 && typeof (class1) != "undefined") {_RecordType("<437,443,10>",(class1)); Inst4++; } } catch(e) {}

for (var v3 = 0; v3 < 10; v3++) {
try { if (Inst16 <= 1000 && typeof (v3) != "undefined") {_RecordType("<624,626,17>",(v3)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v3) != "undefined") {_RecordType("<632,634,17>",(v3)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (v3) != "undefined") {_RecordType("<641,643,17>",(v3)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (FloatArr0.push) != "undefined") {_RecordType("<651,665,18>",(FloatArr0.push)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<651,660,18>",(FloatArr0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (class1) != "undefined") {_RecordType("<670,676,18>",(class1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<677,684,18>",(VarArr0)); Inst22++; } } catch(e) {}
  FloatArr0.push(new class1(VarArr0, '$M+!,($9($.)!wm'));
}

try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<710,715,21>",(print)); Inst23++; } } catch(e) {}
print("Passed");

