var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (testGen) != "undefined") {_RecordType("<376,383,5>",(testGen)); Inst0++; } } catch(e) {}
function testGen(func, values, count) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<384,388,5>",(func)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (values) != "undefined") {_RecordType("<390,396,5>",(values)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (count) != "undefined") {_RecordType("<398,403,5>",(count)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (func) != "undefined") {_RecordType("<421,425,6>",(func)); Inst5++; } } catch(e) {}
  const gen = func();
try { if (Inst4 <= 1000 && typeof (gen) != "undefined") {_RecordType("<415,418,6>",(gen)); Inst4++; } } catch(e) {}
  let counter = 0;
try { if (Inst6 <= 1000 && typeof (counter) != "undefined") {_RecordType("<435,442,7>",(counter)); Inst6++; } } catch(e) {}

  for (const value of gen) {
try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<462,467,9>",(value)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (gen) != "undefined") {_RecordType("<471,474,9>",(gen)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<482,493,10>",(console.log)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (console) != "undefined") {_RecordType("<482,489,10>",(console)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (value) != "undefined") {_RecordType("<494,499,10>",(value)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (values[counter]) != "undefined") {_RecordType("<503,518,10>",(values[counter])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (values) != "undefined") {_RecordType("<503,509,10>",(values)); Inst13++; } } catch(e) {}
    console.log(value == values[counter]);
try { if (Inst14 <= 1000 && typeof (counter) != "undefined") {_RecordType("<527,534,11>",(counter)); Inst14++; } } catch(e) {}
    ++counter;
  }

try { if (Inst15 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<543,554,14>",(console.log)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (console) != "undefined") {_RecordType("<543,550,14>",(console)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (counter) != "undefined") {_RecordType("<555,562,14>",(counter)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (count) != "undefined") {_RecordType("<564,569,14>",(count)); Inst18++; } } catch(e) {}
  console.log(counter, count);
}

try { if (Inst19 <= 1000 && typeof (t1) != "undefined") {_RecordType("<584,586,17>",(t1)); Inst19++; } } catch(e) {}
function t1() {
  const arr = [0, 1, 2, 5];
try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<599,602,18>",(arr)); Inst20++; } } catch(e) {}

  for (var a = () => {
    return "a";
  } in {}) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<631,632,20>",(a)); Inst21++; } } catch(e) {}
    ;
  }

try { if (Inst22 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<685,696,26>",(console.log)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (console) != "undefined") {_RecordType("<685,692,26>",(console)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<697,698,26>",(a)); Inst24++; } } catch(e) {}
  console.log(a());

  for (var a = () => {
    return "a";
  } in arr) {
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<715,716,28>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arr) != "undefined") {_RecordType("<750,753,30>",(arr)); Inst26++; } } catch(e) {}
    ;
  }

try { if (Inst27 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<770,781,34>",(console.log)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (console) != "undefined") {_RecordType("<770,777,34>",(console)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<782,783,34>",(a)); Inst29++; } } catch(e) {}
  console.log(a == 3);
}

try { if (Inst30 <= 1000 && typeof (t1) != "undefined") {_RecordType("<794,796,37>",(t1)); Inst30++; } } catch(e) {}
t1();

try { if (Inst31 <= 1000 && typeof (t3) != "undefined") {_RecordType("<810,812,39>",(t3)); Inst31++; } } catch(e) {}
function t3() {
try { if (Inst32 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<829,833,40>",(gen1)); Inst32++; } } catch(e) {}
  function* gen1() {
    for (var a = yield 'a' in {
      b: 1
    }) {
try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<851,852,41>",(a)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<896,907,44>",(console.log)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (console) != "undefined") {_RecordType("<896,903,44>",(console)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<908,909,44>",(a)); Inst36++; } } catch(e) {}
      console.log(a);
    }
  }

try { if (Inst37 <= 1000 && typeof (testGen) != "undefined") {_RecordType("<925,932,48>",(testGen)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<933,937,48>",(gen1)); Inst38++; } } catch(e) {}
  testGen(gen1, ["a"], 1);

try { if (Inst39 <= 1000 && typeof (gen2) != "undefined") {_RecordType("<963,967,50>",(gen2)); Inst39++; } } catch(e) {}
  function* gen2() {
    for (var a = yield in {
      c: 1
    }) {
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<985,986,51>",(a)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1026,1037,54>",(console.log)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (console) != "undefined") {_RecordType("<1026,1033,54>",(console)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1038,1039,54>",(a)); Inst43++; } } catch(e) {}
      console.log(a);
    }
  }

try { if (Inst44 <= 1000 && typeof (testGen) != "undefined") {_RecordType("<1055,1062,58>",(testGen)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (gen2) != "undefined") {_RecordType("<1063,1067,58>",(gen2)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1070,1079,58>",(undefined)); Inst46++; } } catch(e) {}
  testGen(gen2, [undefined], 1);

try { if (Inst47 <= 1000 && typeof (gen3) != "undefined") {_RecordType("<1099,1103,60>",(gen3)); Inst47++; } } catch(e) {}
  function* gen3() {
    for (var a = yield 'd' in {} in {
      a: 1
    }) {
try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<1121,1122,61>",(a)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1172,1183,64>",(console.log)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (console) != "undefined") {_RecordType("<1172,1179,64>",(console)); Inst50++; } } catch(e) {}
      console.log(false);
    }
  }

try { if (Inst51 <= 1000 && typeof (testGen) != "undefined") {_RecordType("<1205,1212,68>",(testGen)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (gen3) != "undefined") {_RecordType("<1213,1217,68>",(gen3)); Inst52++; } } catch(e) {}
  testGen(gen3, ['d'], 1);
}

try { if (Inst53 <= 1000 && typeof (t3) != "undefined") {_RecordType("<1233,1235,71>",(t3)); Inst53++; } } catch(e) {}
t3();

