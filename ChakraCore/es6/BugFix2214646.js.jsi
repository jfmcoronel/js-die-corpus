var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var pass = true;
try { if (Inst0 <= 1000 && typeof (pass) != "undefined") {_RecordType("<371,375,5>",(pass)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<394,398,7>",(test)); Inst1++; } } catch(e) {}
function test() {
  var c = function () {
    ;
  };
try { if (Inst2 <= 1000 && typeof (c) != "undefined") {_RecordType("<409,410,8>",(c)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (shapeyConstructor) != "undefined") {_RecordType("<450,467,12>",(shapeyConstructor)); Inst3++; } } catch(e) {}
  function shapeyConstructor() {
    for (var x in Array(c = '', ...NaN, c = '')) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<485,486,13>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<490,495,13>",(Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<496,497,13>",(c)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<507,510,13>",(NaN)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<512,513,13>",(c)); Inst8++; } } catch(e) {}
      ;
    }
  }

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<594,595,20>",(e)); Inst11++; } } catch(e) {}
  try {
try { if (Inst10 <= 1000 && typeof (shapeyConstructor) != "undefined") {_RecordType("<562,579,19>",(shapeyConstructor)); Inst10++; } } catch(e) {}
    var f = shapeyConstructor();
try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<558,559,19>",(f)); Inst9++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<623,624,24>",(c)); Inst12++; } } catch(e) {}
  if (typeof c !== "string") {
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<645,650,25>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<680,681,25>",(c)); Inst14++; } } catch(e) {}
    print("FAIL: type of is " + typeof c);
    pass = false;
try { if (Inst15 <= 1000 && typeof (pass) != "undefined") {_RecordType("<688,692,26>",(pass)); Inst15++; } } catch(e) {}
  }
}

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<709,713,30>",(test)); Inst16++; } } catch(e) {}
test();
try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<717,721,31>",(test)); Inst17++; } } catch(e) {}
test();
try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<725,729,32>",(test)); Inst18++; } } catch(e) {}
test();
try { if (Inst19 <= 1000 && typeof (pass) != "undefined") {_RecordType("<733,737,33>",(pass)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<740,745,33>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<756,761,33>",(print)); Inst21++; } } catch(e) {}
pass ? print("PASS") : print("FAIL");

