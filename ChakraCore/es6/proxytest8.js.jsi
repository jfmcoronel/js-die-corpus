var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst1 <= 1000 && typeof (String) != "undefined") {_RecordType("<381,387,5>",(String)); Inst1++; } } catch(e) {}
var str = new String('testing contains');
try { if (Inst0 <= 1000 && typeof (str) != "undefined") {_RecordType("<371,374,5>",(str)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<421,426,6>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (str) != "undefined") {_RecordType("<427,430,6>",(str)); Inst4++; } } catch(e) {}
var p = new Proxy(str, {}); // Object.defineProperty(p, "toString", {value : function(arg) { print('proxys toString'); return "b"; }});
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<413,414,6>",(p)); Inst2++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<546,567,8>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<546,552,8>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<568,569,8>",(p)); Inst7++; } } catch(e) {}
Object.defineProperty(p, "valueOf", {
  value: function (arg) {
try { if (Inst8 <= 1000 && typeof (arg) != "undefined") {_RecordType("<603,606,9>",(arg)); Inst8++; } } catch(e) {}
    return "c";
  }
});
try { if (Inst9 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<634,645,13>",(console.log)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (console) != "undefined") {_RecordType("<634,641,13>",(console)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<646,647,13>",(p)); Inst11++; } } catch(e) {}
console.log(p + "a");
try { if (Inst13 <= 1000 && typeof (Number) != "undefined") {_RecordType("<668,674,14>",(Number)); Inst13++; } } catch(e) {}
var n = new Number(100);
try { if (Inst12 <= 1000 && typeof (n) != "undefined") {_RecordType("<660,661,14>",(n)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<694,699,15>",(Proxy)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (n) != "undefined") {_RecordType("<700,701,15>",(n)); Inst16++; } } catch(e) {}
var p1 = new Proxy(n, {});
try { if (Inst14 <= 1000 && typeof (p1) != "undefined") {_RecordType("<685,687,15>",(p1)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<708,729,16>",(Object.defineProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<708,714,16>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p1) != "undefined") {_RecordType("<730,732,16>",(p1)); Inst19++; } } catch(e) {}
Object.defineProperty(p1, "valueOf", {
  value: function (arg) {
try { if (Inst20 <= 1000 && typeof (arg) != "undefined") {_RecordType("<766,769,17>",(arg)); Inst20++; } } catch(e) {}
    return 10;
  }
});
try { if (Inst21 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<796,807,21>",(console.log)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (console) != "undefined") {_RecordType("<796,803,21>",(console)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (p1) != "undefined") {_RecordType("<808,810,21>",(p1)); Inst23++; } } catch(e) {}
console.log(p1 + 5);

try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<884,885,26>",(e)); Inst28++; } } catch(e) {}
try {
try { if (Inst25 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<839,844,24>",(Proxy)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number) != "undefined") {_RecordType("<849,855,24>",(Number)); Inst26++; } } catch(e) {}
  var p2 = new Proxy(new Number(5), {});
try { if (Inst24 <= 1000 && typeof (p2) != "undefined") {_RecordType("<830,832,24>",(p2)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (p2) != "undefined") {_RecordType("<867,869,25>",(p2)); Inst27++; } } catch(e) {}
  p2 + 5;
} catch (e) {
try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<897,898,27>",(e)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<910,919,27>",(TypeError)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<924,933,27>",(e.message)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<924,925,27>",(e)); Inst32++; } } catch(e) {}
  if (!(e instanceof TypeError) || e.message !== "Number.prototype.valueOf: 'this' is not a Number object") {
    ;
  }
}

