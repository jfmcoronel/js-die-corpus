var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// ES6 Species Built-In APIs tests -- verifies the shape and basic behavior of the built-in [@@species] property
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<489,491,6>",(t1)); Inst0++; } } catch(e) {}
function t1() {
  var c = [];
try { if (Inst1 <= 1000 && typeof (c) != "undefined") {_RecordType("<502,503,7>",(c)); Inst1++; } } catch(e) {}
  c[0] = 1;
try { if (Inst2 <= 1000 && typeof (c[0]) != "undefined") {_RecordType("<512,516,8>",(c[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<512,513,8>",(c)); Inst3++; } } catch(e) {}
  c[4294967294] = 2;
try { if (Inst4 <= 1000 && typeof (c[4294967294]) != "undefined") {_RecordType("<524,537,9>",(c[4294967294])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<524,525,9>",(c)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<545,566,10>",(Object.defineProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<545,551,10>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<567,572,10>",(Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<574,588,10>",(Symbol.species)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<574,580,10>",(Symbol)); Inst10++; } } catch(e) {}
  Object.defineProperty(Array, Symbol.species, {
    enumerable: false,
    configurable: true,
    writable: true
  });
try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<666,667,15>",(c)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c.slice) != "undefined") {_RecordType("<672,679,15>",(c.slice)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (c) != "undefined") {_RecordType("<672,673,15>",(c)); Inst13++; } } catch(e) {}
  c === c.slice(0);
}

try { if (Inst14 <= 1000 && typeof (t1) != "undefined") {_RecordType("<687,689,18>",(t1)); Inst14++; } } catch(e) {}
t1();

try { if (Inst15 <= 1000 && typeof (t2) != "undefined") {_RecordType("<703,705,20>",(t2)); Inst15++; } } catch(e) {}
function t2() {
  var arr = [1, 2, 3, 4, 5, 6];
try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<716,719,21>",(arr)); Inst16++; } } catch(e) {}
  arr.constructor = null;
try { if (Inst17 <= 1000 && typeof (arr.constructor) != "undefined") {_RecordType("<744,759,22>",(arr.constructor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<744,747,22>",(arr)); Inst18++; } } catch(e) {}
  arr.x = 1;
try { if (Inst19 <= 1000 && typeof (arr.x) != "undefined") {_RecordType("<770,775,23>",(arr.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<770,773,23>",(arr)); Inst20++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<845,846,27>",(e)); Inst26++; } } catch(e) {}
  try {
try { if (Inst21 <= 1000 && typeof (Array.prototype.splice.call) != "undefined") {_RecordType("<794,821,26>",(Array.prototype.splice.call)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array.prototype.splice) != "undefined") {_RecordType("<794,816,26>",(Array.prototype.splice)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<794,809,26>",(Array.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array) != "undefined") {_RecordType("<794,799,26>",(Array)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<822,825,26>",(arr)); Inst25++; } } catch(e) {}
    Array.prototype.splice.call(arr, 0, 3);
  } catch (e) {
    ;
  }
}

try { if (Inst27 <= 1000 && typeof (t2) != "undefined") {_RecordType("<863,865,32>",(t2)); Inst27++; } } catch(e) {}
t2();

try { if (Inst28 <= 1000 && typeof (t3) != "undefined") {_RecordType("<879,881,34>",(t3)); Inst28++; } } catch(e) {}
function t3() {
try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<897,901,35>",(test)); Inst29++; } } catch(e) {}
  function test() {
try { if (Inst30 <= 1000 && typeof (CollectGarbage) != "undefined") {_RecordType("<910,924,36>",(CollectGarbage)); Inst30++; } } catch(e) {}
    CollectGarbage();
    var n = [];
try { if (Inst31 <= 1000 && typeof (n) != "undefined") {_RecordType("<936,937,37>",(n)); Inst31++; } } catch(e) {}

    for (var i = 0; i < 0x10; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<958,959,39>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<965,966,39>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<975,976,39>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (n.push) != "undefined") {_RecordType("<988,994,40>",(n.push)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (n) != "undefined") {_RecordType("<988,989,40>",(n)); Inst36++; } } catch(e) {}
      n.push([0x12345678, 0x12345678, 0x12345678, 0x12345678]);
    }

try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1076,1082,43>",(Object)); Inst40++; } } catch(e) {}
    class fake extends Object {
      static get [Symbol.species]() {
        return function () {
try { if (Inst38 <= 1000 && typeof (n[5]) != "undefined") {_RecordType("<1169,1173,46>",(n[5])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (n) != "undefined") {_RecordType("<1169,1170,46>",(n)); Inst39++; } } catch(e) {}
          return n[5];
        };
      }

    }
try { if (Inst37 <= 1000 && typeof (fake) != "undefined") {_RecordType("<1063,1067,43>",(fake)); Inst37++; } } catch(e) {}

    var f = function (a) {
try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1224,1225,52>",(a)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1242,1243,53>",(a)); Inst43++; } } catch(e) {}
      return a;
    };
try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<1210,1211,52>",(f)); Inst41++; } } catch(e) {}

    var x = ["fluorescence", 0, 0, 0x41414141];
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<1261,1262,56>",(x)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1317,1322,57>",(Proxy)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<1323,1324,57>",(x)); Inst47++; } } catch(e) {}
    var y = new Proxy(x, {
      get: function (t, p, r) {
try { if (Inst48 <= 1000 && typeof (t) != "undefined") {_RecordType("<1349,1350,58>",(t)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (p) != "undefined") {_RecordType("<1352,1353,58>",(p)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (r) != "undefined") {_RecordType("<1355,1356,58>",(r)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (p) != "undefined") {_RecordType("<1375,1376,59>",(p)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (fake) != "undefined") {_RecordType("<1396,1400,59>",(fake)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (x[p]) != "undefined") {_RecordType("<1403,1407,59>",(x[p])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<1403,1404,59>",(x)); Inst54++; } } catch(e) {}
        return p == "constructor" ? fake : x[p];
      }
    }); // oob write
try { if (Inst45 <= 1000 && typeof (y) != "undefined") {_RecordType("<1309,1310,57>",(y)); Inst45++; } } catch(e) {}

try { if (Inst55 <= 1000 && typeof (Array.prototype.map.apply) != "undefined") {_RecordType("<1443,1468,63>",(Array.prototype.map.apply)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Array.prototype.map) != "undefined") {_RecordType("<1443,1462,63>",(Array.prototype.map)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1443,1458,63>",(Array.prototype)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1443,1448,63>",(Array)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (y) != "undefined") {_RecordType("<1469,1470,63>",(y)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (f) != "undefined") {_RecordType("<1473,1474,63>",(f)); Inst60++; } } catch(e) {}
    Array.prototype.map.apply(y, [f]);

    for (var i = 0; i < 0x10; i++) {
try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<1492,1493,65>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<1499,1500,65>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1509,1510,65>",(i)); Inst63++; } } catch(e) {}
      n[i][0] = 0x42424242;
try { if (Inst64 <= 1000 && typeof (n[i][0]) != "undefined") {_RecordType("<1522,1529,66>",(n[i][0])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (n[i]) != "undefined") {_RecordType("<1522,1526,66>",(n[i])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (n) != "undefined") {_RecordType("<1522,1523,66>",(n)); Inst66++; } } catch(e) {}
    }
  }

try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<1557,1561,70>",(test)); Inst67++; } } catch(e) {}
  test();
}

try { if (Inst68 <= 1000 && typeof (t3) != "undefined") {_RecordType("<1568,1570,73>",(t3)); Inst68++; } } catch(e) {}
t3();

