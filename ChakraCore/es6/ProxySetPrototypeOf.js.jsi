var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<376,378,5>",(t1)); Inst0++; } } catch(e) {}
function t1() {
  var called = false;
try { if (Inst1 <= 1000 && typeof (called) != "undefined") {_RecordType("<389,395,6>",(called)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<423,428,7>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (setPrototypeOf) != "undefined") {_RecordType("<439,453,8>",(setPrototypeOf)); Inst4++; } } catch(e) {}
  var proxy = new Proxy({}, {
    setPrototypeOf() {
      called = true;
try { if (Inst5 <= 1000 && typeof (called) != "undefined") {_RecordType("<464,470,9>",(called)); Inst5++; } } catch(e) {}
      return false;
    }

  });
try { if (Inst2 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<411,416,7>",(proxy)); Inst2++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<570,571,17>",(e)); Inst9++; } } catch(e) {}
  try {
try { if (Inst6 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<525,546,16>",(Object.setPrototypeOf)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<525,531,16>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<547,552,16>",(proxy)); Inst8++; } } catch(e) {}
    Object.setPrototypeOf(proxy, {});
  } catch (e) {
    ;
  }

try { if (Inst10 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<588,599,21>",(console.log)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (console) != "undefined") {_RecordType("<588,595,21>",(console)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (called) != "undefined") {_RecordType("<600,606,21>",(called)); Inst12++; } } catch(e) {}
  console.log(called);
}

try { if (Inst13 <= 1000 && typeof (t1) != "undefined") {_RecordType("<612,614,24>",(t1)); Inst13++; } } catch(e) {}
t1();

try { if (Inst14 <= 1000 && typeof (t2) != "undefined") {_RecordType("<628,630,26>",(t2)); Inst14++; } } catch(e) {}
function t2() {
  var called = false;
try { if (Inst15 <= 1000 && typeof (called) != "undefined") {_RecordType("<641,647,27>",(called)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<675,680,28>",(Proxy)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (setPrototypeOf) != "undefined") {_RecordType("<691,705,29>",(setPrototypeOf)); Inst18++; } } catch(e) {}
  var proxy = new Proxy({}, {
    setPrototypeOf() {
      called = true;
try { if (Inst19 <= 1000 && typeof (called) != "undefined") {_RecordType("<716,722,30>",(called)); Inst19++; } } catch(e) {}
      return false;
    }

  });
try { if (Inst16 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<663,668,28>",(proxy)); Inst16++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<810,811,38>",(e)); Inst22++; } } catch(e) {}
  try {
    proxy.__proto__ = {};
try { if (Inst20 <= 1000 && typeof (proxy.__proto__) != "undefined") {_RecordType("<777,792,37>",(proxy.__proto__)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<777,782,37>",(proxy)); Inst21++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst23 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<828,839,42>",(console.log)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (console) != "undefined") {_RecordType("<828,835,42>",(console)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (called) != "undefined") {_RecordType("<840,846,42>",(called)); Inst25++; } } catch(e) {}
  console.log(called);
}

try { if (Inst26 <= 1000 && typeof (t2) != "undefined") {_RecordType("<852,854,45>",(t2)); Inst26++; } } catch(e) {}
t2();

