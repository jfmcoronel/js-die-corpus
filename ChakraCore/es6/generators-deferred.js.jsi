var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Smoke test to verify that generator functions successfully execute when
// they are deferred parsed and deferred deserialized.
var passed = true;
try { if (Inst0 <= 1000 && typeof (passed) != "undefined") {_RecordType("<501,507,7>",(passed)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (validateValue) != "undefined") {_RecordType("<526,539,9>",(validateValue)); Inst1++; } } catch(e) {}
function validateValue(ir, ev) {
try { if (Inst2 <= 1000 && typeof (ir) != "undefined") {_RecordType("<540,542,9>",(ir)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ev) != "undefined") {_RecordType("<544,546,9>",(ev)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (ir.value) != "undefined") {_RecordType("<556,564,10>",(ir.value)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ir) != "undefined") {_RecordType("<556,558,10>",(ir)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ev) != "undefined") {_RecordType("<569,571,10>",(ev)); Inst6++; } } catch(e) {}
  if (ir.value !== ev) {
try { if (Inst7 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<579,591,11>",(WScript.Echo)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<579,586,11>",(WScript)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ev) != "undefined") {_RecordType("<615,617,11>",(ev)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ir.value) != "undefined") {_RecordType("<636,644,11>",(ir.value)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ir) != "undefined") {_RecordType("<636,638,11>",(ir)); Inst11++; } } catch(e) {}
    WScript.Echo("FAILED: Expected '" + ev + "' but got '" + ir.value + "'");
    passed = false;
try { if (Inst12 <= 1000 && typeof (passed) != "undefined") {_RecordType("<657,663,12>",(passed)); Inst12++; } } catch(e) {}
  }
}

try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<689,693,16>",(test)); Inst13++; } } catch(e) {}
function test() {
try { if (Inst14 <= 1000 && typeof (gf) != "undefined") {_RecordType("<710,712,17>",(gf)); Inst14++; } } catch(e) {}
  function* gf() {
    yield 1;
    yield 2;
    yield 3;
    return null;
  }

try { if (Inst16 <= 1000 && typeof (gf) != "undefined") {_RecordType("<788,790,24>",(gf)); Inst16++; } } catch(e) {}
  var g = gf();
try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<784,785,24>",(g)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (validateValue) != "undefined") {_RecordType("<796,809,25>",(validateValue)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<810,816,25>",(g.next)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<810,811,25>",(g)); Inst19++; } } catch(e) {}
  validateValue(g.next(), 1);
try { if (Inst20 <= 1000 && typeof (validateValue) != "undefined") {_RecordType("<826,839,26>",(validateValue)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<840,846,26>",(g.next)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<840,841,26>",(g)); Inst22++; } } catch(e) {}
  validateValue(g.next(), 2);
try { if (Inst23 <= 1000 && typeof (validateValue) != "undefined") {_RecordType("<856,869,27>",(validateValue)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<870,876,27>",(g.next)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<870,871,27>",(g)); Inst25++; } } catch(e) {}
  validateValue(g.next(), 3);
try { if (Inst26 <= 1000 && typeof (validateValue) != "undefined") {_RecordType("<886,899,28>",(validateValue)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<900,906,28>",(g.next)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (g) != "undefined") {_RecordType("<900,901,28>",(g)); Inst28++; } } catch(e) {}
  validateValue(g.next(), null);
}

try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<920,924,31>",(test)); Inst29++; } } catch(e) {}
test();

try { if (Inst30 <= 1000 && typeof (passed) != "undefined") {_RecordType("<933,939,33>",(passed)); Inst30++; } } catch(e) {}
if (passed) {
try { if (Inst31 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<945,957,34>",(WScript.Echo)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<945,952,34>",(WScript)); Inst32++; } } catch(e) {}
  WScript.Echo("PASSED");
}

