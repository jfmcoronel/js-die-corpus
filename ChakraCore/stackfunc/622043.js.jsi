var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var runningJITtedCode = false;
try { if (Inst0 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<371,388,5>",(runningJITtedCode)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<408,413,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
  var func0 = function () {
try { if (Inst4 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<462,479,9>",(runningJITtedCode)); Inst4++; } } catch(e) {}
    var v3877 = runningJITtedCode;
try { if (Inst3 <= 1000 && typeof (v3877) != "undefined") {_RecordType("<454,459,9>",(v3877)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (v3878) != "undefined") {_RecordType("<495,500,11>",(v3878)); Inst5++; } } catch(e) {}
    function v3878() {
try { if (Inst6 <= 1000 && typeof (v3879) != "undefined") {_RecordType("<520,525,12>",(v3879)); Inst6++; } } catch(e) {}
      function v3879() {
try { if (Inst7 <= 1000 && typeof (v3879) != "undefined") {_RecordType("<545,550,13>",(v3879)); Inst7++; } } catch(e) {}
        return v3879;
      }

try { if (Inst8 <= 1000 && typeof (v3877) != "undefined") {_RecordType("<571,576,16>",(v3877)); Inst8++; } } catch(e) {}
      if (v3877) {
try { if (Inst9 <= 1000 && typeof (v3879) != "undefined") {_RecordType("<595,600,17>",(v3879)); Inst9++; } } catch(e) {}
        return v3879();
      }
    }

try { if (Inst11 <= 1000 && typeof (v3878) != "undefined") {_RecordType("<635,640,21>",(v3878)); Inst11++; } } catch(e) {}
    var v3880 = v3878();
try { if (Inst10 <= 1000 && typeof (v3880) != "undefined") {_RecordType("<627,632,21>",(v3880)); Inst10++; } } catch(e) {}
  };
try { if (Inst2 <= 1000 && typeof (func0) != "undefined") {_RecordType("<424,429,8>",(func0)); Inst2++; } } catch(e) {}

  var func2 = function () {
try { if (Inst13 <= 1000 && typeof (func0) != "undefined") {_RecordType("<682,687,25>",(func0)); Inst13++; } } catch(e) {}
    func0();
  };
try { if (Inst12 <= 1000 && typeof (func2) != "undefined") {_RecordType("<656,661,24>",(func2)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (func0.call) != "undefined") {_RecordType("<699,709,28>",(func0.call)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (func0) != "undefined") {_RecordType("<699,704,28>",(func0)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (func2.call) != "undefined") {_RecordType("<710,720,28>",(func2.call)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (func2) != "undefined") {_RecordType("<710,715,28>",(func2)); Inst17++; } } catch(e) {}
  func0.call(func2.call());
}

; // generate profile

try { if (Inst18 <= 1000 && typeof (test0) != "undefined") {_RecordType("<751,756,33>",(test0)); Inst18++; } } catch(e) {}
test0(); // run JITted code

runningJITtedCode = true;
try { if (Inst19 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<780,797,35>",(runningJITtedCode)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (test0) != "undefined") {_RecordType("<806,811,36>",(test0)); Inst20++; } } catch(e) {}
test0();
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<815,820,37>",(print)); Inst21++; } } catch(e) {}
print('pass');

