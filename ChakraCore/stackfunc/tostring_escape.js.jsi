var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var escape;
try { if (Inst0 <= 1000 && typeof (escape) != "undefined") {_RecordType("<371,377,5>",(escape)); Inst0++; } } catch(e) {}

Function.prototype.toString = function () {
  escape = this;
try { if (Inst4 <= 1000 && typeof (escape) != "undefined") {_RecordType("<426,432,8>",(escape)); Inst4++; } } catch(e) {}
  return "toString";
};
try { if (Inst1 <= 1000 && typeof (Function.prototype.toString) != "undefined") {_RecordType("<380,407,7>",(Function.prototype.toString)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<380,398,7>",(Function.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Function) != "undefined") {_RecordType("<380,388,7>",(Function)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (test3) != "undefined") {_RecordType("<475,480,12>",(test3)); Inst5++; } } catch(e) {}
function test3(param) {
try { if (Inst6 <= 1000 && typeof (param) != "undefined") {_RecordType("<481,486,12>",(param)); Inst6++; } } catch(e) {}
  var func3 = function () {
try { if (Inst8 <= 1000 && typeof (param) != "undefined") {_RecordType("<529,534,14>",(param)); Inst8++; } } catch(e) {}
    return param;
  };
try { if (Inst7 <= 1000 && typeof (func3) != "undefined") {_RecordType("<496,501,13>",(func3)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (func3) != "undefined") {_RecordType("<551,556,17>",(func3)); Inst9++; } } catch(e) {}
  return func3 + "3";
}

try { if (Inst10 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<567,578,20>",(console.log)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (console) != "undefined") {_RecordType("<567,574,20>",(console)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (test3) != "undefined") {_RecordType("<579,584,20>",(test3)); Inst12++; } } catch(e) {}
console.log(test3("test1"));
try { if (Inst13 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<596,607,21>",(console.log)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (console) != "undefined") {_RecordType("<596,603,21>",(console)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (escape) != "undefined") {_RecordType("<608,614,21>",(escape)); Inst15++; } } catch(e) {}
console.log(escape());
try { if (Inst16 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<619,630,22>",(console.log)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (console) != "undefined") {_RecordType("<619,626,22>",(console)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (test3) != "undefined") {_RecordType("<631,636,22>",(test3)); Inst18++; } } catch(e) {}
console.log(test3("test2"));
try { if (Inst19 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<648,659,23>",(console.log)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (console) != "undefined") {_RecordType("<648,655,23>",(console)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (escape) != "undefined") {_RecordType("<660,666,23>",(escape)); Inst21++; } } catch(e) {}
console.log(escape());

