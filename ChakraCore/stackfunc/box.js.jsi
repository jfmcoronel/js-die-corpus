var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var glo;
try { if (Inst0 <= 1000 && typeof (glo) != "undefined") {_RecordType("<371,374,5>",(glo)); Inst0++; } } catch(e) {}
var box = false;
try { if (Inst1 <= 1000 && typeof (box) != "undefined") {_RecordType("<380,383,6>",(box)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (test) != "undefined") {_RecordType("<403,407,8>",(test)); Inst2++; } } catch(e) {}
function test(param) {
try { if (Inst3 <= 1000 && typeof (param) != "undefined") {_RecordType("<408,413,8>",(param)); Inst3++; } } catch(e) {}
  var recurse = 0;
try { if (Inst4 <= 1000 && typeof (recurse) != "undefined") {_RecordType("<423,430,9>",(recurse)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (nested1) != "undefined") {_RecordType("<448,455,11>",(nested1)); Inst5++; } } catch(e) {}
  function nested1(param2) {
try { if (Inst6 <= 1000 && typeof (param2) != "undefined") {_RecordType("<456,462,11>",(param2)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (nested2) != "undefined") {_RecordType("<479,486,12>",(nested2)); Inst7++; } } catch(e) {}
    function nested2() {
try { if (Inst8 <= 1000 && typeof (param) != "undefined") {_RecordType("<504,509,13>",(param)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (param2) != "undefined") {_RecordType("<512,518,13>",(param2)); Inst9++; } } catch(e) {}
      return param + param2;
    }

try { if (Inst10 <= 1000 && typeof (recurse) != "undefined") {_RecordType("<531,538,16>",(recurse)); Inst10++; } } catch(e) {}
    recurse++;

try { if (Inst11 <= 1000 && typeof (recurse) != "undefined") {_RecordType("<551,558,18>",(recurse)); Inst11++; } } catch(e) {}
    if (recurse < 10) {
try { if (Inst12 <= 1000 && typeof (nested1) != "undefined") {_RecordType("<580,587,19>",(nested1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (param) != "undefined") {_RecordType("<588,593,19>",(param)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (param2) != "undefined") {_RecordType("<596,602,19>",(param2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (recurse) != "undefined") {_RecordType("<605,612,19>",(recurse)); Inst15++; } } catch(e) {}
      return nested1(param + param2 + recurse);
    }

try { if (Inst16 <= 1000 && typeof (box) != "undefined") {_RecordType("<630,633,22>",(box)); Inst16++; } } catch(e) {}
    if (box) {
try { if (Inst17 <= 1000 && typeof (escape) != "undefined") {_RecordType("<643,649,23>",(escape)); Inst17++; } } catch(e) {}
      escape();
try { if (Inst18 <= 1000 && typeof (glo) != "undefined") {_RecordType("<666,669,24>",(glo)); Inst18++; } } catch(e) {}
      return glo();
    }

try { if (Inst19 <= 1000 && typeof (nested2) != "undefined") {_RecordType("<691,698,27>",(nested2)); Inst19++; } } catch(e) {}
    return nested2();
  }

try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<709,714,30>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (nested1) != "undefined") {_RecordType("<715,722,30>",(nested1)); Inst21++; } } catch(e) {}
  print(nested1());

try { if (Inst22 <= 1000 && typeof (blah) != "undefined") {_RecordType("<739,743,32>",(blah)); Inst22++; } } catch(e) {}
  function blah() {
    return "blah";
  }

try { if (Inst23 <= 1000 && typeof (escape) != "undefined") {_RecordType("<783,789,36>",(escape)); Inst23++; } } catch(e) {}
  function escape() {
try { if (Inst25 <= 1000 && typeof (blah) != "undefined") {_RecordType("<804,808,37>",(blah)); Inst25++; } } catch(e) {}
    glo = blah;
try { if (Inst24 <= 1000 && typeof (glo) != "undefined") {_RecordType("<798,801,37>",(glo)); Inst24++; } } catch(e) {}
  }
}

try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<817,821,41>",(test)); Inst26++; } } catch(e) {}
test("test1");
try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<832,836,42>",(test)); Inst27++; } } catch(e) {}
test("test2"); // JIT

box = true;
try { if (Inst28 <= 1000 && typeof (box) != "undefined") {_RecordType("<855,858,44>",(box)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<867,871,45>",(test)); Inst29++; } } catch(e) {}
test("test3");
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<882,887,46>",(print)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (glo) != "undefined") {_RecordType("<888,891,46>",(glo)); Inst31++; } } catch(e) {}
print(glo());

