var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<376,380,5>",(foo1)); Inst0++; } } catch(e) {}
function foo1() {
try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<397,402,6>",(Array)); Inst2++; } } catch(e) {}
  var ary = Array();
try { if (Inst1 <= 1000 && typeof (ary) != "undefined") {_RecordType("<391,394,6>",(ary)); Inst1++; } } catch(e) {}
  var foo1Var = 1;
try { if (Inst3 <= 1000 && typeof (foo1Var) != "undefined") {_RecordType("<412,419,7>",(foo1Var)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<437,441,9>",(foo2)); Inst4++; } } catch(e) {}
  function foo2() {
    var foo2Var = 0;
try { if (Inst5 <= 1000 && typeof (foo2Var) != "undefined") {_RecordType("<454,461,10>",(foo2Var)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Error) != "undefined") {_RecordType("<481,486,11>",(Error)); Inst7++; } } catch(e) {}
    var err = Error();
try { if (Inst6 <= 1000 && typeof (err) != "undefined") {_RecordType("<475,478,11>",(err)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (ex) != "undefined") {_RecordType("<531,533,15>",(ex)); Inst9++; } } catch(e) {}
    try {
try { if (Inst8 <= 1000 && typeof (err) != "undefined") {_RecordType("<513,516,14>",(err)); Inst8++; } } catch(e) {}
      throw err;
    } catch (ex) {
      ;
    }

    while (true) {
try { if (Inst10 <= 1000 && typeof (foo4) != "undefined") {_RecordType("<586,590,20>",(foo4)); Inst10++; } } catch(e) {}
      function foo4() {
try { if (Inst11 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<603,607,21>",(foo5)); Inst11++; } } catch(e) {}
        foo5();
      }

try { if (Inst13 <= 1000 && typeof (ary) != "undefined") {_RecordType("<636,639,24>",(ary)); Inst13++; } } catch(e) {}
      foo1Var = ary;
try { if (Inst12 <= 1000 && typeof (foo1Var) != "undefined") {_RecordType("<626,633,24>",(foo1Var)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<657,661,26>",(foo5)); Inst14++; } } catch(e) {}
      function foo5() {
try { if (Inst17 <= 1000 && typeof (foo1Var) != "undefined") {_RecordType("<689,696,27>",(foo1Var)); Inst17++; } } catch(e) {}
        ary[foo2Var] = foo1Var;
try { if (Inst15 <= 1000 && typeof (ary[foo2Var]) != "undefined") {_RecordType("<674,686,27>",(ary[foo2Var])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ary) != "undefined") {_RecordType("<674,677,27>",(ary)); Inst16++; } } catch(e) {}
      }

try { if (Inst18 <= 1000 && typeof (foo5) != "undefined") {_RecordType("<713,717,30>",(foo5)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ary) != "undefined") {_RecordType("<718,721,30>",(ary)); Inst19++; } } catch(e) {}
      foo5(ary);
      break;
    }
  }

try { if (Inst20 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<750,754,35>",(foo2)); Inst20++; } } catch(e) {}
  foo2();
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<760,765,36>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ary[0]) != "undefined") {_RecordType("<773,779,36>",(ary[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ary) != "undefined") {_RecordType("<773,776,36>",(ary)); Inst23++; } } catch(e) {}
  print(typeof ary[0]);
}

;
try { if (Inst24 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<787,791,40>",(foo1)); Inst24++; } } catch(e) {}
foo1();

