var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var go = {
  foo: 1,
  print: function () {
    ;
  }
};
try { if (Inst0 <= 1000 && typeof (go) != "undefined") {_RecordType("<371,373,5>",(go)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test1) != "undefined") {_RecordType("<434,439,12>",(test1)); Inst1++; } } catch(e) {}
function test1() {
  for (var i = 0; i < 2; ++i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,13>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,13>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,13>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<484,485,14>",(i)); Inst5++; } } catch(e) {}
    if (i % 2 == 1) {
try { if (Inst6 <= 1000 && typeof (go.print) != "undefined") {_RecordType("<504,512,15>",(go.print)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (go) != "undefined") {_RecordType("<504,506,15>",(go)); Inst7++; } } catch(e) {}
      go.print();
try { if (Inst9 <= 1000 && typeof (go.foo) != "undefined") {_RecordType("<526,532,16>",(go.foo)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (go) != "undefined") {_RecordType("<526,528,16>",(go)); Inst10++; } } catch(e) {}
      x = go.foo;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<522,523,16>",(x)); Inst8++; } } catch(e) {}
    } else {
      arguments = 1;
try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<553,562,18>",(arguments)); Inst11++; } } catch(e) {}
    }
  }

  ;
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<585,590,23>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<591,600,23>",(arguments)); Inst13++; } } catch(e) {}
  print(arguments);
}

;
try { if (Inst14 <= 1000 && typeof (test1) != "undefined") {_RecordType("<608,613,27>",(test1)); Inst14++; } } catch(e) {}
test1();
go.bar = 1;
try { if (Inst15 <= 1000 && typeof (go.bar) != "undefined") {_RecordType("<617,623,28>",(go.bar)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (go) != "undefined") {_RecordType("<617,619,28>",(go)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (test1) != "undefined") {_RecordType("<629,634,29>",(test1)); Inst17++; } } catch(e) {}
test1();

