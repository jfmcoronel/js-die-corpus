var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  ;
}

try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<402,411,9>",(undefined)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<436,443,9>",(Boolean)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<455,462,9>",(Boolean)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<471,474,9>",(NaN)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<643,659,9>",(Number.MAX_VALUE)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Number) != "undefined") {_RecordType("<643,649,9>",(Number)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<661,677,9>",(Number.MIN_VALUE)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Number) != "undefined") {_RecordType("<661,667,9>",(Number)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<679,689,9>",(Number.NaN)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<679,685,9>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<691,715,9>",(Number.POSITIVE_INFINITY)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Number) != "undefined") {_RecordType("<691,697,9>",(Number)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<717,741,9>",(Number.NEGATIVE_INFINITY)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<717,723,9>",(Number)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Number) != "undefined") {_RecordType("<747,753,9>",(Number)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<754,757,9>",(NaN)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number) != "undefined") {_RecordType("<764,770,9>",(Number)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<780,786,9>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Number) != "undefined") {_RecordType("<796,802,9>",(Number)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Number) != "undefined") {_RecordType("<811,817,9>",(Number)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Number) != "undefined") {_RecordType("<826,832,9>",(Number)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Number) != "undefined") {_RecordType("<844,850,9>",(Number)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number) != "undefined") {_RecordType("<862,868,9>",(Number)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<869,885,9>",(Number.MAX_VALUE)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number) != "undefined") {_RecordType("<869,875,9>",(Number)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number) != "undefined") {_RecordType("<892,898,9>",(Number)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<899,915,9>",(Number.MIN_VALUE)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Number) != "undefined") {_RecordType("<899,905,9>",(Number)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<922,928,9>",(Number)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<929,939,9>",(Number.NaN)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number) != "undefined") {_RecordType("<929,935,9>",(Number)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<946,952,9>",(Number)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<953,977,9>",(Number.POSITIVE_INFINITY)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Number) != "undefined") {_RecordType("<953,959,9>",(Number)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number) != "undefined") {_RecordType("<984,990,9>",(Number)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<991,1015,9>",(Number.NEGATIVE_INFINITY)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Number) != "undefined") {_RecordType("<991,997,9>",(Number)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (String) != "undefined") {_RecordType("<1087,1093,9>",(String)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (String) != "undefined") {_RecordType("<1103,1109,9>",(String)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (String) != "undefined") {_RecordType("<1124,1130,9>",(String)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1150,1156,9>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1175,1181,9>",(Object)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1196,1199,9>",(foo)); Inst44++; } } catch(e) {}
var all = [undefined, null, true, false, new Boolean(true), new Boolean(false), NaN, +0, -0, 0, 1, 10.0, 10.1, -1, -5, 5, 124, 248, 654, 987, -1026, +98768.2546, -88754.15478, 1 << 32, -(1 << 32), (1 << 32) - 1, 1 << 31, -(1 << 31), 1 << 25, -1 << 25, Number.MAX_VALUE, Number.MIN_VALUE, Number.NaN, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, new Number(NaN), new Number(+0), new Number(-0), new Number(0), new Number(1), new Number(10.0), new Number(10.1), new Number(Number.MAX_VALUE), new Number(Number.MIN_VALUE), new Number(Number.NaN), new Number(Number.POSITIVE_INFINITY), new Number(Number.NEGATIVE_INFINITY), "", "hello", "hel" + "lo", "+0", "-0", "0", "1", "10.0", "10.1", new String(""), new String("hello"), new String("he" + "llo"), new Object(), [1, 2, 3], new Object(), [1, 2, 3], foo];
try { if (Inst1 <= 1000 && typeof (all) != "undefined") {_RecordType("<395,398,9>",(all)); Inst1++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<1212,1221,11>",(AsmModule)); Inst45++; } } catch(e) {}
function AsmModule(stdlib, foreign, buffer) {
try { if (Inst46 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1222,1228,11>",(stdlib)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<1230,1237,11>",(foreign)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1239,1245,11>",(buffer)); Inst48++; } } catch(e) {}
  "use asm"; //views

try { if (Inst50 <= 1000 && typeof (stdlib.Int8Array) != "undefined") {_RecordType("<1289,1305,14>",(stdlib.Int8Array)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1289,1295,14>",(stdlib)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1306,1312,14>",(buffer)); Inst52++; } } catch(e) {}
  var HEAP8 = new stdlib.Int8Array(buffer);
try { if (Inst49 <= 1000 && typeof (HEAP8) != "undefined") {_RecordType("<1277,1282,14>",(HEAP8)); Inst49++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (stdlib.Int16Array) != "undefined") {_RecordType("<1334,1351,15>",(stdlib.Int16Array)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1334,1340,15>",(stdlib)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1352,1358,15>",(buffer)); Inst56++; } } catch(e) {}
  var HEAP16 = new stdlib.Int16Array(buffer);
try { if (Inst53 <= 1000 && typeof (HEAP16) != "undefined") {_RecordType("<1321,1327,15>",(HEAP16)); Inst53++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (stdlib.Int32Array) != "undefined") {_RecordType("<1380,1397,16>",(stdlib.Int32Array)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1380,1386,16>",(stdlib)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1398,1404,16>",(buffer)); Inst60++; } } catch(e) {}
  var HEAP32 = new stdlib.Int32Array(buffer);
try { if (Inst57 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<1367,1373,16>",(HEAP32)); Inst57++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (stdlib.Uint8Array) != "undefined") {_RecordType("<1426,1443,17>",(stdlib.Uint8Array)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1426,1432,17>",(stdlib)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1444,1450,17>",(buffer)); Inst64++; } } catch(e) {}
  var HEAPU8 = new stdlib.Uint8Array(buffer);
try { if (Inst61 <= 1000 && typeof (HEAPU8) != "undefined") {_RecordType("<1413,1419,17>",(HEAPU8)); Inst61++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (stdlib.Uint16Array) != "undefined") {_RecordType("<1473,1491,18>",(stdlib.Uint16Array)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1473,1479,18>",(stdlib)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1492,1498,18>",(buffer)); Inst68++; } } catch(e) {}
  var HEAPU16 = new stdlib.Uint16Array(buffer);
try { if (Inst65 <= 1000 && typeof (HEAPU16) != "undefined") {_RecordType("<1459,1466,18>",(HEAPU16)); Inst65++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (stdlib.Uint32Array) != "undefined") {_RecordType("<1521,1539,19>",(stdlib.Uint32Array)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1521,1527,19>",(stdlib)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1540,1546,19>",(buffer)); Inst72++; } } catch(e) {}
  var HEAPU32 = new stdlib.Uint32Array(buffer);
try { if (Inst69 <= 1000 && typeof (HEAPU32) != "undefined") {_RecordType("<1507,1514,19>",(HEAPU32)); Inst69++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (stdlib.Float32Array) != "undefined") {_RecordType("<1569,1588,20>",(stdlib.Float32Array)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1569,1575,20>",(stdlib)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1589,1595,20>",(buffer)); Inst76++; } } catch(e) {}
  var HEAPF32 = new stdlib.Float32Array(buffer);
try { if (Inst73 <= 1000 && typeof (HEAPF32) != "undefined") {_RecordType("<1555,1562,20>",(HEAPF32)); Inst73++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (stdlib.Float64Array) != "undefined") {_RecordType("<1617,1636,21>",(stdlib.Float64Array)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1617,1623,21>",(stdlib)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1637,1643,21>",(buffer)); Inst80++; } } catch(e) {}
  var HEAP64 = new stdlib.Float64Array(buffer);
try { if (Inst77 <= 1000 && typeof (HEAP64) != "undefined") {_RecordType("<1604,1610,21>",(HEAP64)); Inst77++; } } catch(e) {}

try { if (Inst81 <= 1000 && typeof (read8) != "undefined") {_RecordType("<1658,1663,23>",(read8)); Inst81++; } } catch(e) {}
  function read8(x) {
try { if (Inst82 <= 1000 && typeof (x) != "undefined") {_RecordType("<1664,1665,23>",(x)); Inst82++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (x) != "undefined") {_RecordType("<1677,1678,24>",(x)); Inst84++; } } catch(e) {}
    x = x | 0;
try { if (Inst83 <= 1000 && typeof (x) != "undefined") {_RecordType("<1673,1674,24>",(x)); Inst83++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (HEAP8[0xFFF]) != "undefined") {_RecordType("<1695,1707,25>",(HEAP8[0xFFF])); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (HEAP8) != "undefined") {_RecordType("<1695,1700,25>",(HEAP8)); Inst86++; } } catch(e) {}
    return HEAP8[0xFFF] | 0;
  }

try { if (Inst87 <= 1000 && typeof (read16) != "undefined") {_RecordType("<1729,1735,28>",(read16)); Inst87++; } } catch(e) {}
  function read16(x) {
try { if (Inst88 <= 1000 && typeof (x) != "undefined") {_RecordType("<1736,1737,28>",(x)); Inst88++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof (x) != "undefined") {_RecordType("<1749,1750,29>",(x)); Inst90++; } } catch(e) {}
    x = x | 0;
try { if (Inst89 <= 1000 && typeof (x) != "undefined") {_RecordType("<1745,1746,29>",(x)); Inst89++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (HEAP16[0xFFF]) != "undefined") {_RecordType("<1767,1780,30>",(HEAP16[0xFFF])); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (HEAP16) != "undefined") {_RecordType("<1767,1773,30>",(HEAP16)); Inst92++; } } catch(e) {}
    return HEAP16[0xFFF] | 0;
  }

try { if (Inst93 <= 1000 && typeof (read32) != "undefined") {_RecordType("<1802,1808,33>",(read32)); Inst93++; } } catch(e) {}
  function read32(x) {
try { if (Inst94 <= 1000 && typeof (x) != "undefined") {_RecordType("<1809,1810,33>",(x)); Inst94++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (x) != "undefined") {_RecordType("<1822,1823,34>",(x)); Inst96++; } } catch(e) {}
    x = x | 0;
try { if (Inst95 <= 1000 && typeof (x) != "undefined") {_RecordType("<1818,1819,34>",(x)); Inst95++; } } catch(e) {}
try { if (Inst97 <= 1000 && typeof (HEAP32[0xFFF]) != "undefined") {_RecordType("<1840,1853,35>",(HEAP32[0xFFF])); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<1840,1846,35>",(HEAP32)); Inst98++; } } catch(e) {}
    return HEAP32[0xFFF] | 0;
  }

try { if (Inst99 <= 1000 && typeof (readU8) != "undefined") {_RecordType("<1875,1881,38>",(readU8)); Inst99++; } } catch(e) {}
  function readU8(x) {
try { if (Inst100 <= 1000 && typeof (x) != "undefined") {_RecordType("<1882,1883,38>",(x)); Inst100++; } } catch(e) {}
try { if (Inst102 <= 1000 && typeof (x) != "undefined") {_RecordType("<1895,1896,39>",(x)); Inst102++; } } catch(e) {}
    x = x | 0;
try { if (Inst101 <= 1000 && typeof (x) != "undefined") {_RecordType("<1891,1892,39>",(x)); Inst101++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (HEAPU8[0xFFF]) != "undefined") {_RecordType("<1915,1928,40>",(HEAPU8[0xFFF])); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (HEAPU8) != "undefined") {_RecordType("<1915,1921,40>",(HEAPU8)); Inst104++; } } catch(e) {}
    return +(HEAPU8[0xFFF] >>> 0);
  }

try { if (Inst105 <= 1000 && typeof (readU16) != "undefined") {_RecordType("<1953,1960,43>",(readU16)); Inst105++; } } catch(e) {}
  function readU16(x) {
try { if (Inst106 <= 1000 && typeof (x) != "undefined") {_RecordType("<1961,1962,43>",(x)); Inst106++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (x) != "undefined") {_RecordType("<1974,1975,44>",(x)); Inst108++; } } catch(e) {}
    x = x | 0;
try { if (Inst107 <= 1000 && typeof (x) != "undefined") {_RecordType("<1970,1971,44>",(x)); Inst107++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof (HEAPU16[0xFFF]) != "undefined") {_RecordType("<1994,2008,45>",(HEAPU16[0xFFF])); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (HEAPU16) != "undefined") {_RecordType("<1994,2001,45>",(HEAPU16)); Inst110++; } } catch(e) {}
    return +(HEAPU16[0xFFF] >>> 0);
  }

try { if (Inst111 <= 1000 && typeof (readU32) != "undefined") {_RecordType("<2033,2040,48>",(readU32)); Inst111++; } } catch(e) {}
  function readU32(x) {
try { if (Inst112 <= 1000 && typeof (x) != "undefined") {_RecordType("<2041,2042,48>",(x)); Inst112++; } } catch(e) {}
try { if (Inst114 <= 1000 && typeof (x) != "undefined") {_RecordType("<2054,2055,49>",(x)); Inst114++; } } catch(e) {}
    x = x | 0;
try { if (Inst113 <= 1000 && typeof (x) != "undefined") {_RecordType("<2050,2051,49>",(x)); Inst113++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (HEAPU32[0xFFF]) != "undefined") {_RecordType("<2074,2088,50>",(HEAPU32[0xFFF])); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (HEAPU32) != "undefined") {_RecordType("<2074,2081,50>",(HEAPU32)); Inst116++; } } catch(e) {}
    return +(HEAPU32[0xFFF] >>> 0);
  }

try { if (Inst117 <= 1000 && typeof (readF32) != "undefined") {_RecordType("<2113,2120,53>",(readF32)); Inst117++; } } catch(e) {}
  function readF32(x) {
try { if (Inst118 <= 1000 && typeof (x) != "undefined") {_RecordType("<2121,2122,53>",(x)); Inst118++; } } catch(e) {}
try { if (Inst120 <= 1000 && typeof (x) != "undefined") {_RecordType("<2134,2135,54>",(x)); Inst120++; } } catch(e) {}
    x = x | 0;
try { if (Inst119 <= 1000 && typeof (x) != "undefined") {_RecordType("<2130,2131,54>",(x)); Inst119++; } } catch(e) {}
try { if (Inst121 <= 1000 && typeof (HEAPF32[0xFFF]) != "undefined") {_RecordType("<2153,2167,55>",(HEAPF32[0xFFF])); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (HEAPF32) != "undefined") {_RecordType("<2153,2160,55>",(HEAPF32)); Inst122++; } } catch(e) {}
    return +HEAPF32[0xFFF];
  }

try { if (Inst123 <= 1000 && typeof (read64) != "undefined") {_RecordType("<2185,2191,58>",(read64)); Inst123++; } } catch(e) {}
  function read64(x) {
try { if (Inst124 <= 1000 && typeof (x) != "undefined") {_RecordType("<2192,2193,58>",(x)); Inst124++; } } catch(e) {}
try { if (Inst126 <= 1000 && typeof (x) != "undefined") {_RecordType("<2205,2206,59>",(x)); Inst126++; } } catch(e) {}
    x = x | 0;
try { if (Inst125 <= 1000 && typeof (x) != "undefined") {_RecordType("<2201,2202,59>",(x)); Inst125++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (HEAP64[0xFFF]) != "undefined") {_RecordType("<2224,2237,60>",(HEAP64[0xFFF])); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (HEAP64) != "undefined") {_RecordType("<2224,2230,60>",(HEAP64)); Inst128++; } } catch(e) {}
    return +HEAP64[0xFFF];
  }

try { if (Inst129 <= 1000 && typeof (read8) != "undefined") {_RecordType("<2266,2271,64>",(read8)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (read16) != "undefined") {_RecordType("<2285,2291,65>",(read16)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (read32) != "undefined") {_RecordType("<2305,2311,66>",(read32)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (readU8) != "undefined") {_RecordType("<2325,2331,67>",(readU8)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (readU16) != "undefined") {_RecordType("<2346,2353,68>",(readU16)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (readU32) != "undefined") {_RecordType("<2368,2375,69>",(readU32)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (readF32) != "undefined") {_RecordType("<2390,2397,70>",(readF32)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (read64) != "undefined") {_RecordType("<2411,2417,71>",(read64)); Inst136++; } } catch(e) {}
  return {
    read8: read8,
    read16: read16,
    read32: read32,
    readU8: readU8,
    readU16: readU16,
    readU32: readU32,
    readF32: readF32,
    read64: read64
  };
}

try { if (Inst138 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2449,2453,76>",(Math)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<2468,2477,77>",(Int8Array)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<2493,2503,78>",(Int16Array)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<2519,2529,79>",(Int32Array)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<2545,2555,80>",(Uint8Array)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<2572,2583,81>",(Uint16Array)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<2600,2611,82>",(Uint32Array)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<2629,2641,83>",(Float32Array)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<2659,2671,84>",(Float64Array)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2685,2693,85>",(Infinity)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<2702,2705,86>",(NaN)); Inst148++; } } catch(e) {}
var stdlib = {
  Math: Math,
  Int8Array: Int8Array,
  Int16Array: Int16Array,
  Int32Array: Int32Array,
  Uint8Array: Uint8Array,
  Uint16Array: Uint16Array,
  Uint32Array: Uint32Array,
  Float32Array: Float32Array,
  Float64Array: Float64Array,
  Infinity: Infinity,
  NaN: NaN
};
try { if (Inst137 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<2430,2436,75>",(stdlib)); Inst137++; } } catch(e) {}
var env = {
  fun1: function (x) {
try { if (Inst150 <= 1000 && typeof (x) != "undefined") {_RecordType("<2739,2740,89>",(x)); Inst150++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (print) != "undefined") {_RecordType("<2748,2753,90>",(print)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (x) != "undefined") {_RecordType("<2754,2755,90>",(x)); Inst152++; } } catch(e) {}
    print(x);
  },
  fun2: function (x, y) {
try { if (Inst153 <= 1000 && typeof (x) != "undefined") {_RecordType("<2781,2782,92>",(x)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (y) != "undefined") {_RecordType("<2784,2785,92>",(y)); Inst154++; } } catch(e) {}
try { if (Inst155 <= 1000 && typeof (print) != "undefined") {_RecordType("<2793,2798,93>",(print)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (x) != "undefined") {_RecordType("<2799,2800,93>",(x)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (y) != "undefined") {_RecordType("<2802,2803,93>",(y)); Inst157++; } } catch(e) {}
    print(x, y);
  },
  i1: 155,
  i2: 658,
  d1: 68.25,
  d2: 3.14156,
  f1: 48.1523,
  f2: 14896.2514
};
try { if (Inst149 <= 1000 && typeof (env) != "undefined") {_RecordType("<2713,2716,88>",(env)); Inst149++; } } catch(e) {}
try { if (Inst159 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<2913,2924,102>",(ArrayBuffer)); Inst159++; } } catch(e) {}
var buffer = new ArrayBuffer(1 << 20);
try { if (Inst158 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2900,2906,102>",(buffer)); Inst158++; } } catch(e) {}
try { if (Inst161 <= 1000 && typeof (stdlib.Int8Array) != "undefined") {_RecordType("<2951,2967,103>",(stdlib.Int8Array)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<2951,2957,103>",(stdlib)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2968,2974,103>",(buffer)); Inst163++; } } catch(e) {}
var HEAP8 = new stdlib.Int8Array(buffer);
try { if (Inst160 <= 1000 && typeof (HEAP8) != "undefined") {_RecordType("<2939,2944,103>",(HEAP8)); Inst160++; } } catch(e) {}
try { if (Inst165 <= 1000 && typeof (stdlib.Int16Array) != "undefined") {_RecordType("<2994,3011,104>",(stdlib.Int16Array)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<2994,3000,104>",(stdlib)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3012,3018,104>",(buffer)); Inst167++; } } catch(e) {}
var HEAP16 = new stdlib.Int16Array(buffer);
try { if (Inst164 <= 1000 && typeof (HEAP16) != "undefined") {_RecordType("<2981,2987,104>",(HEAP16)); Inst164++; } } catch(e) {}
try { if (Inst169 <= 1000 && typeof (stdlib.Int32Array) != "undefined") {_RecordType("<3038,3055,105>",(stdlib.Int32Array)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<3038,3044,105>",(stdlib)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3056,3062,105>",(buffer)); Inst171++; } } catch(e) {}
var HEAP32 = new stdlib.Int32Array(buffer);
try { if (Inst168 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<3025,3031,105>",(HEAP32)); Inst168++; } } catch(e) {}
try { if (Inst173 <= 1000 && typeof (stdlib.Uint8Array) != "undefined") {_RecordType("<3082,3099,106>",(stdlib.Uint8Array)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<3082,3088,106>",(stdlib)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3100,3106,106>",(buffer)); Inst175++; } } catch(e) {}
var HEAPU8 = new stdlib.Uint8Array(buffer);
try { if (Inst172 <= 1000 && typeof (HEAPU8) != "undefined") {_RecordType("<3069,3075,106>",(HEAPU8)); Inst172++; } } catch(e) {}
try { if (Inst177 <= 1000 && typeof (stdlib.Uint16Array) != "undefined") {_RecordType("<3127,3145,107>",(stdlib.Uint16Array)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<3127,3133,107>",(stdlib)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3146,3152,107>",(buffer)); Inst179++; } } catch(e) {}
var HEAPU16 = new stdlib.Uint16Array(buffer);
try { if (Inst176 <= 1000 && typeof (HEAPU16) != "undefined") {_RecordType("<3113,3120,107>",(HEAPU16)); Inst176++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (stdlib.Uint32Array) != "undefined") {_RecordType("<3173,3191,108>",(stdlib.Uint32Array)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<3173,3179,108>",(stdlib)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3192,3198,108>",(buffer)); Inst183++; } } catch(e) {}
var HEAPU32 = new stdlib.Uint32Array(buffer);
try { if (Inst180 <= 1000 && typeof (HEAPU32) != "undefined") {_RecordType("<3159,3166,108>",(HEAPU32)); Inst180++; } } catch(e) {}
try { if (Inst185 <= 1000 && typeof (stdlib.Float32Array) != "undefined") {_RecordType("<3219,3238,109>",(stdlib.Float32Array)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<3219,3225,109>",(stdlib)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3239,3245,109>",(buffer)); Inst187++; } } catch(e) {}
var HEAPF32 = new stdlib.Float32Array(buffer);
try { if (Inst184 <= 1000 && typeof (HEAPF32) != "undefined") {_RecordType("<3205,3212,109>",(HEAPF32)); Inst184++; } } catch(e) {}
try { if (Inst189 <= 1000 && typeof (stdlib.Float64Array) != "undefined") {_RecordType("<3265,3284,110>",(stdlib.Float64Array)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<3265,3271,110>",(stdlib)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3285,3291,110>",(buffer)); Inst191++; } } catch(e) {}
var HEAP64 = new stdlib.Float64Array(buffer);
try { if (Inst188 <= 1000 && typeof (HEAP64) != "undefined") {_RecordType("<3252,3258,110>",(HEAP64)); Inst188++; } } catch(e) {}
try { if (Inst193 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<3310,3319,111>",(AsmModule)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<3320,3326,111>",(stdlib)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (env) != "undefined") {_RecordType("<3328,3331,111>",(env)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3333,3339,111>",(buffer)); Inst196++; } } catch(e) {}
var asmModule = AsmModule(stdlib, env, buffer);
try { if (Inst192 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<3298,3307,111>",(asmModule)); Inst192++; } } catch(e) {}
var x = 0xFFF;
try { if (Inst197 <= 1000 && typeof (x) != "undefined") {_RecordType("<3346,3347,112>",(x)); Inst197++; } } catch(e) {}

for (var j = 0; j < all.length; ++j) {
try { if (Inst198 <= 1000 && typeof (j) != "undefined") {_RecordType("<3367,3368,114>",(j)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (j) != "undefined") {_RecordType("<3374,3375,114>",(j)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (all.length) != "undefined") {_RecordType("<3378,3388,114>",(all.length)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (all) != "undefined") {_RecordType("<3378,3381,114>",(all)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (j) != "undefined") {_RecordType("<3392,3393,114>",(j)); Inst202++; } } catch(e) {}
try { if (Inst204 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<3407,3413,115>",(all[j])); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (all) != "undefined") {_RecordType("<3407,3410,115>",(all)); Inst205++; } } catch(e) {}
  var y = all[j];
try { if (Inst203 <= 1000 && typeof (y) != "undefined") {_RecordType("<3403,3404,115>",(y)); Inst203++; } } catch(e) {}
try { if (Inst208 <= 1000 && typeof (y) != "undefined") {_RecordType("<3428,3429,116>",(y)); Inst208++; } } catch(e) {}
  HEAP8[x] = y | 0;
try { if (Inst206 <= 1000 && typeof (HEAP8[x]) != "undefined") {_RecordType("<3417,3425,116>",(HEAP8[x])); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (HEAP8) != "undefined") {_RecordType("<3417,3422,116>",(HEAP8)); Inst207++; } } catch(e) {}
try { if (Inst209 <= 1000 && typeof (print) != "undefined") {_RecordType("<3437,3442,117>",(print)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (x) != "undefined") {_RecordType("<3465,3466,117>",(x)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (j) != "undefined") {_RecordType("<3484,3485,117>",(j)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (y) != "undefined") {_RecordType("<3495,3496,117>",(y)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (asmModule.read8) != "undefined") {_RecordType("<3509,3524,117>",(asmModule.read8)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<3509,3518,117>",(asmModule)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (x) != "undefined") {_RecordType("<3525,3526,117>",(x)); Inst215++; } } catch(e) {}
  print("read8    HEAP8  [" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.read8(x));
try { if (Inst218 <= 1000 && typeof (y) != "undefined") {_RecordType("<3544,3545,118>",(y)); Inst218++; } } catch(e) {}
  HEAP16[x] = y | 0;
try { if (Inst216 <= 1000 && typeof (HEAP16[x]) != "undefined") {_RecordType("<3532,3541,118>",(HEAP16[x])); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (HEAP16) != "undefined") {_RecordType("<3532,3538,118>",(HEAP16)); Inst217++; } } catch(e) {}
try { if (Inst219 <= 1000 && typeof (print) != "undefined") {_RecordType("<3553,3558,119>",(print)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (x) != "undefined") {_RecordType("<3581,3582,119>",(x)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (j) != "undefined") {_RecordType("<3600,3601,119>",(j)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (y) != "undefined") {_RecordType("<3611,3612,119>",(y)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (asmModule.read16) != "undefined") {_RecordType("<3625,3641,119>",(asmModule.read16)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<3625,3634,119>",(asmModule)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (x) != "undefined") {_RecordType("<3642,3643,119>",(x)); Inst225++; } } catch(e) {}
  print("read16   HEAP16 [" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.read16(x));
try { if (Inst228 <= 1000 && typeof (y) != "undefined") {_RecordType("<3661,3662,120>",(y)); Inst228++; } } catch(e) {}
  HEAP32[x] = y | 0;
try { if (Inst226 <= 1000 && typeof (HEAP32[x]) != "undefined") {_RecordType("<3649,3658,120>",(HEAP32[x])); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<3649,3655,120>",(HEAP32)); Inst227++; } } catch(e) {}
try { if (Inst229 <= 1000 && typeof (print) != "undefined") {_RecordType("<3670,3675,121>",(print)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (x) != "undefined") {_RecordType("<3698,3699,121>",(x)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (j) != "undefined") {_RecordType("<3717,3718,121>",(j)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (y) != "undefined") {_RecordType("<3728,3729,121>",(y)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (asmModule.read32) != "undefined") {_RecordType("<3742,3758,121>",(asmModule.read32)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<3742,3751,121>",(asmModule)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (x) != "undefined") {_RecordType("<3759,3760,121>",(x)); Inst235++; } } catch(e) {}
  print("read32   HEAP32 [" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.read32(x));
try { if (Inst238 <= 1000 && typeof (y) != "undefined") {_RecordType("<3778,3779,122>",(y)); Inst238++; } } catch(e) {}
  HEAPU8[x] = y | 0;
try { if (Inst236 <= 1000 && typeof (HEAPU8[x]) != "undefined") {_RecordType("<3766,3775,122>",(HEAPU8[x])); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (HEAPU8) != "undefined") {_RecordType("<3766,3772,122>",(HEAPU8)); Inst237++; } } catch(e) {}
try { if (Inst239 <= 1000 && typeof (print) != "undefined") {_RecordType("<3787,3792,123>",(print)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (x) != "undefined") {_RecordType("<3815,3816,123>",(x)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (j) != "undefined") {_RecordType("<3834,3835,123>",(j)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (y) != "undefined") {_RecordType("<3845,3846,123>",(y)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (asmModule.readU8) != "undefined") {_RecordType("<3859,3875,123>",(asmModule.readU8)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<3859,3868,123>",(asmModule)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (x) != "undefined") {_RecordType("<3876,3877,123>",(x)); Inst245++; } } catch(e) {}
  print("readU8   HEAPU8 [" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.readU8(x));
try { if (Inst248 <= 1000 && typeof (y) != "undefined") {_RecordType("<3896,3897,124>",(y)); Inst248++; } } catch(e) {}
  HEAPU16[x] = y | 0;
try { if (Inst246 <= 1000 && typeof (HEAPU16[x]) != "undefined") {_RecordType("<3883,3893,124>",(HEAPU16[x])); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (HEAPU16) != "undefined") {_RecordType("<3883,3890,124>",(HEAPU16)); Inst247++; } } catch(e) {}
try { if (Inst249 <= 1000 && typeof (print) != "undefined") {_RecordType("<3905,3910,125>",(print)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (x) != "undefined") {_RecordType("<3933,3934,125>",(x)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (j) != "undefined") {_RecordType("<3952,3953,125>",(j)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (y) != "undefined") {_RecordType("<3963,3964,125>",(y)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (asmModule.readU16) != "undefined") {_RecordType("<3977,3994,125>",(asmModule.readU16)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<3977,3986,125>",(asmModule)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (x) != "undefined") {_RecordType("<3995,3996,125>",(x)); Inst255++; } } catch(e) {}
  print("readU16  HEAPU16[" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.readU16(x));
try { if (Inst258 <= 1000 && typeof (y) != "undefined") {_RecordType("<4015,4016,126>",(y)); Inst258++; } } catch(e) {}
  HEAPU32[x] = y | 0;
try { if (Inst256 <= 1000 && typeof (HEAPU32[x]) != "undefined") {_RecordType("<4002,4012,126>",(HEAPU32[x])); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (HEAPU32) != "undefined") {_RecordType("<4002,4009,126>",(HEAPU32)); Inst257++; } } catch(e) {}
try { if (Inst259 <= 1000 && typeof (print) != "undefined") {_RecordType("<4024,4029,127>",(print)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (x) != "undefined") {_RecordType("<4052,4053,127>",(x)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (j) != "undefined") {_RecordType("<4071,4072,127>",(j)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (y) != "undefined") {_RecordType("<4082,4083,127>",(y)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (asmModule.readU32) != "undefined") {_RecordType("<4096,4113,127>",(asmModule.readU32)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<4096,4105,127>",(asmModule)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (x) != "undefined") {_RecordType("<4114,4115,127>",(x)); Inst265++; } } catch(e) {}
  print("readU32  HEAPU32[" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.readU32(x));
try { if (Inst268 <= 1000 && typeof (y) != "undefined") {_RecordType("<4135,4136,128>",(y)); Inst268++; } } catch(e) {}
  HEAPF32[x] = +y;
try { if (Inst266 <= 1000 && typeof (HEAPF32[x]) != "undefined") {_RecordType("<4121,4131,128>",(HEAPF32[x])); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (HEAPF32) != "undefined") {_RecordType("<4121,4128,128>",(HEAPF32)); Inst267++; } } catch(e) {}
try { if (Inst269 <= 1000 && typeof (print) != "undefined") {_RecordType("<4140,4145,129>",(print)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (x) != "undefined") {_RecordType("<4168,4169,129>",(x)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (j) != "undefined") {_RecordType("<4187,4188,129>",(j)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (y) != "undefined") {_RecordType("<4198,4199,129>",(y)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (asmModule.readF32) != "undefined") {_RecordType("<4212,4229,129>",(asmModule.readF32)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<4212,4221,129>",(asmModule)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (x) != "undefined") {_RecordType("<4230,4231,129>",(x)); Inst275++; } } catch(e) {}
  print("readF32  HEAPF32[" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.readF32(x));
try { if (Inst278 <= 1000 && typeof (y) != "undefined") {_RecordType("<4250,4251,130>",(y)); Inst278++; } } catch(e) {}
  HEAP64[x] = +y;
try { if (Inst276 <= 1000 && typeof (HEAP64[x]) != "undefined") {_RecordType("<4237,4246,130>",(HEAP64[x])); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (HEAP64) != "undefined") {_RecordType("<4237,4243,130>",(HEAP64)); Inst277++; } } catch(e) {}
try { if (Inst279 <= 1000 && typeof (print) != "undefined") {_RecordType("<4255,4260,131>",(print)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (x) != "undefined") {_RecordType("<4283,4284,131>",(x)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (j) != "undefined") {_RecordType("<4302,4303,131>",(j)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (y) != "undefined") {_RecordType("<4313,4314,131>",(y)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (asmModule.read64) != "undefined") {_RecordType("<4327,4343,131>",(asmModule.read64)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<4327,4336,131>",(asmModule)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (x) != "undefined") {_RecordType("<4344,4345,131>",(x)); Inst285++; } } catch(e) {}
  print("read64   HEAP64 [" + x + "]   = all[" + j + "](" + y + "); = " + asmModule.read64(x));
}

