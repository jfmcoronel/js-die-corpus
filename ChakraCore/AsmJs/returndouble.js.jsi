var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// return double
// do while and while loops
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<421,430,7>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule() {
  "use asm";

  var x1 = 10;
try { if (Inst1 <= 1000 && typeof (x1) != "undefined") {_RecordType("<455,457,10>",(x1)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f3) != "undefined") {_RecordType("<476,478,12>",(f3)); Inst2++; } } catch(e) {}
  function f3(x, y) {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<479,480,12>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<482,483,12>",(y)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<495,496,13>",(x)); Inst6++; } } catch(e) {}
    x = x | 0;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<491,492,13>",(x)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<511,512,14>",(y)); Inst8++; } } catch(e) {}
    y = +y;
try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<506,507,14>",(y)); Inst7++; } } catch(e) {}
    var m = 1000;
try { if (Inst9 <= 1000 && typeof (m) != "undefined") {_RecordType("<522,523,15>",(m)); Inst9++; } } catch(e) {}
    var n = 10;
try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<540,541,16>",(n)); Inst10++; } } catch(e) {}
    var z = 1.1;
try { if (Inst11 <= 1000 && typeof (z) != "undefined") {_RecordType("<556,557,17>",(z)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<570,571,19>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<581,582,19>",(x)); Inst13++; } } catch(e) {}
    a: while ((x | 0) < 30) {
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<606,607,20>",(x)); Inst15++; } } catch(e) {}
      x = x + 1 | 0;
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<602,603,20>",(x)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<629,630,22>",(x)); Inst16++; } } catch(e) {}
      if ((x | 0) > 10) {
try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<815,816,31>",(n)); Inst17++; } } catch(e) {}
        do {
try { if (Inst18 <= 1000 && typeof (n) != "undefined") {_RecordType("<672,673,24>",(n)); Inst18++; } } catch(e) {}
          if ((n | 0) > 50) {
try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<707,708,25>",(y)); Inst19++; } } catch(e) {}
            return +y;
          }

try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<737,738,28>",(x)); Inst21++; } } catch(e) {}
          x = x + 1 | 0;
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<733,734,28>",(x)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<764,765,29>",(y)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (z) != "undefined") {_RecordType("<768,769,29>",(z)); Inst24++; } } catch(e) {}
          y = +(y * z);
try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<758,759,29>",(y)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (n) != "undefined") {_RecordType("<786,787,30>",(n)); Inst26++; } } catch(e) {}
          n = n + 1 | 0;
try { if (Inst25 <= 1000 && typeof (n) != "undefined") {_RecordType("<782,783,30>",(n)); Inst25++; } } catch(e) {}
        } while ((n | 0) < 100);
      }
    }

try { if (Inst27 <= 1000 && typeof (y) != "undefined") {_RecordType("<857,858,35>",(y)); Inst27++; } } catch(e) {}
    return +y;
  }

try { if (Inst28 <= 1000 && typeof (f3) != "undefined") {_RecordType("<874,876,38>",(f3)); Inst28++; } } catch(e) {}
  return f3;
}

try { if (Inst30 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<890,899,41>",(AsmModule)); Inst30++; } } catch(e) {}
var f3 = AsmModule();
try { if (Inst29 <= 1000 && typeof (f3) != "undefined") {_RecordType("<885,887,41>",(f3)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<903,908,42>",(print)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f3) != "undefined") {_RecordType("<909,911,42>",(f3)); Inst32++; } } catch(e) {}
print(f3(1, 1.5));
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<922,927,43>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f3) != "undefined") {_RecordType("<928,930,43>",(f3)); Inst34++; } } catch(e) {}
print(f3(1, 1.5));

