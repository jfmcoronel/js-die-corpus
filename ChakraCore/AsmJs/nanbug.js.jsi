var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<376,385,5>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(stdlib, foreign, buffer) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<386,392,5>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<394,401,5>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<403,409,5>",(buffer)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (stdlib.Float32Array) != "undefined") {_RecordType("<446,465,8>",(stdlib.Float32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<446,452,8>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<466,472,8>",(buffer)); Inst7++; } } catch(e) {}
  var HEAP32 = new stdlib.Float32Array(buffer);
try { if (Inst4 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<433,439,8>",(HEAP32)); Inst4++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (stdlib.Math.fround) != "undefined") {_RecordType("<490,508,9>",(stdlib.Math.fround)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<490,501,9>",(stdlib.Math)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<490,496,9>",(stdlib)); Inst11++; } } catch(e) {}
  var fround = stdlib.Math.fround;
try { if (Inst8 <= 1000 && typeof (fround) != "undefined") {_RecordType("<481,487,9>",(fround)); Inst8++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (foreign.fun2) != "undefined") {_RecordType("<520,532,10>",(foreign.fun2)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<520,527,10>",(foreign)); Inst14++; } } catch(e) {}
  var c = foreign.fun2;
try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<516,517,10>",(c)); Inst12++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<546,547,12>",(f)); Inst15++; } } catch(e) {}
  function f() {
try { if (Inst17 <= 1000 && typeof (fround) != "undefined") {_RecordType("<564,570,13>",(fround)); Inst17++; } } catch(e) {}
    var a = fround(0);
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<560,561,13>",(a)); Inst16++; } } catch(e) {}
    var b = 0.;
try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<583,584,14>",(b)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (fround) != "undefined") {_RecordType("<599,605,15>",(fround)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (HEAP32[0]) != "undefined") {_RecordType("<606,615,15>",(HEAP32[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<606,612,15>",(HEAP32)); Inst22++; } } catch(e) {}
    a = fround(HEAP32[0]);
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<595,596,15>",(a)); Inst19++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<627,628,16>",(a)); Inst24++; } } catch(e) {}
    b = +a;
try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<622,623,16>",(b)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<634,635,17>",(c)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<636,637,17>",(b)); Inst26++; } } catch(e) {}
    c(b);
try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<653,654,18>",(b)); Inst27++; } } catch(e) {}
    return ~~b | 0;
  }

try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<683,684,22>",(f)); Inst28++; } } catch(e) {}
  return {
    f: f
  };
}

try { if (Inst30 <= 1000 && typeof (Math) != "undefined") {_RecordType("<716,720,27>",(Math)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<735,744,28>",(Int8Array)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<760,770,29>",(Int16Array)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<786,796,30>",(Int32Array)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<812,822,31>",(Uint8Array)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<839,850,32>",(Uint16Array)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<867,878,33>",(Uint32Array)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<896,908,34>",(Float32Array)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<926,938,35>",(Float64Array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<952,960,36>",(Infinity)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<969,972,37>",(NaN)); Inst40++; } } catch(e) {}
var global = {
  Math: Math,
  Int8Array: Int8Array,
  Int16Array: Int16Array,
  Int32Array: Int32Array,
  Uint8Array: Uint8Array,
  Uint16Array: Uint16Array,
  Uint32Array: Uint32Array,
  Float32Array: Float32Array,
  Float64Array: Float64Array,
  Infinity: Infinity,
  NaN: NaN
};
try { if (Inst29 <= 1000 && typeof (global) != "undefined") {_RecordType("<697,703,26>",(global)); Inst29++; } } catch(e) {}
var env = {
  fun1: function (x1, x2, x3, x4, x5, x6, x7, x8) {
try { if (Inst42 <= 1000 && typeof (x1) != "undefined") {_RecordType("<1006,1008,40>",(x1)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x2) != "undefined") {_RecordType("<1010,1012,40>",(x2)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x3) != "undefined") {_RecordType("<1014,1016,40>",(x3)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x4) != "undefined") {_RecordType("<1018,1020,40>",(x4)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x5) != "undefined") {_RecordType("<1022,1024,40>",(x5)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (x6) != "undefined") {_RecordType("<1026,1028,40>",(x6)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (x7) != "undefined") {_RecordType("<1030,1032,40>",(x7)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x8) != "undefined") {_RecordType("<1034,1036,40>",(x8)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (print) != "undefined") {_RecordType("<1044,1049,41>",(print)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (x1) != "undefined") {_RecordType("<1050,1052,41>",(x1)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (x2) != "undefined") {_RecordType("<1054,1056,41>",(x2)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (x3) != "undefined") {_RecordType("<1058,1060,41>",(x3)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (x4) != "undefined") {_RecordType("<1062,1064,41>",(x4)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (x5) != "undefined") {_RecordType("<1066,1068,41>",(x5)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (x6) != "undefined") {_RecordType("<1070,1072,41>",(x6)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (x7) != "undefined") {_RecordType("<1074,1076,41>",(x7)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (x8) != "undefined") {_RecordType("<1078,1080,41>",(x8)); Inst58++; } } catch(e) {}
    print(x1, x2, x3, x4, x5, x6, x7, x8);
  },
  fun2: function (x) {
try { if (Inst59 <= 1000 && typeof (x) != "undefined") {_RecordType("<1106,1107,43>",(x)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (print) != "undefined") {_RecordType("<1115,1120,44>",(print)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<1121,1122,44>",(x)); Inst61++; } } catch(e) {}
    print(x);
  },
  x: 155,
  i2: 658,
  d1: 68.25,
  d2: 3.14156,
  f1: 48.1523,
  f2: 14896.2514
};
try { if (Inst41 <= 1000 && typeof (env) != "undefined") {_RecordType("<980,983,39>",(env)); Inst41++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<1231,1242,53>",(ArrayBuffer)); Inst63++; } } catch(e) {}
var buffer = new ArrayBuffer(1 << 20);
try { if (Inst62 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1218,1224,53>",(buffer)); Inst62++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<1268,1278,54>",(Int32Array)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1279,1285,54>",(buffer)); Inst66++; } } catch(e) {}
var view = new Int32Array(buffer);
try { if (Inst64 <= 1000 && typeof (view) != "undefined") {_RecordType("<1257,1261,54>",(view)); Inst64++; } } catch(e) {}
view[0] = 0xffffffff;
try { if (Inst67 <= 1000 && typeof (view[0]) != "undefined") {_RecordType("<1288,1295,55>",(view[0])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (view) != "undefined") {_RecordType("<1288,1292,55>",(view)); Inst68++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<1330,1339,56>",(AsmModule)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (global) != "undefined") {_RecordType("<1340,1346,56>",(global)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (env) != "undefined") {_RecordType("<1348,1351,56>",(env)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1353,1359,56>",(buffer)); Inst73++; } } catch(e) {}
var asmModule = new AsmModule(global, env, buffer);
try { if (Inst69 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1314,1323,56>",(asmModule)); Inst69++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (print) != "undefined") {_RecordType("<1362,1367,57>",(print)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (asmModule.f) != "undefined") {_RecordType("<1368,1379,57>",(asmModule.f)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1368,1377,57>",(asmModule)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<1380,1396,57>",(Number.MAX_VALUE)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1380,1386,57>",(Number)); Inst78++; } } catch(e) {}
print(asmModule.f(Number.MAX_VALUE));
try { if (Inst79 <= 1000 && typeof (print) != "undefined") {_RecordType("<1400,1405,58>",(print)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (asmModule.f) != "undefined") {_RecordType("<1406,1417,58>",(asmModule.f)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1406,1415,58>",(asmModule)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<1418,1434,58>",(Number.MAX_VALUE)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1418,1424,58>",(Number)); Inst83++; } } catch(e) {}
print(asmModule.f(Number.MAX_VALUE));

