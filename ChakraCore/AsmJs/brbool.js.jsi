var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
let test = function () {
  "use asm";

try { if (Inst1 <= 1000 && typeof (brbool) != "undefined") {_RecordType("<417,423,8>",(brbool)); Inst1++; } } catch(e) {}
  function brbool(a, b, c) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<424,425,8>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<427,428,8>",(b)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (c) != "undefined") {_RecordType("<430,431,8>",(c)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<443,444,9>",(a)); Inst6++; } } catch(e) {}
    a = a | 0;
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<439,440,9>",(a)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<458,459,10>",(b)); Inst8++; } } catch(e) {}
    b = b | 0;
try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<454,455,10>",(b)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<473,474,11>",(c)); Inst10++; } } catch(e) {}
    c = c | 0;
try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<469,470,11>",(c)); Inst9++; } } catch(e) {}
    var d = 0;
try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<488,489,12>",(d)); Inst11++; } } catch(e) {}
    var e = 0;
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<503,504,13>",(e)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<519,520,14>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<530,531,14>",(b)); Inst15++; } } catch(e) {}
    d = (a | 0) == (b | 0);
try { if (Inst13 <= 1000 && typeof (d) != "undefined") {_RecordType("<514,515,14>",(d)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<547,548,15>",(d)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<558,559,15>",(c)); Inst18++; } } catch(e) {}
    e = (d | 0) == (c | 0);
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<542,543,15>",(e)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (d) != "undefined") {_RecordType("<575,576,17>",(d)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<579,580,17>",(e)); Inst20++; } } catch(e) {}
    if (d & e | 0) {
      return 1;
    }

    return 2;
  }

try { if (Inst21 <= 1000 && typeof (brbool) != "undefined") {_RecordType("<639,645,24>",(brbool)); Inst21++; } } catch(e) {}
  return brbool;
}();
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<371,375,5>",(test)); Inst0++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<657,661,27>",(test)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<679,683,27>",(test)); Inst23++; } } catch(e) {}
if (test(1, 1, 1) == 1 && test(1, 2, 3) == 2) {
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<703,708,28>",(print)); Inst24++; } } catch(e) {}
  print("PASS");
} else {
try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<729,734,30>",(print)); Inst25++; } } catch(e) {}
  print("FAIL");
}

