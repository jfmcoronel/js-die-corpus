var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<376,385,5>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(stdlib, foreign, buffer) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<386,392,5>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<394,401,5>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<403,409,5>",(buffer)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst4 <= 1000 && typeof (add) != "undefined") {_RecordType("<438,441,8>",(add)); Inst4++; } } catch(e) {}
  function add(x, y) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<442,443,8>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<445,446,8>",(y)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<459,460,9>",(x)); Inst8++; } } catch(e) {}
    x = +x;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<454,455,9>",(x)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<471,472,10>",(y)); Inst10++; } } catch(e) {}
    y = +y;
try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<466,467,10>",(y)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<487,488,11>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<491,492,11>",(y)); Inst12++; } } catch(e) {}
    return +(x + y);
  }

try { if (Inst13 <= 1000 && typeof (f2) != "undefined") {_RecordType("<511,513,14>",(f2)); Inst13++; } } catch(e) {}
  function f2(x, y) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<514,515,14>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<517,518,14>",(y)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<531,532,15>",(x)); Inst17++; } } catch(e) {}
    x = +x;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<526,527,15>",(x)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<543,544,16>",(y)); Inst19++; } } catch(e) {}
    y = +y;
try { if (Inst18 <= 1000 && typeof (y) != "undefined") {_RecordType("<538,539,16>",(y)); Inst18++; } } catch(e) {}
    var i = 0.0;
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<554,555,17>",(i)); Inst20++; } } catch(e) {}
    var t = 1;
try { if (Inst21 <= 1000 && typeof (t) != "undefined") {_RecordType("<571,572,18>",(t)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (fTableDbOp[t & 3]) != "undefined") {_RecordType("<587,604,19>",(fTableDbOp[t & 3])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (fTableDbOp) != "undefined") {_RecordType("<587,597,19>",(fTableDbOp)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (t) != "undefined") {_RecordType("<598,599,19>",(t)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<605,606,19>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (y) != "undefined") {_RecordType("<608,609,19>",(y)); Inst27++; } } catch(e) {}
    i = +fTableDbOp[t & 3](x, y);
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<582,583,19>",(i)); Inst22++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<624,625,20>",(i)); Inst28++; } } catch(e) {}
    return +i;
  }

try { if (Inst30 <= 1000 && typeof (add) != "undefined") {_RecordType("<652,655,23>",(add)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (add) != "undefined") {_RecordType("<657,660,23>",(add)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (add) != "undefined") {_RecordType("<662,665,23>",(add)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (add) != "undefined") {_RecordType("<667,670,23>",(add)); Inst33++; } } catch(e) {}
  var fTableDbOp = [add, add, add, add];
try { if (Inst29 <= 1000 && typeof (fTableDbOp) != "undefined") {_RecordType("<638,648,23>",(fTableDbOp)); Inst29++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (f2) != "undefined") {_RecordType("<692,694,25>",(f2)); Inst34++; } } catch(e) {}
  return {
    f2: f2
  };
}

try { if (Inst36 <= 1000 && typeof (Math) != "undefined") {_RecordType("<726,730,30>",(Math)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<745,754,31>",(Int8Array)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<770,780,32>",(Int16Array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<796,806,33>",(Int32Array)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<822,832,34>",(Uint8Array)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<849,860,35>",(Uint16Array)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<877,888,36>",(Uint32Array)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<906,918,37>",(Float32Array)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<936,948,38>",(Float64Array)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<962,970,39>",(Infinity)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<979,982,40>",(NaN)); Inst46++; } } catch(e) {}
var stdlib = {
  Math: Math,
  Int8Array: Int8Array,
  Int16Array: Int16Array,
  Int32Array: Int32Array,
  Uint8Array: Uint8Array,
  Uint16Array: Uint16Array,
  Uint32Array: Uint32Array,
  Float32Array: Float32Array,
  Float64Array: Float64Array,
  Infinity: Infinity,
  NaN: NaN
};
try { if (Inst35 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<707,713,29>",(stdlib)); Inst35++; } } catch(e) {}
var env = {};
try { if (Inst47 <= 1000 && typeof (env) != "undefined") {_RecordType("<990,993,42>",(env)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<1017,1028,43>",(ArrayBuffer)); Inst49++; } } catch(e) {}
var buffer = new ArrayBuffer(1 << 20);
try { if (Inst48 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1004,1010,43>",(buffer)); Inst48++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<1055,1064,44>",(AsmModule)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1065,1071,44>",(stdlib)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (env) != "undefined") {_RecordType("<1073,1076,44>",(env)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1078,1084,44>",(buffer)); Inst54++; } } catch(e) {}
var asmModule = AsmModule(stdlib, env, buffer);
try { if (Inst50 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1043,1052,44>",(asmModule)); Inst50++; } } catch(e) {}
var x = 1;
try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<1091,1092,45>",(x)); Inst55++; } } catch(e) {}
var y = 2;
try { if (Inst56 <= 1000 && typeof (y) != "undefined") {_RecordType("<1102,1103,46>",(y)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (print) != "undefined") {_RecordType("<1109,1114,47>",(print)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (asmModule.f2) != "undefined") {_RecordType("<1115,1127,47>",(asmModule.f2)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1115,1124,47>",(asmModule)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<1128,1129,47>",(x)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (y) != "undefined") {_RecordType("<1131,1132,47>",(y)); Inst61++; } } catch(e) {}
print(asmModule.f2(x, y));
try { if (Inst62 <= 1000 && typeof (print) != "undefined") {_RecordType("<1136,1141,48>",(print)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (asmModule.f2) != "undefined") {_RecordType("<1142,1154,48>",(asmModule.f2)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<1142,1151,48>",(asmModule)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (x) != "undefined") {_RecordType("<1155,1156,48>",(x)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (y) != "undefined") {_RecordType("<1158,1159,48>",(y)); Inst66++; } } catch(e) {}
print(asmModule.f2(x, y));

