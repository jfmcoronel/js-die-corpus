var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<376,385,5>",(asmModule)); Inst0++; } } catch(e) {}
function asmModule() {
  "use asm";

  let a = [1];
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<410,411,8>",(a)); Inst1++; } } catch(e) {}

  for (let i = 0; i < 2; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<431,432,10>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<438,439,10>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<445,446,10>",(i)); Inst4++; } } catch(e) {}
    // JIT
    a[0] = 1;
try { if (Inst5 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<467,471,12>",(a[0])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<467,468,12>",(a)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,14>",(i)); Inst7++; } } catch(e) {}
    if (i > 0) {
      a[0] = {}; // the array type changed, bailout!!
try { if (Inst8 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<501,505,15>",(a[0])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<501,502,15>",(a)); Inst9++; } } catch(e) {}
    }
  }

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<571,572,19>",(f)); Inst10++; } } catch(e) {}
  function f(v) {
try { if (Inst11 <= 1000 && typeof (v) != "undefined") {_RecordType("<573,574,19>",(v)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<586,587,20>",(v)); Inst13++; } } catch(e) {}
    v = v | 0;
try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<582,583,20>",(v)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<604,605,21>",(v)); Inst14++; } } catch(e) {}
    return v | 0;
  }

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<625,626,24>",(f)); Inst15++; } } catch(e) {}
  return f;
}

try { if (Inst16 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<631,640,27>",(asmModule)); Inst16++; } } catch(e) {}
asmModule(1);
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<645,650,28>",(print)); Inst17++; } } catch(e) {}
print("PASSED");

