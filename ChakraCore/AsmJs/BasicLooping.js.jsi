var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  ;
}

try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<402,411,9>",(undefined)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<436,443,9>",(Boolean)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<455,462,9>",(Boolean)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<471,474,9>",(NaN)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<643,659,9>",(Number.MAX_VALUE)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Number) != "undefined") {_RecordType("<643,649,9>",(Number)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<661,677,9>",(Number.MIN_VALUE)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Number) != "undefined") {_RecordType("<661,667,9>",(Number)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<679,689,9>",(Number.NaN)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<679,685,9>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<691,715,9>",(Number.POSITIVE_INFINITY)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Number) != "undefined") {_RecordType("<691,697,9>",(Number)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<717,741,9>",(Number.NEGATIVE_INFINITY)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<717,723,9>",(Number)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Number) != "undefined") {_RecordType("<747,753,9>",(Number)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<754,757,9>",(NaN)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number) != "undefined") {_RecordType("<764,770,9>",(Number)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<780,786,9>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Number) != "undefined") {_RecordType("<796,802,9>",(Number)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Number) != "undefined") {_RecordType("<811,817,9>",(Number)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Number) != "undefined") {_RecordType("<826,832,9>",(Number)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Number) != "undefined") {_RecordType("<844,850,9>",(Number)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number) != "undefined") {_RecordType("<862,868,9>",(Number)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<869,885,9>",(Number.MAX_VALUE)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number) != "undefined") {_RecordType("<869,875,9>",(Number)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number) != "undefined") {_RecordType("<892,898,9>",(Number)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<899,915,9>",(Number.MIN_VALUE)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Number) != "undefined") {_RecordType("<899,905,9>",(Number)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<922,928,9>",(Number)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<929,939,9>",(Number.NaN)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number) != "undefined") {_RecordType("<929,935,9>",(Number)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<946,952,9>",(Number)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<953,977,9>",(Number.POSITIVE_INFINITY)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Number) != "undefined") {_RecordType("<953,959,9>",(Number)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number) != "undefined") {_RecordType("<984,990,9>",(Number)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<991,1015,9>",(Number.NEGATIVE_INFINITY)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Number) != "undefined") {_RecordType("<991,997,9>",(Number)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (String) != "undefined") {_RecordType("<1087,1093,9>",(String)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (String) != "undefined") {_RecordType("<1103,1109,9>",(String)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (String) != "undefined") {_RecordType("<1124,1130,9>",(String)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1150,1156,9>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1175,1181,9>",(Object)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1196,1199,9>",(foo)); Inst44++; } } catch(e) {}
var all = [undefined, null, true, false, new Boolean(true), new Boolean(false), NaN, +0, -0, 0, 1, 10.0, 10.1, -1, -5, 5, 124, 248, 654, 987, -1026, +98768.2546, -88754.15478, 1 << 32, -(1 << 32), (1 << 32) - 1, 1 << 31, -(1 << 31), 1 << 25, -1 << 25, Number.MAX_VALUE, Number.MIN_VALUE, Number.NaN, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, new Number(NaN), new Number(+0), new Number(-0), new Number(0), new Number(1), new Number(10.0), new Number(10.1), new Number(Number.MAX_VALUE), new Number(Number.MIN_VALUE), new Number(Number.NaN), new Number(Number.POSITIVE_INFINITY), new Number(Number.NEGATIVE_INFINITY), "", "hello", "hel" + "lo", "+0", "-0", "0", "1", "10.0", "10.1", new String(""), new String("hello"), new String("he" + "llo"), new Object(), [1, 2, 3], new Object(), [1, 2, 3], foo];
try { if (Inst1 <= 1000 && typeof (all) != "undefined") {_RecordType("<395,398,9>",(all)); Inst1++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<1212,1221,11>",(AsmModule)); Inst45++; } } catch(e) {}
function AsmModule() {
  "use asm";

try { if (Inst46 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1251,1254,14>",(sum)); Inst46++; } } catch(e) {}
  function sum(x, y) {
try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<1255,1256,14>",(x)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (y) != "undefined") {_RecordType("<1258,1259,14>",(y)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<1271,1272,15>",(x)); Inst50++; } } catch(e) {}
    x = x | 0;
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<1267,1268,15>",(x)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (y) != "undefined") {_RecordType("<1287,1288,16>",(y)); Inst52++; } } catch(e) {}
    y = +y;
try { if (Inst51 <= 1000 && typeof (y) != "undefined") {_RecordType("<1282,1283,16>",(y)); Inst51++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<1300,1301,18>",(x)); Inst53++; } } catch(e) {}
    if ((x | 0) > 10) {
      x = 10;
try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<1321,1322,19>",(x)); Inst54++; } } catch(e) {}
    }

try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<1348,1349,22>",(x)); Inst55++; } } catch(e) {}
    while ((x | 0) > 0) {
try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<1372,1373,23>",(x)); Inst57++; } } catch(e) {}
      x = x - 1 | 0;
try { if (Inst56 <= 1000 && typeof (x) != "undefined") {_RecordType("<1368,1369,23>",(x)); Inst56++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (y) != "undefined") {_RecordType("<1395,1396,24>",(y)); Inst59++; } } catch(e) {}
      y = +(y + 1.0);
try { if (Inst58 <= 1000 && typeof (y) != "undefined") {_RecordType("<1389,1390,24>",(y)); Inst58++; } } catch(e) {}

try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<1417,1418,26>",(x)); Inst60++; } } catch(e) {}
      if ((x | 0) == 0) {
        break;
      }
    }

try { if (Inst61 <= 1000 && typeof (y) != "undefined") {_RecordType("<1474,1475,31>",(y)); Inst61++; } } catch(e) {}
    return +y;
  }

try { if (Inst62 <= 1000 && typeof (sumWhile) != "undefined") {_RecordType("<1493,1501,34>",(sumWhile)); Inst62++; } } catch(e) {}
  function sumWhile(x, y) {
try { if (Inst63 <= 1000 && typeof (x) != "undefined") {_RecordType("<1502,1503,34>",(x)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (y) != "undefined") {_RecordType("<1505,1506,34>",(y)); Inst64++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (x) != "undefined") {_RecordType("<1518,1519,35>",(x)); Inst66++; } } catch(e) {}
    x = x | 0;
try { if (Inst65 <= 1000 && typeof (x) != "undefined") {_RecordType("<1514,1515,35>",(x)); Inst65++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (y) != "undefined") {_RecordType("<1534,1535,36>",(y)); Inst68++; } } catch(e) {}
    y = +y;
try { if (Inst67 <= 1000 && typeof (y) != "undefined") {_RecordType("<1529,1530,36>",(y)); Inst67++; } } catch(e) {}

try { if (Inst69 <= 1000 && typeof (x) != "undefined") {_RecordType("<1547,1548,38>",(x)); Inst69++; } } catch(e) {}
    if ((x | 0) > 10) {
      x = 10;
try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<1568,1569,39>",(x)); Inst70++; } } catch(e) {}
    }

try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<1751,1752,54>",(x)); Inst71++; } } catch(e) {}
    do {
try { if (Inst73 <= 1000 && typeof (x) != "undefined") {_RecordType("<1602,1603,43>",(x)); Inst73++; } } catch(e) {}
      x = x - 1 | 0;
try { if (Inst72 <= 1000 && typeof (x) != "undefined") {_RecordType("<1598,1599,43>",(x)); Inst72++; } } catch(e) {}

try { if (Inst74 <= 1000 && typeof (x) != "undefined") {_RecordType("<1625,1626,45>",(x)); Inst74++; } } catch(e) {}
      if ((x | 0) > 10) {
        x = 10;
try { if (Inst75 <= 1000 && typeof (x) != "undefined") {_RecordType("<1648,1649,46>",(x)); Inst75++; } } catch(e) {}
      }

try { if (Inst77 <= 1000 && typeof (y) != "undefined") {_RecordType("<1677,1678,49>",(y)); Inst77++; } } catch(e) {}
      y = +(y + 1.0);
try { if (Inst76 <= 1000 && typeof (y) != "undefined") {_RecordType("<1671,1672,49>",(y)); Inst76++; } } catch(e) {}

try { if (Inst78 <= 1000 && typeof (x) != "undefined") {_RecordType("<1699,1700,51>",(x)); Inst78++; } } catch(e) {}
      if ((x | 0) == 0) {
        break;
      }
    } while ((x | 0) > 0);

try { if (Inst79 <= 1000 && typeof (y) != "undefined") {_RecordType("<1777,1778,56>",(y)); Inst79++; } } catch(e) {}
    return +y;
  }

try { if (Inst80 <= 1000 && typeof (forLoop) != "undefined") {_RecordType("<1796,1803,59>",(forLoop)); Inst80++; } } catch(e) {}
  function forLoop(x, y) {
try { if (Inst81 <= 1000 && typeof (x) != "undefined") {_RecordType("<1804,1805,59>",(x)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (y) != "undefined") {_RecordType("<1807,1808,59>",(y)); Inst82++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (x) != "undefined") {_RecordType("<1820,1821,60>",(x)); Inst84++; } } catch(e) {}
    x = x | 0;
try { if (Inst83 <= 1000 && typeof (x) != "undefined") {_RecordType("<1816,1817,60>",(x)); Inst83++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (y) != "undefined") {_RecordType("<1835,1836,61>",(y)); Inst86++; } } catch(e) {}
    y = y | 0;
try { if (Inst85 <= 1000 && typeof (y) != "undefined") {_RecordType("<1831,1832,61>",(y)); Inst85++; } } catch(e) {}
    var i = 0;
try { if (Inst87 <= 1000 && typeof (i) != "undefined") {_RecordType("<1850,1851,62>",(i)); Inst87++; } } catch(e) {}

try { if (Inst88 <= 1000 && typeof (x) != "undefined") {_RecordType("<1867,1868,64>",(x)); Inst88++; } } catch(e) {}
    if ((x | 0) > 10) {
      x = 10;
try { if (Inst89 <= 1000 && typeof (x) != "undefined") {_RecordType("<1888,1889,65>",(x)); Inst89++; } } catch(e) {}
    }

try { if (Inst90 <= 1000 && typeof (y) != "undefined") {_RecordType("<1912,1913,68>",(y)); Inst90++; } } catch(e) {}
    if ((y | 0) <= 0) {
      y = 1;
try { if (Inst91 <= 1000 && typeof (y) != "undefined") {_RecordType("<1933,1934,69>",(y)); Inst91++; } } catch(e) {}
    }

    for (; (i | 0) < (x | 0); i = i + 1 | 0) {
try { if (Inst92 <= 1000 && typeof (i) != "undefined") {_RecordType("<1959,1960,72>",(i)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (x) != "undefined") {_RecordType("<1969,1970,72>",(x)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (i) != "undefined") {_RecordType("<1977,1978,72>",(i)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (i) != "undefined") {_RecordType("<1981,1982,72>",(i)); Inst95++; } } catch(e) {}
try { if (Inst97 <= 1000 && typeof (y) != "undefined") {_RecordType("<2004,2005,73>",(y)); Inst97++; } } catch(e) {}
      y = y + 1 | 0;
try { if (Inst96 <= 1000 && typeof (y) != "undefined") {_RecordType("<2000,2001,73>",(y)); Inst96++; } } catch(e) {}
    }

    for (i = 0; (i | 0) < (x | 0); i = i + 1 | 0) {
try { if (Inst98 <= 1000 && typeof (i) != "undefined") {_RecordType("<2031,2032,76>",(i)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (i) != "undefined") {_RecordType("<2039,2040,76>",(i)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (x) != "undefined") {_RecordType("<2049,2050,76>",(x)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (i) != "undefined") {_RecordType("<2057,2058,76>",(i)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (i) != "undefined") {_RecordType("<2061,2062,76>",(i)); Inst102++; } } catch(e) {}
try { if (Inst104 <= 1000 && typeof (y) != "undefined") {_RecordType("<2084,2085,77>",(y)); Inst104++; } } catch(e) {}
      y = y + 2 | 0;
try { if (Inst103 <= 1000 && typeof (y) != "undefined") {_RecordType("<2080,2081,77>",(y)); Inst103++; } } catch(e) {}
    }

    for (;;) {
try { if (Inst106 <= 1000 && typeof (y) != "undefined") {_RecordType("<2127,2128,81>",(y)); Inst106++; } } catch(e) {}
      y = y << 1;
try { if (Inst105 <= 1000 && typeof (y) != "undefined") {_RecordType("<2123,2124,81>",(y)); Inst105++; } } catch(e) {}

try { if (Inst107 <= 1000 && typeof (y) != "undefined") {_RecordType("<2147,2148,83>",(y)); Inst107++; } } catch(e) {}
      if ((y | 0) > 1 << 20) {
        break;
      }
    }

try { if (Inst108 <= 1000 && typeof (y) != "undefined") {_RecordType("<2208,2209,88>",(y)); Inst108++; } } catch(e) {}
    return y | 0;
  }

try { if (Inst109 <= 1000 && typeof (sum) != "undefined") {_RecordType("<2239,2242,92>",(sum)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (sumWhile) != "undefined") {_RecordType("<2252,2260,93>",(sumWhile)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (forLoop) != "undefined") {_RecordType("<2270,2277,94>",(forLoop)); Inst111++; } } catch(e) {}
  return {
    f1: sum,
    f2: sumWhile,
    f3: forLoop
  };
}

try { if (Inst113 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<2302,2311,98>",(AsmModule)); Inst113++; } } catch(e) {}
var asmModule = AsmModule();
try { if (Inst112 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<2290,2299,98>",(asmModule)); Inst112++; } } catch(e) {}

for (var i = 0; i < all.length; ++i) {
try { if (Inst114 <= 1000 && typeof (i) != "undefined") {_RecordType("<2325,2326,100>",(i)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (i) != "undefined") {_RecordType("<2332,2333,100>",(i)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (all.length) != "undefined") {_RecordType("<2336,2346,100>",(all.length)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (all) != "undefined") {_RecordType("<2336,2339,100>",(all)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (i) != "undefined") {_RecordType("<2350,2351,100>",(i)); Inst118++; } } catch(e) {}
  for (var j = 0; j < all.length; ++j) {
try { if (Inst119 <= 1000 && typeof (j) != "undefined") {_RecordType("<2366,2367,101>",(j)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (j) != "undefined") {_RecordType("<2373,2374,101>",(j)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (all.length) != "undefined") {_RecordType("<2377,2387,101>",(all.length)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (all) != "undefined") {_RecordType("<2377,2380,101>",(all)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (j) != "undefined") {_RecordType("<2391,2392,101>",(j)); Inst123++; } } catch(e) {}
try { if (Inst124 <= 1000 && typeof (print) != "undefined") {_RecordType("<2400,2405,102>",(print)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (i) != "undefined") {_RecordType("<2416,2417,102>",(i)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<2427,2433,102>",(all[i])); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (all) != "undefined") {_RecordType("<2427,2430,102>",(all)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (j) != "undefined") {_RecordType("<2447,2448,102>",(j)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<2458,2464,102>",(all[j])); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (all) != "undefined") {_RecordType("<2458,2461,102>",(all)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (asmModule.f1) != "undefined") {_RecordType("<2476,2488,102>",(asmModule.f1)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<2476,2485,102>",(asmModule)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<2489,2495,102>",(all[i])); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (all) != "undefined") {_RecordType("<2489,2492,102>",(all)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<2497,2503,102>",(all[j])); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (all) != "undefined") {_RecordType("<2497,2500,102>",(all)); Inst136++; } } catch(e) {}
    print("f1 a[" + i + "](" + all[i] + ") , a[" + j + "](" + all[j] + ") = " + asmModule.f1(all[i], all[j]));
try { if (Inst137 <= 1000 && typeof (print) != "undefined") {_RecordType("<2511,2516,103>",(print)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (i) != "undefined") {_RecordType("<2527,2528,103>",(i)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<2538,2544,103>",(all[i])); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (all) != "undefined") {_RecordType("<2538,2541,103>",(all)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (j) != "undefined") {_RecordType("<2558,2559,103>",(j)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<2569,2575,103>",(all[j])); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (all) != "undefined") {_RecordType("<2569,2572,103>",(all)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (asmModule.f2) != "undefined") {_RecordType("<2587,2599,103>",(asmModule.f2)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<2587,2596,103>",(asmModule)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<2600,2606,103>",(all[i])); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (all) != "undefined") {_RecordType("<2600,2603,103>",(all)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<2608,2614,103>",(all[j])); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (all) != "undefined") {_RecordType("<2608,2611,103>",(all)); Inst149++; } } catch(e) {}
    print("f2 a[" + i + "](" + all[i] + ") , a[" + j + "](" + all[j] + ") = " + asmModule.f2(all[i], all[j]));
try { if (Inst150 <= 1000 && typeof (print) != "undefined") {_RecordType("<2622,2627,104>",(print)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (i) != "undefined") {_RecordType("<2638,2639,104>",(i)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<2649,2655,104>",(all[i])); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (all) != "undefined") {_RecordType("<2649,2652,104>",(all)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (j) != "undefined") {_RecordType("<2669,2670,104>",(j)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<2680,2686,104>",(all[j])); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (all) != "undefined") {_RecordType("<2680,2683,104>",(all)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (asmModule.f3) != "undefined") {_RecordType("<2698,2710,104>",(asmModule.f3)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<2698,2707,104>",(asmModule)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (all[i]) != "undefined") {_RecordType("<2711,2717,104>",(all[i])); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (all) != "undefined") {_RecordType("<2711,2714,104>",(all)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (all[j]) != "undefined") {_RecordType("<2719,2725,104>",(all[j])); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (all) != "undefined") {_RecordType("<2719,2722,104>",(all)); Inst162++; } } catch(e) {}
    print("f3 a[" + i + "](" + all[i] + ") , a[" + j + "](" + all[j] + ") = " + asmModule.f3(all[i], all[j]));
  }
}

