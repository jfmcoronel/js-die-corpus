var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<376,385,5>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(glob, imp, b) {
try { if (Inst1 <= 1000 && typeof (glob) != "undefined") {_RecordType("<386,390,5>",(glob)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (imp) != "undefined") {_RecordType("<392,395,5>",(imp)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<397,398,5>",(b)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (glob.Math.clz32) != "undefined") {_RecordType("<428,443,8>",(glob.Math.clz32)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (glob.Math) != "undefined") {_RecordType("<428,437,8>",(glob.Math)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (glob) != "undefined") {_RecordType("<428,432,8>",(glob)); Inst7++; } } catch(e) {}
  var clz = glob.Math.clz32;
try { if (Inst4 <= 1000 && typeof (clz) != "undefined") {_RecordType("<422,425,8>",(clz)); Inst4++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (f1) != "undefined") {_RecordType("<457,459,10>",(f1)); Inst8++; } } catch(e) {}
  function f1(a) {
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<460,461,10>",(a)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<473,474,11>",(a)); Inst11++; } } catch(e) {}
    a = a | 0;
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<469,470,11>",(a)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (clz) != "undefined") {_RecordType("<491,494,12>",(clz)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<495,496,12>",(a)); Inst13++; } } catch(e) {}
    return clz(a | 0) | 0;
  }

try { if (Inst14 <= 1000 && typeof (f2) != "undefined") {_RecordType("<523,525,15>",(f2)); Inst14++; } } catch(e) {}
  function f2() {
try { if (Inst15 <= 1000 && typeof (clz) != "undefined") {_RecordType("<541,544,16>",(clz)); Inst15++; } } catch(e) {}
    return clz(0) | 0;
  }

try { if (Inst16 <= 1000 && typeof (f3) != "undefined") {_RecordType("<569,571,19>",(f3)); Inst16++; } } catch(e) {}
  function f3() {
try { if (Inst17 <= 1000 && typeof (clz) != "undefined") {_RecordType("<587,590,20>",(clz)); Inst17++; } } catch(e) {}
    return clz(0x80000000) | 0;
  }

try { if (Inst18 <= 1000 && typeof (f4) != "undefined") {_RecordType("<624,626,23>",(f4)); Inst18++; } } catch(e) {}
  function f4() {
try { if (Inst19 <= 1000 && typeof (clz) != "undefined") {_RecordType("<642,645,24>",(clz)); Inst19++; } } catch(e) {}
    return clz(32768) | 0;
  }

try { if (Inst20 <= 1000 && typeof (f1) != "undefined") {_RecordType("<682,684,28>",(f1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f2) != "undefined") {_RecordType("<694,696,29>",(f2)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f3) != "undefined") {_RecordType("<706,708,30>",(f3)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f4) != "undefined") {_RecordType("<718,720,31>",(f4)); Inst23++; } } catch(e) {}
  return {
    f1: f1,
    f2: f2,
    f3: f3,
    f4: f4
  };
}

var global = this;
try { if (Inst24 <= 1000 && typeof (global) != "undefined") {_RecordType("<733,739,35>",(global)); Inst24++; } } catch(e) {}
var env = {};
try { if (Inst25 <= 1000 && typeof (env) != "undefined") {_RecordType("<752,755,36>",(env)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<777,788,37>",(ArrayBuffer)); Inst27++; } } catch(e) {}
var heap = new ArrayBuffer(1 << 20);
try { if (Inst26 <= 1000 && typeof (heap) != "undefined") {_RecordType("<766,770,37>",(heap)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<815,824,38>",(AsmModule)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (global) != "undefined") {_RecordType("<825,831,38>",(global)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (env) != "undefined") {_RecordType("<833,836,38>",(env)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (heap) != "undefined") {_RecordType("<838,842,38>",(heap)); Inst32++; } } catch(e) {}
var asmModule = AsmModule(global, env, heap);
try { if (Inst28 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<803,812,38>",(asmModule)); Inst28++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<845,850,39>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (asmModule.f1) != "undefined") {_RecordType("<851,863,39>",(asmModule.f1)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<851,860,39>",(asmModule)); Inst35++; } } catch(e) {}
print(asmModule.f1(0));
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<869,874,40>",(print)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (asmModule.f1) != "undefined") {_RecordType("<875,887,40>",(asmModule.f1)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<875,884,40>",(asmModule)); Inst38++; } } catch(e) {}
print(asmModule.f1(0x80000000));
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<902,907,41>",(print)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (asmModule.f1) != "undefined") {_RecordType("<908,920,41>",(asmModule.f1)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<908,917,41>",(asmModule)); Inst41++; } } catch(e) {}
print(asmModule.f1(32768));
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<930,935,42>",(print)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (asmModule.f2) != "undefined") {_RecordType("<936,948,42>",(asmModule.f2)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<936,945,42>",(asmModule)); Inst44++; } } catch(e) {}
print(asmModule.f2());
try { if (Inst45 <= 1000 && typeof (print) != "undefined") {_RecordType("<953,958,43>",(print)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (asmModule.f3) != "undefined") {_RecordType("<959,971,43>",(asmModule.f3)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<959,968,43>",(asmModule)); Inst47++; } } catch(e) {}
print(asmModule.f3());
try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<976,981,44>",(print)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (asmModule.f4) != "undefined") {_RecordType("<982,994,44>",(asmModule.f4)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<982,991,44>",(asmModule)); Inst50++; } } catch(e) {}
print(asmModule.f4());

