var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// nested for loop with break
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<406,415,6>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(stdlib) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<416,422,6>",(stdlib)); Inst1++; } } catch(e) {}
  "use asm";

  var x1 = 10;
try { if (Inst2 <= 1000 && typeof (x1) != "undefined") {_RecordType("<446,448,9>",(x1)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (stdlib.Math.fround) != "undefined") {_RecordType("<466,484,10>",(stdlib.Math.fround)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<466,477,10>",(stdlib.Math)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<466,472,10>",(stdlib)); Inst6++; } } catch(e) {}
  var fr = stdlib.Math.fround;
try { if (Inst3 <= 1000 && typeof (fr) != "undefined") {_RecordType("<461,463,10>",(fr)); Inst3++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (f3) != "undefined") {_RecordType("<498,500,12>",(f3)); Inst7++; } } catch(e) {}
  function f3(x, y) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<501,502,12>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<504,505,12>",(y)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (fr) != "undefined") {_RecordType("<517,519,13>",(fr)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<520,521,13>",(x)); Inst12++; } } catch(e) {}
    x = fr(x);
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<513,514,13>",(x)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (fr) != "undefined") {_RecordType("<532,534,14>",(fr)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<535,536,14>",(y)); Inst15++; } } catch(e) {}
    y = fr(y);
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<528,529,14>",(y)); Inst13++; } } catch(e) {}
    var m = 1000;
try { if (Inst16 <= 1000 && typeof (m) != "undefined") {_RecordType("<547,548,15>",(m)); Inst16++; } } catch(e) {}
    var n = 20;
try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<565,566,16>",(n)); Inst17++; } } catch(e) {}
    var z = 11;
try { if (Inst18 <= 1000 && typeof (z) != "undefined") {_RecordType("<581,582,17>",(z)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<594,595,19>",(a)); Inst19++; } } catch(e) {}
    a: for (m = 0; (m | 0) < 50; m = m + 1 | 0) {
try { if (Inst20 <= 1000 && typeof (m) != "undefined") {_RecordType("<602,603,19>",(m)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (m) != "undefined") {_RecordType("<610,611,19>",(m)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (m) != "undefined") {_RecordType("<623,624,19>",(m)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (m) != "undefined") {_RecordType("<627,628,19>",(m)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (fr) != "undefined") {_RecordType("<650,652,20>",(fr)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<653,654,20>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (y) != "undefined") {_RecordType("<657,658,20>",(y)); Inst27++; } } catch(e) {}
      x = fr(x + y);
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<646,647,20>",(x)); Inst24++; } } catch(e) {}

      for (n = 0; (n | 0) < 100; n = n + 1 | 0) {
try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<673,674,22>",(n)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (n) != "undefined") {_RecordType("<681,682,22>",(n)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<695,696,22>",(n)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (n) != "undefined") {_RecordType("<699,700,22>",(n)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (n) != "undefined") {_RecordType("<725,726,23>",(n)); Inst32++; } } catch(e) {}
        if ((n | 0) > 50) {
try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<756,757,24>",(a)); Inst33++; } } catch(e) {}
          break a;
        }

try { if (Inst35 <= 1000 && typeof (fr) != "undefined") {_RecordType("<782,784,27>",(fr)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<785,786,27>",(x)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (y) != "undefined") {_RecordType("<789,790,27>",(y)); Inst37++; } } catch(e) {}
        x = fr(x + y);
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<778,779,27>",(x)); Inst34++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (z) != "undefined") {_RecordType("<805,806,28>",(z)); Inst39++; } } catch(e) {}
        z = z + 1 | 0;
try { if (Inst38 <= 1000 && typeof (z) != "undefined") {_RecordType("<801,802,28>",(z)); Inst38++; } } catch(e) {}
      }
    }

try { if (Inst40 <= 1000 && typeof (fr) != "undefined") {_RecordType("<842,844,32>",(fr)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<845,846,32>",(x)); Inst41++; } } catch(e) {}
    return fr(x);
  }

try { if (Inst42 <= 1000 && typeof (f3) != "undefined") {_RecordType("<863,865,35>",(f3)); Inst42++; } } catch(e) {}
  return f3;
}

try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<893,897,39>",(Math)); Inst44++; } } catch(e) {}
var stdlib = {
  Math: Math
};
try { if (Inst43 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<874,880,38>",(stdlib)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<910,919,41>",(AsmModule)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<920,926,41>",(stdlib)); Inst47++; } } catch(e) {}
var f3 = AsmModule(stdlib);
try { if (Inst45 <= 1000 && typeof (f3) != "undefined") {_RecordType("<905,907,41>",(f3)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<929,934,42>",(print)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (f3) != "undefined") {_RecordType("<935,937,42>",(f3)); Inst49++; } } catch(e) {}
print(f3(1, 1.5));
try { if (Inst50 <= 1000 && typeof (print) != "undefined") {_RecordType("<948,953,43>",(print)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (f3) != "undefined") {_RecordType("<954,956,43>",(f3)); Inst51++; } } catch(e) {}
print(f3(1, 1.5));

