var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<376,385,5>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(stdlib, foreign) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<386,392,5>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<394,401,5>",(foreign)); Inst2++; } } catch(e) {}
  "use asm";

try { if (Inst4 <= 1000 && typeof (foreign.fun2) != "undefined") {_RecordType("<432,444,8>",(foreign.fun2)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<432,439,8>",(foreign)); Inst5++; } } catch(e) {}
  var fun2 = foreign.fun2;
try { if (Inst3 <= 1000 && typeof (fun2) != "undefined") {_RecordType("<425,429,8>",(fun2)); Inst3++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (mul) != "undefined") {_RecordType("<458,461,10>",(mul)); Inst6++; } } catch(e) {}
  function mul(x, y) {
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<462,463,10>",(x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<465,466,10>",(y)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<479,480,11>",(x)); Inst10++; } } catch(e) {}
    x = +x;
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<474,475,11>",(x)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<491,492,12>",(y)); Inst12++; } } catch(e) {}
    y = +y;
try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<486,487,12>",(y)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<507,508,13>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<511,512,13>",(y)); Inst14++; } } catch(e) {}
    return +(x * y);
  }

try { if (Inst15 <= 1000 && typeof (f2) != "undefined") {_RecordType("<531,533,16>",(f2)); Inst15++; } } catch(e) {}
  function f2(x, y) {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<534,535,16>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<537,538,16>",(y)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<551,552,17>",(x)); Inst19++; } } catch(e) {}
    x = +x;
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<546,547,17>",(x)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<562,563,18>",(y)); Inst21++; } } catch(e) {}
    y = y | 0;
try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<558,559,18>",(y)); Inst20++; } } catch(e) {}
    var i = 0,
        j = 0.0;
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<577,578,19>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (j) != "undefined") {_RecordType("<592,593,20>",(j)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (mul) != "undefined") {_RecordType("<610,613,21>",(mul)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (mul) != "undefined") {_RecordType("<615,618,21>",(mul)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<619,620,21>",(x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (mul) != "undefined") {_RecordType("<628,631,21>",(mul)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<632,633,21>",(x)); Inst29++; } } catch(e) {}
    j = +mul(+mul(x, 1.), +mul(x, 1.));
try { if (Inst24 <= 1000 && typeof (j) != "undefined") {_RecordType("<605,606,21>",(j)); Inst24++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (j) != "undefined") {_RecordType("<653,654,22>",(j)); Inst30++; } } catch(e) {}
    return +j;
  }

try { if (Inst31 <= 1000 && typeof (f3) != "undefined") {_RecordType("<672,674,25>",(f3)); Inst31++; } } catch(e) {}
  function f3(x) {
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<675,676,25>",(x)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<688,689,26>",(x)); Inst34++; } } catch(e) {}
    x = x | 0;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<684,685,26>",(x)); Inst33++; } } catch(e) {}
    var i = 0.;
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<703,704,27>",(i)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (f2) != "undefined") {_RecordType("<720,722,28>",(f2)); Inst37++; } } catch(e) {}
    i = +f2(100.5, 1);
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<715,716,28>",(i)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (f2) != "undefined") {_RecordType("<743,745,29>",(f2)); Inst39++; } } catch(e) {}
    i = +f2(5.5, 1);
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<738,739,29>",(i)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<767,768,30>",(i)); Inst40++; } } catch(e) {}
    return +i;
  }

try { if (Inst41 <= 1000 && typeof (f3) != "undefined") {_RecordType("<784,786,33>",(f3)); Inst41++; } } catch(e) {}
  return f3;
}

var global = {};
try { if (Inst42 <= 1000 && typeof (global) != "undefined") {_RecordType("<795,801,36>",(global)); Inst42++; } } catch(e) {}
var env = {
  fun2: function (x) {
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<838,839,38>",(x)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (print) != "undefined") {_RecordType("<847,852,39>",(print)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<853,854,39>",(x)); Inst46++; } } catch(e) {}
    print(x);
  }
};
try { if (Inst43 <= 1000 && typeof (env) != "undefined") {_RecordType("<812,815,37>",(env)); Inst43++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<880,889,42>",(AsmModule)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (global) != "undefined") {_RecordType("<890,896,42>",(global)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (env) != "undefined") {_RecordType("<898,901,42>",(env)); Inst50++; } } catch(e) {}
var asmModule = AsmModule(global, env);
try { if (Inst47 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<868,877,42>",(asmModule)); Inst47++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (print) != "undefined") {_RecordType("<904,909,43>",(print)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (asmModule) != "undefined") {_RecordType("<910,919,43>",(asmModule)); Inst52++; } } catch(e) {}
print(asmModule(1));

