var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<376,385,5>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(glob) {
try { if (Inst1 <= 1000 && typeof (glob) != "undefined") {_RecordType("<386,390,5>",(glob)); Inst1++; } } catch(e) {}
  "use asm";

try { if (Inst3 <= 1000 && typeof (glob.Math.fround) != "undefined") {_RecordType("<423,439,8>",(glob.Math.fround)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (glob.Math) != "undefined") {_RecordType("<423,432,8>",(glob.Math)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (glob) != "undefined") {_RecordType("<423,427,8>",(glob)); Inst5++; } } catch(e) {}
  var fround = glob.Math.fround;
try { if (Inst2 <= 1000 && typeof (fround) != "undefined") {_RecordType("<414,420,8>",(fround)); Inst2++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (floatNeg) != "undefined") {_RecordType("<453,461,10>",(floatNeg)); Inst6++; } } catch(e) {}
  function floatNeg(a) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<462,463,10>",(a)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (fround) != "undefined") {_RecordType("<475,481,11>",(fround)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<482,483,11>",(a)); Inst10++; } } catch(e) {}
    a = fround(a);
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<471,472,11>",(a)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (fround) != "undefined") {_RecordType("<498,504,12>",(fround)); Inst12++; } } catch(e) {}
    var e = fround(0);
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<494,495,12>",(e)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (fround) != "undefined") {_RecordType("<517,523,13>",(fround)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<525,526,13>",(a)); Inst15++; } } catch(e) {}
    e = fround(-a);
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<513,514,13>",(e)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (fround) != "undefined") {_RecordType("<540,546,14>",(fround)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<547,548,14>",(e)); Inst17++; } } catch(e) {}
    return fround(e);
  }

try { if (Inst18 <= 1000 && typeof (uintRem) != "undefined") {_RecordType("<567,574,17>",(uintRem)); Inst18++; } } catch(e) {}
  function uintRem(a) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<575,576,17>",(a)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<588,589,18>",(a)); Inst21++; } } catch(e) {}
    a = a | 0;
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<584,585,18>",(a)); Inst20++; } } catch(e) {}
    var b = 0;
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<603,604,19>",(b)); Inst22++; } } catch(e) {}
    var c = 0;
try { if (Inst23 <= 1000 && typeof (c) != "undefined") {_RecordType("<618,619,20>",(c)); Inst23++; } } catch(e) {}
    var d = 0;
try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<633,634,21>",(d)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<648,649,22>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (d) != "undefined") {_RecordType("<652,653,22>",(d)); Inst27++; } } catch(e) {}
    c = a + d | 0;
try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<644,645,22>",(c)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<668,669,23>",(a)); Inst29++; } } catch(e) {}
    d = (a >>> 0) % 10 | 0;
try { if (Inst28 <= 1000 && typeof (d) != "undefined") {_RecordType("<663,664,23>",(d)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (c) != "undefined") {_RecordType("<695,696,24>",(c)); Inst31++; } } catch(e) {}
    b = c;
try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<691,692,24>",(b)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<709,710,25>",(b)); Inst32++; } } catch(e) {}
    return b | 0;
  }

try { if (Inst33 <= 1000 && typeof (floatNeg) != "undefined") {_RecordType("<746,754,29>",(floatNeg)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (uintRem) != "undefined") {_RecordType("<769,776,30>",(uintRem)); Inst34++; } } catch(e) {}
  return {
    floatNeg: floatNeg,
    uintRem: uintRem
  };
}

try { if (Inst36 <= 1000 && typeof (Math) != "undefined") {_RecordType("<808,812,35>",(Math)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<827,836,36>",(Int8Array)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<852,862,37>",(Int16Array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<878,888,38>",(Int32Array)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<904,914,39>",(Uint8Array)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<931,942,40>",(Uint16Array)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<959,970,41>",(Uint32Array)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<988,1000,42>",(Float32Array)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<1018,1030,43>",(Float64Array)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1044,1052,44>",(Infinity)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1061,1064,45>",(NaN)); Inst46++; } } catch(e) {}
var global = {
  Math: Math,
  Int8Array: Int8Array,
  Int16Array: Int16Array,
  Int32Array: Int32Array,
  Uint8Array: Uint8Array,
  Uint16Array: Uint16Array,
  Uint32Array: Uint32Array,
  Float32Array: Float32Array,
  Float64Array: Float64Array,
  Infinity: Infinity,
  NaN: NaN
};
try { if (Inst35 <= 1000 && typeof (global) != "undefined") {_RecordType("<789,795,34>",(global)); Inst35++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<1081,1090,47>",(AsmModule)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (global) != "undefined") {_RecordType("<1091,1097,47>",(global)); Inst49++; } } catch(e) {}
var module = AsmModule(global);
try { if (Inst47 <= 1000 && typeof (module) != "undefined") {_RecordType("<1072,1078,47>",(module)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (print) != "undefined") {_RecordType("<1100,1105,48>",(print)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (module.floatNeg) != "undefined") {_RecordType("<1106,1121,48>",(module.floatNeg)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (module) != "undefined") {_RecordType("<1106,1112,48>",(module)); Inst52++; } } catch(e) {}
print(module.floatNeg(3));
try { if (Inst53 <= 1000 && typeof (print) != "undefined") {_RecordType("<1127,1132,49>",(print)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (module.uintRem) != "undefined") {_RecordType("<1133,1147,49>",(module.uintRem)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (module) != "undefined") {_RecordType("<1133,1139,49>",(module)); Inst55++; } } catch(e) {}
print(module.uintRem(400));

