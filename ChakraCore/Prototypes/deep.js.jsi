var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Creates a deep inheritance chain.
var n = 0;
try { if (Inst0 <= 1000 && typeof (n) != "undefined") {_RecordType("<408,409,6>",(n)); Inst0++; } } catch(e) {}
var count = 30;
try { if (Inst1 <= 1000 && typeof (count) != "undefined") {_RecordType("<419,424,7>",(count)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (Create) != "undefined") {_RecordType("<441,447,9>",(Create)); Inst2++; } } catch(e) {}
function Create(x) {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<448,449,9>",(x)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<467,468,10>",(x)); Inst6++; } } catch(e) {}
  this[n++] = x;
try { if (Inst4 <= 1000 && typeof (this[n++]) != "undefined") {_RecordType("<455,464,10>",(this[n++])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<460,461,10>",(n)); Inst5++; } } catch(e) {}
  Create.prototype = this;
try { if (Inst7 <= 1000 && typeof (Create.prototype) != "undefined") {_RecordType("<472,488,11>",(Create.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Create) != "undefined") {_RecordType("<472,478,11>",(Create)); Inst8++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<512,517,14>",(Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (count) != "undefined") {_RecordType("<518,523,14>",(count)); Inst11++; } } catch(e) {}
var a = new Array(count);
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<504,505,14>",(a)); Inst9++; } } catch(e) {}

for (var i = 0; i < count; ++i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<536,537,16>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<543,544,16>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (count) != "undefined") {_RecordType("<547,552,16>",(count)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<556,557,16>",(i)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Create) != "undefined") {_RecordType("<575,581,17>",(Create)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<582,583,17>",(i)); Inst18++; } } catch(e) {}
  var x = new Create(i);
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<567,568,17>",(x)); Inst16++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<595,596,18>",(x)); Inst21++; } } catch(e) {}
  a[i] = x;
try { if (Inst19 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<588,592,18>",(a[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<588,589,18>",(a)); Inst20++; } } catch(e) {}
}

for (var i = 0; i < count; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<610,611,21>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<617,618,21>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (count) != "undefined") {_RecordType("<621,626,21>",(count)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<630,631,21>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<637,642,22>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<657,658,22>",(i)); Inst27++; } } catch(e) {}
  print("starting " + i); // j <= i+1 because we intentionally access undefined properties

  for (var j = 0; j <= i + 1; ++j) {
try { if (Inst28 <= 1000 && typeof (j) != "undefined") {_RecordType("<738,739,24>",(j)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (j) != "undefined") {_RecordType("<745,746,24>",(j)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<750,751,24>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (j) != "undefined") {_RecordType("<759,760,24>",(j)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<768,773,25>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a[i][j]) != "undefined") {_RecordType("<779,786,25>",(a[i][j])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<779,783,25>",(a[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<779,780,25>",(a)); Inst35++; } } catch(e) {}
    print("" + a[i][j]);
  }
}

