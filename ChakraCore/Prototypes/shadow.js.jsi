var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var Failed = 0;
try { if (Inst0 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<371,377,5>",(Failed)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (Fail) != "undefined") {_RecordType("<393,397,7>",(Fail)); Inst1++; } } catch(e) {}
function Fail() {
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<404,409,8>",(print)); Inst2++; } } catch(e) {}
  print("*** FAILED ***\n");
try { if (Inst3 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<433,439,9>",(Failed)); Inst3++; } } catch(e) {}
  Failed++;
}

try { if (Inst4 <= 1000 && typeof (check) != "undefined") {_RecordType("<455,460,12>",(check)); Inst4++; } } catch(e) {}
function check(o, v) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<461,462,12>",(o)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<464,465,12>",(v)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (o.value) != "undefined") {_RecordType("<471,478,13>",(o.value)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<471,472,13>",(o)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<479,480,13>",(v)); Inst9++; } } catch(e) {}
  o.value(v);
}

try { if (Inst10 <= 1000 && typeof (first) != "undefined") {_RecordType("<495,500,16>",(first)); Inst10++; } } catch(e) {}
function first() {
  ;
}

try { if (Inst11 <= 1000 && typeof (isFirst) != "undefined") {_RecordType("<521,528,20>",(isFirst)); Inst11++; } } catch(e) {}
function isFirst(v) {
try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<529,530,20>",(v)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<540,541,21>",(v)); Inst13++; } } catch(e) {}
  if (v != 1) {
try { if (Inst14 <= 1000 && typeof (Fail) != "undefined") {_RecordType("<554,558,22>",(Fail)); Inst14++; } } catch(e) {}
    Fail();
  }
}

try { if (Inst15 <= 1000 && typeof (isSecond) != "undefined") {_RecordType("<578,586,26>",(isSecond)); Inst15++; } } catch(e) {}
function isSecond(v) {
try { if (Inst16 <= 1000 && typeof (v) != "undefined") {_RecordType("<587,588,26>",(v)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<598,599,27>",(v)); Inst17++; } } catch(e) {}
  if (v != 2) {
try { if (Inst18 <= 1000 && typeof (Fail) != "undefined") {_RecordType("<612,616,28>",(Fail)); Inst18++; } } catch(e) {}
    Fail();
  }
}

try { if (Inst21 <= 1000 && typeof (isFirst) != "undefined") {_RecordType("<641,648,32>",(isFirst)); Inst21++; } } catch(e) {}
first.value = isFirst;
try { if (Inst19 <= 1000 && typeof (first.value) != "undefined") {_RecordType("<627,638,32>",(first.value)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (first) != "undefined") {_RecordType("<627,632,32>",(first)); Inst20++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (second) != "undefined") {_RecordType("<660,666,34>",(second)); Inst22++; } } catch(e) {}
function second() {
  ;
}

try { if (Inst25 <= 1000 && typeof (first) != "undefined") {_RecordType("<697,702,38>",(first)); Inst25++; } } catch(e) {}
second.prototype = first;
try { if (Inst23 <= 1000 && typeof (second.prototype) != "undefined") {_RecordType("<678,694,38>",(second.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (second) != "undefined") {_RecordType("<678,684,38>",(second)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (third) != "undefined") {_RecordType("<714,719,40>",(third)); Inst26++; } } catch(e) {}
function third() {
  ;
}

try { if (Inst29 <= 1000 && typeof (second) != "undefined") {_RecordType("<753,759,44>",(second)); Inst29++; } } catch(e) {}
third.prototype = new second();
try { if (Inst27 <= 1000 && typeof (third.prototype) != "undefined") {_RecordType("<731,746,44>",(third.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (third) != "undefined") {_RecordType("<731,736,44>",(third)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (third) != "undefined") {_RecordType("<778,783,45>",(third)); Inst31++; } } catch(e) {}
var obj1 = new third();
try { if (Inst30 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<767,771,45>",(obj1)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (check) != "undefined") {_RecordType("<787,792,46>",(check)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<793,797,46>",(obj1)); Inst33++; } } catch(e) {}
check(obj1, 1);
try { if (Inst37 <= 1000 && typeof (isSecond) != "undefined") {_RecordType("<827,835,47>",(isSecond)); Inst37++; } } catch(e) {}
third.prototype.value = isSecond;
try { if (Inst34 <= 1000 && typeof (third.prototype.value) != "undefined") {_RecordType("<803,824,47>",(third.prototype.value)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (third.prototype) != "undefined") {_RecordType("<803,818,47>",(third.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (third) != "undefined") {_RecordType("<803,808,47>",(third)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (check) != "undefined") {_RecordType("<837,842,48>",(check)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<843,847,48>",(obj1)); Inst39++; } } catch(e) {}
check(obj1, 2);
try { if (Inst40 <= 1000 && typeof (third.prototype.value) != "undefined") {_RecordType("<860,881,49>",(third.prototype.value)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (third.prototype) != "undefined") {_RecordType("<860,875,49>",(third.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (third) != "undefined") {_RecordType("<860,865,49>",(third)); Inst42++; } } catch(e) {}
delete third.prototype.value;
try { if (Inst43 <= 1000 && typeof (check) != "undefined") {_RecordType("<883,888,50>",(check)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<889,893,50>",(obj1)); Inst44++; } } catch(e) {}
check(obj1, 1);

try { if (Inst45 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<904,910,52>",(Failed)); Inst45++; } } catch(e) {}
if (Failed == 0) {
try { if (Inst46 <= 1000 && typeof (print) != "undefined") {_RecordType("<921,926,53>",(print)); Inst46++; } } catch(e) {}
  print("Pass\n");
}

