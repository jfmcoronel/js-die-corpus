var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var NotNegZero = 0;
try { if (Inst0 <= 1000 && typeof (NotNegZero) != "undefined") {_RecordType("<371,381,5>",(NotNegZero)); Inst0++; } } catch(e) {}
var NegZero = 0;
try { if (Inst1 <= 1000 && typeof (NegZero) != "undefined") {_RecordType("<391,398,6>",(NegZero)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (checkisnegativezero) != "undefined") {_RecordType("<414,433,8>",(checkisnegativezero)); Inst2++; } } catch(e) {}
function checkisnegativezero(x, str) {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<434,435,8>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (str) != "undefined") {_RecordType("<437,440,8>",(str)); Inst4++; } } catch(e) {}
  // this is a quick way to check if a number is -0
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<502,503,10>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<516,517,10>",(x)); Inst6++; } } catch(e) {}
  if (x != 0 || 1 / x >= 0) {
try { if (Inst7 <= 1000 && typeof (NotNegZero) != "undefined") {_RecordType("<530,540,11>",(NotNegZero)); Inst7++; } } catch(e) {}
    NotNegZero++;
  } else {
try { if (Inst8 <= 1000 && typeof (NegZero) != "undefined") {_RecordType("<559,566,13>",(NegZero)); Inst8++; } } catch(e) {}
    NegZero++;
  }
}

var Y = 0;
try { if (Inst9 <= 1000 && typeof (Y) != "undefined") {_RecordType("<581,582,17>",(Y)); Inst9++; } } catch(e) {}
var X = -5;
try { if (Inst10 <= 1000 && typeof (X) != "undefined") {_RecordType("<592,593,18>",(X)); Inst10++; } } catch(e) {}
var one = 1;
try { if (Inst11 <= 1000 && typeof (one) != "undefined") {_RecordType("<604,607,19>",(one)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<625,630,20>",(Array)); Inst13++; } } catch(e) {}
var A = new Array();
try { if (Inst12 <= 1000 && typeof (A) != "undefined") {_RecordType("<617,618,20>",(A)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<644,647,22>",(foo)); Inst14++; } } catch(e) {}
function foo(x, y) {
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<648,649,22>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<651,652,22>",(y)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (checkisnegativezero) != "undefined") {_RecordType("<658,677,23>",(checkisnegativezero)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<678,679,23>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<682,683,23>",(y)); Inst19++; } } catch(e) {}
  checkisnegativezero(x % y);
try { if (Inst20 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<688,692,24>",(foo2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<693,694,24>",(x)); Inst21++; } } catch(e) {}
  foo2(x);
}

try { if (Inst22 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<709,713,27>",(foo2)); Inst22++; } } catch(e) {}
function foo2(x) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<714,715,27>",(x)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (checkisnegativezero) != "undefined") {_RecordType("<721,740,28>",(checkisnegativezero)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<741,742,28>",(x)); Inst25++; } } catch(e) {}
  checkisnegativezero(x % 2);
}

for (var i = 0; i < 2000; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<761,762,31>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<768,769,31>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<778,779,31>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<787,790,32>",(foo)); Inst29++; } } catch(e) {}
  foo(2, 2);
}

try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<801,804,35>",(foo)); Inst30++; } } catch(e) {}
foo(-2, 2);

try { if (Inst31 <= 1000 && typeof (NotNegZero) != "undefined") {_RecordType("<818,828,37>",(NotNegZero)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (NegZero) != "undefined") {_RecordType("<840,847,37>",(NegZero)); Inst32++; } } catch(e) {}
if (NotNegZero != 4000 || NegZero != 2) {
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<858,863,38>",(print)); Inst33++; } } catch(e) {}
  print("FAILED\n");
} else {
try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<888,893,40>",(print)); Inst34++; } } catch(e) {}
  print("Passed\n");
}

