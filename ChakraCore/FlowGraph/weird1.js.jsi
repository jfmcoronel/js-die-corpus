var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var func0 = function () {
    (function (loopInvariant) {
try { if (Inst2 <= 1000 && typeof (loopInvariant) != "undefined") {_RecordType("<429,442,7>",(loopInvariant)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (uic8[loopInvariant + 1 & 1]) != "undefined") {_RecordType("<476,503,9>",(uic8[loopInvariant + 1 & 1])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (uic8) != "undefined") {_RecordType("<476,480,9>",(uic8)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (loopInvariant) != "undefined") {_RecordType("<481,494,9>",(loopInvariant)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<521,530,10>",(undefined)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<539,549,10>",(Math.floor)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math) != "undefined") {_RecordType("<539,543,10>",(Math)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<552,553,10>",(a)); Inst9++; } } catch(e) {}
      while ({
        prop0: uic8[loopInvariant + 1 & 1],
        prop1: (undefined + 11) * Math.floor(--a) + 'method0'
      }) {
        if (4) {
          break;
        }

        strvar1 = 2147483646;
try { if (Inst10 <= 1000 && typeof (strvar1) != "undefined") {_RecordType("<631,638,16>",(strvar1)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<701,710,19>",(undefined)); Inst11++; } } catch(e) {}
        ({
          prop2: 0,
          prop3: undefined,
          prop4: (3 & 255, 2)
        });
        continue;
        return 'somestring1';
        return 'somestring2';
      }
    })();
  };
try { if (Inst1 <= 1000 && typeof (func0) != "undefined") {_RecordType("<392,397,6>",(func0)); Inst1++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<873,890,29>",(Uint8ClampedArray)); Inst13++; } } catch(e) {}
  var uic8 = new Uint8ClampedArray();
try { if (Inst12 <= 1000 && typeof (uic8) != "undefined") {_RecordType("<862,866,29>",(uic8)); Inst12++; } } catch(e) {}
  var a = 1;
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<900,901,30>",(a)); Inst14++; } } catch(e) {}
  var temp = 0;
try { if (Inst15 <= 1000 && typeof (temp) != "undefined") {_RecordType("<913,917,31>",(temp)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (temp) != "undefined") {_RecordType("<955,959,35>",(temp)); Inst16++; } } catch(e) {}
  do {
try { if (Inst17 <= 1000 && typeof (func0) != "undefined") {_RecordType("<935,940,34>",(func0)); Inst17++; } } catch(e) {}
    func0();
  } while (temp++ < 4);
}

try { if (Inst18 <= 1000 && typeof (test0) != "undefined") {_RecordType("<971,976,38>",(test0)); Inst18++; } } catch(e) {}
test0();
try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<980,985,39>",(test0)); Inst19++; } } catch(e) {}
test0();
try { if (Inst20 <= 1000 && typeof (test0) != "undefined") {_RecordType("<989,994,40>",(test0)); Inst20++; } } catch(e) {}
test0();
try { if (Inst21 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<998,1009,41>",(console.log)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (console) != "undefined") {_RecordType("<998,1005,41>",(console)); Inst22++; } } catch(e) {}
console.log("PASSED");

