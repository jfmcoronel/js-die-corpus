var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
"use strict";

try { if (Inst1 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<394,420,7>",(Object.getOwnPropertyNames)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<394,400,7>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<421,427,7>",(RegExp)); Inst3++; } } catch(e) {}
var props = Object.getOwnPropertyNames(RegExp);
try { if (Inst0 <= 1000 && typeof (props) != "undefined") {_RecordType("<386,391,7>",(props)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (props.sort) != "undefined") {_RecordType("<430,440,8>",(props.sort)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (props) != "undefined") {_RecordType("<430,435,8>",(props)); Inst5++; } } catch(e) {}
props.sort();

for (var i = 0, len = props.length; i < len; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<454,455,10>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (len) != "undefined") {_RecordType("<461,464,10>",(len)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (props.length) != "undefined") {_RecordType("<467,479,10>",(props.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (props) != "undefined") {_RecordType("<467,472,10>",(props)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<481,482,10>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (len) != "undefined") {_RecordType("<485,488,10>",(len)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<490,491,10>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<510,518,11>",(props[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (props) != "undefined") {_RecordType("<510,515,11>",(props)); Inst15++; } } catch(e) {}
  var prop = props[i];
try { if (Inst13 <= 1000 && typeof (prop) != "undefined") {_RecordType("<503,507,11>",(prop)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (prop) != "undefined") {_RecordType("<527,531,13>",(prop)); Inst16++; } } catch(e) {}
  if (prop === 'prototype') {
    continue;
  }

try { if (Inst24 <= 1000 && typeof (err) != "undefined") {_RecordType("<765,768,24>",(err)); Inst24++; } } catch(e) {}
  try {
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<582,587,18>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (prop) != "undefined") {_RecordType("<616,620,18>",(prop)); Inst18++; } } catch(e) {}
    print("Testing: delete RegExp[" + prop + "]");
try { if (Inst20 <= 1000 && typeof (RegExp[prop]) != "undefined") {_RecordType("<653,665,19>",(RegExp[prop])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<653,659,19>",(RegExp)); Inst21++; } } catch(e) {}
    var result = delete RegExp[prop];
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<637,643,19>",(result)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<676,682,21>",(result)); Inst22++; } } catch(e) {}
    if (result === false) {
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<702,707,22>",(print)); Inst23++; } } catch(e) {}
      print("Error: strict delete returned false");
    }
  } catch (err) {
try { if (Inst25 <= 1000 && typeof (err) != "undefined") {_RecordType("<781,784,25>",(err)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<796,805,25>",(TypeError)); Inst26++; } } catch(e) {}
    if (!err instanceof TypeError) {
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<815,820,26>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (err) != "undefined") {_RecordType("<870,873,26>",(err)); Inst28++; } } catch(e) {}
      print("Error: strict delete threw a non-TypeError: " + err);
    }
  }
}

