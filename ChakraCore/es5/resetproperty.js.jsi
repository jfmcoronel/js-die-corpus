var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (testcase1) != "undefined") {_RecordType("<376,385,5>",(testcase1)); Inst0++; } } catch(e) {}
function testcase1() {
  var arrObj = [];
try { if (Inst1 <= 1000 && typeof (arrObj) != "undefined") {_RecordType("<396,402,6>",(arrObj)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<411,432,7>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<411,417,7>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arrObj) != "undefined") {_RecordType("<433,439,7>",(arrObj)); Inst4++; } } catch(e) {}
  Object.defineProperty(arrObj, "length", {
    writable: false
  });

try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<585,586,16>",(e)); Inst8++; } } catch(e) {}
  try {
try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<492,513,12>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<492,498,12>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arrObj) != "undefined") {_RecordType("<514,520,12>",(arrObj)); Inst7++; } } catch(e) {}
    Object.defineProperty(arrObj, "length", {
      value: 0
    });
    return true;
  } catch (e) {
    return false;
  }
}

try { if (Inst9 <= 1000 && typeof (testcase2) != "undefined") {_RecordType("<624,633,21>",(testcase2)); Inst9++; } } catch(e) {}
function testcase2() {
  var arr = [];
try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<644,647,22>",(arr)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<656,677,23>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<656,662,23>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<678,681,23>",(arr)); Inst13++; } } catch(e) {}
  Object.defineProperty(arr, "length", {
    writable: false
  });

try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<862,863,34>",(e)); Inst19++; } } catch(e) {}
  try {
try { if (Inst14 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<734,757,28>",(Object.defineProperties)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<734,740,28>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<758,761,28>",(arr)); Inst16++; } } catch(e) {}
    Object.defineProperties(arr, {
      length: {
        value: 0
      }
    });
try { if (Inst17 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<833,843,33>",(arr.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<833,836,33>",(arr)); Inst18++; } } catch(e) {}
    return true && arr.length === 0;
  } catch (e) {
    return false;
  }
}

try { if (Inst20 <= 1000 && typeof (testcase1) != "undefined") {_RecordType("<896,905,39>",(testcase1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (testcase2) != "undefined") {_RecordType("<911,920,39>",(testcase2)); Inst21++; } } catch(e) {}
if (testcase1() && testcase2()) {
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<928,933,40>",(print)); Inst22++; } } catch(e) {}
  print('PASSED');
} else {
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<956,961,42>",(print)); Inst23++; } } catch(e) {}
  print('FAILED');
}

