var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (testHasItem) != "undefined") {_RecordType("<376,387,5>",(testHasItem)); Inst0++; } } catch(e) {}
function testHasItem(o, prop) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<388,389,5>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (prop) != "undefined") {_RecordType("<391,395,5>",(prop)); Inst2++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<603,604,14>",(e)); Inst8++; } } catch(e) {}
  try {
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<411,432,7>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<411,417,7>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<433,434,7>",(o)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (prop) != "undefined") {_RecordType("<436,440,7>",(prop)); Inst6++; } } catch(e) {}
    Object.defineProperty(o, prop, {
      get: function () {
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<477,482,9>",(print)); Inst7++; } } catch(e) {}
        print(" ", "FAIL: THIS SHOULD NOT BE CALLED");
      },
      configurable: false,
      enumerable: false
    });
  } catch (e) {
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<612,617,15>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (prop) != "undefined") {_RecordType("<669,673,15>",(prop)); Inst10++; } } catch(e) {}
    print(" ", "pass", "...can not defineProperty...", "(" + prop + ")");
    return;
  }

try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<701,706,19>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<712,728,19>",(o.hasOwnProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<712,713,19>",(o)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (prop) != "undefined") {_RecordType("<729,733,19>",(prop)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<739,761,19>",(o.propertyIsEnumerable)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<739,740,19>",(o)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (prop) != "undefined") {_RecordType("<762,766,19>",(prop)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (prop) != "undefined") {_RecordType("<793,797,19>",(prop)); Inst18++; } } catch(e) {}
  print(" ", o.hasOwnProperty(prop) && !o.propertyIsEnumerable(prop) ? "pass" : "fail", "(" + prop + ")");
}

var objs = {
  "empty object": function () {
    return {};
  },
  "empty array": function () {
    return [];
  },
  "number object": function () {
try { if (Inst20 <= 1000 && typeof (Number) != "undefined") {_RecordType("<973,979,30>",(Number)); Inst20++; } } catch(e) {}
    return new Number(123);
  },
  "string object": function () {
try { if (Inst21 <= 1000 && typeof (String) != "undefined") {_RecordType("<1039,1045,33>",(String)); Inst21++; } } catch(e) {}
    return new String("test");
  },
  "Object": function () {
try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1097,1103,36>",(Object)); Inst22++; } } catch(e) {}
    return Object;
  },
  "global object": function () {
    return this;
  },
  "object with 1 property": function () {
    return {
      hello: "world"
    };
  },
  "object with many properties": function () {
    var o = {};
try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<1308,1309,47>",(o)); Inst23++; } } catch(e) {}

    for (var i = 0; i < 50; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1330,1331,49>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1337,1338,49>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1345,1346,49>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1358,1379,50>",(Object.defineProperty)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1358,1364,50>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<1380,1381,50>",(o)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1392,1393,50>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<1422,1423,51>",(i)); Inst31++; } } catch(e) {}
      Object.defineProperty(o, "prop" + i, {
        value: "value" + i
      });
    }

try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<1452,1453,55>",(o)); Inst32++; } } catch(e) {}
    return o;
  },
  "object with accessor": function () {
try { if (Inst33 <= 1000 && typeof (hello) != "undefined") {_RecordType("<1523,1528,59>",(hello)); Inst33++; } } catch(e) {}
    return {
      get hello() {
        return "world";
      },

      0: "value0",
      1: "value1",
      2: "value2"
    };
  },
  "array": function () {
    return [0, 1, 2, 3];
  },
  "es5 array": function () {
    var o = [0, 1, 2, 3];
try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<1727,1728,72>",(o)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1749,1770,73>",(Object.defineProperty)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1749,1755,73>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<1771,1772,73>",(o)); Inst37++; } } catch(e) {}
    Object.defineProperty(o, 1, {
      get: function () {
        return "getter1";
      }
    });
try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<1857,1858,78>",(o)); Inst38++; } } catch(e) {}
    return o;
  }
};
try { if (Inst19 <= 1000 && typeof (objs) != "undefined") {_RecordType("<813,817,22>",(objs)); Inst19++; } } catch(e) {}
var props = ["abc", -1, 0, 1, 10, 0xfffffffe, "x y", "x\u0000y", "x\u0000\u0000y"];
try { if (Inst39 <= 1000 && typeof (props) != "undefined") {_RecordType("<1871,1876,81>",(props)); Inst39++; } } catch(e) {}

for (var obj in objs) {
try { if (Inst40 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1961,1964,83>",(obj)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (objs) != "undefined") {_RecordType("<1968,1972,83>",(objs)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1978,1983,84>",(print)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1994,1997,84>",(obj)); Inst43++; } } catch(e) {}
  print("Test " + obj);

  for (var prop in props) {
try { if (Inst44 <= 1000 && typeof (prop) != "undefined") {_RecordType("<2012,2016,86>",(prop)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (props) != "undefined") {_RecordType("<2020,2025,86>",(props)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (testHasItem) != "undefined") {_RecordType("<2033,2044,87>",(testHasItem)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (objs[obj]) != "undefined") {_RecordType("<2045,2054,87>",(objs[obj])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (objs) != "undefined") {_RecordType("<2045,2049,87>",(objs)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (props[prop]) != "undefined") {_RecordType("<2058,2069,87>",(props[prop])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (props) != "undefined") {_RecordType("<2058,2063,87>",(props)); Inst50++; } } catch(e) {}
    testHasItem(objs[obj](), props[prop]);
  }
}

