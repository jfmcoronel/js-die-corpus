var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var obj = {
  1: 1,
  foo: 1
};
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<371,374,5>",(obj)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Output) != "undefined") {_RecordType("<399,405,9>",(Output)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<406,409,9>",(obj)); Inst2++; } } catch(e) {}
Output(obj);
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<412,433,10>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<412,418,10>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<434,450,10>",(Object.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<434,440,10>",(Object)); Inst6++; } } catch(e) {}
Object.defineProperty(Object.prototype, '1', {
  value: "ProtoFoo",
  writable: false,
  configurable: true,
  enumerable: true
});
try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<544,565,16>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<544,550,16>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<566,582,16>",(Object.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<566,572,16>",(Object)); Inst10++; } } catch(e) {}
Object.defineProperty(Object.prototype, 'foo', {
  value: "ProtoFoo",
  writable: false,
  configurable: true,
  enumerable: true
});
var obj = {
  1: 1,
  foo: 1
};
try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<682,685,22>",(obj)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Output) != "undefined") {_RecordType("<710,716,26>",(Output)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<717,720,26>",(obj)); Inst13++; } } catch(e) {}
Output(obj);
try { if (Inst14 <= 1000 && typeof (Object.prototype[1]) != "undefined") {_RecordType("<730,749,27>",(Object.prototype[1])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<730,746,27>",(Object.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<730,736,27>",(Object)); Inst16++; } } catch(e) {}
delete Object.prototype[1];
try { if (Inst17 <= 1000 && typeof (Object.prototype.foo) != "undefined") {_RecordType("<758,778,28>",(Object.prototype.foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<758,774,28>",(Object.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<758,764,28>",(Object)); Inst19++; } } catch(e) {}
delete Object.prototype.foo;
try { if (Inst20 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<780,801,29>",(Object.defineProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<780,786,29>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<802,818,29>",(Object.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<802,808,29>",(Object)); Inst23++; } } catch(e) {}
Object.defineProperty(Object.prototype, '1', {
  get: function () {
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<852,857,31>",(print)); Inst24++; } } catch(e) {}
    print("GETTER");
  },
  set: function (v) {
try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<891,892,33>",(v)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<900,905,34>",(print)); Inst26++; } } catch(e) {}
    print("SETTER");
  },
  configurable: true,
  enumerable: true
});
try { if (Inst27 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<967,988,39>",(Object.defineProperty)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<967,973,39>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<989,1005,39>",(Object.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<989,995,39>",(Object)); Inst30++; } } catch(e) {}
Object.defineProperty(Object.prototype, 'foo', {
  get: function () {
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<1041,1046,41>",(print)); Inst31++; } } catch(e) {}
    print("GETTER");
  },
  set: function (v) {
try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<1080,1081,43>",(v)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<1089,1094,44>",(print)); Inst33++; } } catch(e) {}
    print("SETTER");
  },
  configurable: true,
  enumerable: true
});
var obj = {
  1: 1,
  foo: 1
};
try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1160,1163,49>",(obj)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Output) != "undefined") {_RecordType("<1188,1194,53>",(Output)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1195,1198,53>",(obj)); Inst36++; } } catch(e) {}
Output(obj);

try { if (Inst37 <= 1000 && typeof (Output) != "undefined") {_RecordType("<1211,1217,55>",(Output)); Inst37++; } } catch(e) {}
function Output(o) {
try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<1218,1219,55>",(o)); Inst38++; } } catch(e) {}
  for (var i in o) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1234,1235,56>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<1239,1240,56>",(o)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<1248,1253,57>",(print)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<1254,1255,57>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o[i]) != "undefined") {_RecordType("<1266,1270,57>",(o[i])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o) != "undefined") {_RecordType("<1266,1267,57>",(o)); Inst44++; } } catch(e) {}
    print(i + ": '" + o[i] + "'");
  }
}

