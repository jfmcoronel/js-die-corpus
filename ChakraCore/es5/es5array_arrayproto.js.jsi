var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(args) {
try { if (Inst1 <= 1000 && typeof (args) != "undefined") {_RecordType("<382,386,5>",(args)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<392,397,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (args) != "undefined") {_RecordType("<398,402,6>",(args)); Inst3++; } } catch(e) {}
  print(args);
}

try { if (Inst4 <= 1000 && typeof (write) != "undefined") {_RecordType("<408,413,9>",(write)); Inst4++; } } catch(e) {}
write("test 1");

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<435,439,11>",(test)); Inst5++; } } catch(e) {}
function test() {
  obj[0] = 1;
try { if (Inst6 <= 1000 && typeof (obj[0]) != "undefined") {_RecordType("<446,452,12>",(obj[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<446,449,12>",(obj)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (write) != "undefined") {_RecordType("<460,465,13>",(write)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj[0]) != "undefined") {_RecordType("<466,472,13>",(obj[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<466,469,13>",(obj)); Inst10++; } } catch(e) {}
  write(obj[0]);
}

var obj = [];
try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<482,485,16>",(obj)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<492,513,17>",(Object.defineProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<492,498,17>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<514,529,17>",(Array.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<514,519,17>",(Array)); Inst15++; } } catch(e) {}
Object.defineProperty(Array.prototype, "0", {
  value: "blah",
  writable: false
});
try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<577,581,21>",(test)); Inst16++; } } catch(e) {}
test();
try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<585,589,22>",(test)); Inst17++; } } catch(e) {}
test();
try { if (Inst18 <= 1000 && typeof (write) != "undefined") {_RecordType("<593,598,23>",(write)); Inst18++; } } catch(e) {}
write("test 2");

try { if (Inst19 <= 1000 && typeof (test2) != "undefined") {_RecordType("<620,625,25>",(test2)); Inst19++; } } catch(e) {}
function test2() {
  var VarArr0 = [];
try { if (Inst20 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<636,643,26>",(VarArr0)); Inst20++; } } catch(e) {}
  VarArr0[4] = 1;
try { if (Inst21 <= 1000 && typeof (VarArr0[4]) != "undefined") {_RecordType("<652,662,27>",(VarArr0[4])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<652,659,27>",(VarArr0)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<670,691,28>",(Object.defineProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<670,676,28>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<692,707,28>",(Array.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<692,697,28>",(Array)); Inst26++; } } catch(e) {}
  Object.defineProperty(Array.prototype, "4", {
    configurable: true,
    get: function () {
      return 30;
    }
  });
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<794,799,34>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (VarArr0.slice) != "undefined") {_RecordType("<800,813,34>",(VarArr0.slice)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<800,807,34>",(VarArr0)); Inst29++; } } catch(e) {}
  print(VarArr0.slice(0, 10));
}

; // generate profile

try { if (Inst30 <= 1000 && typeof (test2) != "undefined") {_RecordType("<849,854,39>",(test2)); Inst30++; } } catch(e) {}
test2();

