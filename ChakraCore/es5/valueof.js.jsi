var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var x = {};
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,5>",(x)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<379,384,6>",(print)); Inst1++; } } catch(e) {}
print("x.valueOf()");

try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<504,505,10>",(e)); Inst4++; } } catch(e) {}
try {
try { if (Inst2 <= 1000 && typeof (x.valueOf) != "undefined") {_RecordType("<410,419,9>",(x.valueOf)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<410,411,9>",(x)); Inst3++; } } catch(e) {}
  x.valueOf(); //Fine - there's no way to inject null or undefined as the 'this' value
} catch (e) {
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<511,516,11>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<517,518,11>",(e)); Inst6++; } } catch(e) {}
  print(e);
}

try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<524,529,14>",(print)); Inst7++; } } catch(e) {}
print("x.valueOf.call(undefined)");

try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<644,645,18>",(e)); Inst12++; } } catch(e) {}
try {
try { if (Inst8 <= 1000 && typeof (x.valueOf.call) != "undefined") {_RecordType("<569,583,17>",(x.valueOf.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x.valueOf) != "undefined") {_RecordType("<569,578,17>",(x.valueOf)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<569,570,17>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<584,593,17>",(undefined)); Inst11++; } } catch(e) {}
  x.valueOf.call(undefined); //SHOULD throw a TypeError in ES5/IE10
} catch (e) {
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<651,656,19>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<657,658,19>",(e)); Inst14++; } } catch(e) {}
  print(e);
}

try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<664,669,22>",(print)); Inst15++; } } catch(e) {}
print("x.valueOf.call(null)");

try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<774,775,26>",(e)); Inst19++; } } catch(e) {}
try {
try { if (Inst16 <= 1000 && typeof (x.valueOf.call) != "undefined") {_RecordType("<704,718,25>",(x.valueOf.call)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x.valueOf) != "undefined") {_RecordType("<704,713,25>",(x.valueOf)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<704,705,25>",(x)); Inst18++; } } catch(e) {}
  x.valueOf.call(null); //SHOULD throw a TypeError in ES5/IE10
} catch (e) {
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<781,786,27>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<787,788,27>",(e)); Inst21++; } } catch(e) {}
  print(e);
}

try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<794,799,30>",(print)); Inst22++; } } catch(e) {}
print("x.valueOf.call()");

try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<896,897,34>",(e)); Inst26++; } } catch(e) {}
try {
try { if (Inst23 <= 1000 && typeof (x.valueOf.call) != "undefined") {_RecordType("<830,844,33>",(x.valueOf.call)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x.valueOf) != "undefined") {_RecordType("<830,839,33>",(x.valueOf)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<830,831,33>",(x)); Inst25++; } } catch(e) {}
  x.valueOf.call(); //SHOULD throw a TypeError in ES5/IE10
} catch (e) {
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<903,908,35>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<909,910,35>",(e)); Inst28++; } } catch(e) {}
  print(e);
}

try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<916,921,38>",(print)); Inst29++; } } catch(e) {}
print("typeof x.valueOf.call(true)");
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<954,959,39>",(print)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x.valueOf.call) != "undefined") {_RecordType("<967,981,39>",(x.valueOf.call)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x.valueOf) != "undefined") {_RecordType("<967,976,39>",(x.valueOf)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<967,968,39>",(x)); Inst33++; } } catch(e) {}
print(typeof x.valueOf.call(true)); //SHOULD print 'object' in ES5/IE10

try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<1027,1032,41>",(print)); Inst34++; } } catch(e) {}
print("typeof x.valueOf.call(42)");
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<1063,1068,42>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x.valueOf.call) != "undefined") {_RecordType("<1076,1090,42>",(x.valueOf.call)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x.valueOf) != "undefined") {_RecordType("<1076,1085,42>",(x.valueOf)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<1076,1077,42>",(x)); Inst38++; } } catch(e) {}
print(typeof x.valueOf.call(42)); //SHOULD print 'object' in ES5/IE10

try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<1134,1139,44>",(print)); Inst39++; } } catch(e) {}
print("typeof x.valueOf.call('Hello')");
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<1175,1180,45>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x.valueOf.call) != "undefined") {_RecordType("<1188,1202,45>",(x.valueOf.call)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (x.valueOf) != "undefined") {_RecordType("<1188,1197,45>",(x.valueOf)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<1188,1189,45>",(x)); Inst43++; } } catch(e) {}
print(typeof x.valueOf.call('Hello')); //SHOULD print 'object' in ES5/IE10

