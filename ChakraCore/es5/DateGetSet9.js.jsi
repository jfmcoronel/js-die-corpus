var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst1 <= 1000 && typeof (Date) != "undefined") {_RecordType("<379,383,5>",(Date)); Inst1++; } } catch(e) {}
var d = new Date();
try { if (Inst0 <= 1000 && typeof (d) != "undefined") {_RecordType("<371,372,5>",(d)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (d.setDate) != "undefined") {_RecordType("<387,396,6>",(d.setDate)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<387,388,6>",(d)); Inst3++; } } catch(e) {}
d.setDate(12345678);
try { if (Inst4 <= 1000 && typeof (d.setTime) != "undefined") {_RecordType("<408,417,7>",(d.setTime)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<408,409,7>",(d)); Inst5++; } } catch(e) {}
d.setTime(456789);
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<427,432,8>",(print)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (d.toISOString) != "undefined") {_RecordType("<452,465,8>",(d.toISOString)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (d) != "undefined") {_RecordType("<452,453,8>",(d)); Inst8++; } } catch(e) {}
print("toISOString : " + d.toISOString());
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<470,475,9>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (d.toJSON) != "undefined") {_RecordType("<490,498,9>",(d.toJSON)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<490,491,9>",(d)); Inst11++; } } catch(e) {}
print("toJSON : " + d.toJSON()); // Test NaN Date value

try { if (Inst13 <= 1000 && typeof (Date) != "undefined") {_RecordType("<535,539,11>",(Date)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<540,550,11>",(Number.NaN)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<540,546,11>",(Number)); Inst15++; } } catch(e) {}
d = new Date(Number.NaN);
try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<527,528,11>",(d)); Inst12++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<588,589,15>",(e)); Inst18++; } } catch(e) {}
try {
try { if (Inst16 <= 1000 && typeof (d.toISOString) != "undefined") {_RecordType("<562,575,14>",(d.toISOString)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<562,563,14>",(d)); Inst17++; } } catch(e) {}
  d.toISOString();
} catch (e) {
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<595,600,16>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<628,634,16>",(e.name)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<628,629,16>",(e)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<645,654,16>",(e.message)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<645,646,16>",(e)); Inst23++; } } catch(e) {}
  print("NaN Date toISOString: " + e.name + " : " + e.message);
}

try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<660,665,19>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d.toJSON) != "undefined") {_RecordType("<689,697,19>",(d.toJSON)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (d) != "undefined") {_RecordType("<689,690,19>",(d)); Inst26++; } } catch(e) {}
print("NaN Date toJSON:: " + d.toJSON()); //
// Test Infinity Date value
//

try { if (Inst28 <= 1000 && typeof (Date) != "undefined") {_RecordType("<745,749,23>",(Date)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<750,758,23>",(Infinity)); Inst29++; } } catch(e) {}
d = new Date(Infinity);
try { if (Inst27 <= 1000 && typeof (d) != "undefined") {_RecordType("<737,738,23>",(d)); Inst27++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<796,797,27>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst30 <= 1000 && typeof (d.toISOString) != "undefined") {_RecordType("<770,783,26>",(d.toISOString)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<770,771,26>",(d)); Inst31++; } } catch(e) {}
  d.toISOString();
} catch (e) {
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<803,808,28>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<842,848,28>",(e.name)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<842,843,28>",(e)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<859,868,28>",(e.message)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<859,860,28>",(e)); Inst37++; } } catch(e) {}
  print("Infinity Date toISOString : " + e.name + " : " + e.message);
}

try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<874,879,31>",(print)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (d.toJSON) != "undefined") {_RecordType("<908,916,31>",(d.toJSON)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (d) != "undefined") {_RecordType("<908,909,31>",(d)); Inst40++; } } catch(e) {}
print("Infinity Date toJSON : " + d.toJSON()); //
// Test Date.prototype.toJSON transferred to an object but toISOString is not callable
//

try { if (Inst42 <= 1000 && typeof (Date.prototype.toJSON) != "undefined") {_RecordType("<1049,1070,37>",(Date.prototype.toJSON)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<1049,1063,37>",(Date.prototype)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1049,1053,37>",(Date)); Inst44++; } } catch(e) {}
d = {
  toISOString: 1,
  toJSON: Date.prototype.toJSON
};
try { if (Inst41 <= 1000 && typeof (d) != "undefined") {_RecordType("<1015,1016,35>",(d)); Inst41++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<1104,1105,42>",(e)); Inst47++; } } catch(e) {}
try {
try { if (Inst45 <= 1000 && typeof (d.toJSON) != "undefined") {_RecordType("<1083,1091,41>",(d.toJSON)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (d) != "undefined") {_RecordType("<1083,1084,41>",(d)); Inst46++; } } catch(e) {}
  d.toJSON();
} catch (e) {
try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<1111,1116,43>",(print)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<1156,1162,43>",(e.name)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<1156,1157,43>",(e)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1173,1182,43>",(e.message)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (e) != "undefined") {_RecordType("<1173,1174,43>",(e)); Inst52++; } } catch(e) {}
  print("Object toISOString not callable : " + e.name + " : " + e.message);
} //
// Test Date.prototype.toJSON transferred to an object
//


try { if (Inst54 <= 1000 && typeof (Date.prototype.toJSON) != "undefined") {_RecordType("<1333,1354,53>",(Date.prototype.toJSON)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<1333,1347,53>",(Date.prototype)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1333,1337,53>",(Date)); Inst56++; } } catch(e) {}
d = {
  toISOString: function () {
    return "Fake JSON : Object";
  },
  toJSON: Date.prototype.toJSON
};
try { if (Inst53 <= 1000 && typeof (d) != "undefined") {_RecordType("<1250,1251,49>",(d)); Inst53++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (print) != "undefined") {_RecordType("<1358,1363,55>",(print)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (d.toJSON) != "undefined") {_RecordType("<1385,1393,55>",(d.toJSON)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (d) != "undefined") {_RecordType("<1385,1386,55>",(d)); Inst59++; } } catch(e) {}
print("Object toJSON : " + d.toJSON()); //
// Test Date.prototype.toJSON transferred to String
//

String.prototype.toISOString = function () {
  return "Fake JSON : " + this;
};
try { if (Inst60 <= 1000 && typeof (String.prototype.toISOString) != "undefined") {_RecordType("<1457,1485,59>",(String.prototype.toISOString)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<1457,1473,59>",(String.prototype)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (String) != "undefined") {_RecordType("<1457,1463,59>",(String)); Inst62++; } } catch(e) {}

try { if (Inst66 <= 1000 && typeof (Date.prototype.toJSON) != "undefined") {_RecordType("<1564,1585,63>",(Date.prototype.toJSON)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<1564,1578,63>",(Date.prototype)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1564,1568,63>",(Date)); Inst68++; } } catch(e) {}
String.prototype.toJSON = Date.prototype.toJSON;
try { if (Inst63 <= 1000 && typeof (String.prototype.toJSON) != "undefined") {_RecordType("<1538,1561,63>",(String.prototype.toJSON)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<1538,1554,63>",(String.prototype)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (String) != "undefined") {_RecordType("<1538,1544,63>",(String)); Inst65++; } } catch(e) {}
d = "String";
try { if (Inst69 <= 1000 && typeof (d) != "undefined") {_RecordType("<1587,1588,64>",(d)); Inst69++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (print) != "undefined") {_RecordType("<1601,1606,65>",(print)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (d.toJSON) != "undefined") {_RecordType("<1628,1636,65>",(d.toJSON)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (d) != "undefined") {_RecordType("<1628,1629,65>",(d)); Inst72++; } } catch(e) {}
print("String toJSON : " + d.toJSON()); //
// Test Date.getYear -- ES5 spec B.2.4
//

try { if (Inst73 <= 1000 && typeof (print) != "undefined") {_RecordType("<1687,1692,69>",(print)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (new Date("January 1 2000").getYear) != "undefined") {_RecordType("<1712,1746,69>",(new Date("January 1 2000").getYear)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1716,1720,69>",(Date)); Inst75++; } } catch(e) {}
print("getYear 2000: " + new Date("January 1 2000").getYear());
try { if (Inst76 <= 1000 && typeof (print) != "undefined") {_RecordType("<1751,1756,70>",(print)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (new Date("January 1 1899").getYear) != "undefined") {_RecordType("<1776,1810,70>",(new Date("January 1 1899").getYear)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1780,1784,70>",(Date)); Inst78++; } } catch(e) {}
print("getYear 1899: " + new Date("January 1 1899").getYear());
try { if (Inst79 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1815,1836,71>",(Object.defineProperty)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1815,1821,71>",(Object)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<1837,1851,71>",(Date.prototype)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1837,1841,71>",(Date)); Inst82++; } } catch(e) {}
Object.defineProperty(Date.prototype, "valueOf", {
  get: function () {
try { if (Inst83 <= 1000 && typeof (print) != "undefined") {_RecordType("<1891,1896,73>",(print)); Inst83++; } } catch(e) {}
    print("get fired");
  }
});
try { if (Inst85 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1931,1935,76>",(Date)); Inst85++; } } catch(e) {}
var d = new Date();
try { if (Inst84 <= 1000 && typeof (d) != "undefined") {_RecordType("<1923,1924,76>",(d)); Inst84++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (d.toJSON) != "undefined") {_RecordType("<1939,1947,77>",(d.toJSON)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (d) != "undefined") {_RecordType("<1939,1940,77>",(d)); Inst87++; } } catch(e) {}
d.toJSON();

