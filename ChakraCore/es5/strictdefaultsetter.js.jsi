var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
'use strict';

try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<391,392,7>",(f)); Inst0++; } } catch(e) {}
function f(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<393,394,7>",(o)); Inst1++; } } catch(e) {}
  o.x = 'me';
try { if (Inst2 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<400,403,8>",(o.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<400,401,8>",(o)); Inst3++; } } catch(e) {}
}

try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<432,433,12>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<434,435,12>",(v)); Inst6++; } } catch(e) {}
var o1 = {
  set x(v) {
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<449,450,13>",(v)); Inst8++; } } catch(e) {}
    val = v;
try { if (Inst7 <= 1000 && typeof (val) != "undefined") {_RecordType("<443,446,13>",(val)); Inst7++; } } catch(e) {}
  }

};
try { if (Inst4 <= 1000 && typeof (o1) != "undefined") {_RecordType("<419,421,11>",(o1)); Inst4++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<477,478,18>",(x)); Inst10++; } } catch(e) {}
var o2 = {
  get x() {
try { if (Inst11 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<487,499,19>",(WScript.Echo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<487,494,19>",(WScript)); Inst12++; } } catch(e) {}
    WScript.Echo('get');
  }

};
try { if (Inst9 <= 1000 && typeof (o2) != "undefined") {_RecordType("<464,466,17>",(o2)); Inst9++; } } catch(e) {}
var val = 'you';
try { if (Inst13 <= 1000 && typeof (val) != "undefined") {_RecordType("<520,523,23>",(val)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<533,534,24>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o1) != "undefined") {_RecordType("<535,537,24>",(o1)); Inst15++; } } catch(e) {}
f(o1);

try { if (Inst16 <= 1000 && typeof (val) != "undefined") {_RecordType("<545,548,26>",(val)); Inst16++; } } catch(e) {}
if (val !== 'me') {
try { if (Inst17 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<563,575,27>",(WScript.Echo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<563,570,27>",(WScript)); Inst18++; } } catch(e) {}
  WScript.Echo('fail 1');
}

val = 'you';
try { if (Inst19 <= 1000 && typeof (val) != "undefined") {_RecordType("<590,593,30>",(val)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<603,604,31>",(f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o1) != "undefined") {_RecordType("<605,607,31>",(o1)); Inst21++; } } catch(e) {}
f(o1);

try { if (Inst22 <= 1000 && typeof (val) != "undefined") {_RecordType("<615,618,33>",(val)); Inst22++; } } catch(e) {}
if (val !== 'me') {
try { if (Inst23 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<633,645,34>",(WScript.Echo)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<633,640,34>",(WScript)); Inst24++; } } catch(e) {}
  WScript.Echo('fail 2');
}

try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<684,685,39>",(e)); Inst27++; } } catch(e) {}
try {
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<668,669,38>",(f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o2) != "undefined") {_RecordType("<670,672,38>",(o2)); Inst26++; } } catch(e) {}
  f(o2);
} catch (e) {
try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<697,698,40>",(e)); Inst29++; } } catch(e) {}
  val = e;
try { if (Inst28 <= 1000 && typeof (val) != "undefined") {_RecordType("<691,694,40>",(val)); Inst28++; } } catch(e) {}
}

try { if (Inst30 <= 1000 && typeof (val.toString) != "undefined") {_RecordType("<707,719,43>",(val.toString)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (val) != "undefined") {_RecordType("<707,710,43>",(val)); Inst31++; } } catch(e) {}
if (val.toString() === 'TypeError: Assignment to read-only properties is not allowed in strict mode') {
try { if (Inst32 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<809,821,44>",(WScript.Echo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<809,816,44>",(WScript)); Inst33++; } } catch(e) {}
  WScript.Echo('pass');
} else {
try { if (Inst34 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<842,854,46>",(WScript.Echo)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<842,849,46>",(WScript)); Inst35++; } } catch(e) {}
  WScript.Echo('fail 3');
}

