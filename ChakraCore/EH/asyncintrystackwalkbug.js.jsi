var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test5) != "undefined") {_RecordType("<376,381,5>",(test5)); Inst0++; } } catch(e) {}
function test5() {
try { if (Inst1 <= 1000 && typeof (shapeyConstructor) != "undefined") {_RecordType("<397,414,6>",(shapeyConstructor)); Inst1++; } } catch(e) {}
  function shapeyConstructor(xddapw) {
try { if (Inst2 <= 1000 && typeof (xddapw) != "undefined") {_RecordType("<415,421,6>",(xddapw)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (xsbazt) != "undefined") {_RecordType("<437,443,7>",(xsbazt)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (hkvvxr) != "undefined") {_RecordType("<446,452,7>",(hkvvxr)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<453,454,7>",(x)); Inst5++; } } catch(e) {}
    (async (xsbazt = hkvvxr(x)) => [...[-2]])();

try { if (Inst8 <= 1000 && typeof (CollectGarbage) != "undefined") {_RecordType("<490,504,9>",(CollectGarbage)); Inst8++; } } catch(e) {}
    xddapw.y = CollectGarbage();
try { if (Inst6 <= 1000 && typeof (xddapw.y) != "undefined") {_RecordType("<479,487,9>",(xddapw.y)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (xddapw) != "undefined") {_RecordType("<479,485,9>",(xddapw)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (xddapw.y) != "undefined") {_RecordType("<519,527,10>",(xddapw.y)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (xddapw) != "undefined") {_RecordType("<519,525,10>",(xddapw)); Inst10++; } } catch(e) {}
    delete xddapw.y;
  }

  for (var c in [0]) {
try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<545,546,13>",(c)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<621,622,16>",(e)); Inst15++; } } catch(e) {}
    try {
try { if (Inst13 <= 1000 && typeof (shapeyConstructor) != "undefined") {_RecordType("<586,603,15>",(shapeyConstructor)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<604,605,15>",(c)); Inst14++; } } catch(e) {}
      var vbabnd = shapeyConstructor(c);
try { if (Inst12 <= 1000 && typeof (vbabnd) != "undefined") {_RecordType("<577,583,15>",(vbabnd)); Inst12++; } } catch(e) {}
    } catch (e) {
      ;
    }
  }
}

try { if (Inst16 <= 1000 && typeof (test5) != "undefined") {_RecordType("<647,652,22>",(test5)); Inst16++; } } catch(e) {}
test5();
try { if (Inst17 <= 1000 && typeof (test5) != "undefined") {_RecordType("<656,661,23>",(test5)); Inst17++; } } catch(e) {}
test5();
try { if (Inst18 <= 1000 && typeof (test5) != "undefined") {_RecordType("<665,670,24>",(test5)); Inst18++; } } catch(e) {}
test5();
try { if (Inst19 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<674,686,25>",(WScript.Echo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<674,681,25>",(WScript)); Inst20++; } } catch(e) {}
WScript.Echo("Passed");

