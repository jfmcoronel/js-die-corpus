var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo(arg0) {
try { if (Inst1 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<380,384,5>",(arg0)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<390,402,6>",(WScript.Echo)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<390,397,6>",(WScript)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<412,416,6>",(arg0)); Inst4++; } } catch(e) {}
  WScript.Echo(" in " + arg0);
try { if (Inst5 <= 1000 && typeof (ui32) != "undefined") {_RecordType("<421,425,7>",(ui32)); Inst5++; } } catch(e) {}
  ui32;

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<666,667,25>",(e)); Inst15++; } } catch(e) {}
  try {
    try {
      var num = 100;
try { if (Inst6 <= 1000 && typeof (num) != "undefined") {_RecordType("<456,459,11>",(num)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<478,482,13>",(arg0)); Inst7++; } } catch(e) {}
      if (arg0 == 1) {
try { if (Inst8 <= 1000 && typeof (num.toPrecision) != "undefined") {_RecordType("<499,514,14>",(num.toPrecision)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (num) != "undefined") {_RecordType("<499,502,14>",(num)); Inst9++; } } catch(e) {}
        num.toPrecision(500);
      }
    } finally {
try { if (Inst10 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<555,559,17>",(arg0)); Inst10++; } } catch(e) {}
      if (arg0 == 1) {
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<576,579,18>",(foo)); Inst11++; } } catch(e) {}
        foo(2);
      }

try { if (Inst12 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<603,607,21>",(arg0)); Inst12++; } } catch(e) {}
      if (arg0 == 2) {
try { if (Inst13 <= 1000 && typeof (ui32[187953167]) != "undefined") {_RecordType("<624,639,22>",(ui32[187953167])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ui32) != "undefined") {_RecordType("<624,628,22>",(ui32)); Inst14++; } } catch(e) {}
        ui32[187953167];
      }
    }
  } catch (e) {
try { if (Inst16 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<675,687,26>",(WScript.Echo)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<675,682,26>",(WScript)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<688,689,26>",(e)); Inst18++; } } catch(e) {}
    WScript.Echo(e);
  }

try { if (Inst19 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<699,711,29>",(WScript.Echo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<699,706,29>",(WScript)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<723,727,29>",(arg0)); Inst21++; } } catch(e) {}
  WScript.Echo(" done " + arg0);
}

try { if (Inst23 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<748,759,32>",(Uint32Array)); Inst23++; } } catch(e) {}
var ui32 = new Uint32Array();
try { if (Inst22 <= 1000 && typeof (ui32) != "undefined") {_RecordType("<737,741,32>",(ui32)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<763,766,33>",(foo)); Inst24++; } } catch(e) {}
foo(0);
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<771,774,34>",(foo)); Inst25++; } } catch(e) {}
foo(0);
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<779,782,35>",(foo)); Inst26++; } } catch(e) {}
foo(1);

