var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// basic try/catch testcases
try { if (Inst0 <= 1000 && typeof (verify) != "undefined") {_RecordType("<405,411,6>",(verify)); Inst0++; } } catch(e) {}
function verify(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<412,413,6>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<415,416,6>",(y)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<426,427,7>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<431,432,7>",(y)); Inst4++; } } catch(e) {}
  if (x != y) {
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<440,445,8>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<458,459,8>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<471,472,8>",(y)); Inst7++; } } catch(e) {}
    print("ERROR: " + x + " != " + y);
  }
}

try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<497,506,12>",(undefined)); Inst9++; } } catch(e) {}
var objs = [5, undefined, 'c', "test", [1, 2, 3]];
try { if (Inst8 <= 1000 && typeof (objs) != "undefined") {_RecordType("<486,490,12>",(objs)); Inst8++; } } catch(e) {}

for (var i = 0; i < objs.length; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<543,544,14>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<550,551,14>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (objs.length) != "undefined") {_RecordType("<554,565,14>",(objs.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (objs) != "undefined") {_RecordType("<554,558,14>",(objs)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<569,570,14>",(i)); Inst14++; } } catch(e) {}
  // test #1: basic try/catch
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<642,643,18>",(a)); Inst17++; } } catch(e) {}
  try {
try { if (Inst15 <= 1000 && typeof (objs[i]) != "undefined") {_RecordType("<622,629,17>",(objs[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (objs) != "undefined") {_RecordType("<622,626,17>",(objs)); Inst16++; } } catch(e) {}
    throw objs[i];
  } catch (a) {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<651,656,19>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<669,670,19>",(a)); Inst19++; } } catch(e) {}
    print("caught " + a);
try { if (Inst20 <= 1000 && typeof (verify) != "undefined") {_RecordType("<677,683,20>",(verify)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<684,685,20>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (objs[i]) != "undefined") {_RecordType("<687,694,20>",(objs[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (objs) != "undefined") {_RecordType("<687,691,20>",(objs)); Inst23++; } } catch(e) {}
    verify(a, objs[i]);
  } // test #2: try/finally within a try/catch/finally


try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<866,867,30>",(a)); Inst28++; } } catch(e) {}
  try {
    try {
try { if (Inst24 <= 1000 && typeof (objs[i]) != "undefined") {_RecordType("<784,791,26>",(objs[i])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (objs) != "undefined") {_RecordType("<784,788,26>",(objs)); Inst25++; } } catch(e) {}
      throw objs[i];
    } finally {
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<815,820,28>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<845,846,28>",(i)); Inst27++; } } catch(e) {}
      print("inner finally, i = " + i);
    }
  } catch (a) {
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<875,880,31>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<893,894,31>",(a)); Inst30++; } } catch(e) {}
    print("caught " + a);
try { if (Inst31 <= 1000 && typeof (verify) != "undefined") {_RecordType("<901,907,32>",(verify)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<908,909,32>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (objs[i]) != "undefined") {_RecordType("<911,918,32>",(objs[i])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (objs) != "undefined") {_RecordType("<911,915,32>",(objs)); Inst34++; } } catch(e) {}
    verify(a, objs[i]);
  } finally {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<939,944,34>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<969,970,34>",(i)); Inst36++; } } catch(e) {}
    print("outer finally, i = " + i);
  } // test #3: more deeply nested try/catch/finally


try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<1317,1318,52>",(a)); Inst50++; } } catch(e) {}
  try {
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<1159,1160,45>",(a)); Inst41++; } } catch(e) {}
    try {
      try {
try { if (Inst37 <= 1000 && typeof (objs[i]) != "undefined") {_RecordType("<1072,1079,41>",(objs[i])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (objs) != "undefined") {_RecordType("<1072,1076,41>",(objs)); Inst38++; } } catch(e) {}
        throw objs[i];
      } finally {
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<1107,1112,43>",(print)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<1134,1135,43>",(i)); Inst40++; } } catch(e) {}
        print("finally #3, i = " + i);
      }
    } catch (a) {
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1170,1175,46>",(print)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1188,1189,46>",(a)); Inst43++; } } catch(e) {}
      print("caught " + a);
try { if (Inst44 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1198,1204,47>",(verify)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1205,1206,47>",(a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (objs[i]) != "undefined") {_RecordType("<1208,1215,47>",(objs[i])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (objs) != "undefined") {_RecordType("<1208,1212,47>",(objs)); Inst47++; } } catch(e) {}
      verify(a, objs[i]);
    } finally {
try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<1240,1245,49>",(print)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1267,1268,49>",(i)); Inst49++; } } catch(e) {}
      print("finally #2, i = " + i);
      throw "another throw";
    }
  } catch (a) {
try { if (Inst51 <= 1000 && typeof (print) != "undefined") {_RecordType("<1326,1331,53>",(print)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1344,1345,53>",(a)); Inst52++; } } catch(e) {}
    print("caught " + a);
try { if (Inst53 <= 1000 && typeof (verify) != "undefined") {_RecordType("<1352,1358,54>",(verify)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (a) != "undefined") {_RecordType("<1359,1360,54>",(a)); Inst54++; } } catch(e) {}
    verify(a, "another throw");
  }
}

