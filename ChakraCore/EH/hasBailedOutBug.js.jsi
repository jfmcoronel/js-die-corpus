var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var shouldBailout = false;
try { if (Inst0 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<371,384,5>",(shouldBailout)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<404,409,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst2 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<420,424,8>",(obj0)); Inst2++; } } catch(e) {}

  var func0 = function () {
    ;
  };
try { if (Inst3 <= 1000 && typeof (func0) != "undefined") {_RecordType("<438,443,10>",(func0)); Inst3++; } } catch(e) {}

  var func1 = function () {
try { if (Inst20 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<811,824,31>",(shouldBailout)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<827,848,31>",(Object.defineProperty)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<827,833,31>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<849,865,31>",(Object.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<849,855,31>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<931,940,35>",(arguments)); Inst25++; } } catch(e) {}
    (function () {
      'use strict';

try { if (Inst10 <= 1000 && typeof (ex) != "undefined") {_RecordType("<659,661,24>",(ex)); Inst10++; } } catch(e) {}
      try {
try { if (Inst5 <= 1000 && typeof (func8) != "undefined") {_RecordType("<569,574,19>",(func8)); Inst5++; } } catch(e) {}
        function func8() {
try { if (Inst6 <= 1000 && typeof (obj0.prop2) != "undefined") {_RecordType("<589,599,20>",(obj0.prop2)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<589,593,20>",(obj0)); Inst7++; } } catch(e) {}
          obj0.prop2;
        }

try { if (Inst9 <= 1000 && typeof (func8) != "undefined") {_RecordType("<635,640,23>",(func8)); Inst9++; } } catch(e) {}
        var uniqobj4 = func8();
try { if (Inst8 <= 1000 && typeof (uniqobj4) != "undefined") {_RecordType("<624,632,23>",(uniqobj4)); Inst8++; } } catch(e) {}
      } catch (ex) {
        return 'somestring';
      } finally {
        ;
      }

try { if (Inst11 <= 1000 && typeof (func0) != "undefined") {_RecordType("<737,742,30>",(func0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ary.push) != "undefined") {_RecordType("<743,751,30>",(ary.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ary) != "undefined") {_RecordType("<743,746,30>",(ary)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ary.unshift) != "undefined") {_RecordType("<752,763,30>",(ary.unshift)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ary) != "undefined") {_RecordType("<752,755,30>",(ary)); Inst15++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<790,799,30>",(protoObj0)); Inst19++; } } catch(e) {}
      func0(ary.push(ary.unshift(Object.prototype.length = protoObj0)));
try { if (Inst16 <= 1000 && typeof (Object.prototype.length) != "undefined") {_RecordType("<764,787,30>",(Object.prototype.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<764,780,30>",(Object.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<764,770,30>",(Object)); Inst18++; } } catch(e) {}
    })(shouldBailout ? Object.defineProperty(Object.prototype, 'length', {
      get: function () {
        ;
      }
    }) : arguments);
  };
try { if (Inst4 <= 1000 && typeof (func1) != "undefined") {_RecordType("<478,483,14>",(func1)); Inst4++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<961,966,38>",(Array)); Inst27++; } } catch(e) {}
  var ary = Array();
try { if (Inst26 <= 1000 && typeof (ary) != "undefined") {_RecordType("<955,958,38>",(ary)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<988,994,39>",(Object)); Inst29++; } } catch(e) {}
  var protoObj0 = Object();
try { if (Inst28 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<976,985,39>",(protoObj0)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<1014,1027,41>",(shouldBailout)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1030,1051,41>",(Object.defineProperty)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1030,1036,41>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1052,1056,41>",(obj0)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1121,1127,45>",(Object)); Inst34++; } } catch(e) {}
  ({
    prop7: shouldBailout ? Object.defineProperty(obj0, 'prop2', {
      set: function () {
        ;
      }
    }) : Object
  });

  for (; func1();) {
try { if (Inst35 <= 1000 && typeof (func1) != "undefined") {_RecordType("<1144,1149,48>",(func1)); Inst35++; } } catch(e) {}
    ;
  }
}

try { if (Inst36 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1169,1174,53>",(test0)); Inst36++; } } catch(e) {}
test0();
try { if (Inst37 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1178,1183,54>",(test0)); Inst37++; } } catch(e) {}
test0();
shouldBailout = true;
try { if (Inst38 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<1187,1200,55>",(shouldBailout)); Inst38++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1236,1238,59>",(ex)); Inst40++; } } catch(e) {}
try {
try { if (Inst39 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1218,1223,58>",(test0)); Inst39++; } } catch(e) {}
  test0();
} catch (ex) {
try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<1244,1249,60>",(print)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1250,1252,60>",(ex)); Inst42++; } } catch(e) {}
  print(ex);
}

