var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<382,383,5>",(x)); Inst1++; } } catch(e) {}
  var obj1 = {};
try { if (Inst2 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<393,397,6>",(obj1)); Inst2++; } } catch(e) {}

  var func3 = function () {
    ;
  };
try { if (Inst3 <= 1000 && typeof (func3) != "undefined") {_RecordType("<411,416,8>",(func3)); Inst3++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (func3) != "undefined") {_RecordType("<462,467,12>",(func3)); Inst6++; } } catch(e) {}
  obj1.method1 = func3;
try { if (Inst4 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<447,459,12>",(obj1.method1)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<447,451,12>",(obj1)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<484,493,13>",(Int8Array)); Inst8++; } } catch(e) {}
  var i8 = new Int8Array(256);
try { if (Inst7 <= 1000 && typeof (i8) != "undefined") {_RecordType("<475,477,13>",(i8)); Inst7++; } } catch(e) {}
  var IntArr0 = [];
try { if (Inst9 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<506,513,14>",(IntArr0)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<538,544,15>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<545,549,15>",(obj1)); Inst12++; } } catch(e) {}
  var protoObj1 = Object(obj1);
try { if (Inst10 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<526,535,15>",(protoObj1)); Inst10++; } } catch(e) {}

  for (var _strvar1 of i8) {
try { if (Inst13 <= 1000 && typeof (_strvar1) != "undefined") {_RecordType("<564,572,17>",(_strvar1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i8) != "undefined") {_RecordType("<576,578,17>",(i8)); Inst14++; } } catch(e) {}
    for (; protoObj1.method1(); d) {
try { if (Inst15 <= 1000 && typeof (protoObj1.method1) != "undefined") {_RecordType("<593,610,18>",(protoObj1.method1)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<593,602,18>",(protoObj1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<614,615,18>",(d)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<629,630,19>",(x)); Inst18++; } } catch(e) {}
      if (x) {
        return 2491902987445170000;
      } else {
        return 1;
      }
    }

    for (var _strvar1 of IntArr0) {
try { if (Inst19 <= 1000 && typeof (_strvar1) != "undefined") {_RecordType("<731,739,26>",(_strvar1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<743,750,26>",(IntArr0)); Inst20++; } } catch(e) {}
      ;
    }
  }
}

try { if (Inst21 <= 1000 && typeof (test0) != "undefined") {_RecordType("<775,780,32>",(test0)); Inst21++; } } catch(e) {}
test0(1);
try { if (Inst22 <= 1000 && typeof (test0) != "undefined") {_RecordType("<785,790,33>",(test0)); Inst22++; } } catch(e) {}
test0(0);
try { if (Inst23 <= 1000 && typeof (test0) != "undefined") {_RecordType("<795,800,34>",(test0)); Inst23++; } } catch(e) {}
test0(1);
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<805,810,35>",(print)); Inst24++; } } catch(e) {}
print("Passed\n");

