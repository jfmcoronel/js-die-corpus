var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var e = 8;
try { if (Inst0 <= 1000 && typeof (e) != "undefined") {_RecordType("<371,372,5>",(e)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<388,389,7>",(x)); Inst1++; } } catch(e) {}
function x() {
  throw 7;
}

try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<417,418,11>",(y)); Inst2++; } } catch(e) {}
function y() {
  var i;
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,12>",(i)); Inst3++; } } catch(e) {}

  for (i = 0; i < 10; i++) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<440,441,14>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<447,448,14>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,14>",(i)); Inst6++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<805,806,34>",(e)); Inst18++; } } catch(e) {}
    try {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<482,483,16>",(i)); Inst7++; } } catch(e) {}
      if (i % 2 == 0) {
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<542,543,19>",(e)); Inst9++; } } catch(e) {}
        try {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<520,521,18>",(x)); Inst8++; } } catch(e) {}
          x();
        } catch (e) {
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<557,562,20>",(print)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<581,582,20>",(e)); Inst11++; } } catch(e) {}
          print("Inner catch: " + e);

try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<600,601,22>",(i)); Inst12++; } } catch(e) {}
          if (i % 3) {
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<627,628,23>",(e)); Inst13++; } } catch(e) {}
            throw e;
          }

try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<657,658,26>",(i)); Inst14++; } } catch(e) {}
          if (i % 5) {
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<685,686,27>",(e)); Inst15++; } } catch(e) {}
            return e;
          }
        } finally {
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<730,735,30>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<750,751,30>",(i)); Inst17++; } } catch(e) {}
          print("Finally: " + i);
          continue;
        }
      }
    } catch (e) {
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<816,821,35>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<840,841,35>",(e)); Inst20++; } } catch(e) {}
      print("Outer catch: " + e);
    } finally {
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<866,871,37>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<892,893,37>",(i)); Inst22++; } } catch(e) {}
      print("Outer finally: " + i);

try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<909,910,39>",(i)); Inst23++; } } catch(e) {}
      if (++i % 9 == 0) {
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<938,939,40>",(e)); Inst24++; } } catch(e) {}
        return e;
      }
    }
  }
}

try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<962,967,46>",(print)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<968,969,46>",(y)); Inst26++; } } catch(e) {}
print(y());

