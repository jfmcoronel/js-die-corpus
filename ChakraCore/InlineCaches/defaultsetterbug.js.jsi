var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
let threw = false;
try { if (Inst0 <= 1000 && typeof (threw) != "undefined") {_RecordType("<371,376,5>",(threw)); Inst0++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<983,984,38>",(e)); Inst33++; } } catch(e) {}
try {
  var obj1 = {};
try { if (Inst1 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<399,403,8>",(obj1)); Inst1++; } } catch(e) {}

  var func0 = function () {
    for (var _strvar2 in Object) {
try { if (Inst3 <= 1000 && typeof (_strvar2) != "undefined") {_RecordType("<452,460,11>",(_strvar2)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<464,470,11>",(Object)); Inst4++; } } catch(e) {}
      Object.prototype[_strvar2] = {};
try { if (Inst5 <= 1000 && typeof (Object.prototype[_strvar2]) != "undefined") {_RecordType("<480,506,12>",(Object.prototype[_strvar2])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<480,496,12>",(Object.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<480,486,12>",(Object)); Inst7++; } } catch(e) {}
    }
  };
try { if (Inst2 <= 1000 && typeof (func0) != "undefined") {_RecordType("<417,422,10>",(func0)); Inst2++; } } catch(e) {}

  let cnt = 0;
try { if (Inst8 <= 1000 && typeof (cnt) != "undefined") {_RecordType("<531,534,16>",(cnt)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<542,563,17>",(Object.defineProperty)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<542,548,17>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<564,568,17>",(obj1)); Inst11++; } } catch(e) {}
  Object.defineProperty(obj1, 'prop0', {
    get: function () {
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<610,615,19>",(print)); Inst12++; } } catch(e) {}
      print("BAD!");
    },
    configurable: true
  });
try { if (Inst16 <= 1000 && typeof (func0) != "undefined") {_RecordType("<688,693,23>",(func0)); Inst16++; } } catch(e) {}
  Object.prototype.prop0 = func0();
try { if (Inst13 <= 1000 && typeof (Object.prototype.prop0) != "undefined") {_RecordType("<663,685,23>",(Object.prototype.prop0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<663,679,23>",(Object.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<663,669,23>",(Object)); Inst15++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (func0) != "undefined") {_RecordType("<724,729,24>",(func0)); Inst20++; } } catch(e) {}
  Object.prototype.prop2 = func0();
try { if (Inst17 <= 1000 && typeof (Object.prototype.prop2) != "undefined") {_RecordType("<699,721,24>",(Object.prototype.prop2)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<699,715,24>",(Object.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<699,705,24>",(Object)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<750,771,25>",(Object.defineProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<750,756,25>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<772,788,25>",(Object.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<772,778,25>",(Object)); Inst26++; } } catch(e) {}
  Object.prop2 = Object.defineProperty(Object.prototype, 'prop2', {
    get: function () {
      ;
    }
  });
try { if (Inst21 <= 1000 && typeof (Object.prop2) != "undefined") {_RecordType("<735,747,25>",(Object.prop2)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<735,741,25>",(Object)); Inst22++; } } catch(e) {}

  (function () {
    'use strict';

    for (var _strvar0 in Object) {
try { if (Inst27 <= 1000 && typeof (_strvar0) != "undefined") {_RecordType("<894,902,34>",(_strvar0)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<906,912,34>",(Object)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (func0) != "undefined") {_RecordType("<951,956,35>",(func0)); Inst32++; } } catch(e) {}
      Object.prototype[_strvar0] = func0();
try { if (Inst29 <= 1000 && typeof (Object.prototype[_strvar0]) != "undefined") {_RecordType("<922,948,35>",(Object.prototype[_strvar0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<922,938,35>",(Object.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<922,928,35>",(Object)); Inst31++; } } catch(e) {}
    }
  })();
} catch (e) {
  threw = true;
try { if (Inst34 <= 1000 && typeof (threw) != "undefined") {_RecordType("<990,995,39>",(threw)); Inst34++; } } catch(e) {}
}

try { if (Inst35 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1007,1018,42>",(console.log)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (console) != "undefined") {_RecordType("<1007,1014,42>",(console)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (threw) != "undefined") {_RecordType("<1019,1024,42>",(threw)); Inst37++; } } catch(e) {}
console.log(threw ? "Pass" : "Fail");

