var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(v) {
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<382,383,5>",(v)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<389,394,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<395,396,6>",(v)); Inst3++; } } catch(e) {}
  print(v + "");
}

var obj = [];
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<411,414,9>",(obj)); Inst4++; } } catch(e) {}
var proto_1 = [];
try { if (Inst5 <= 1000 && typeof (proto_1) != "undefined") {_RecordType("<425,432,10>",(proto_1)); Inst5++; } } catch(e) {}
var proto_2 = [];
try { if (Inst6 <= 1000 && typeof (proto_2) != "undefined") {_RecordType("<443,450,11>",(proto_2)); Inst6++; } } catch(e) {}
var count = 2;
try { if (Inst7 <= 1000 && typeof (count) != "undefined") {_RecordType("<461,466,12>",(count)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (Ctor1) != "undefined") {_RecordType("<482,487,14>",(Ctor1)); Inst8++; } } catch(e) {}
function Ctor1() {
  this.x = 0;
try { if (Inst9 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<494,500,15>",(this.x)); Inst9++; } } catch(e) {}
  this.y = 1;
try { if (Inst10 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<508,514,16>",(this.y)); Inst10++; } } catch(e) {}
}

try { if (Inst11 <= 1000 && typeof (Ctor2) != "undefined") {_RecordType("<532,537,19>",(Ctor2)); Inst11++; } } catch(e) {}
function Ctor2() {
  this.a = 0;
try { if (Inst12 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<544,550,20>",(this.a)); Inst12++; } } catch(e) {}
  this.b = 1;
try { if (Inst13 <= 1000 && typeof (this.b) != "undefined") {_RecordType("<558,564,21>",(this.b)); Inst13++; } } catch(e) {}
}

try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<582,586,24>",(test)); Inst14++; } } catch(e) {}
function test(o1, o2, ctor1, ctor2) {
try { if (Inst15 <= 1000 && typeof (o1) != "undefined") {_RecordType("<587,589,24>",(o1)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o2) != "undefined") {_RecordType("<591,593,24>",(o2)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctor1) != "undefined") {_RecordType("<595,600,24>",(ctor1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ctor2) != "undefined") {_RecordType("<602,607,24>",(ctor2)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (o1) != "undefined") {_RecordType("<629,631,25>",(o1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ctor1) != "undefined") {_RecordType("<643,648,25>",(ctor1)); Inst21++; } } catch(e) {}
  var isO1Ctor1 = o1 instanceof ctor1;
try { if (Inst19 <= 1000 && typeof (isO1Ctor1) != "undefined") {_RecordType("<617,626,25>",(isO1Ctor1)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (o2) != "undefined") {_RecordType("<668,670,26>",(o2)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ctor1) != "undefined") {_RecordType("<682,687,26>",(ctor1)); Inst24++; } } catch(e) {}
  var isO2Ctor1 = o2 instanceof ctor1;
try { if (Inst22 <= 1000 && typeof (isO2Ctor1) != "undefined") {_RecordType("<656,665,26>",(isO2Ctor1)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (write) != "undefined") {_RecordType("<691,696,27>",(write)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (isO1Ctor1) != "undefined") {_RecordType("<723,732,27>",(isO1Ctor1)); Inst26++; } } catch(e) {}
  write("o1 instanceof ctor1: " + isO1Ctor1);
try { if (Inst27 <= 1000 && typeof (write) != "undefined") {_RecordType("<737,742,28>",(write)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (isO2Ctor1) != "undefined") {_RecordType("<769,778,28>",(isO2Ctor1)); Inst28++; } } catch(e) {}
  write("o2 instanceof ctor1: " + isO2Ctor1);
}

try { if (Inst30 <= 1000 && typeof (Ctor1) != "undefined") {_RecordType("<797,802,31>",(Ctor1)); Inst30++; } } catch(e) {}
var o1 = new Ctor1();
try { if (Inst29 <= 1000 && typeof (o1) != "undefined") {_RecordType("<788,790,31>",(o1)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Ctor2) != "undefined") {_RecordType("<819,824,32>",(Ctor2)); Inst32++; } } catch(e) {}
var o2 = new Ctor2();
try { if (Inst31 <= 1000 && typeof (o2) != "undefined") {_RecordType("<810,812,32>",(o2)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<828,832,33>",(test)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o1) != "undefined") {_RecordType("<833,835,33>",(o1)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o2) != "undefined") {_RecordType("<837,839,33>",(o2)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Ctor1) != "undefined") {_RecordType("<841,846,33>",(Ctor1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Ctor2) != "undefined") {_RecordType("<848,853,33>",(Ctor2)); Inst37++; } } catch(e) {}
test(o1, o2, Ctor1, Ctor2);
Ctor1.prototype = {
  x: 10,
  y: 20
};
try { if (Inst38 <= 1000 && typeof (Ctor1.prototype) != "undefined") {_RecordType("<856,871,34>",(Ctor1.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Ctor1) != "undefined") {_RecordType("<856,861,34>",(Ctor1)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<896,900,38>",(test)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (o1) != "undefined") {_RecordType("<901,903,38>",(o1)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o2) != "undefined") {_RecordType("<905,907,38>",(o2)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Ctor1) != "undefined") {_RecordType("<909,914,38>",(Ctor1)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Ctor2) != "undefined") {_RecordType("<916,921,38>",(Ctor2)); Inst44++; } } catch(e) {}
test(o1, o2, Ctor1, Ctor2);

