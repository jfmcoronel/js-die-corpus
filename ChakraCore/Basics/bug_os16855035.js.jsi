var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// With -useparserstatecache -force:deferparse -force:redeferral -CollectGarbage we should not hit an AV
var glo;
try { if (Inst0 <= 1000 && typeof (glo) != "undefined") {_RecordType("<476,479,6>",(glo)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<491,495,8>",(test)); Inst1++; } } catch(e) {}
function test() {
try { if (Inst2 <= 1000 && typeof (nested1) != "undefined") {_RecordType("<511,518,9>",(nested1)); Inst2++; } } catch(e) {}
  function nested1(param2) {
try { if (Inst3 <= 1000 && typeof (param2) != "undefined") {_RecordType("<519,525,9>",(param2)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (nested2) != "undefined") {_RecordType("<542,549,10>",(nested2)); Inst4++; } } catch(e) {}
    function nested2() {
try { if (Inst5 <= 1000 && typeof (param2) != "undefined") {_RecordType("<567,573,11>",(param2)); Inst5++; } } catch(e) {}
      return param2;
    }

try { if (Inst6 <= 1000 && typeof (escape) != "undefined") {_RecordType("<586,592,14>",(escape)); Inst6++; } } catch(e) {}
    escape();
    return 'pass';
  }

try { if (Inst7 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<622,634,18>",(WScript.Echo)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<622,629,18>",(WScript)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (nested1) != "undefined") {_RecordType("<635,642,18>",(nested1)); Inst9++; } } catch(e) {}
  WScript.Echo(nested1());

try { if (Inst10 <= 1000 && typeof (blah) != "undefined") {_RecordType("<659,663,20>",(blah)); Inst10++; } } catch(e) {}
  function blah() {
    return 'pass';
  }

try { if (Inst11 <= 1000 && typeof (escape) != "undefined") {_RecordType("<703,709,24>",(escape)); Inst11++; } } catch(e) {}
  function escape() {
try { if (Inst13 <= 1000 && typeof (blah) != "undefined") {_RecordType("<724,728,25>",(blah)); Inst13++; } } catch(e) {}
    glo = blah;
try { if (Inst12 <= 1000 && typeof (glo) != "undefined") {_RecordType("<718,721,25>",(glo)); Inst12++; } } catch(e) {}
  }
}

try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<737,741,29>",(test)); Inst14++; } } catch(e) {}
test("test3");
try { if (Inst15 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<752,764,30>",(WScript.Echo)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<752,759,30>",(WScript)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (glo) != "undefined") {_RecordType("<765,768,30>",(glo)); Inst17++; } } catch(e) {}
WScript.Echo(glo());
try { if (Inst18 <= 1000 && typeof (CollectGarbage) != "undefined") {_RecordType("<773,787,31>",(CollectGarbage)); Inst18++; } } catch(e) {}
CollectGarbage();
try { if (Inst19 <= 1000 && typeof (test) != "undefined") {_RecordType("<791,795,32>",(test)); Inst19++; } } catch(e) {}
test("test1");

