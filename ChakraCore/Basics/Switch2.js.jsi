var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var x = {
  i: 1,
  j: 2,
  k: 3
};
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,5>",(x)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (x.i) != "undefined") {_RecordType("<412,415,11>",(x.i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<412,413,11>",(x)); Inst2++; } } catch(e) {}
switch (x.i) {
  case "1":
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<435,440,13>",(print)); Inst3++; } } catch(e) {}
    print("error - found \"1\"");
    break;

  default:
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<492,497,17>",(print)); Inst4++; } } catch(e) {}
    print("error - found default");
    break;

  case 1.000000001:
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<560,565,21>",(print)); Inst5++; } } catch(e) {}
    print("error - found 1.000000001");
    break;

  case 1:
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<622,627,25>",(print)); Inst6++; } } catch(e) {}
    print("found 1");
    break;
}

try { if (Inst7 <= 1000 && typeof (x.q) != "undefined") {_RecordType("<662,665,29>",(x.q)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<662,663,29>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<676,685,30>",(undefined)); Inst9++; } } catch(e) {}
switch (x.q) {
  case undefined:
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<691,696,31>",(print)); Inst10++; } } catch(e) {}
    print("found undefined");
    break;

  default:
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<744,749,35>",(print)); Inst11++; } } catch(e) {}
    print("found a value");
}

x.f = function () {
try { if (Inst14 <= 1000 && typeof (this.j) != "undefined") {_RecordType("<793,799,39>",(this.j)); Inst14++; } } catch(e) {}
  this.j++;
try { if (Inst15 <= 1000 && typeof (this.j) != "undefined") {_RecordType("<812,818,40>",(this.j)); Inst15++; } } catch(e) {}
  return this.j;
};
try { if (Inst12 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<771,774,38>",(x.f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<771,772,38>",(x)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (q) != "undefined") {_RecordType("<824,825,43>",(q)); Inst16++; } } catch(e) {}
q();

try { if (Inst17 <= 1000 && typeof (q) != "undefined") {_RecordType("<839,840,45>",(q)); Inst17++; } } catch(e) {}
function q() {
try { if (Inst18 <= 1000 && typeof (x.j) != "undefined") {_RecordType("<855,858,46>",(x.j)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<855,856,46>",(x)); Inst19++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x.f) != "undefined") {_RecordType("<930,933,51>",(x.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<930,931,51>",(x)); Inst22++; } } catch(e) {}
  switch (x.j) {
    case 1:
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<880,885,48>",(print)); Inst20++; } } catch(e) {}
      print("error - found 1");
      return;

    case x.f():
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<943,948,52>",(print)); Inst23++; } } catch(e) {}
      print("error - found x.f()");
      return;

    case 2:
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<1006,1011,56>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x.j) != "undefined") {_RecordType("<1032,1035,56>",(x.j)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<1032,1033,56>",(x)); Inst26++; } } catch(e) {}
      print("found 2, x.j = " + x.j);
      return;

    case 3:
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<1071,1076,60>",(print)); Inst27++; } } catch(e) {}
      print("error - found 3");
      return;
  }
}

try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1130,1136,65>",(Object)); Inst29++; } } catch(e) {}
var y = new Object();
try { if (Inst28 <= 1000 && typeof (y) != "undefined") {_RecordType("<1122,1123,65>",(y)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<1146,1147,66>",(x)); Inst32++; } } catch(e) {}
y.z = x;
try { if (Inst30 <= 1000 && typeof (y.z) != "undefined") {_RecordType("<1140,1143,66>",(y.z)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<1140,1141,66>",(y)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<1155,1156,67>",(x)); Inst35++; } } catch(e) {}
y.w = x;
try { if (Inst33 <= 1000 && typeof (y.w) != "undefined") {_RecordType("<1149,1152,67>",(y.w)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (y) != "undefined") {_RecordType("<1149,1150,67>",(y)); Inst34++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<1167,1168,69>",(x)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (y.w) != "undefined") {_RecordType("<1179,1182,70>",(y.w)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<1179,1180,70>",(y)); Inst38++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (y.z) != "undefined") {_RecordType("<1227,1230,74>",(y.z)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (y) != "undefined") {_RecordType("<1227,1228,74>",(y)); Inst41++; } } catch(e) {}
switch (x) {
  case y.w:
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<1188,1193,71>",(print)); Inst39++; } } catch(e) {}
    print("found y.w");
    break;

  case y.z:
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1236,1241,75>",(print)); Inst42++; } } catch(e) {}
    print("found y.z");
    break;
}

