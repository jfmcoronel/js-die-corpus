var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var x = 0;
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,5>",(x)); Inst0++; } } catch(e) {}
var y = 1;
try { if (Inst1 <= 1000 && typeof (y) != "undefined") {_RecordType("<382,383,6>",(y)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<397,398,7>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<402,407,7>",(print)); Inst4++; } } catch(e) {}
var z = x && print("Should have short-circuited '&&' (1)");
try { if (Inst2 <= 1000 && typeof (z) != "undefined") {_RecordType("<393,394,7>",(z)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<449,454,8>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (z) != "undefined") {_RecordType("<465,466,8>",(z)); Inst6++; } } catch(e) {}
print("z == " + z + " (2)");
try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<482,483,9>",(y)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<487,492,9>",(print)); Inst9++; } } catch(e) {}
z = y || print("Should have short-circuited '||' (3)");
try { if (Inst7 <= 1000 && typeof (z) != "undefined") {_RecordType("<478,479,9>",(z)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<534,539,10>",(print)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (z) != "undefined") {_RecordType("<550,551,10>",(z)); Inst11++; } } catch(e) {}
print("z == " + z + " (4)");
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<567,568,11>",(y)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<572,577,11>",(print)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (z) != "undefined") {_RecordType("<588,589,11>",(z)); Inst15++; } } catch(e) {}
z = y && print("z == " + z + " (5)");
try { if (Inst12 <= 1000 && typeof (z) != "undefined") {_RecordType("<563,564,11>",(z)); Inst12++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<605,606,12>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<610,615,12>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (z) != "undefined") {_RecordType("<626,627,12>",(z)); Inst19++; } } catch(e) {}
z = x || print("z == " + z + " (6)");
try { if (Inst16 <= 1000 && typeof (z) != "undefined") {_RecordType("<601,602,12>",(z)); Inst16++; } } catch(e) {}
z = 1;
try { if (Inst20 <= 1000 && typeof (z) != "undefined") {_RecordType("<639,640,13>",(z)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<651,652,15>",(x)); Inst21++; } } catch(e) {}
if (x || !(z = 0)) {
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<670,675,16>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (z) != "undefined") {_RecordType("<686,687,16>",(z)); Inst24++; } } catch(e) {}
  print("z == " + z + " (7)");
}
try { if (Inst22 <= 1000 && typeof (z) != "undefined") {_RecordType("<658,659,15>",(z)); Inst22++; } } catch(e) {}

z = 2;
try { if (Inst25 <= 1000 && typeof (z) != "undefined") {_RecordType("<702,703,19>",(z)); Inst25++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<714,715,21>",(y)); Inst26++; } } catch(e) {}
if (y && !(z = 0)) {
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<733,738,22>",(print)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (z) != "undefined") {_RecordType("<749,750,22>",(z)); Inst29++; } } catch(e) {}
  print("z == " + z + " (8)");
}
try { if (Inst27 <= 1000 && typeof (z) != "undefined") {_RecordType("<721,722,21>",(z)); Inst27++; } } catch(e) {}

z = 0;
try { if (Inst30 <= 1000 && typeof (z) != "undefined") {_RecordType("<765,766,25>",(z)); Inst30++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<778,779,27>",(y)); Inst31++; } } catch(e) {}
if (!y && (z = 3)) {
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<796,801,28>",(print)); Inst33++; } } catch(e) {}
  print("Should not be here (9)");
}
try { if (Inst32 <= 1000 && typeof (z) != "undefined") {_RecordType("<784,785,27>",(z)); Inst32++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<832,837,31>",(print)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (z) != "undefined") {_RecordType("<848,849,31>",(z)); Inst35++; } } catch(e) {}
print("z == " + z + " (10)");
z = 0;
try { if (Inst36 <= 1000 && typeof (z) != "undefined") {_RecordType("<862,863,32>",(z)); Inst36++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<875,876,34>",(x)); Inst37++; } } catch(e) {}
if (!x || (z = 4)) {
try { if (Inst39 <= 1000 && typeof (print) != "undefined") {_RecordType("<893,898,35>",(print)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<909,910,35>",(z)); Inst40++; } } catch(e) {}
  print("z == " + z + " (11)");
}
try { if (Inst38 <= 1000 && typeof (z) != "undefined") {_RecordType("<881,882,34>",(z)); Inst38++; } } catch(e) {}

