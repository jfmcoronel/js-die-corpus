var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var x = {
  a: 0,
  b: 10,
  c: 20
};
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,5>",(x)); Inst0++; } } catch(e) {}

for (i in x) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<411,412,11>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<416,417,11>",(x)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<423,428,12>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,12>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<441,445,12>",(x[i])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<441,442,12>",(x)); Inst6++; } } catch(e) {}
  print(i + " = " + x[i]);
}

try { if (Inst7 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<458,461,15>",(x.b)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<458,459,15>",(x)); Inst8++; } } catch(e) {}
delete x.b;

for (i in x) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<469,470,17>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<474,475,17>",(x)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<481,486,18>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<487,488,18>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<499,503,18>",(x[i])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<499,500,18>",(x)); Inst14++; } } catch(e) {}
  print(i + " = " + x[i]);
}

x.b = 23;
try { if (Inst15 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<509,512,21>",(x.b)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<509,510,21>",(x)); Inst16++; } } catch(e) {}

for (i in x) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<525,526,23>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<530,531,23>",(x)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<537,542,24>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<543,544,24>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<555,559,24>",(x[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<555,556,24>",(x)); Inst22++; } } catch(e) {}
  print(i + " = " + x[i]);
}

try { if (Inst23 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<572,575,27>",(x.b)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<572,573,27>",(x)); Inst24++; } } catch(e) {}
delete x.b;

for (i in x) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<583,584,29>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<588,589,29>",(x)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<595,600,30>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<601,602,30>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x[i]) != "undefined") {_RecordType("<613,617,30>",(x[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<613,614,30>",(x)); Inst30++; } } catch(e) {}
  print(i + " = " + x[i]);
}

