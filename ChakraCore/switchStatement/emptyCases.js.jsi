var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

/*
 ***************************UNIT TEST FOR SWITCH CASE OPTIMIZATION*****************************
 *   Empty case statements
 */

/*
 ***************************************TEST 1*****************************************
 *  For empty test cases and an object present in the mid of empty test cases
 *
 */
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<684,685,16>",(f)); Inst0++; } } catch(e) {}
function f(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<686,687,16>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<701,702,17>",(x)); Inst2++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<969,970,37>",(f)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<1093,1094,44>",(f)); Inst9++; } } catch(e) {}
  switch (x) {
    case 1:
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<724,729,19>",(print)); Inst3++; } } catch(e) {}
      print(1);
      break;

    case 2:
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<766,771,23>",(print)); Inst4++; } } catch(e) {}
      print(2);
      break;

    case 3:
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<808,813,27>",(print)); Inst5++; } } catch(e) {}
      print(3);
      break;

    case 4:
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<850,855,31>",(print)); Inst6++; } } catch(e) {}
      print(4);
      break;
    // empty integer case statements intercepted by an object

    case 5:
    case 6:
    case f: // object case - optimization should break the flow here

    case 8:
    case 9:
try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<1060,1065,41>",(print)); Inst8++; } } catch(e) {}
      print(9);
      break;

    case f:
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<1102,1107,45>",(print)); Inst10++; } } catch(e) {}
      print(10);
      break;

    case 11:
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<1146,1151,49>",(print)); Inst11++; } } catch(e) {}
      print(11);
      break;

    case 12:
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<1190,1195,53>",(print)); Inst12++; } } catch(e) {}
      print(12);
      break;
    //Following four case statements are empty case statements with just a single case block
    //(optimizer will generate special instructions for such kind)

    case 13:
    case 14:
    case 15:
    case 16:
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<1433,1438,62>",(print)); Inst13++; } } catch(e) {}
      print(16);
      break;

    case 17:
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<1477,1482,66>",(print)); Inst14++; } } catch(e) {}
      print(17);
      break;

    case 18:
try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<1521,1526,70>",(print)); Inst15++; } } catch(e) {}
      print(18);
      break;

    case 19:
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<1565,1570,74>",(print)); Inst16++; } } catch(e) {}
      print(19);
      break;

    case 20:
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<1609,1614,78>",(print)); Inst17++; } } catch(e) {}
      print(20);

    default:
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<1640,1645,81>",(print)); Inst18++; } } catch(e) {}
      print('default');
      break;
  }
}

for (i = 1; i < 20; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<1683,1684,86>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1690,1691,86>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<1698,1699,86>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<1707,1708,87>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<1709,1710,87>",(i)); Inst23++; } } catch(e) {}
  f(i);
}

try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<1716,1717,90>",(f)); Inst24++; } } catch(e) {}
f(100); //default

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<1735,1736,92>",(f)); Inst25++; } } catch(e) {}
f(0); //default

/*
 *****************************************TEST 2****************************************************
 *   Test for case statements values in unsorted order
 *   Set of Empty case statements are placed on the top, middle and at the bottom of the switch statement
 */

try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<2031,2032,100>",(g)); Inst26++; } } catch(e) {}
function g(x) {
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<2033,2034,100>",(x)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<2048,2049,101>",(x)); Inst28++; } } catch(e) {}
  switch (x) {
    /*empty case statements*/
    case 20:
    case 19:
    case 18:
    case 17:
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<2141,2146,107>",(print)); Inst29++; } } catch(e) {}
      print(17);
      break;

    case 16:
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<2185,2190,111>",(print)); Inst30++; } } catch(e) {}
      print(16);
      break;

    case 15:
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<2229,2234,115>",(print)); Inst31++; } } catch(e) {}
      print(15);
      break;

    case 14:
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<2273,2278,119>",(print)); Inst32++; } } catch(e) {}
      print(14);
      break;

    case 13:
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<2317,2322,123>",(print)); Inst33++; } } catch(e) {}
      print(13);
      break;

    /*empty case statements*/

    case 12:
    case 11:
    case 10:
    case 9:
try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<2430,2435,132>",(print)); Inst34++; } } catch(e) {}
      print(9);
      break;

    case 8:
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<2472,2477,136>",(print)); Inst35++; } } catch(e) {}
      print(8);
      break;

    case 7:
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<2514,2519,140>",(print)); Inst36++; } } catch(e) {}
      print(7);
      break;

    case 6:
try { if (Inst37 <= 1000 && typeof (print) != "undefined") {_RecordType("<2556,2561,144>",(print)); Inst37++; } } catch(e) {}
      print(6);
      break;

    /*empty case statements*/

    case 5:
    case 4:
    case 3:
    case 2:
    case 1:
    /* No default statement and no break at the end of the switch */

  }
}

try { if (Inst38 <= 1000 && typeof (g) != "undefined") {_RecordType("<2748,2749,159>",(g)); Inst38++; } } catch(e) {}
g(1);
try { if (Inst39 <= 1000 && typeof (g) != "undefined") {_RecordType("<2754,2755,160>",(g)); Inst39++; } } catch(e) {}
g(2);
try { if (Inst40 <= 1000 && typeof (g) != "undefined") {_RecordType("<2760,2761,161>",(g)); Inst40++; } } catch(e) {}
g(3);
try { if (Inst41 <= 1000 && typeof (g) != "undefined") {_RecordType("<2766,2767,162>",(g)); Inst41++; } } catch(e) {}
g(4);
try { if (Inst42 <= 1000 && typeof (g) != "undefined") {_RecordType("<2772,2773,163>",(g)); Inst42++; } } catch(e) {}
g(5);
try { if (Inst43 <= 1000 && typeof (g) != "undefined") {_RecordType("<2778,2779,164>",(g)); Inst43++; } } catch(e) {}
g(6);
try { if (Inst44 <= 1000 && typeof (g) != "undefined") {_RecordType("<2784,2785,165>",(g)); Inst44++; } } catch(e) {}
g(7);
try { if (Inst45 <= 1000 && typeof (g) != "undefined") {_RecordType("<2790,2791,166>",(g)); Inst45++; } } catch(e) {}
g(8);
try { if (Inst46 <= 1000 && typeof (g) != "undefined") {_RecordType("<2796,2797,167>",(g)); Inst46++; } } catch(e) {}
g(9);
try { if (Inst47 <= 1000 && typeof (g) != "undefined") {_RecordType("<2802,2803,168>",(g)); Inst47++; } } catch(e) {}
g(10);
try { if (Inst48 <= 1000 && typeof (g) != "undefined") {_RecordType("<2809,2810,169>",(g)); Inst48++; } } catch(e) {}
g(11);
try { if (Inst49 <= 1000 && typeof (g) != "undefined") {_RecordType("<2816,2817,170>",(g)); Inst49++; } } catch(e) {}
g(12);
try { if (Inst50 <= 1000 && typeof (g) != "undefined") {_RecordType("<2823,2824,171>",(g)); Inst50++; } } catch(e) {}
g(13);
try { if (Inst51 <= 1000 && typeof (g) != "undefined") {_RecordType("<2830,2831,172>",(g)); Inst51++; } } catch(e) {}
g(14);
try { if (Inst52 <= 1000 && typeof (g) != "undefined") {_RecordType("<2837,2838,173>",(g)); Inst52++; } } catch(e) {}
g(15);
try { if (Inst53 <= 1000 && typeof (g) != "undefined") {_RecordType("<2844,2845,174>",(g)); Inst53++; } } catch(e) {}
g(16);
try { if (Inst54 <= 1000 && typeof (g) != "undefined") {_RecordType("<2851,2852,175>",(g)); Inst54++; } } catch(e) {}
g(17);
try { if (Inst55 <= 1000 && typeof (g) != "undefined") {_RecordType("<2858,2859,176>",(g)); Inst55++; } } catch(e) {}
g(18);
try { if (Inst56 <= 1000 && typeof (g) != "undefined") {_RecordType("<2865,2866,177>",(g)); Inst56++; } } catch(e) {}
g(19);
try { if (Inst57 <= 1000 && typeof (g) != "undefined") {_RecordType("<2872,2873,178>",(g)); Inst57++; } } catch(e) {}
g(20);
try { if (Inst58 <= 1000 && typeof (g) != "undefined") {_RecordType("<2879,2880,179>",(g)); Inst58++; } } catch(e) {}
g(100);
try { if (Inst59 <= 1000 && typeof (g) != "undefined") {_RecordType("<2887,2888,180>",(g)); Inst59++; } } catch(e) {}
g(0);
/*
 ********************************TEST 3********************************
 ** All empty case statements
 */

try { if (Inst60 <= 1000 && typeof (h) != "undefined") {_RecordType("<3012,3013,186>",(h)); Inst60++; } } catch(e) {}
function h(x) {
try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<3014,3015,186>",(x)); Inst61++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<3029,3030,187>",(x)); Inst62++; } } catch(e) {}
  switch (x) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    default:
try { if (Inst63 <= 1000 && typeof (print) != "undefined") {_RecordType("<3252,3257,205>",(print)); Inst63++; } } catch(e) {}
      print('default');
      break;
  }
}

for (i = 0; i <= 13; i++) {
try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<3295,3296,210>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<3302,3303,210>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<3311,3312,210>",(i)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (h) != "undefined") {_RecordType("<3320,3321,211>",(h)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<3322,3323,211>",(i)); Inst68++; } } catch(e) {}
  h(i);
}

try { if (Inst69 <= 1000 && typeof (h) != "undefined") {_RecordType("<3329,3330,214>",(h)); Inst69++; } } catch(e) {}
h('hello');

for (i = 14; i <= 18; i++) {
try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<3347,3348,216>",(i)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<3355,3356,216>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<3364,3365,216>",(i)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (h) != "undefined") {_RecordType("<3373,3374,217>",(h)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (i) != "undefined") {_RecordType("<3375,3376,217>",(i)); Inst74++; } } catch(e) {}
  h(i);
}

