var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<382,383,5>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<397,398,6>",(a)); Inst2++; } } catch(e) {}
  switch (a) {
    //JumpTable
    case 14:
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<437,442,9>",(print)); Inst3++; } } catch(e) {}
      print('14');
      break;

    case 16:
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<483,488,13>",(print)); Inst4++; } } catch(e) {}
      print('16');
      break;
    //Binary Tree

    case 30:
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<547,552,18>",(print)); Inst5++; } } catch(e) {}
      print('30');
      break;

    case 40:
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<593,598,22>",(print)); Inst6++; } } catch(e) {}
      print('40');
      break;

    case 50:
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<639,644,26>",(print)); Inst7++; } } catch(e) {}
      print('50');
      break;
    //JumpTable

    case 61:
try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<701,706,31>",(print)); Inst8++; } } catch(e) {}
      print('61');
      break;

    case 62:
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<747,752,35>",(print)); Inst9++; } } catch(e) {}
      print('62');
      break;
    //JumpTable

    case 1:
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<808,813,40>",(print)); Inst10++; } } catch(e) {}
      print('1');
      break;

    case 3:
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<852,857,44>",(print)); Inst11++; } } catch(e) {}
      print('3');
      break;

    default:
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<897,902,48>",(print)); Inst12++; } } catch(e) {}
      print('default');
  }
}

try { if (Inst13 <= 1000 && typeof (test0) != "undefined") {_RecordType("<922,927,52>",(test0)); Inst13++; } } catch(e) {}
test0(1);
try { if (Inst14 <= 1000 && typeof (test0) != "undefined") {_RecordType("<932,937,53>",(test0)); Inst14++; } } catch(e) {}
test0(1);
try { if (Inst15 <= 1000 && typeof (test0) != "undefined") {_RecordType("<942,947,54>",(test0)); Inst15++; } } catch(e) {}
test0(3);
try { if (Inst16 <= 1000 && typeof (test0) != "undefined") {_RecordType("<952,957,55>",(test0)); Inst16++; } } catch(e) {}
test0(14);
try { if (Inst17 <= 1000 && typeof (test0) != "undefined") {_RecordType("<963,968,56>",(test0)); Inst17++; } } catch(e) {}
test0(16);
try { if (Inst18 <= 1000 && typeof (test0) != "undefined") {_RecordType("<974,979,57>",(test0)); Inst18++; } } catch(e) {}
test0(30);
try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<985,990,58>",(test0)); Inst19++; } } catch(e) {}
test0(40);
try { if (Inst20 <= 1000 && typeof (test0) != "undefined") {_RecordType("<996,1001,59>",(test0)); Inst20++; } } catch(e) {}
test0(50);
try { if (Inst21 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1007,1012,60>",(test0)); Inst21++; } } catch(e) {}
test0(61);
try { if (Inst22 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1018,1023,61>",(test0)); Inst22++; } } catch(e) {}
test0(62);
try { if (Inst23 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1029,1034,62>",(test0)); Inst23++; } } catch(e) {}
test0(10);

