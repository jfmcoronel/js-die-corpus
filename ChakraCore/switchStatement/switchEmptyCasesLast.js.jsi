var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

/*
 ***************PERF TEST********************
 * Test for cases with all empty blocks.
 */
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<471,472,10>",(f)); Inst0++; } } catch(e) {}
function f(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<473,474,10>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<488,489,11>",(x)); Inst2++; } } catch(e) {}
  switch (x) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
  }
}

try { if (Inst4 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1047,1051,55>",(Date)); Inst4++; } } catch(e) {}
var _switchStatementStartDate = new Date();
try { if (Inst3 <= 1000 && typeof (_switchStatementStartDate) != "undefined") {_RecordType("<1015,1040,55>",(_switchStatementStartDate)); Inst3++; } } catch(e) {}

for (i = 0; i < 10000000; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<1061,1062,57>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<1068,1069,57>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<1082,1083,57>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<1091,1092,58>",(f)); Inst8++; } } catch(e) {}
  f(40);
}

try { if (Inst10 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1136,1140,61>",(Date)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (_switchStatementStartDate) != "undefined") {_RecordType("<1145,1170,61>",(_switchStatementStartDate)); Inst11++; } } catch(e) {}
var _switchStatementInterval = new Date() - _switchStatementStartDate;
try { if (Inst9 <= 1000 && typeof (_switchStatementInterval) != "undefined") {_RecordType("<1105,1129,61>",(_switchStatementInterval)); Inst9++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<1173,1178,63>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (_switchStatementInterval) != "undefined") {_RecordType("<1192,1216,63>",(_switchStatementInterval)); Inst13++; } } catch(e) {}
print("### TIME:", _switchStatementInterval, "ms");

