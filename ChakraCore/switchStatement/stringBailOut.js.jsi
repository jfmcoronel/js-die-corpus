var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

/*
 *******************************UNIT TEST FOR SWITCH CASE OPTIMIZATION*******************************
 * Test with two switch statements.
 */
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<522,523,10>",(f)); Inst0++; } } catch(e) {}
function f(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<524,525,10>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<527,528,10>",(y)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<542,543,11>",(x)); Inst3++; } } catch(e) {}
  switch (x) {
    case 'abc':
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<569,574,13>",(print)); Inst4++; } } catch(e) {}
      print('abc');
      break;

    case 'def':
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<619,624,17>",(print)); Inst5++; } } catch(e) {}
      print('def');
      break;

    case 'ghi':
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<669,674,21>",(print)); Inst6++; } } catch(e) {}
      print('ghi');
      break;

    case 'jkl':
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<719,724,25>",(print)); Inst7++; } } catch(e) {}
      print('jkl');
      break;

    case 'mno':
try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<769,774,29>",(print)); Inst8++; } } catch(e) {}
      print('mno');
      break;

    case 'pqr':
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<819,824,33>",(print)); Inst9++; } } catch(e) {}
      print('pqr');
      break;

    case 'stu':
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<869,874,37>",(print)); Inst10++; } } catch(e) {}
      print('stu');
      break;

    case 'vxy':
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<919,924,41>",(print)); Inst11++; } } catch(e) {}
      print('vxy');
      break;

    case 'z':
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<967,972,45>",(print)); Inst12++; } } catch(e) {}
      print('z');
      break;

    default:
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<1012,1017,49>",(print)); Inst13++; } } catch(e) {}
      print('default');
      break;
  }
}

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<1050,1051,54>",(f)); Inst14++; } } catch(e) {}
f('abc');
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<1060,1061,55>",(f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1066,1072,55>",(Object)); Inst16++; } } catch(e) {}
f(new Object());
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<1077,1078,56>",(f)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1083,1089,56>",(Object)); Inst18++; } } catch(e) {}
f(new Object());

