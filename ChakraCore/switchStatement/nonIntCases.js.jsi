var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

/*
 ******************************UNIT TEST FOR SWITCH CASE OPTIMIZATION*****************************
 */

/*
 ************************************************ TEST 1**********************************************
 ***Test - all the case statements containing non-integer items
 */
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<658,659,14>",(f)); Inst0++; } } catch(e) {}
function f(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<660,661,14>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<675,676,15>",(x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<689,690,16>",(f)); Inst3++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<731,732,20>",(f)); Inst5++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<773,774,24>",(f)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<815,816,28>",(f)); Inst9++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<857,858,32>",(f)); Inst11++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<899,900,36>",(f)); Inst13++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<941,942,40>",(f)); Inst15++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<983,984,44>",(f)); Inst17++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<1025,1026,48>",(f)); Inst19++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<1067,1068,52>",(f)); Inst21++; } } catch(e) {}
  switch (x) {
    case f:
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<698,703,17>",(print)); Inst4++; } } catch(e) {}
      print(1);
      break;

    case f:
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<740,745,21>",(print)); Inst6++; } } catch(e) {}
      print(2);
      break;

    case f:
try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<782,787,25>",(print)); Inst8++; } } catch(e) {}
      print(3);
      break;

    case f:
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<824,829,29>",(print)); Inst10++; } } catch(e) {}
      print(4);
      break;

    case f:
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<866,871,33>",(print)); Inst12++; } } catch(e) {}
      print(5);
      break;

    case f:
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<908,913,37>",(print)); Inst14++; } } catch(e) {}
      print(6);
      break;

    case f:
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<950,955,41>",(print)); Inst16++; } } catch(e) {}
      print(7);
      break;

    case f:
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<992,997,45>",(print)); Inst18++; } } catch(e) {}
      print(8);
      break;

    case f:
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<1034,1039,49>",(print)); Inst20++; } } catch(e) {}
      print(9);
      break;

    case f:
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<1076,1081,53>",(print)); Inst22++; } } catch(e) {}
      print(10);
      break;

    default:
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<1120,1125,57>",(print)); Inst23++; } } catch(e) {}
      print('first switch default');
      break;
  }
}

for (i = 0; i < 5; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1176,1177,62>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1183,1184,62>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1190,1191,62>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<1199,1200,63>",(f)); Inst27++; } } catch(e) {}
  f(11);
}
/*
 ************************************************ TEST 2**********************************************
 *Test with mixed type in case statements - Integers, objects, and expressions
 */


try { if (Inst28 <= 1000 && typeof (g) != "undefined") {_RecordType("<1408,1409,71>",(g)); Inst28++; } } catch(e) {}
function g(x) {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<1410,1411,71>",(x)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<1425,1426,72>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<1439,1440,73>",(f)); Inst31++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<1523,1524,81>",(f)); Inst34++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<1703,1704,97>",(f)); Inst39++; } } catch(e) {}
  switch (x) {
    case f:
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1448,1453,74>",(print)); Inst32++; } } catch(e) {}
      print(1);
      break;

    case 2:
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<1490,1495,78>",(print)); Inst33++; } } catch(e) {}
      print(2);
      break;

    case f:
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<1532,1537,82>",(print)); Inst35++; } } catch(e) {}
      print(3);
      break;

    case 4:
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<1574,1579,86>",(print)); Inst36++; } } catch(e) {}
      print(4);
      break;

    case 'hello':
try { if (Inst37 <= 1000 && typeof (print) != "undefined") {_RecordType("<1622,1627,90>",(print)); Inst37++; } } catch(e) {}
      print('hello');
      break;

    case 5:
try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<1670,1675,94>",(print)); Inst38++; } } catch(e) {}
      print(5);
      break;

    case f:
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<1712,1717,98>",(print)); Inst40++; } } catch(e) {}
      print('f');
      break;

    case 6:
try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<1756,1761,102>",(print)); Inst41++; } } catch(e) {}
      print(6);
      break;

    case 7:
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1798,1803,106>",(print)); Inst42++; } } catch(e) {}
      print(7);
      break;

    case 7 + 5:
try { if (Inst43 <= 1000 && typeof (print) != "undefined") {_RecordType("<1844,1849,110>",(print)); Inst43++; } } catch(e) {}
      print(13);
      break;

    case 8:
try { if (Inst44 <= 1000 && typeof (print) != "undefined") {_RecordType("<1887,1892,114>",(print)); Inst44++; } } catch(e) {}
      print(8);
      break;

    default:
try { if (Inst45 <= 1000 && typeof (print) != "undefined") {_RecordType("<1930,1935,118>",(print)); Inst45++; } } catch(e) {}
      print('second switch default');
      break;
  }
}

try { if (Inst46 <= 1000 && typeof (g) != "undefined") {_RecordType("<1982,1983,123>",(g)); Inst46++; } } catch(e) {}
g(1);
try { if (Inst47 <= 1000 && typeof (g) != "undefined") {_RecordType("<1988,1989,124>",(g)); Inst47++; } } catch(e) {}
g(2);
try { if (Inst48 <= 1000 && typeof (g) != "undefined") {_RecordType("<1994,1995,125>",(g)); Inst48++; } } catch(e) {}
g(3);
try { if (Inst49 <= 1000 && typeof (g) != "undefined") {_RecordType("<2000,2001,126>",(g)); Inst49++; } } catch(e) {}
g(8);
try { if (Inst50 <= 1000 && typeof (g) != "undefined") {_RecordType("<2006,2007,127>",(g)); Inst50++; } } catch(e) {}
g(5);
try { if (Inst51 <= 1000 && typeof (g) != "undefined") {_RecordType("<2012,2013,128>",(g)); Inst51++; } } catch(e) {}
g(13);
try { if (Inst52 <= 1000 && typeof (g) != "undefined") {_RecordType("<2019,2020,129>",(g)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2025,2031,129>",(Object)); Inst53++; } } catch(e) {}
g(new Object());

