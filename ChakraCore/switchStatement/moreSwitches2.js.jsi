var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

/*
 *******************************UNIT TEST FOR SWITCH CASE OPTIMIZATION*******************************
 *   Test for 3 switch cases bailing out during different times of the execution.
 */
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<568,569,10>",(f)); Inst0++; } } catch(e) {}
function f(x, y, z) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<570,571,10>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<573,574,10>",(y)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (z) != "undefined") {_RecordType("<576,577,10>",(z)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<591,592,11>",(x)); Inst4++; } } catch(e) {}
  switch (x) {
    case 1:
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<614,619,13>",(print)); Inst5++; } } catch(e) {}
      print(1);
      break;

    case 2:
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<656,661,17>",(print)); Inst6++; } } catch(e) {}
      print(2);
      break;

    case 3:
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<698,703,21>",(print)); Inst7++; } } catch(e) {}
      print(3);
      break;

    case 4:
try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<740,745,25>",(print)); Inst8++; } } catch(e) {}
      print(4);
      break;

    default:
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<783,788,29>",(print)); Inst9++; } } catch(e) {}
      print('default-x');
      break;
  }

try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<831,832,33>",(y)); Inst10++; } } catch(e) {}
  switch (y) {
    case 1:
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<854,859,35>",(print)); Inst11++; } } catch(e) {}
      print(1);
      break;

    case 2:
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<896,901,39>",(print)); Inst12++; } } catch(e) {}
      print(2);
      break;

    case 3:
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<938,943,43>",(print)); Inst13++; } } catch(e) {}
      print(3);
      break;

    case 4:
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<980,985,47>",(print)); Inst14++; } } catch(e) {}
      print(4);
      break;

    default:
try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<1023,1028,51>",(print)); Inst15++; } } catch(e) {}
      print('default-y');
      break;
  }

try { if (Inst16 <= 1000 && typeof (z) != "undefined") {_RecordType("<1071,1072,55>",(z)); Inst16++; } } catch(e) {}
  switch (z) {
    case 1:
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<1094,1099,57>",(print)); Inst17++; } } catch(e) {}
      print(1);
      break;

    default:
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<1137,1142,61>",(print)); Inst18++; } } catch(e) {}
      print('default-z');
      break;
  }
} //making the first switch to get profiled as object during first run in the interpreter


try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<1266,1267,67>",(f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1278,1284,67>",(Object)); Inst20++; } } catch(e) {}
f(1, 2, new Object());
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<1289,1290,68>",(f)); Inst21++; } } catch(e) {}
f(1, 2, 3);
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<1301,1302,69>",(f)); Inst22++; } } catch(e) {}
f(1, 2, 3);
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<1313,1314,70>",(f)); Inst23++; } } catch(e) {}
f(1, 2, 3);
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<1325,1326,71>",(f)); Inst24++; } } catch(e) {}
f(1, 2, 3); //making the second and third to bail out.

for (i = 0; i < 30; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1386,1387,73>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1393,1394,73>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1401,1402,73>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<1410,1411,74>",(f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1419,1425,74>",(Object)); Inst29++; } } catch(e) {}
  f(1, new Object(), 3);
try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<1435,1436,75>",(f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1441,1447,75>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1455,1461,75>",(Object)); Inst32++; } } catch(e) {}
  f(new Object(), new Object(), 3);
}

