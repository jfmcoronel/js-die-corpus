var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (print) != "undefined") {_RecordType("<367,372,5>",(print)); Inst0++; } } catch(e) {}
print("Checking for new Date() with DST issues: ");
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<419,424,6>",(print)); Inst1++; } } catch(e) {}
print("Backward loop starts");

for (var working = new Date(2014, 2, 1); working.getFullYear() > 1940;) {
try { if (Inst2 <= 1000 && typeof (working) != "undefined") {_RecordType("<460,467,8>",(working)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Date) != "undefined") {_RecordType("<474,478,8>",(Date)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (working.getFullYear) != "undefined") {_RecordType("<492,511,8>",(working.getFullYear)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (working) != "undefined") {_RecordType("<492,499,8>",(working)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (working.getDate) != "undefined") {_RecordType("<544,559,9>",(working.getDate)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (working) != "undefined") {_RecordType("<544,551,9>",(working)); Inst8++; } } catch(e) {}
  var dayOfMonth = working.getDate();
try { if (Inst6 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<531,541,9>",(dayOfMonth)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (working.getFullYear) != "undefined") {_RecordType("<580,599,10>",(working.getFullYear)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (working) != "undefined") {_RecordType("<580,587,10>",(working)); Inst11++; } } catch(e) {}
  var nextYear = working.getFullYear();
try { if (Inst9 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<569,577,10>",(nextYear)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (working.getMonth) != "undefined") {_RecordType("<621,637,11>",(working.getMonth)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (working) != "undefined") {_RecordType("<621,628,11>",(working)); Inst14++; } } catch(e) {}
  var nextMonth = working.getMonth();
try { if (Inst12 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<609,618,11>",(nextMonth)); Inst12++; } } catch(e) {}
  dayOfMonth -= 1;
try { if (Inst15 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<643,653,12>",(dayOfMonth)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Date) != "undefined") {_RecordType("<676,680,13>",(Date)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<681,689,13>",(nextYear)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<691,700,13>",(nextMonth)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<702,712,13>",(dayOfMonth)); Inst20++; } } catch(e) {}
  working = new Date(nextYear, nextMonth, dayOfMonth);
try { if (Inst16 <= 1000 && typeof (working) != "undefined") {_RecordType("<662,669,13>",(working)); Inst16++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (working.getHours) != "undefined") {_RecordType("<722,738,15>",(working.getHours)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (working) != "undefined") {_RecordType("<722,729,15>",(working)); Inst22++; } } catch(e) {}
  if (working.getHours() > 0) {
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<752,757,16>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (working) != "undefined") {_RecordType("<763,770,16>",(working)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<785,793,16>",(nextYear)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<802,811,16>",(nextMonth)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<820,830,16>",(dayOfMonth)); Inst27++; } } catch(e) {}
    print("" + working + "  from:" + nextYear + "," + nextMonth + "," + dayOfMonth + "");
try { if (Inst28 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<842,852,17>",(dayOfMonth)); Inst28++; } } catch(e) {}
    dayOfMonth--;
try { if (Inst30 <= 1000 && typeof (Date) != "undefined") {_RecordType("<874,878,18>",(Date)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<879,887,18>",(nextYear)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<889,898,18>",(nextMonth)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<900,910,18>",(dayOfMonth)); Inst33++; } } catch(e) {}
    working = new Date(nextYear, nextMonth, dayOfMonth); //skip over this date
try { if (Inst29 <= 1000 && typeof (working) != "undefined") {_RecordType("<860,867,18>",(working)); Inst29++; } } catch(e) {}
  }
}

try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<942,947,22>",(print)); Inst34++; } } catch(e) {}
print("Forwards loop starts");

for (var working = new Date(1940, 0, 0); working.getFullYear() < 2014;) {
try { if (Inst35 <= 1000 && typeof (working) != "undefined") {_RecordType("<983,990,24>",(working)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Date) != "undefined") {_RecordType("<997,1001,24>",(Date)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (working.getFullYear) != "undefined") {_RecordType("<1015,1034,24>",(working.getFullYear)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (working) != "undefined") {_RecordType("<1015,1022,24>",(working)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (working.getDate) != "undefined") {_RecordType("<1067,1082,25>",(working.getDate)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (working) != "undefined") {_RecordType("<1067,1074,25>",(working)); Inst41++; } } catch(e) {}
  var dayOfMonth = working.getDate();
try { if (Inst39 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<1054,1064,25>",(dayOfMonth)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (working.getFullYear) != "undefined") {_RecordType("<1103,1122,26>",(working.getFullYear)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (working) != "undefined") {_RecordType("<1103,1110,26>",(working)); Inst44++; } } catch(e) {}
  var nextYear = working.getFullYear();
try { if (Inst42 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<1092,1100,26>",(nextYear)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (working.getMonth) != "undefined") {_RecordType("<1144,1160,27>",(working.getMonth)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (working) != "undefined") {_RecordType("<1144,1151,27>",(working)); Inst47++; } } catch(e) {}
  var nextMonth = working.getMonth();
try { if (Inst45 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<1132,1141,27>",(nextMonth)); Inst45++; } } catch(e) {}
  dayOfMonth += 1;
try { if (Inst48 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<1166,1176,28>",(dayOfMonth)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1199,1203,29>",(Date)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<1204,1212,29>",(nextYear)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<1214,1223,29>",(nextMonth)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<1225,1235,29>",(dayOfMonth)); Inst53++; } } catch(e) {}
  working = new Date(nextYear, nextMonth, dayOfMonth);
try { if (Inst49 <= 1000 && typeof (working) != "undefined") {_RecordType("<1185,1192,29>",(working)); Inst49++; } } catch(e) {}

try { if (Inst54 <= 1000 && typeof (working.getHours) != "undefined") {_RecordType("<1245,1261,31>",(working.getHours)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (working) != "undefined") {_RecordType("<1245,1252,31>",(working)); Inst55++; } } catch(e) {}
  if (working.getHours() > 0) {
try { if (Inst56 <= 1000 && typeof (print) != "undefined") {_RecordType("<1275,1280,32>",(print)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (working) != "undefined") {_RecordType("<1286,1293,32>",(working)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<1308,1316,32>",(nextYear)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<1325,1334,32>",(nextMonth)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<1343,1353,32>",(dayOfMonth)); Inst60++; } } catch(e) {}
    print("" + working + "  from:" + nextYear + "," + nextMonth + "," + dayOfMonth + "");
try { if (Inst61 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<1365,1375,33>",(dayOfMonth)); Inst61++; } } catch(e) {}
    dayOfMonth++;
try { if (Inst63 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1397,1401,34>",(Date)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (nextYear) != "undefined") {_RecordType("<1402,1410,34>",(nextYear)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (nextMonth) != "undefined") {_RecordType("<1412,1421,34>",(nextMonth)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (dayOfMonth) != "undefined") {_RecordType("<1423,1433,34>",(dayOfMonth)); Inst66++; } } catch(e) {}
    working = new Date(nextYear, nextMonth, dayOfMonth); //skip over this date
try { if (Inst62 <= 1000 && typeof (working) != "undefined") {_RecordType("<1383,1390,34>",(working)); Inst62++; } } catch(e) {}
  }
}

try { if (Inst67 <= 1000 && typeof (print) != "undefined") {_RecordType("<1465,1470,38>",(print)); Inst67++; } } catch(e) {}
print("done.");

