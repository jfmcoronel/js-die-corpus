var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (CUT_NAME) != "undefined") {_RecordType("<376,384,5>",(CUT_NAME)); Inst0++; } } catch(e) {}
function CUT_NAME(str) {
try { if (Inst1 <= 1000 && typeof (str) != "undefined") {_RecordType("<385,388,5>",(str)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (str.replace("(PST)", "(Pacific Standard Time)").replace) != "undefined") {_RecordType("<401,456,6>",(str.replace("(PST)", "(Pacific Standard Time)").replace)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<401,412,6>",(str.replace)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (str) != "undefined") {_RecordType("<401,404,6>",(str)); Inst4++; } } catch(e) {}
  return str.replace("(PST)", "(Pacific Standard Time)").replace("(PDT)", "(Pacific Daylight Time)");
}

for (var i = 0; i < 4 * 60; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<506,507,9>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<513,514,9>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<525,526,9>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Date) != "undefined") {_RecordType("<546,550,10>",(Date)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<567,568,10>",(i)); Inst10++; } } catch(e) {}
  var d = new Date(2012, 2, 11, 0, i, 0);
try { if (Inst8 <= 1000 && typeof (d) != "undefined") {_RecordType("<538,539,10>",(d)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<576,581,11>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (CUT_NAME) != "undefined") {_RecordType("<582,590,11>",(CUT_NAME)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (d.toString) != "undefined") {_RecordType("<591,601,11>",(d.toString)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<591,592,11>",(d)); Inst14++; } } catch(e) {}
  print(CUT_NAME(d.toString()));
}

for (var i = 0; i < 4 * 60; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<619,620,14>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<626,627,14>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<638,639,14>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Date) != "undefined") {_RecordType("<659,663,15>",(Date)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<680,681,15>",(i)); Inst20++; } } catch(e) {}
  var d = new Date(2012, 10, 4, 0, i, 0);
try { if (Inst18 <= 1000 && typeof (d) != "undefined") {_RecordType("<651,652,15>",(d)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<689,694,16>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (CUT_NAME) != "undefined") {_RecordType("<695,703,16>",(CUT_NAME)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.toString) != "undefined") {_RecordType("<704,714,16>",(d.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<704,705,16>",(d)); Inst24++; } } catch(e) {}
  print(CUT_NAME(d.toString()));
} // BLUE: 538457


try { if (Inst26 <= 1000 && typeof (Date) != "undefined") {_RecordType("<760,764,20>",(Date)); Inst26++; } } catch(e) {}
var bug538457 = new Date(1383672529000000);
try { if (Inst25 <= 1000 && typeof (bug538457) != "undefined") {_RecordType("<744,753,20>",(bug538457)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<784,789,21>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (CUT_NAME) != "undefined") {_RecordType("<790,798,21>",(CUT_NAME)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (bug538457.toString) != "undefined") {_RecordType("<799,817,21>",(bug538457.toString)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (bug538457) != "undefined") {_RecordType("<799,808,21>",(bug538457)); Inst30++; } } catch(e) {}
print(CUT_NAME(bug538457.toString()));

