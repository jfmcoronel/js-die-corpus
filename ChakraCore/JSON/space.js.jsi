var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (stringify) != "undefined") {_RecordType("<376,385,5>",(stringify)); Inst0++; } } catch(e) {}
function stringify(o, space) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<386,387,5>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (space) != "undefined") {_RecordType("<389,394,5>",(space)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<410,424,6>",(JSON.stringify)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<410,414,6>",(JSON)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<425,426,6>",(o)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (space) != "undefined") {_RecordType("<434,439,6>",(space)); Inst7++; } } catch(e) {}
  var str = JSON.stringify(o, null, space);
try { if (Inst3 <= 1000 && typeof (str) != "undefined") {_RecordType("<404,407,6>",(str)); Inst3++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<455,469,7>",(JSON.stringify)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<455,459,7>",(JSON)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<470,471,7>",(o)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Number) != "undefined") {_RecordType("<483,489,7>",(Number)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (space) != "undefined") {_RecordType("<490,495,7>",(space)); Inst13++; } } catch(e) {}
  var str2 = JSON.stringify(o, null, new Number(space)); // Test Number Object
try { if (Inst8 <= 1000 && typeof (str2) != "undefined") {_RecordType("<448,452,7>",(str2)); Inst8++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<524,529,9>",(print)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (space) != "undefined") {_RecordType("<544,549,9>",(space)); Inst15++; } } catch(e) {}
  print("--space: " + space);
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<554,559,10>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (str) != "undefined") {_RecordType("<560,563,10>",(str)); Inst17++; } } catch(e) {}
  print(str);
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<568,573,11>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (str) != "undefined") {_RecordType("<574,577,11>",(str)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (str2) != "undefined") {_RecordType("<579,583,11>",(str2)); Inst20++; } } catch(e) {}
  print(str, str2);
}

var o = {
  ab: 123
};
try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<593,594,14>",(o)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<626,642,17>",(Number.MIN_VALUE)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number) != "undefined") {_RecordType("<626,632,17>",(Number)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<896,912,22>",(Number.MAX_VALUE)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number) != "undefined") {_RecordType("<896,902,22>",(Number)); Inst26++; } } catch(e) {}
var spaces = [Number.MIN_VALUE, -4294967296, -2147483649, -2147483648, //int32 min
-1073741825, -1073741824, //int31 min
-28, -7, -1, 0, 1, 6, 15, 1073741823, //int31 max
1073741824, 2147483647, //int32 max
2147483647.1, 2147483648, 2147483648.2, 4294967295, //uint32 max
4294967296, Number.MAX_VALUE];
try { if (Inst22 <= 1000 && typeof (spaces) != "undefined") {_RecordType("<616,622,17>",(spaces)); Inst22++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (spaces.forEach) != "undefined") {_RecordType("<915,929,23>",(spaces.forEach)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (spaces) != "undefined") {_RecordType("<915,921,23>",(spaces)); Inst28++; } } catch(e) {}
spaces.forEach(function (space) {
try { if (Inst29 <= 1000 && typeof (space) != "undefined") {_RecordType("<940,945,23>",(space)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (stringify) != "undefined") {_RecordType("<951,960,24>",(stringify)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<961,962,24>",(o)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (space) != "undefined") {_RecordType("<964,969,24>",(space)); Inst32++; } } catch(e) {}
  stringify(o, space);
});

