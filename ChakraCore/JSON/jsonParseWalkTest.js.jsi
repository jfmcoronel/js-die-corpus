var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (print) != "undefined") {_RecordType("<367,372,5>",(print)); Inst0++; } } catch(e) {}
print("-------Named Type Test Start------------------");
try { if (Inst2 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<434,444,6>",(JSON.parse)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<434,438,6>",(JSON)); Inst3++; } } catch(e) {}
var obj = JSON.parse('{"2a":"foo"}', function (key, value) {
try { if (Inst4 <= 1000 && typeof (key) != "undefined") {_RecordType("<471,474,6>",(key)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<476,481,6>",(value)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<487,492,7>",(print)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (key) != "undefined") {_RecordType("<493,496,7>",(key)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<503,508,7>",(value)); Inst8++; } } catch(e) {}
  print(key, ':', value);
try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<520,525,8>",(value)); Inst9++; } } catch(e) {}
  return value;
});
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<428,431,6>",(obj)); Inst1++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<531,536,10>",(print)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj["2a"]) != "undefined") {_RecordType("<537,546,10>",(obj["2a"])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<537,540,10>",(obj)); Inst12++; } } catch(e) {}
print(obj["2a"]);
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<549,554,11>",(print)); Inst13++; } } catch(e) {}
print("-------Named Type Test End--------------------");
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<606,611,12>",(print)); Inst14++; } } catch(e) {}
print("-------Simple Numeral Type Test Start---------");
try { if (Inst16 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<674,684,13>",(JSON.parse)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<674,678,13>",(JSON)); Inst17++; } } catch(e) {}
var obj2 = JSON.parse('{"2":"foo"}', function (key, value) {
try { if (Inst18 <= 1000 && typeof (key) != "undefined") {_RecordType("<710,713,13>",(key)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<715,720,13>",(value)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<726,731,14>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (key) != "undefined") {_RecordType("<732,735,14>",(key)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (value) != "undefined") {_RecordType("<742,747,14>",(value)); Inst22++; } } catch(e) {}
  print(key, ':', value);
try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<759,764,15>",(value)); Inst23++; } } catch(e) {}
  return value;
});
try { if (Inst15 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<667,671,13>",(obj2)); Inst15++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<770,775,17>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj2["2"]) != "undefined") {_RecordType("<776,785,17>",(obj2["2"])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<776,780,17>",(obj2)); Inst26++; } } catch(e) {}
print(obj2["2"]);
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<788,793,18>",(print)); Inst27++; } } catch(e) {}
print("-------Simple  Numeral Type Test End----------");
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<845,850,19>",(print)); Inst28++; } } catch(e) {}
print("-------Complex Numeral Type Test Start--------");
try { if (Inst30 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<913,923,20>",(JSON.parse)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<913,917,20>",(JSON)); Inst31++; } } catch(e) {}
var obj3 = JSON.parse('{"3":{"1":"foo"}}', function (key, value) {
try { if (Inst32 <= 1000 && typeof (key) != "undefined") {_RecordType("<955,958,20>",(key)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (value) != "undefined") {_RecordType("<960,965,20>",(value)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<971,976,21>",(print)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (key) != "undefined") {_RecordType("<977,980,21>",(key)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (value) != "undefined") {_RecordType("<987,992,21>",(value)); Inst36++; } } catch(e) {}
  print(key, ':', value);
try { if (Inst37 <= 1000 && typeof (value) != "undefined") {_RecordType("<1004,1009,22>",(value)); Inst37++; } } catch(e) {}
  return value;
});
try { if (Inst29 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<906,910,20>",(obj3)); Inst29++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<1015,1020,24>",(print)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (obj3["3"]) != "undefined") {_RecordType("<1021,1030,24>",(obj3["3"])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<1021,1025,24>",(obj3)); Inst40++; } } catch(e) {}
print(obj3["3"]);
try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<1033,1038,25>",(print)); Inst41++; } } catch(e) {}
print("-------Complex Numeral Type Test End----------");

