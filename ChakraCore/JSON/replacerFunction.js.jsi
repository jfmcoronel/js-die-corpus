var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var TEST = function (a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<388,389,5>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<391,392,5>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<402,403,6>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<407,408,6>",(b)); Inst4++; } } catch(e) {}
  if (a != b) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<426,431,7>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<432,433,7>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<445,446,7>",(b)); Inst7++; } } catch(e) {}
    throw new Error(a + " != " + b);
  }
};
try { if (Inst0 <= 1000 && typeof (TEST) != "undefined") {_RecordType("<371,375,5>",(TEST)); Inst0++; } } catch(e) {}

var obj = {
  str: 6
};
try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<461,464,11>",(obj)); Inst8++; } } catch(e) {}
obj[0] = 'value0';
try { if (Inst9 <= 1000 && typeof (obj[0]) != "undefined") {_RecordType("<481,487,14>",(obj[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<481,484,14>",(obj)); Inst10++; } } catch(e) {}
obj[6] = 'value6';
try { if (Inst11 <= 1000 && typeof (obj[6]) != "undefined") {_RecordType("<500,506,15>",(obj[6])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<500,503,15>",(obj)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (TEST) != "undefined") {_RecordType("<519,523,16>",(TEST)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<524,538,16>",(JSON.stringify)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<524,528,16>",(JSON)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<539,542,16>",(obj)); Inst16++; } } catch(e) {}
TEST(JSON.stringify(obj, function (k, v) {
try { if (Inst17 <= 1000 && typeof (k) != "undefined") {_RecordType("<554,555,16>",(k)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (v) != "undefined") {_RecordType("<557,558,16>",(v)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (k) != "undefined") {_RecordType("<569,570,17>",(k)); Inst19++; } } catch(e) {}
  if (!k) {
try { if (Inst20 <= 1000 && typeof (v) != "undefined") {_RecordType("<585,586,18>",(v)); Inst20++; } } catch(e) {}
    return v;
  }

try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<602,603,21>",(v)); Inst21++; } } catch(e) {}
  return v + 1;
}), '{"0":"value01","6":"value61","str":7}'); // test ObjectArray

try { if (Inst22 <= 1000 && typeof (TEST) != "undefined") {_RecordType("<676,680,24>",(TEST)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<681,695,24>",(JSON.stringify)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<681,685,24>",(JSON)); Inst24++; } } catch(e) {}
TEST(JSON.stringify({
  0: 0,
  1: 1,
  "two": 2
}), '{"0":0,"1":1,"two":2}');
try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<767,773,29>",(Object)); Inst26++; } } catch(e) {}
var a = new Object();
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<759,760,29>",(a)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (replacer) != "undefined") {_RecordType("<787,795,31>",(replacer)); Inst27++; } } catch(e) {}
function replacer(k, v) {
try { if (Inst28 <= 1000 && typeof (k) != "undefined") {_RecordType("<796,797,31>",(k)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (v) != "undefined") {_RecordType("<799,800,31>",(v)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (v) != "undefined") {_RecordType("<813,814,32>",(v)); Inst30++; } } catch(e) {}
  return v;
}

var until = 1290;
try { if (Inst31 <= 1000 && typeof (until) != "undefined") {_RecordType("<823,828,35>",(until)); Inst31++; } } catch(e) {}

for (var i = 0; i < until; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<847,848,37>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<854,855,37>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (until) != "undefined") {_RecordType("<858,863,37>",(until)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<865,866,37>",(i)); Inst35++; } } catch(e) {}
  a[i + 10] = 0;
try { if (Inst36 <= 1000 && typeof (a[i + 10]) != "undefined") {_RecordType("<874,883,38>",(a[i + 10])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<874,875,38>",(a)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<876,877,38>",(i)); Inst38++; } } catch(e) {}
}

try { if (Inst39 <= 1000 && typeof (TEST) != "undefined") {_RecordType("<892,896,41>",(TEST)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (JSON.stringify(a, replacer).substring) != "undefined") {_RecordType("<897,934,41>",(JSON.stringify(a, replacer).substring)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<897,911,41>",(JSON.stringify)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<897,901,41>",(JSON)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<912,913,41>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (replacer) != "undefined") {_RecordType("<915,923,41>",(replacer)); Inst44++; } } catch(e) {}
TEST(JSON.stringify(a, replacer).substring(0, 20), '{"10":0,"11":0,"12":');
try { if (Inst45 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<968,979,42>",(console.log)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (console) != "undefined") {_RecordType("<968,975,42>",(console)); Inst46++; } } catch(e) {}
console.log("PASS");

