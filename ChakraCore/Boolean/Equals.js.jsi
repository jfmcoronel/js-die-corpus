var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst1 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<393,400,5>",(Boolean)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<412,419,5>",(Boolean)); Inst2++; } } catch(e) {}
var a = [true, false, new Boolean(true), new Boolean(false)];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<371,372,5>",(a)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<455,462,6>",(Boolean)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<474,481,6>",(Boolean)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<532,541,6>",(undefined)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<547,553,6>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Number) != "undefined") {_RecordType("<665,671,6>",(Number)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Number) != "undefined") {_RecordType("<680,686,6>",(Number)); Inst9++; } } catch(e) {}
var b = [true, false, new Boolean(true), new Boolean(false), -1, 0, 1, 2, 1.0, 1.1, 0.0, +0, -0, null, undefined, new Object(), "", "abc", "-1", "0", "1", "2", "true", "false", "t", "f", "True", "False", " 1.00 ", " 1. ", " +1.0 ", new Number(0), new Number(1)];
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<433,434,6>",(b)); Inst3++; } } catch(e) {}

for (var i = 0; i < a.length; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<702,703,8>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<709,710,8>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<713,721,8>",(a.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<713,714,8>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<723,724,8>",(i)); Inst14++; } } catch(e) {}
  for (var j = 0; j < b.length; j++) {
try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<741,742,9>",(j)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<748,749,9>",(j)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<752,760,9>",(b.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<752,753,9>",(b)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (j) != "undefined") {_RecordType("<762,763,9>",(j)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<773,778,10>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<779,783,10>",(a[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<779,780,10>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b[j]) != "undefined") {_RecordType("<795,799,10>",(b[j])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<795,796,10>",(b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<810,814,10>",(a[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<810,811,10>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b[j]) != "undefined") {_RecordType("<818,822,10>",(b[j])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<818,819,10>",(b)); Inst28++; } } catch(e) {}
    print(a[i] + " == " + b[j] + ": " + (a[i] == b[j]));
  }
}

