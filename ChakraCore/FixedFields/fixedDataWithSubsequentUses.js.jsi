var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var A = 1;
try { if (Inst0 <= 1000 && typeof (A) != "undefined") {_RecordType("<371,372,5>",(A)); Inst0++; } } catch(e) {}
var B = 2;
try { if (Inst1 <= 1000 && typeof (B) != "undefined") {_RecordType("<382,383,6>",(B)); Inst1++; } } catch(e) {}
var C = 3;
try { if (Inst2 <= 1000 && typeof (C) != "undefined") {_RecordType("<393,394,7>",(C)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<410,414,9>",(test)); Inst3++; } } catch(e) {}
function test() {
  var d = 0;
try { if (Inst4 <= 1000 && typeof (d) != "undefined") {_RecordType("<425,426,10>",(d)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (A) != "undefined") {_RecordType("<439,440,11>",(A)); Inst6++; } } catch(e) {}
  d += A;
try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<434,435,11>",(d)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (B) != "undefined") {_RecordType("<449,450,12>",(B)); Inst8++; } } catch(e) {}
  d += B;
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<444,445,12>",(d)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (C) != "undefined") {_RecordType("<459,460,13>",(C)); Inst10++; } } catch(e) {}
  d += C;
try { if (Inst9 <= 1000 && typeof (d) != "undefined") {_RecordType("<454,455,13>",(d)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<471,472,14>",(d)); Inst11++; } } catch(e) {}
  return d;
}

try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<477,482,17>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<483,487,17>",(test)); Inst13++; } } catch(e) {}
print(test());
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<492,497,18>",(print)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (test) != "undefined") {_RecordType("<498,502,18>",(test)); Inst15++; } } catch(e) {}
print(test());
C = 1;
try { if (Inst16 <= 1000 && typeof (C) != "undefined") {_RecordType("<507,508,19>",(C)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<514,519,20>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<520,524,20>",(test)); Inst18++; } } catch(e) {}
print(test());

try { if (Inst19 <= 1000 && typeof (test1) != "undefined") {_RecordType("<539,544,22>",(test1)); Inst19++; } } catch(e) {}
function test1(o) {
try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<545,546,22>",(o)); Inst20++; } } catch(e) {}
  var d = 0;
try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<556,557,23>",(d)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (o.P) != "undefined") {_RecordType("<570,573,24>",(o.P)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<570,571,24>",(o)); Inst24++; } } catch(e) {}
  d += o.P;
try { if (Inst22 <= 1000 && typeof (d) != "undefined") {_RecordType("<565,566,24>",(d)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (o.Q) != "undefined") {_RecordType("<582,585,25>",(o.Q)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<582,583,25>",(o)); Inst27++; } } catch(e) {}
  d += o.Q;
try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<577,578,25>",(d)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (o.R) != "undefined") {_RecordType("<594,597,26>",(o.R)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<594,595,26>",(o)); Inst30++; } } catch(e) {}
  d += o.R;
try { if (Inst28 <= 1000 && typeof (d) != "undefined") {_RecordType("<589,590,26>",(d)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<608,609,27>",(d)); Inst31++; } } catch(e) {}
  return d;
}

var obj = {
  P: 5,
  Q: 6,
  R: 7
};
try { if (Inst32 <= 1000 && typeof (obj) != "undefined") {_RecordType("<618,621,30>",(obj)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<652,657,35>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (test1) != "undefined") {_RecordType("<658,663,35>",(test1)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<664,667,35>",(obj)); Inst35++; } } catch(e) {}
print(test1(obj));
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<671,676,36>",(print)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (test1) != "undefined") {_RecordType("<677,682,36>",(test1)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj) != "undefined") {_RecordType("<683,686,36>",(obj)); Inst38++; } } catch(e) {}
print(test1(obj));
obj.Q = 10;
try { if (Inst39 <= 1000 && typeof (obj.Q) != "undefined") {_RecordType("<690,695,37>",(obj.Q)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj) != "undefined") {_RecordType("<690,693,37>",(obj)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<702,707,38>",(print)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (test1) != "undefined") {_RecordType("<708,713,38>",(test1)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (obj) != "undefined") {_RecordType("<714,717,38>",(obj)); Inst43++; } } catch(e) {}
print(test1(obj));

