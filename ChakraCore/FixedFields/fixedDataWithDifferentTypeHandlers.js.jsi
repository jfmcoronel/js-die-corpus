var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//****************Test0 creates a SimpleDictionaryTypeHandler****************
var B = 6;
try { if (Inst0 <= 1000 && typeof (B) != "undefined") {_RecordType("<449,450,6>",(B)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<466,471,8>",(test0)); Inst1++; } } catch(e) {}
function test0() {
try { if (Inst2 <= 1000 && typeof (B) != "undefined") {_RecordType("<485,486,9>",(B)); Inst2++; } } catch(e) {}
  return B;
}

try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<491,496,12>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (test0) != "undefined") {_RecordType("<497,502,12>",(test0)); Inst4++; } } catch(e) {}
print(test0()); //JIT test() with fixedDataProp

try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<540,545,14>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (test0) != "undefined") {_RecordType("<546,551,14>",(test0)); Inst6++; } } catch(e) {}
print(test0());
try { if (Inst7 <= 1000 && typeof (B) != "undefined") {_RecordType("<556,557,15>",(B)); Inst7++; } } catch(e) {}
B++; //Should bail out during this call

try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<597,602,17>",(print)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (test0) != "undefined") {_RecordType("<603,608,17>",(test0)); Inst9++; } } catch(e) {}
print(test0()); //****************Test 1 creates a PathTypeHandler****************

var obj = {
  A: 1
};
try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<685,688,19>",(obj)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (test1) != "undefined") {_RecordType("<713,718,23>",(test1)); Inst11++; } } catch(e) {}
function test1() {
try { if (Inst12 <= 1000 && typeof (obj.A) != "undefined") {_RecordType("<732,737,24>",(obj.A)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<732,735,24>",(obj)); Inst13++; } } catch(e) {}
  return obj.A;
}

try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<742,747,27>",(print)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (test1) != "undefined") {_RecordType("<748,753,27>",(test1)); Inst15++; } } catch(e) {}
print(test1());
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<758,763,28>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (test1) != "undefined") {_RecordType("<764,769,28>",(test1)); Inst17++; } } catch(e) {}
print(test1());
obj.A = 2; //Bails out here, since a new property is added.
try { if (Inst18 <= 1000 && typeof (obj.A) != "undefined") {_RecordType("<774,779,29>",(obj.A)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<774,777,29>",(obj)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<835,840,31>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (test1) != "undefined") {_RecordType("<841,846,31>",(test1)); Inst21++; } } catch(e) {}
print(test1()); //*******************Test2: Creates a DictionaryTypeHandler****************

Object.prototype.C = 5;
try { if (Inst22 <= 1000 && typeof (Object.prototype.C) != "undefined") {_RecordType("<928,946,33>",(Object.prototype.C)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<928,944,33>",(Object.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<928,934,33>",(Object)); Inst24++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (test2) != "undefined") {_RecordType("<962,967,35>",(test2)); Inst25++; } } catch(e) {}
function test2() {
try { if (Inst26 <= 1000 && typeof (C) != "undefined") {_RecordType("<981,982,36>",(C)); Inst26++; } } catch(e) {}
  return C;
}

try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<987,992,39>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (test2) != "undefined") {_RecordType("<993,998,39>",(test2)); Inst28++; } } catch(e) {}
print(test2());
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<1003,1008,40>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1009,1014,40>",(test2)); Inst30++; } } catch(e) {}
print(test2());
C = 2;
try { if (Inst31 <= 1000 && typeof (C) != "undefined") {_RecordType("<1019,1020,41>",(C)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1026,1031,42>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1032,1037,42>",(test2)); Inst33++; } } catch(e) {}
print(test2());

