var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var x1 = -(1 << 31);
try { if (Inst1 <= 1000 && typeof (x1) != "undefined") {_RecordType("<392,394,6>",(x1)); Inst1++; } } catch(e) {}
  var x2 = -(0x80000000 | 0);
try { if (Inst2 <= 1000 && typeof (x2) != "undefined") {_RecordType("<415,417,7>",(x2)); Inst2++; } } catch(e) {}
  var x3 = -(0x80000000 + 0);
try { if (Inst3 <= 1000 && typeof (x3) != "undefined") {_RecordType("<445,447,8>",(x3)); Inst3++; } } catch(e) {}
  var x4 = -0x80000000;
try { if (Inst4 <= 1000 && typeof (x4) != "undefined") {_RecordType("<475,477,9>",(x4)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<495,500,10>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x1) != "undefined") {_RecordType("<511,513,10>",(x1)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x2) != "undefined") {_RecordType("<529,531,10>",(x2)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x3) != "undefined") {_RecordType("<547,549,10>",(x3)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x4) != "undefined") {_RecordType("<565,567,10>",(x4)); Inst9++; } } catch(e) {}
  print("x1 = " + x1 + "   x2 = " + x2 + "   x3 = " + x3 + "   x4 = " + x4);
}

; // generate profile

try { if (Inst10 <= 1000 && typeof (test0) != "undefined") {_RecordType("<596,601,15>",(test0)); Inst10++; } } catch(e) {}
test0();

try { if (Inst11 <= 1000 && typeof (test1) != "undefined") {_RecordType("<615,620,17>",(test1)); Inst11++; } } catch(e) {}
function test1() {
  var negate = function (p0) {
try { if (Inst13 <= 1000 && typeof (p0) != "undefined") {_RecordType("<650,652,18>",(p0)); Inst13++; } } catch(e) {}
    for (var i = 0; i < 2; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<669,670,19>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<676,677,19>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<683,684,19>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (p0) != "undefined") {_RecordType("<702,704,20>",(p0)); Inst18++; } } catch(e) {}
      p0 = -p0;
try { if (Inst17 <= 1000 && typeof (p0) != "undefined") {_RecordType("<696,698,20>",(p0)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<712,717,21>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (p0) != "undefined") {_RecordType("<718,720,21>",(p0)); Inst20++; } } catch(e) {}
      print(p0);
    }
  };
try { if (Inst12 <= 1000 && typeof (negate) != "undefined") {_RecordType("<631,637,18>",(negate)); Inst12++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (negate) != "undefined") {_RecordType("<737,743,25>",(negate)); Inst21++; } } catch(e) {}
  negate(-2147483648);
try { if (Inst22 <= 1000 && typeof (negate) != "undefined") {_RecordType("<760,766,26>",(negate)); Inst22++; } } catch(e) {}
  negate(-5);
try { if (Inst23 <= 1000 && typeof (negate) != "undefined") {_RecordType("<774,780,27>",(negate)); Inst23++; } } catch(e) {}
  negate(-1073741824);
}

;
try { if (Inst24 <= 1000 && typeof (test1) != "undefined") {_RecordType("<800,805,31>",(test1)); Inst24++; } } catch(e) {}
test1();

