var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// A specific case that was regressed
try { if (Inst0 <= 1000 && typeof (testInlineParameterSideEffects) != "undefined") {_RecordType("<414,444,6>",(testInlineParameterSideEffects)); Inst0++; } } catch(e) {}
function testInlineParameterSideEffects() {
try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<460,463,7>",(foo)); Inst1++; } } catch(e) {}
  function foo() {
    var a = 12345;
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<476,477,8>",(a)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<499,507,9>",(Math.pow)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math) != "undefined") {_RecordType("<499,503,9>",(Math)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<508,509,9>",(a)); Inst6++; } } catch(e) {}
    var x = Math.pow(a, 1 >> (a = 0));
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<495,496,9>",(x)); Inst3++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<517,518,9>",(a)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<537,538,10>",(x)); Inst8++; } } catch(e) {}
    return x;
  }

try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<555,558,13>",(foo)); Inst10++; } } catch(e) {}
  var x = foo();
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<551,552,13>",(x)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<564,569,14>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<570,571,14>",(x)); Inst12++; } } catch(e) {}
  print(x);
}

try { if (Inst13 <= 1000 && typeof (testInlineParameterSideEffects) != "undefined") {_RecordType("<577,607,17>",(testInlineParameterSideEffects)); Inst13++; } } catch(e) {}
testInlineParameterSideEffects();

try { if (Inst14 <= 1000 && typeof (testInlineWin8_748804) != "undefined") {_RecordType("<621,642,19>",(testInlineWin8_748804)); Inst14++; } } catch(e) {}
function testInlineWin8_748804() {
  var result;
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<653,659,20>",(result)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (decimalToHexString) != "undefined") {_RecordType("<673,691,22>",(decimalToHexString)); Inst16++; } } catch(e) {}
  function decimalToHexString(n) {
try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<692,693,22>",(n)); Inst17++; } } catch(e) {}
    for (var i = 1; i >= 1; --i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<710,711,23>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<717,718,23>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<727,728,23>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (n) != "undefined") {_RecordType("<742,743,24>",(n)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<747,755,24>",(Math.pow)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math) != "undefined") {_RecordType("<747,751,24>",(Math)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<760,761,24>",(i)); Inst24++; } } catch(e) {}
      if (n >= Math.pow(16, i)) {
try { if (Inst26 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<782,792,25>",(Math.floor)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<782,786,25>",(Math)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<793,794,25>",(n)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<797,805,25>",(Math.pow)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Math) != "undefined") {_RecordType("<797,801,25>",(Math)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<810,811,25>",(i)); Inst31++; } } catch(e) {}
        var t = Math.floor(n / Math.pow(16, i));
try { if (Inst25 <= 1000 && typeof (t) != "undefined") {_RecordType("<778,779,25>",(t)); Inst25++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (t) != "undefined") {_RecordType("<832,833,26>",(t)); Inst33++; } } catch(e) {}
        result = t;
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<823,829,26>",(result)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (t) != "undefined") {_RecordType("<847,848,27>",(t)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<851,859,27>",(Math.pow)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math) != "undefined") {_RecordType("<851,855,27>",(Math)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<864,865,27>",(i)); Inst38++; } } catch(e) {}
        n = t * Math.pow(16, i);
try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<843,844,27>",(n)); Inst34++; } } catch(e) {}
      }
    }
  }

try { if (Inst39 <= 1000 && typeof (decimalToHexString) != "undefined") {_RecordType("<889,907,32>",(decimalToHexString)); Inst39++; } } catch(e) {}
  decimalToHexString(0xDF);
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<917,922,33>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<923,929,33>",(result)); Inst41++; } } catch(e) {}
  print(result);
}

try { if (Inst42 <= 1000 && typeof (testInlineWin8_748804) != "undefined") {_RecordType("<935,956,36>",(testInlineWin8_748804)); Inst42++; } } catch(e) {}
testInlineWin8_748804();

