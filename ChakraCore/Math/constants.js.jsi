var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// check constants, just echo
try { if (Inst0 <= 1000 && typeof (print) != "undefined") {_RecordType("<397,402,6>",(print)); Inst0++; } } catch(e) {}
print("Math constants:");
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<423,428,7>",(print)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Math.E) != "undefined") {_RecordType("<429,435,7>",(Math.E)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<429,433,7>",(Math)); Inst3++; } } catch(e) {}
print(Math.E);
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<438,443,8>",(print)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<444,451,8>",(Math.PI)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Math) != "undefined") {_RecordType("<444,448,8>",(Math)); Inst6++; } } catch(e) {}
print(Math.PI);
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<454,459,9>",(print)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math.LN10) != "undefined") {_RecordType("<460,469,9>",(Math.LN10)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<460,464,9>",(Math)); Inst9++; } } catch(e) {}
print(Math.LN10);
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<472,477,10>",(print)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<478,486,10>",(Math.LN2)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math) != "undefined") {_RecordType("<478,482,10>",(Math)); Inst12++; } } catch(e) {}
print(Math.LN2);
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<489,494,11>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Math.LOG2E) != "undefined") {_RecordType("<495,505,11>",(Math.LOG2E)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<495,499,11>",(Math)); Inst15++; } } catch(e) {}
print(Math.LOG2E);
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<508,513,12>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math.LOG10E) != "undefined") {_RecordType("<514,525,12>",(Math.LOG10E)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<514,518,12>",(Math)); Inst18++; } } catch(e) {}
print(Math.LOG10E);
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<528,533,13>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math.SQRT1_2) != "undefined") {_RecordType("<534,546,13>",(Math.SQRT1_2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<534,538,13>",(Math)); Inst21++; } } catch(e) {}
print(Math.SQRT1_2);
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<549,554,14>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math.SQRT2) != "undefined") {_RecordType("<555,565,14>",(Math.SQRT2)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math) != "undefined") {_RecordType("<555,559,14>",(Math)); Inst24++; } } catch(e) {}
print(Math.SQRT2);

