var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
const size = 100;
try { if (Inst0 <= 1000 && typeof (size) != "undefined") {_RecordType("<373,377,5>",(size)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<395,398,7>",(foo)); Inst1++; } } catch(e) {}
function foo() {
try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<417,422,8>",(Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (size) != "undefined") {_RecordType("<423,427,8>",(size)); Inst4++; } } catch(e) {}
  let a = new Array(size);
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<409,410,8>",(a)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<444,449,9>",(Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (size) != "undefined") {_RecordType("<450,454,9>",(size)); Inst7++; } } catch(e) {}
  let b = new Array(size);
try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<436,437,9>",(b)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<471,476,10>",(Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (size) != "undefined") {_RecordType("<477,481,10>",(size)); Inst10++; } } catch(e) {}
  let c = new Array(size);
try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<463,464,10>",(c)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<498,503,11>",(Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (size) != "undefined") {_RecordType("<504,508,11>",(size)); Inst13++; } } catch(e) {}
  let d = new Array(size);
try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<490,491,11>",(d)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<525,530,12>",(Array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (size) != "undefined") {_RecordType("<531,535,12>",(size)); Inst16++; } } catch(e) {}
  let e = new Array(size);
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<517,518,12>",(e)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a.fill) != "undefined") {_RecordType("<540,546,13>",(a.fill)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<540,541,13>",(a)); Inst18++; } } catch(e) {}
  a.fill(1);
try { if (Inst19 <= 1000 && typeof (b.fill) != "undefined") {_RecordType("<553,559,14>",(b.fill)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<553,554,14>",(b)); Inst20++; } } catch(e) {}
  b.fill(1);
try { if (Inst21 <= 1000 && typeof (c.fill) != "undefined") {_RecordType("<566,572,15>",(c.fill)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<566,567,15>",(c)); Inst22++; } } catch(e) {}
  c.fill(1);
try { if (Inst23 <= 1000 && typeof (d.fill) != "undefined") {_RecordType("<579,585,16>",(d.fill)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<579,580,16>",(d)); Inst24++; } } catch(e) {}
  d.fill(1);
try { if (Inst25 <= 1000 && typeof (e.fill) != "undefined") {_RecordType("<592,598,17>",(e.fill)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<592,593,17>",(e)); Inst26++; } } catch(e) {}
  e.fill(1);

  validSlotMemop = function () {
try { if (Inst29 <= 1000 && typeof (c.length) != "undefined") {_RecordType("<650,658,20>",(c.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (c) != "undefined") {_RecordType("<650,651,20>",(c)); Inst30++; } } catch(e) {}
    let cl = c.length;
try { if (Inst28 <= 1000 && typeof (cl) != "undefined") {_RecordType("<645,647,20>",(cl)); Inst28++; } } catch(e) {}
    total = 0;
try { if (Inst31 <= 1000 && typeof (total) != "undefined") {_RecordType("<664,669,21>",(total)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (c) != "undefined") {_RecordType("<688,689,22>",(c)); Inst33++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (d) != "undefined") {_RecordType("<704,705,23>",(d)); Inst35++; } } catch(e) {}
    let _c = c,
        _d = d; // This is valid
try { if (Inst32 <= 1000 && typeof (_c) != "undefined") {_RecordType("<683,685,22>",(_c)); Inst32++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (_d) != "undefined") {_RecordType("<699,701,23>",(_d)); Inst34++; } } catch(e) {}

    for (let i = 0; i < cl; ++i) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<738,739,25>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<745,746,25>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (cl) != "undefined") {_RecordType("<749,751,25>",(cl)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<755,756,25>",(i)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (_d[i]) != "undefined") {_RecordType("<774,779,26>",(_d[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (_d) != "undefined") {_RecordType("<774,776,26>",(_d)); Inst43++; } } catch(e) {}
      _c[i] = _d[i];
try { if (Inst40 <= 1000 && typeof (_c[i]) != "undefined") {_RecordType("<766,771,26>",(_c[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (_c) != "undefined") {_RecordType("<766,768,26>",(_c)); Inst41++; } } catch(e) {}
    }
  };
try { if (Inst27 <= 1000 && typeof (validSlotMemop) != "undefined") {_RecordType("<606,620,19>",(validSlotMemop)); Inst27++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (slotMemop) != "undefined") {_RecordType("<811,820,30>",(slotMemop)); Inst44++; } } catch(e) {}
  return function slotMemop() {
try { if (Inst46 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<838,846,31>",(a.length)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<838,839,31>",(a)); Inst47++; } } catch(e) {}
    let al = a.length;
try { if (Inst45 <= 1000 && typeof (al) != "undefined") {_RecordType("<833,835,31>",(al)); Inst45++; } } catch(e) {}
    total = 0; // Right now this is invalid
try { if (Inst48 <= 1000 && typeof (total) != "undefined") {_RecordType("<852,857,32>",(total)); Inst48++; } } catch(e) {}

    for (let i = 0; i < al; ++i) {
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<906,907,34>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<913,914,34>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (al) != "undefined") {_RecordType("<917,919,34>",(al)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<923,924,34>",(i)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<941,945,35>",(b[i])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (b) != "undefined") {_RecordType("<941,942,35>",(b)); Inst56++; } } catch(e) {}
      a[i] = b[i];
try { if (Inst53 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<934,938,35>",(a[i])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (a) != "undefined") {_RecordType("<934,935,35>",(a)); Inst54++; } } catch(e) {}
      e[i] = 0;
try { if (Inst57 <= 1000 && typeof (e[i]) != "undefined") {_RecordType("<953,957,36>",(e[i])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (e) != "undefined") {_RecordType("<953,954,36>",(e)); Inst58++; } } catch(e) {}
    }

try { if (Inst59 <= 1000 && typeof (validSlotMemop) != "undefined") {_RecordType("<974,988,39>",(validSlotMemop)); Inst59++; } } catch(e) {}
    validSlotMemop();
  };
}

try { if (Inst61 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1010,1013,43>",(foo)); Inst61++; } } catch(e) {}
const f = foo();
try { if (Inst60 <= 1000 && typeof (f) != "undefined") {_RecordType("<1006,1007,43>",(f)); Inst60++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (f) != "undefined") {_RecordType("<1017,1018,44>",(f)); Inst62++; } } catch(e) {}
f();
try { if (Inst63 <= 1000 && typeof (f) != "undefined") {_RecordType("<1022,1023,45>",(f)); Inst63++; } } catch(e) {}
f();
try { if (Inst64 <= 1000 && typeof (print) != "undefined") {_RecordType("<1027,1032,46>",(print)); Inst64++; } } catch(e) {}
print("PASSED");

