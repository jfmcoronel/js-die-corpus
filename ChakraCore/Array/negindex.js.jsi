var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//===============================================
// No fast path - because its a negative index
//===============================================
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<526,531,8>",(Array)); Inst1++; } } catch(e) {}
var a = new Array();
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<518,519,8>",(a)); Inst0++; } } catch(e) {}
a[3221225472] = 3; // Index 0xC0000000
try { if (Inst2 <= 1000 && typeof (a[3221225472]) != "undefined") {_RecordType("<535,548,9>",(a[3221225472])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<535,536,9>",(a)); Inst3++; } } catch(e) {}
// non type-specialized case

index = -1073741824; // Index 0xC0000000, but signed
try { if (Inst4 <= 1000 && typeof (index) != "undefined") {_RecordType("<604,609,12>",(index)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<658,663,14>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a[index]) != "undefined") {_RecordType("<664,672,14>",(a[index])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<664,665,14>",(a)); Inst7++; } } catch(e) {}
print(a[index]); // int const case

try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<694,699,16>",(print)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a[-1073741824]) != "undefined") {_RecordType("<700,714,16>",(a[-1073741824])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<700,701,16>",(a)); Inst10++; } } catch(e) {}
print(a[-1073741824]); // Type Specialized case

var G = 1;
try { if (Inst11 <= 1000 && typeof (G) != "undefined") {_RecordType("<747,748,18>",(G)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<764,767,20>",(foo)); Inst12++; } } catch(e) {}
function foo() {
  var i = 0;
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<778,779,21>",(i)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (G) != "undefined") {_RecordType("<792,793,23>",(G)); Inst14++; } } catch(e) {}
  if (G) {
    i = -1073741824;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<801,802,24>",(i)); Inst15++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<825,830,27>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<831,835,27>",(a[i])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<831,832,27>",(a)); Inst18++; } } catch(e) {}
  print(a[i]);
}

try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<841,844,30>",(foo)); Inst19++; } } catch(e) {}
foo(); //===============================================
// Fast path
//===============================================

try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<974,979,34>",(Array)); Inst21++; } } catch(e) {}
var b = new Array();
try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<966,967,34>",(b)); Inst20++; } } catch(e) {}
a[3] = 3;
try { if (Inst22 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<983,987,35>",(a[3])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<983,984,35>",(a)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<993,998,36>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<999,1003,36>",(a[3])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<999,1000,36>",(a)); Inst26++; } } catch(e) {}
print(a[3]);

try { if (Inst27 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1016,1020,38>",(foo2)); Inst27++; } } catch(e) {}
function foo2() {
  var i = 0;
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1031,1032,39>",(i)); Inst28++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (G) != "undefined") {_RecordType("<1045,1046,41>",(G)); Inst29++; } } catch(e) {}
  if (G) {
    i = 3;
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1054,1055,42>",(i)); Inst30++; } } catch(e) {}
  }

try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<1068,1073,45>",(print)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1074,1078,45>",(a[i])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<1074,1075,45>",(a)); Inst33++; } } catch(e) {}
  print(a[i]);
}

try { if (Inst34 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1084,1088,48>",(foo2)); Inst34++; } } catch(e) {}
foo2();

