var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//-mic:1 -off:simplejit -bgjit- -lic:1
try { if (Inst0 <= 1000 && typeof (func1) != "undefined") {_RecordType("<415,420,6>",(func1)); Inst0++; } } catch(e) {}
function func1() {
  for (var i = 3; i < ary.length; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<436,437,7>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<443,444,7>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<447,457,7>",(ary.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ary) != "undefined") {_RecordType("<447,450,7>",(ary)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<459,460,7>",(i)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (ary[i]) != "undefined") {_RecordType("<479,485,8>",(ary[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ary) != "undefined") {_RecordType("<479,482,8>",(ary)); Inst9++; } } catch(e) {}
    ary[i] = ary[i];
try { if (Inst6 <= 1000 && typeof (ary[i]) != "undefined") {_RecordType("<470,476,8>",(ary[i])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ary) != "undefined") {_RecordType("<470,473,8>",(ary)); Inst7++; } } catch(e) {}
  }
}

try { if (Inst11 <= 1000 && typeof (Array(10).fill) != "undefined") {_RecordType("<504,518,12>",(Array(10).fill)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<504,509,12>",(Array)); Inst12++; } } catch(e) {}
var ary = Array(10).fill(0);
try { if (Inst10 <= 1000 && typeof (ary) != "undefined") {_RecordType("<498,501,12>",(ary)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (func1) != "undefined") {_RecordType("<523,528,13>",(func1)); Inst13++; } } catch(e) {}
func1();
ary.length = 100;
try { if (Inst14 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<532,542,14>",(ary.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ary) != "undefined") {_RecordType("<532,535,14>",(ary)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (ary.push) != "undefined") {_RecordType("<550,558,15>",(ary.push)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ary) != "undefined") {_RecordType("<550,553,15>",(ary)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ary.shift) != "undefined") {_RecordType("<559,568,15>",(ary.shift)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ary) != "undefined") {_RecordType("<559,562,15>",(ary)); Inst19++; } } catch(e) {}
ary.push(ary.shift());
try { if (Inst20 <= 1000 && typeof (func1) != "undefined") {_RecordType("<573,578,16>",(func1)); Inst20++; } } catch(e) {}
func1();
try { if (Inst21 <= 1000 && typeof (func1) != "undefined") {_RecordType("<582,587,17>",(func1)); Inst21++; } } catch(e) {}
func1();
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<591,596,18>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ary) != "undefined") {_RecordType("<597,600,18>",(ary)); Inst23++; } } catch(e) {}
print(ary);

