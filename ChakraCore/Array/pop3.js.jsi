var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<376,380,5>",(test)); Inst0++; } } catch(e) {}
function test(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<381,382,5>",(a)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.pop) != "undefined") {_RecordType("<392,397,6>",(a.pop)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<392,393,6>",(a)); Inst4++; } } catch(e) {}
  a = a.pop();
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<388,389,6>",(a)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<410,411,7>",(a)); Inst5++; } } catch(e) {}
  return a;
}

var arr = [{
  a: 3
}];
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<420,423,10>",(arr)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (test) != "undefined") {_RecordType("<448,452,13>",(test)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<453,456,13>",(arr)); Inst9++; } } catch(e) {}
var r = test(arr);
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<444,445,13>",(r)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<459,464,14>",(print)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r.a) != "undefined") {_RecordType("<465,468,14>",(r.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (r) != "undefined") {_RecordType("<465,466,14>",(r)); Inst12++; } } catch(e) {}
print(r.a);
arr = [{
  a: 3
}];
try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<471,474,15>",(arr)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (test) != "undefined") {_RecordType("<495,499,18>",(test)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<500,503,18>",(arr)); Inst16++; } } catch(e) {}
r = test(arr);
try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<491,492,18>",(r)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<506,511,19>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (r.a) != "undefined") {_RecordType("<512,515,19>",(r.a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (r) != "undefined") {_RecordType("<512,513,19>",(r)); Inst19++; } } catch(e) {}
print(r.a); // Test that popping a gap accesses the prototype chain

try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<584,585,21>",(f)); Inst20++; } } catch(e) {}
function f(a) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<586,587,21>",(a)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<600,608,22>",(a.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<600,601,22>",(a)); Inst23++; } } catch(e) {}
  while (a.length > 0) {
try { if (Inst24 <= 1000 && typeof (a.pop) != "undefined") {_RecordType("<620,625,23>",(a.pop)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<620,621,23>",(a)); Inst25++; } } catch(e) {}
    a.pop();
  }
}

try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<636,637,27>",(f)); Inst26++; } } catch(e) {}
f(['x',, 'x']);
try { if (Inst27 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<652,673,28>",(Object.defineProperty)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<652,658,28>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<674,690,28>",(Object.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<674,680,28>",(Object)); Inst30++; } } catch(e) {}
Object.defineProperty(Object.prototype, "1", {
  get: function () {
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<724,729,30>",(print)); Inst31++; } } catch(e) {}
    print("getter");
  },
  configurable: true
});
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<771,772,34>",(f)); Inst32++; } } catch(e) {}
f(['x',, 'x']);

try { if (Inst33 <= 1000 && typeof (f_float) != "undefined") {_RecordType("<797,804,36>",(f_float)); Inst33++; } } catch(e) {}
function f_float(a) {
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<805,806,36>",(a)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<819,827,37>",(a.length)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<819,820,37>",(a)); Inst36++; } } catch(e) {}
  while (a.length > 0) {
try { if (Inst37 <= 1000 && typeof (a.pop) != "undefined") {_RecordType("<839,844,38>",(a.pop)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<839,840,38>",(a)); Inst38++; } } catch(e) {}
    a.pop();
  }
}

try { if (Inst39 <= 1000 && typeof (Object.prototype[1]) != "undefined") {_RecordType("<862,881,42>",(Object.prototype[1])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<862,878,42>",(Object.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Object) != "undefined") {_RecordType("<862,868,42>",(Object)); Inst41++; } } catch(e) {}
delete Object.prototype[1];
var x = [1.2];
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<887,888,43>",(x)); Inst42++; } } catch(e) {}
x[3] = 1.4;
try { if (Inst43 <= 1000 && typeof (x[3]) != "undefined") {_RecordType("<898,902,44>",(x[3])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<898,899,44>",(x)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (f_float) != "undefined") {_RecordType("<910,917,45>",(f_float)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<918,919,45>",(x)); Inst46++; } } catch(e) {}
f_float(x);
try { if (Inst47 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<922,943,46>",(Object.defineProperty)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object) != "undefined") {_RecordType("<922,928,46>",(Object)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<944,960,46>",(Object.prototype)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Object) != "undefined") {_RecordType("<944,950,46>",(Object)); Inst50++; } } catch(e) {}
Object.defineProperty(Object.prototype, "1", {
  get: function () {
try { if (Inst51 <= 1000 && typeof (print) != "undefined") {_RecordType("<994,999,48>",(print)); Inst51++; } } catch(e) {}
    print("getter");
  },
  configurable: true
});
x = [1.1];
try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<1041,1042,52>",(x)); Inst52++; } } catch(e) {}
x[2] = 1.3;
try { if (Inst53 <= 1000 && typeof (x[2]) != "undefined") {_RecordType("<1052,1056,53>",(x[2])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<1052,1053,53>",(x)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (f_float) != "undefined") {_RecordType("<1064,1071,54>",(f_float)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (x) != "undefined") {_RecordType("<1072,1073,54>",(x)); Inst56++; } } catch(e) {}
f_float(x);

