var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var GiantPrintArray = [];
try { if (Inst1 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<392,407,6>",(GiantPrintArray)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<434,439,7>",(Array)); Inst3++; } } catch(e) {}
  var IntArr0 = new Array(1, 1);
try { if (Inst2 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<420,427,7>",(IntArr0)); Inst2++; } } catch(e) {}
  var FloatArr0 = [];
try { if (Inst4 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<453,462,8>",(FloatArr0)); Inst4++; } } catch(e) {}
  FloatArr0[1] = 1;
try { if (Inst5 <= 1000 && typeof (FloatArr0[1]) != "undefined") {_RecordType("<471,483,9>",(FloatArr0[1])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<471,480,9>",(FloatArr0)); Inst6++; } } catch(e) {}
  FloatArr0[0] = 1;
try { if (Inst7 <= 1000 && typeof (FloatArr0[0]) != "undefined") {_RecordType("<491,503,10>",(FloatArr0[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<491,500,10>",(FloatArr0)); Inst8++; } } catch(e) {}
  FloatArr0[12] = 1;
try { if (Inst9 <= 1000 && typeof (FloatArr0[12]) != "undefined") {_RecordType("<511,524,11>",(FloatArr0[12])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<511,520,11>",(FloatArr0)); Inst10++; } } catch(e) {}
  var v5;
try { if (Inst11 <= 1000 && typeof (v5) != "undefined") {_RecordType("<536,538,12>",(v5)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (IntArr0.length) != "undefined") {_RecordType("<547,561,13>",(IntArr0.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<547,554,13>",(IntArr0)); Inst14++; } } catch(e) {}
  v5 = IntArr0.length;
try { if (Inst12 <= 1000 && typeof (v5) != "undefined") {_RecordType("<542,544,13>",(v5)); Inst12++; } } catch(e) {}

  for (var i = 0; i < v5; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<575,576,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<582,583,15>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v5) != "undefined") {_RecordType("<586,588,15>",(v5)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<590,591,15>",(i)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (IntArr0[i]) != "undefined") {_RecordType("<616,626,16>",(IntArr0[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<616,623,16>",(IntArr0)); Inst22++; } } catch(e) {}
    FloatArr0[i] = IntArr0[i];
try { if (Inst19 <= 1000 && typeof (FloatArr0[i]) != "undefined") {_RecordType("<601,613,16>",(FloatArr0[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<601,610,16>",(FloatArr0)); Inst20++; } } catch(e) {}
  }

try { if (Inst23 <= 1000 && typeof (GiantPrintArray.push) != "undefined") {_RecordType("<635,655,19>",(GiantPrintArray.push)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<635,650,19>",(GiantPrintArray)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<656,665,19>",(FloatArr0)); Inst25++; } } catch(e) {}
  GiantPrintArray.push(FloatArr0);

  for (var v2 = 0; 0 < GiantPrintArray; 0) {
try { if (Inst26 <= 1000 && typeof (v2) != "undefined") {_RecordType("<680,682,21>",(v2)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<692,707,21>",(GiantPrintArray)); Inst27++; } } catch(e) {}
    ;
  }
}

try { if (Inst28 <= 1000 && typeof (test0) != "undefined") {_RecordType("<727,732,26>",(test0)); Inst28++; } } catch(e) {}
test0();
try { if (Inst29 <= 1000 && typeof (test0) != "undefined") {_RecordType("<736,741,27>",(test0)); Inst29++; } } catch(e) {}
test0();
try { if (Inst30 <= 1000 && typeof (test0) != "undefined") {_RecordType("<745,750,28>",(test0)); Inst30++; } } catch(e) {}
test0();
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<754,759,29>",(print)); Inst31++; } } catch(e) {}
print("passed");

