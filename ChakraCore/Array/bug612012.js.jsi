var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
try { if (Inst1 <= 1000 && typeof (makeArrayLength) != "undefined") {_RecordType("<397,412,6>",(makeArrayLength)); Inst1++; } } catch(e) {}
  function makeArrayLength() {
    ;
  }

  var obj0 = {};
try { if (Inst2 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<434,438,10>",(obj0)); Inst2++; } } catch(e) {}

  var func0 = function () {
    ;
  };
try { if (Inst3 <= 1000 && typeof (func0) != "undefined") {_RecordType("<452,457,12>",(func0)); Inst3++; } } catch(e) {}

  var func1 = function () {
try { if (Inst5 <= 1000 && typeof (func0) != "undefined") {_RecordType("<518,523,17>",(func0)); Inst5++; } } catch(e) {}
    func0(obj0.prop0 = 1);
try { if (Inst6 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<524,534,17>",(obj0.prop0)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<524,528,17>",(obj0)); Inst7++; } } catch(e) {}
    return 776151980;
  };
try { if (Inst4 <= 1000 && typeof (func1) != "undefined") {_RecordType("<492,497,16>",(func1)); Inst4++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (func1) != "undefined") {_RecordType("<586,591,21>",(func1)); Inst10++; } } catch(e) {}
  obj0.method0 = func1;
try { if (Inst8 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<571,583,21>",(obj0.method0)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<571,575,21>",(obj0)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<615,620,22>",(Array)); Inst12++; } } catch(e) {}
  var FloatArr0 = new Array(-244, 3421873769178130000, -7539078262541710000, 799469805.1, 6863152712358460000);
try { if (Inst11 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<599,608,22>",(FloatArr0)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<721,726,23>",(Array)); Inst14++; } } catch(e) {}
  var VarArr0 = Array();
try { if (Inst13 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<711,718,23>",(VarArr0)); Inst13++; } } catch(e) {}
  var c = 1;
try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<736,737,24>",(c)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<755,759,26>",(bar0)); Inst16++; } } catch(e) {}
  function bar0() {
try { if (Inst17 <= 1000 && typeof (FloatArr0.pop) != "undefined") {_RecordType("<768,781,27>",(FloatArr0.pop)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<768,777,27>",(FloatArr0)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (FloatArr0.pop) != "undefined") {_RecordType("<786,799,27>",(FloatArr0.pop)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<786,795,27>",(FloatArr0)); Inst20++; } } catch(e) {}
    FloatArr0.pop() ? FloatArr0.pop() : 0;
  }

  FloatArr0[obj0.method0()] = 1;
try { if (Inst21 <= 1000 && typeof (FloatArr0[obj0.method0()]) != "undefined") {_RecordType("<814,839,30>",(FloatArr0[obj0.method0()])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<814,823,30>",(FloatArr0)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<824,836,30>",(obj0.method0)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<824,828,30>",(obj0)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (VarArr0.splice) != "undefined") {_RecordType("<851,865,31>",(VarArr0.splice)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<851,858,31>",(VarArr0)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<866,870,31>",(bar0)); Inst28++; } } catch(e) {}
  c = VarArr0.splice(bar0());
try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<847,848,31>",(c)); Inst25++; } } catch(e) {}

  for (var _strvar0 in obj0) {
try { if (Inst29 <= 1000 && typeof (_strvar0) != "undefined") {_RecordType("<887,895,33>",(_strvar0)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<899,903,33>",(obj0)); Inst30++; } } catch(e) {}
    FloatArr0[5] = 1;
try { if (Inst31 <= 1000 && typeof (FloatArr0[5]) != "undefined") {_RecordType("<911,923,34>",(FloatArr0[5])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<911,920,34>",(FloatArr0)); Inst32++; } } catch(e) {}

    if (!0) {
try { if (Inst33 <= 1000 && typeof (makeArrayLength) != "undefined") {_RecordType("<950,965,37>",(makeArrayLength)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (c) != "undefined") {_RecordType("<966,967,37>",(c)); Inst34++; } } catch(e) {}
      makeArrayLength(c++);
    }
  }
}

try { if (Inst35 <= 1000 && typeof (test0) != "undefined") {_RecordType("<985,990,42>",(test0)); Inst35++; } } catch(e) {}
test0();
try { if (Inst36 <= 1000 && typeof (test0) != "undefined") {_RecordType("<994,999,43>",(test0)); Inst36++; } } catch(e) {}
test0();
try { if (Inst37 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1003,1008,44>",(test0)); Inst37++; } } catch(e) {}
test0();
try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<1012,1017,45>",(print)); Inst38++; } } catch(e) {}
print("Pass");

