var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<376,385,5>",(DumpArray)); Inst0++; } } catch(e) {}
function DumpArray(array) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<386,391,5>",(array)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<397,402,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (array.join) != "undefined") {_RecordType("<409,419,6>",(array.join)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<409,414,6>",(array)); Inst4++; } } catch(e) {}
  print("[" + array.join(",") + "]");
}

try { if (Inst5 <= 1000 && typeof (literalOfInts) != "undefined") {_RecordType("<445,458,9>",(literalOfInts)); Inst5++; } } catch(e) {}
function literalOfInts() {
  var array = [3, 4, 5, 6, 7, 8];
try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<469,474,10>",(array)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<499,508,11>",(DumpArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<509,514,11>",(array)); Inst8++; } } catch(e) {}
  DumpArray(array);
  var array_large = [3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8, 3, 4, 5, 6, 7, 8];
try { if (Inst9 <= 1000 && typeof (array_large) != "undefined") {_RecordType("<523,534,12>",(array_large)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<1531,1540,13>",(DumpArray)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array_large) != "undefined") {_RecordType("<1541,1552,13>",(array_large)); Inst11++; } } catch(e) {}
  DumpArray(array_large);
}

try { if (Inst12 <= 1000 && typeof (literalOfFloats) != "undefined") {_RecordType("<1567,1582,16>",(literalOfFloats)); Inst12++; } } catch(e) {}
function literalOfFloats() {
  var array = [3.5, 4, 5, 6, 7, 23.23];
try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<1593,1598,17>",(array)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<1629,1638,18>",(DumpArray)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<1639,1644,18>",(array)); Inst15++; } } catch(e) {}
  DumpArray(array); // more than 64 elements

  var array_large = [3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23, 3.5, 4, 5, 6, 7, 23.23];
try { if (Inst16 <= 1000 && typeof (array_large) != "undefined") {_RecordType("<1679,1690,20>",(array_large)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<3017,3026,21>",(DumpArray)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array_large) != "undefined") {_RecordType("<3027,3038,21>",(array_large)); Inst18++; } } catch(e) {}
  DumpArray(array_large);
}

try { if (Inst19 <= 1000 && typeof (otherLiteral) != "undefined") {_RecordType("<3053,3065,24>",(otherLiteral)); Inst19++; } } catch(e) {}
function otherLiteral() {
  var array = [];
try { if (Inst20 <= 1000 && typeof (array) != "undefined") {_RecordType("<3076,3081,25>",(array)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<3090,3099,26>",(DumpArray)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<3100,3105,26>",(array)); Inst22++; } } catch(e) {}
  DumpArray(array);
  array[3] = 32;
try { if (Inst23 <= 1000 && typeof (array[3]) != "undefined") {_RecordType("<3110,3118,27>",(array[3])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (array) != "undefined") {_RecordType("<3110,3115,27>",(array)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<3127,3136,28>",(DumpArray)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array) != "undefined") {_RecordType("<3137,3142,28>",(array)); Inst26++; } } catch(e) {}
  DumpArray(array);
try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3165,3171,29>",(Object)); Inst28++; } } catch(e) {}
  var array1 = [new Object()];
try { if (Inst27 <= 1000 && typeof (array1) != "undefined") {_RecordType("<3151,3157,29>",(array1)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3196,3202,30>",(Object)); Inst30++; } } catch(e) {}
  var array1 = [new Object()];
try { if (Inst29 <= 1000 && typeof (array1) != "undefined") {_RecordType("<3182,3188,30>",(array1)); Inst29++; } } catch(e) {}
}

try { if (Inst31 <= 1000 && typeof (complexLiteral) != "undefined") {_RecordType("<3219,3233,33>",(complexLiteral)); Inst31++; } } catch(e) {}
function complexLiteral() {
try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3257,3263,34>",(Object)); Inst33++; } } catch(e) {}
  var array = [new Object(), 4, function () {
    ;
  }, 6, 7, 23.23];
try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<3244,3249,34>",(array)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (DumpArray) != "undefined") {_RecordType("<3311,3320,37>",(DumpArray)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (array) != "undefined") {_RecordType("<3321,3326,37>",(array)); Inst35++; } } catch(e) {}
  DumpArray(array); // Make the array1 itself dead and ensure that the code still works correctly with -recyclerstress

try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3449,3455,39>",(Object)); Inst37++; } } catch(e) {}
  var array1 = [new Object(), 4, function () {
    ;
  }, 6, 7, 23.23];
try { if (Inst36 <= 1000 && typeof (array1) != "undefined") {_RecordType("<3435,3441,39>",(array1)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3521,3527,42>",(Object)); Inst39++; } } catch(e) {}
  var array1 = [new Object(), 4, function () {
    ;
  }, 6, 7, 23.23];
try { if (Inst38 <= 1000 && typeof (array1) != "undefined") {_RecordType("<3507,3513,42>",(array1)); Inst38++; } } catch(e) {}
}

try { if (Inst40 <= 1000 && typeof (literalOfInts) != "undefined") {_RecordType("<3576,3589,47>",(literalOfInts)); Inst40++; } } catch(e) {}
literalOfInts();
try { if (Inst41 <= 1000 && typeof (literalOfFloats) != "undefined") {_RecordType("<3593,3608,48>",(literalOfFloats)); Inst41++; } } catch(e) {}
literalOfFloats();
try { if (Inst42 <= 1000 && typeof (otherLiteral) != "undefined") {_RecordType("<3612,3624,49>",(otherLiteral)); Inst42++; } } catch(e) {}
otherLiteral();
try { if (Inst43 <= 1000 && typeof (complexLiteral) != "undefined") {_RecordType("<3628,3642,50>",(complexLiteral)); Inst43++; } } catch(e) {}
complexLiteral();

