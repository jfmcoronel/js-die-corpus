var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//Note: see function  ArraySpliceHelper of JavascriptArray.cpp
var FloatArr0 = [9.2];
try { if (Inst0 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<434,443,6>",(FloatArr0)); Inst0++; } } catch(e) {}
var b = -9;
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<457,458,7>",(b)); Inst1++; } } catch(e) {}
FloatArr0[8] = 1;
try { if (Inst2 <= 1000 && typeof (FloatArr0[8]) != "undefined") {_RecordType("<465,477,8>",(FloatArr0[8])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<465,474,8>",(FloatArr0)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (FloatArr0.splice) != "undefined") {_RecordType("<495,511,9>",(FloatArr0.splice)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<495,504,9>",(FloatArr0)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<512,513,9>",(b)); Inst7++; } } catch(e) {}
var v5432 = FloatArr0.splice(b); // By definition of Splice, this should make FloatArr0 empty and v5432 as the new
try { if (Inst4 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<487,492,9>",(v5432)); Inst4++; } } catch(e) {}
// array with deleted values

try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<628,633,12>",(print)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v5432.valueOf) != "undefined") {_RecordType("<634,647,12>",(v5432.valueOf)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<634,639,12>",(v5432)); Inst10++; } } catch(e) {}
print(v5432.valueOf()); // Works Fine

try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<667,672,14>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v5432.toString) != "undefined") {_RecordType("<673,687,14>",(v5432.toString)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<673,678,14>",(v5432)); Inst13++; } } catch(e) {}
print(v5432.toString() == "9.2,,,,,,,,1");
var FloatArr0 = [];
try { if (Inst14 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<714,723,15>",(FloatArr0)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<730,735,16>",(print)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (v5432.valueOf) != "undefined") {_RecordType("<736,749,16>",(v5432.valueOf)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<736,741,16>",(v5432)); Inst17++; } } catch(e) {}
print(v5432.valueOf()); // BOOM, assert

try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<771,776,18>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v5432.toString) != "undefined") {_RecordType("<777,791,18>",(v5432.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<777,782,18>",(v5432)); Inst20++; } } catch(e) {}
print(v5432.toString() == "9.2,,,,,,,,1");
var FloatArr1 = [9.2];
try { if (Inst21 <= 1000 && typeof (FloatArr1) != "undefined") {_RecordType("<818,827,19>",(FloatArr1)); Inst21++; } } catch(e) {}
var b = -9;
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<841,842,20>",(b)); Inst22++; } } catch(e) {}
FloatArr1[8] = 1;
try { if (Inst23 <= 1000 && typeof (FloatArr1[8]) != "undefined") {_RecordType("<849,861,21>",(FloatArr1[8])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (FloatArr1) != "undefined") {_RecordType("<849,858,21>",(FloatArr1)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (FloatArr1[0]) != "undefined") {_RecordType("<874,886,22>",(FloatArr1[0])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (FloatArr1) != "undefined") {_RecordType("<874,883,22>",(FloatArr1)); Inst26++; } } catch(e) {}
delete FloatArr1[0];
try { if (Inst28 <= 1000 && typeof (FloatArr1.splice) != "undefined") {_RecordType("<900,916,23>",(FloatArr1.splice)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (FloatArr1) != "undefined") {_RecordType("<900,909,23>",(FloatArr1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<917,918,23>",(b)); Inst30++; } } catch(e) {}
var v5432 = FloatArr1.splice(b); // By definition of Splice, this should make FloatArr0 empty and v5432 as the new
try { if (Inst27 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<892,897,23>",(v5432)); Inst27++; } } catch(e) {}
// array with deleted values

try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<1033,1038,26>",(print)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (v5432.valueOf) != "undefined") {_RecordType("<1039,1052,26>",(v5432.valueOf)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<1039,1044,26>",(v5432)); Inst33++; } } catch(e) {}
print(v5432.valueOf()); // Works Fine

try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<1072,1077,28>",(print)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (v5432.toString) != "undefined") {_RecordType("<1078,1092,28>",(v5432.toString)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<1078,1083,28>",(v5432)); Inst36++; } } catch(e) {}
print(v5432.toString() == ",,,,,,,,1");
var FloatArr1 = [];
try { if (Inst37 <= 1000 && typeof (FloatArr1) != "undefined") {_RecordType("<1116,1125,29>",(FloatArr1)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<1132,1137,30>",(print)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (v5432.valueOf) != "undefined") {_RecordType("<1138,1151,30>",(v5432.valueOf)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<1138,1143,30>",(v5432)); Inst40++; } } catch(e) {}
print(v5432.valueOf()); // BOOM, assert

try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<1173,1178,32>",(print)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (v5432.toString) != "undefined") {_RecordType("<1179,1193,32>",(v5432.toString)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (v5432) != "undefined") {_RecordType("<1179,1184,32>",(v5432)); Inst43++; } } catch(e) {}
print(v5432.toString() == ",,,,,,,,1");
var IntArr0 = [9];
try { if (Inst44 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<1217,1224,33>",(IntArr0)); Inst44++; } } catch(e) {}
var b = -9;
try { if (Inst45 <= 1000 && typeof (b) != "undefined") {_RecordType("<1236,1237,34>",(b)); Inst45++; } } catch(e) {}
IntArr0[8] = 1;
try { if (Inst46 <= 1000 && typeof (IntArr0[8]) != "undefined") {_RecordType("<1244,1254,35>",(IntArr0[8])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<1244,1251,35>",(IntArr0)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (IntArr0.splice) != "undefined") {_RecordType("<1276,1290,36>",(IntArr0.splice)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<1276,1283,36>",(IntArr0)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (b) != "undefined") {_RecordType("<1291,1292,36>",(b)); Inst51++; } } catch(e) {}
var intDelArr = IntArr0.splice(b); // By definition of Splice, this should make IntArr0 empty and intDelArr as the new
try { if (Inst48 <= 1000 && typeof (intDelArr) != "undefined") {_RecordType("<1264,1273,36>",(intDelArr)); Inst48++; } } catch(e) {}
// array with deleted values

try { if (Inst52 <= 1000 && typeof (print) != "undefined") {_RecordType("<1409,1414,39>",(print)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (intDelArr.valueOf) != "undefined") {_RecordType("<1415,1432,39>",(intDelArr.valueOf)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (intDelArr) != "undefined") {_RecordType("<1415,1424,39>",(intDelArr)); Inst54++; } } catch(e) {}
print(intDelArr.valueOf()); // Works Fine

try { if (Inst55 <= 1000 && typeof (print) != "undefined") {_RecordType("<1452,1457,41>",(print)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (intDelArr.toString) != "undefined") {_RecordType("<1458,1476,41>",(intDelArr.toString)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (intDelArr) != "undefined") {_RecordType("<1458,1467,41>",(intDelArr)); Inst57++; } } catch(e) {}
print(intDelArr.toString() == "9,,,,,,,,1");
var IntArr0 = [];
try { if (Inst58 <= 1000 && typeof (IntArr0) != "undefined") {_RecordType("<1501,1508,42>",(IntArr0)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (print) != "undefined") {_RecordType("<1515,1520,43>",(print)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (intDelArr.valueOf) != "undefined") {_RecordType("<1521,1538,43>",(intDelArr.valueOf)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (intDelArr) != "undefined") {_RecordType("<1521,1530,43>",(intDelArr)); Inst61++; } } catch(e) {}
print(intDelArr.valueOf()); // BOOM, assert

try { if (Inst62 <= 1000 && typeof (print) != "undefined") {_RecordType("<1560,1565,45>",(print)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (intDelArr.toString) != "undefined") {_RecordType("<1566,1584,45>",(intDelArr.toString)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (intDelArr) != "undefined") {_RecordType("<1566,1575,45>",(intDelArr)); Inst64++; } } catch(e) {}
print(intDelArr.toString() == "9,,,,,,,,1");
var StringArr0 = ["hello"];
try { if (Inst65 <= 1000 && typeof (StringArr0) != "undefined") {_RecordType("<1609,1619,46>",(StringArr0)); Inst65++; } } catch(e) {}
var b = -9;
try { if (Inst66 <= 1000 && typeof (b) != "undefined") {_RecordType("<1637,1638,47>",(b)); Inst66++; } } catch(e) {}
StringArr0[8] = "hi";
try { if (Inst67 <= 1000 && typeof (StringArr0[8]) != "undefined") {_RecordType("<1645,1658,48>",(StringArr0[8])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (StringArr0) != "undefined") {_RecordType("<1645,1655,48>",(StringArr0)); Inst68++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (StringArr0.splice) != "undefined") {_RecordType("<1683,1700,49>",(StringArr0.splice)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (StringArr0) != "undefined") {_RecordType("<1683,1693,49>",(StringArr0)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (b) != "undefined") {_RecordType("<1701,1702,49>",(b)); Inst72++; } } catch(e) {}
var strDelArr = StringArr0.splice(b); // By definition of Splice, this should make StringArr0 empty and strDelArr as the new
try { if (Inst69 <= 1000 && typeof (strDelArr) != "undefined") {_RecordType("<1671,1680,49>",(strDelArr)); Inst69++; } } catch(e) {}
// array with deleted values

try { if (Inst73 <= 1000 && typeof (print) != "undefined") {_RecordType("<1822,1827,52>",(print)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (strDelArr.valueOf) != "undefined") {_RecordType("<1828,1845,52>",(strDelArr.valueOf)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (strDelArr) != "undefined") {_RecordType("<1828,1837,52>",(strDelArr)); Inst75++; } } catch(e) {}
print(strDelArr.valueOf()); // Works Fine

try { if (Inst76 <= 1000 && typeof (print) != "undefined") {_RecordType("<1865,1870,54>",(print)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (strDelArr.toString) != "undefined") {_RecordType("<1871,1889,54>",(strDelArr.toString)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (strDelArr) != "undefined") {_RecordType("<1871,1880,54>",(strDelArr)); Inst78++; } } catch(e) {}
print(strDelArr.toString() == "hello,,,,,,,,hi");
var StringArr0 = ["bar"];
try { if (Inst79 <= 1000 && typeof (StringArr0) != "undefined") {_RecordType("<1919,1929,55>",(StringArr0)); Inst79++; } } catch(e) {}
try { if (Inst80 <= 1000 && typeof (print) != "undefined") {_RecordType("<1941,1946,56>",(print)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (strDelArr.valueOf) != "undefined") {_RecordType("<1947,1964,56>",(strDelArr.valueOf)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (strDelArr) != "undefined") {_RecordType("<1947,1956,56>",(strDelArr)); Inst82++; } } catch(e) {}
print(strDelArr.valueOf()); // BOOM, assert

try { if (Inst83 <= 1000 && typeof (print) != "undefined") {_RecordType("<1986,1991,58>",(print)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (strDelArr.toString) != "undefined") {_RecordType("<1992,2010,58>",(strDelArr.toString)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (strDelArr) != "undefined") {_RecordType("<1992,2001,58>",(strDelArr)); Inst85++; } } catch(e) {}
print(strDelArr.toString() == "hello,,,,,,,,hi");

