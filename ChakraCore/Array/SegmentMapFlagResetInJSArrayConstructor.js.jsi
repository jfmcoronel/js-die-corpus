var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var shouldBailout = false;
try { if (Inst0 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<371,384,5>",(shouldBailout)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<404,409,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
  var FloatArr0 = [231762358, -2147483648, 438008391, 138, 2.12355879560872E+18];
try { if (Inst2 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<420,429,8>",(FloatArr0)); Inst2++; } } catch(e) {}
  FloatArr0[12] = 1;
try { if (Inst3 <= 1000 && typeof (FloatArr0[12]) != "undefined") {_RecordType("<498,511,9>",(FloatArr0[12])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<498,507,9>",(FloatArr0)); Inst4++; } } catch(e) {}
  FloatArr0[6] = 1;
try { if (Inst5 <= 1000 && typeof (FloatArr0[6]) != "undefined") {_RecordType("<519,531,10>",(FloatArr0[6])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<519,528,10>",(FloatArr0)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (FloatArr0[(shouldBailout ? FloatArr0[1] = 'x' : undefined, 1)]) != "undefined") {_RecordType("<544,606,12>",(FloatArr0[(shouldBailout ? FloatArr0[1] = 'x' : undefined, 1)])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<544,553,12>",(FloatArr0)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<555,568,12>",(shouldBailout)); Inst9++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<592,601,12>",(undefined)); Inst12++; } } catch(e) {}
  if (FloatArr0[(shouldBailout ? FloatArr0[1] = 'x' : undefined, 1)]) {
    ;
  }
try { if (Inst10 <= 1000 && typeof (FloatArr0[1]) != "undefined") {_RecordType("<571,583,12>",(FloatArr0[1])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<571,580,12>",(FloatArr0)); Inst11++; } } catch(e) {}
}

; // generate profile

try { if (Inst13 <= 1000 && typeof (test0) != "undefined") {_RecordType("<646,651,19>",(test0)); Inst13++; } } catch(e) {}
test0(); // Run Simple JIT

try { if (Inst14 <= 1000 && typeof (test0) != "undefined") {_RecordType("<674,679,21>",(test0)); Inst14++; } } catch(e) {}
test0();
try { if (Inst15 <= 1000 && typeof (test0) != "undefined") {_RecordType("<683,688,22>",(test0)); Inst15++; } } catch(e) {}
test0(); // run JITted code

runningJITtedCode = true;
try { if (Inst16 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<712,729,24>",(runningJITtedCode)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (test0) != "undefined") {_RecordType("<738,743,25>",(test0)); Inst17++; } } catch(e) {}
test0(); // run code with bailouts enabled

shouldBailout = true;
try { if (Inst18 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<782,795,27>",(shouldBailout)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<804,809,28>",(test0)); Inst19++; } } catch(e) {}
test0();
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<813,818,29>",(print)); Inst20++; } } catch(e) {}
print("Pass");

