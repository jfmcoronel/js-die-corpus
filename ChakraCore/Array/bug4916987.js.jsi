var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//Baseline switches:
//Switches: -mic:1 -off:simplejit
try { if (Inst1 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<449,461,7>",(Float64Array)); Inst1++; } } catch(e) {}
var Float64ArrayView = new Float64Array();
try { if (Inst0 <= 1000 && typeof (Float64ArrayView) != "undefined") {_RecordType("<426,442,7>",(Float64ArrayView)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<490,500,8>",(Int32Array)); Inst3++; } } catch(e) {}
var Int32ArrayView = new Int32Array();
try { if (Inst2 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<469,483,8>",(Int32ArrayView)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (m) != "undefined") {_RecordType("<514,515,10>",(m)); Inst4++; } } catch(e) {}
function m(v) {
try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<516,517,10>",(v)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<573,574,11>",(v)); Inst8++; } } catch(e) {}
  Float64ArrayView[0x4 * (0x80000001 >> !1) >> 0] = v;
try { if (Inst6 <= 1000 && typeof (Float64ArrayView[0x4 * (0x80000001 >> !1) >> 0]) != "undefined") {_RecordType("<523,570,11>",(Float64ArrayView[0x4 * (0x80000001 >> !1) >> 0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Float64ArrayView) != "undefined") {_RecordType("<523,539,11>",(Float64ArrayView)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (v) != "undefined") {_RecordType("<626,627,12>",(v)); Inst11++; } } catch(e) {}
  Int32ArrayView[0x4 * (0x80000001 >> !1) >> 0] = v;
try { if (Inst9 <= 1000 && typeof (Int32ArrayView[0x4 * (0x80000001 >> !1) >> 0]) != "undefined") {_RecordType("<578,623,12>",(Int32ArrayView[0x4 * (0x80000001 >> !1) >> 0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<578,592,12>",(Int32ArrayView)); Inst10++; } } catch(e) {}
}

var val = 3.1415926535;
try { if (Inst12 <= 1000 && typeof (val) != "undefined") {_RecordType("<636,639,15>",(val)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (m) != "undefined") {_RecordType("<656,657,16>",(m)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (val) != "undefined") {_RecordType("<658,661,16>",(val)); Inst14++; } } catch(e) {}
m(val);
val = 123456789.123456789;
try { if (Inst15 <= 1000 && typeof (val) != "undefined") {_RecordType("<664,667,17>",(val)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (m) != "undefined") {_RecordType("<691,692,18>",(m)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (val) != "undefined") {_RecordType("<693,696,18>",(val)); Inst17++; } } catch(e) {}
m(val);
try { if (Inst19 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<722,734,19>",(Float64Array)); Inst19++; } } catch(e) {}
Float64ArrayView = new Float64Array(16);
try { if (Inst18 <= 1000 && typeof (Float64ArrayView) != "undefined") {_RecordType("<699,715,19>",(Float64ArrayView)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<761,771,20>",(Int32Array)); Inst21++; } } catch(e) {}
Int32ArrayView = new Int32Array(16);
try { if (Inst20 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<740,754,20>",(Int32ArrayView)); Inst20++; } } catch(e) {}
val = 987654321.987654321;
try { if (Inst22 <= 1000 && typeof (val) != "undefined") {_RecordType("<777,780,21>",(val)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (m) != "undefined") {_RecordType("<804,805,22>",(m)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (val) != "undefined") {_RecordType("<806,809,22>",(val)); Inst24++; } } catch(e) {}
m(val);

try { if (Inst25 <= 1000 && typeof (Float64ArrayView[4]) != "undefined") {_RecordType("<817,836,24>",(Float64ArrayView[4])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Float64ArrayView) != "undefined") {_RecordType("<817,833,24>",(Float64ArrayView)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (val) != "undefined") {_RecordType("<841,844,24>",(val)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Int32ArrayView[4]) != "undefined") {_RecordType("<848,865,24>",(Int32ArrayView[4])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<848,862,24>",(Int32ArrayView)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (val) != "undefined") {_RecordType("<871,874,24>",(val)); Inst30++; } } catch(e) {}
if (Float64ArrayView[4] === val && Int32ArrayView[4] === (val | 0)) {
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<885,890,25>",(print)); Inst31++; } } catch(e) {}
  print("PASSED");
} else {
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<913,918,27>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Float64ArrayView[4]) != "undefined") {_RecordType("<919,938,27>",(Float64ArrayView[4])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Float64ArrayView) != "undefined") {_RecordType("<919,935,27>",(Float64ArrayView)); Inst34++; } } catch(e) {}
  print(Float64ArrayView[4]);
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<943,948,28>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Int32ArrayView[4]) != "undefined") {_RecordType("<949,966,28>",(Int32ArrayView[4])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<949,963,28>",(Int32ArrayView)); Inst37++; } } catch(e) {}
  print(Int32ArrayView[4]);
try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<971,976,29>",(print)); Inst38++; } } catch(e) {}
  print("FAILED");
}

