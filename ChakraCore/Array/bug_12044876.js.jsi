var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//switches: -forcearraybtree
// x86debug: lib\runtime\Library/JavascriptArray.inl, current->left >= lastindex
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<486,491,7>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var arr = [4294967296];
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<502,505,8>",(arr)); Inst1++; } } catch(e) {}
  arr[9] = 19;
try { if (Inst2 <= 1000 && typeof (arr[9]) != "undefined") {_RecordType("<524,530,9>",(arr[9])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<524,527,9>",(arr)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (arr.unshift) != "undefined") {_RecordType("<539,550,10>",(arr.unshift)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<539,542,10>",(arr)); Inst5++; } } catch(e) {}
  arr.unshift(1, 2, {}, 4, 5, 6, 7, 8, 9, 10, 11, 12);
} // x64debug: lib\Runtime\Library\SparseArraySegment.cpp, length <= size


try { if (Inst6 <= 1000 && typeof (test1) != "undefined") {_RecordType("<677,682,14>",(test1)); Inst6++; } } catch(e) {}
function test1() {
try { if (Inst7 <= 1000 && typeof (makeArrayLength) != "undefined") {_RecordType("<698,713,15>",(makeArrayLength)); Inst7++; } } catch(e) {}
  function makeArrayLength() {
    return 100;
  }

  var obj0 = {};
try { if (Inst8 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<745,749,19>",(obj0)); Inst8++; } } catch(e) {}
  var protoObj0 = {};
try { if (Inst9 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<762,771,20>",(protoObj0)); Inst9++; } } catch(e) {}
  var obj1 = {};
try { if (Inst10 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<784,788,21>",(obj1)); Inst10++; } } catch(e) {}
  var arrObj0 = {};
try { if (Inst11 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<801,808,22>",(arrObj0)); Inst11++; } } catch(e) {}

  var func0 = function () {
    ;
  };
try { if (Inst12 <= 1000 && typeof (func0) != "undefined") {_RecordType("<822,827,24>",(func0)); Inst12++; } } catch(e) {}

  var func1 = function () {
    ;
  };
try { if (Inst13 <= 1000 && typeof (func1) != "undefined") {_RecordType("<862,867,28>",(func1)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (func0) != "undefined") {_RecordType("<913,918,32>",(func0)); Inst16++; } } catch(e) {}
  obj0.method1 = func0;
try { if (Inst14 <= 1000 && typeof (obj0.method1) != "undefined") {_RecordType("<898,910,32>",(obj0.method1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<898,902,32>",(obj0)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<932,937,33>",(Array)); Inst18++; } } catch(e) {}
  var ary = Array();
try { if (Inst17 <= 1000 && typeof (ary) != "undefined") {_RecordType("<926,929,33>",(ary)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<961,966,34>",(Array)); Inst20++; } } catch(e) {}
  var IntArr1 = new Array();
try { if (Inst19 <= 1000 && typeof (IntArr1) != "undefined") {_RecordType("<947,954,34>",(IntArr1)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<987,997,35>",(obj1.prop0)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<987,991,35>",(obj1)); Inst24++; } } catch(e) {}
  IntArr1[15] = ~obj1.prop0;
try { if (Inst21 <= 1000 && typeof (IntArr1[15]) != "undefined") {_RecordType("<972,983,35>",(IntArr1[15])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (IntArr1) != "undefined") {_RecordType("<972,979,35>",(IntArr1)); Inst22++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (makeArrayLength) != "undefined") {_RecordType("<1018,1033,36>",(makeArrayLength)); Inst27++; } } catch(e) {}
  arrObj0.length = makeArrayLength();
try { if (Inst25 <= 1000 && typeof (arrObj0.length) != "undefined") {_RecordType("<1001,1015,36>",(arrObj0.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<1001,1008,36>",(arrObj0)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (arrObj0.length) != "undefined") {_RecordType("<1053,1067,37>",(arrObj0.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<1053,1060,37>",(arrObj0)); Inst31++; } } catch(e) {}
  IntArr1[10] = arrObj0.length;
try { if (Inst28 <= 1000 && typeof (IntArr1[10]) != "undefined") {_RecordType("<1039,1050,37>",(IntArr1[10])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (IntArr1) != "undefined") {_RecordType("<1039,1046,37>",(IntArr1)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (makeArrayLength) != "undefined") {_RecordType("<1071,1086,38>",(makeArrayLength)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (IntArr1.unshift) != "undefined") {_RecordType("<1087,1102,38>",(IntArr1.unshift)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (IntArr1) != "undefined") {_RecordType("<1087,1094,38>",(IntArr1)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (func1) != "undefined") {_RecordType("<1103,1108,38>",(func1)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1112,1115,38>",(ary)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj0.method1) != "undefined") {_RecordType("<1117,1129,38>",(obj0.method1)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1117,1121,38>",(obj0)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<1133,1142,38>",(protoObj0)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1144,1150,38>",(Object)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<1154,1161,38>",(arrObj0)); Inst41++; } } catch(e) {}
  makeArrayLength(IntArr1.unshift(func1(), ary, obj0.method1(), protoObj0, Object(), arrObj0, -1877547837));
}

try { if (Inst42 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1181,1186,41>",(test0)); Inst42++; } } catch(e) {}
test0();
try { if (Inst43 <= 1000 && typeof (test1) != "undefined") {_RecordType("<1190,1195,42>",(test1)); Inst43++; } } catch(e) {}
test1();
try { if (Inst44 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1199,1210,43>",(console.log)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (console) != "undefined") {_RecordType("<1199,1206,43>",(console)); Inst45++; } } catch(e) {}
console.log("Pass");

