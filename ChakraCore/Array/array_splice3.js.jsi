var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<378,383,5>",(print)); Inst1++; } } catch(e) {}
var echo = print; // no argument
try { if (Inst0 <= 1000 && typeof (echo) != "undefined") {_RecordType("<371,375,5>",(echo)); Inst0++; } } catch(e) {}

var a = [0, 1, 2, 3, 4];
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<405,406,7>",(a)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (echo) != "undefined") {_RecordType("<426,430,8>",(echo)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<449,450,8>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<458,466,8>",(a.splice)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<458,459,8>",(a)); Inst6++; } } catch(e) {}
echo("splice no arg:", a, "||", a.splice()); // "start" only

var starts = [-2, 0, 2, 8];
try { if (Inst7 <= 1000 && typeof (starts) != "undefined") {_RecordType("<492,498,10>",(starts)); Inst7++; } } catch(e) {}

for (var i = 0; i < starts.length; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<526,527,12>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<533,534,12>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (starts.length) != "undefined") {_RecordType("<537,550,12>",(starts.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (starts) != "undefined") {_RecordType("<537,543,12>",(starts)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<552,553,12>",(i)); Inst12++; } } catch(e) {}
  var a = [0, 1, 2, 3, 4];
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<565,566,13>",(a)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (starts[i]) != "undefined") {_RecordType("<600,609,14>",(starts[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (starts) != "undefined") {_RecordType("<600,606,14>",(starts)); Inst16++; } } catch(e) {}
  var start = starts[i];
try { if (Inst14 <= 1000 && typeof (start) != "undefined") {_RecordType("<592,597,14>",(start)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (echo) != "undefined") {_RecordType("<613,617,15>",(echo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (start) != "undefined") {_RecordType("<633,638,15>",(start)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<646,647,15>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<655,663,15>",(a.splice)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<655,656,15>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (start) != "undefined") {_RecordType("<664,669,15>",(start)); Inst22++; } } catch(e) {}
  echo("splice at " + start + ":", a, "||", a.splice(start));
}

