var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
"use strict";

try { if (Inst0 <= 1000 && typeof (func) != "undefined") {_RecordType("<391,395,7>",(func)); Inst0++; } } catch(e) {}
function func(a, b, c) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<396,397,7>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<399,400,7>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<402,403,7>",(c)); Inst3++; } } catch(e) {}
  a[0] = 1.2;
try { if (Inst4 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<409,413,8>",(a[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<409,410,8>",(a)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<430,431,9>",(c)); Inst8++; } } catch(e) {}
  b[0] = c;
try { if (Inst6 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<423,427,9>",(b[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<423,424,9>",(b)); Inst7++; } } catch(e) {}
  a[1] = 2.2;
try { if (Inst9 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<435,439,10>",(a[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<435,436,10>",(a)); Inst10++; } } catch(e) {}
  a[0] = 2.3023e-320;
try { if (Inst11 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<449,453,11>",(a[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<449,450,11>",(a)); Inst12++; } } catch(e) {}
}

try { if (Inst13 <= 1000 && typeof (main) != "undefined") {_RecordType("<481,485,14>",(main)); Inst13++; } } catch(e) {}
function main() {
  var a = [1.1, 2.2];
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<496,497,15>",(a)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<526,537,16>",(Uint32Array)); Inst16++; } } catch(e) {}
  var b = new Uint32Array(100); // force to optimize
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<518,519,16>",(b)); Inst15++; } } catch(e) {}

  for (var i = 0; i < 0x10000; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<577,578,18>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<584,585,18>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<597,598,18>",(i)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (func) != "undefined") {_RecordType("<608,612,19>",(func)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<613,614,19>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<616,617,19>",(b)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<619,620,19>",(i)); Inst23++; } } catch(e) {}
    func(a, b, i);
  }

try { if (Inst24 <= 1000 && typeof (func) != "undefined") {_RecordType("<630,634,22>",(func)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<635,636,22>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<638,639,22>",(b)); Inst26++; } } catch(e) {}
  func(a, b, {
    valueOf: function () {
      a[0] = {};
try { if (Inst27 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<676,680,24>",(a[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<676,677,24>",(a)); Inst28++; } } catch(e) {}
      return 0;
    }
  });
try { if (Inst29 <= 1000 && typeof (a[0].toString) != "undefined") {_RecordType("<717,730,28>",(a[0].toString)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<717,721,28>",(a[0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<717,718,28>",(a)); Inst31++; } } catch(e) {}
  a[0].toString();
}

try { if (Inst32 <= 1000 && typeof (main) != "undefined") {_RecordType("<737,741,31>",(main)); Inst32++; } } catch(e) {}
main();
try { if (Inst33 <= 1000 && typeof (WScript.Echo) != "undefined") {_RecordType("<745,757,32>",(WScript.Echo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (WScript) != "undefined") {_RecordType("<745,752,32>",(WScript)); Inst34++; } } catch(e) {}
WScript.Echo('pass');

