var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (q28) != "undefined") {_RecordType("<376,379,5>",(q28)); Inst0++; } } catch(e) {}
function q28() {
  var Array = function (i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<408,409,6>",(i)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<417,422,7>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,7>",(i)); Inst4++; } } catch(e) {}
    print(i);
  };
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<390,395,6>",(Array)); Inst1++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<444,449,10>",(Array)); Inst6++; } } catch(e) {}
  ct = new Array(114, 101, 100, 32, 79, 112, 101, 110, 67, 117, 98, 101, 32, 68, 72, 84, 77, 76, 32, 69, 102, 102, 101, 99, 116, 32, 45, 32, 40, 119, 119, 119, 46, 111, 112, 101, 110, 99, 117, 98, 101, 46, 99, 111, 109, 41);
try { if (Inst5 <= 1000 && typeof (ct) != "undefined") {_RecordType("<435,437,10>",(ct)); Inst5++; } } catch(e) {}
}

;
try { if (Inst7 <= 1000 && typeof (q28) != "undefined") {_RecordType("<663,666,14>",(q28)); Inst7++; } } catch(e) {}
q28();

