var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var Failed = 0;
try { if (Inst0 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<371,377,5>",(Failed)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<393,399,7>",(FAILED)); Inst1++; } } catch(e) {}
function FAILED() {
try { if (Inst2 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<406,412,8>",(Failed)); Inst2++; } } catch(e) {}
  Failed++;
}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<428,432,11>",(test)); Inst3++; } } catch(e) {}
function test(a, b) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<433,434,11>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<436,437,11>",(b)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<448,449,12>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<464,465,12>",(b)); Inst7++; } } catch(e) {}
  if ((a | 0) >>> 0 > (b | 0) >>> 0) {
    return true;
  } else {
    return false;
  }
}

try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<542,545,19>",(foo)); Inst8++; } } catch(e) {}
function foo() {
  return 1;
}

try { if (Inst9 <= 1000 && typeof (bar) != "undefined") {_RecordType("<574,577,23>",(bar)); Inst9++; } } catch(e) {}
function bar() {
  return -1;
}

try { if (Inst10 <= 1000 && typeof (test2) != "undefined") {_RecordType("<607,612,27>",(test2)); Inst10++; } } catch(e) {}
function test2(a, f) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<613,614,27>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<616,617,27>",(f)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<628,629,28>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<644,645,28>",(f)); Inst14++; } } catch(e) {}
  if ((a | 0) >>> 0 > (f() | 0) >>> 0) {
    return true;
  } else {
    return false;
  }
}

for (var i = 0; i < 50; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<724,725,35>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<731,732,35>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<739,740,35>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<753,757,36>",(test)); Inst18++; } } catch(e) {}
  if (!test(-1, 1)) {
try { if (Inst19 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<772,778,37>",(FAILED)); Inst19++; } } catch(e) {}
    FAILED();
  }

try { if (Inst20 <= 1000 && typeof (test2) != "undefined") {_RecordType("<794,799,40>",(test2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<804,807,40>",(foo)); Inst21++; } } catch(e) {}
  if (!test2(-1, foo)) {
try { if (Inst22 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<816,822,41>",(FAILED)); Inst22++; } } catch(e) {}
    FAILED();
  }
}

try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<837,841,45>",(test)); Inst23++; } } catch(e) {}
if (test(1, -1)) {
try { if (Inst24 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<854,860,46>",(FAILED)); Inst24++; } } catch(e) {}
  FAILED();
}

try { if (Inst25 <= 1000 && typeof (test) != "undefined") {_RecordType("<872,876,49>",(test)); Inst25++; } } catch(e) {}
if (!test(-1, (-1 >>> 0) + 10)) {
try { if (Inst26 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<903,909,50>",(FAILED)); Inst26++; } } catch(e) {}
  FAILED();
} // Force bailout


try { if (Inst27 <= 1000 && typeof (test2) != "undefined") {_RecordType("<938,943,54>",(test2)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (bar) != "undefined") {_RecordType("<947,950,54>",(bar)); Inst28++; } } catch(e) {}
if (test2(1, bar)) {
try { if (Inst29 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<957,963,55>",(FAILED)); Inst29++; } } catch(e) {}
  FAILED();
}

try { if (Inst30 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<974,980,58>",(Failed)); Inst30++; } } catch(e) {}
if (Failed == 0) {
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<991,996,59>",(print)); Inst31++; } } catch(e) {}
  print("Passed");
} else {
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1019,1024,61>",(print)); Inst32++; } } catch(e) {}
  print("FAILED");
}

