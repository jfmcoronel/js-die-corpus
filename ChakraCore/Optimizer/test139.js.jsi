var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var o = {
    p0: 0,
    p1: 1
  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<392,393,6>",(o)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (o.p0) != "undefined") {_RecordType("<434,438,10>",(o.p0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<434,435,10>",(o)); Inst4++; } } catch(e) {}
  var a = o.p0;
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<430,431,10>",(a)); Inst2++; } } catch(e) {}
  o.p2 = 2;
try { if (Inst5 <= 1000 && typeof (o.p2) != "undefined") {_RecordType("<442,446,11>",(o.p2)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<442,443,11>",(o)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<461,462,12>",(a)); Inst7++; } } catch(e) {}
  return a;
}

try { if (Inst8 <= 1000 && typeof (print) != "undefined") {_RecordType("<467,472,15>",(print)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (test0) != "undefined") {_RecordType("<473,478,15>",(test0)); Inst9++; } } catch(e) {}
print(test0());
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<483,488,16>",(print)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<489,494,16>",(test0)); Inst11++; } } catch(e) {}
print(test0());
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<499,504,17>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (test0) != "undefined") {_RecordType("<505,510,17>",(test0)); Inst13++; } } catch(e) {}
print(test0());

try { if (Inst14 <= 1000 && typeof (test1) != "undefined") {_RecordType("<525,530,19>",(test1)); Inst14++; } } catch(e) {}
function test1() {
  var o = {
    p0: 0,
    p1: 1
  };
try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<541,542,20>",(o)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (o.p2) != "undefined") {_RecordType("<583,587,24>",(o.p2)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<583,584,24>",(o)); Inst18++; } } catch(e) {}
  var a = o.p2;
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<579,580,24>",(a)); Inst16++; } } catch(e) {}
  o.p2 = 2;
try { if (Inst19 <= 1000 && typeof (o.p2) != "undefined") {_RecordType("<591,595,25>",(o.p2)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<591,592,25>",(o)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<610,611,26>",(a)); Inst21++; } } catch(e) {}
  return a;
}

try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<616,621,29>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (test1) != "undefined") {_RecordType("<622,627,29>",(test1)); Inst23++; } } catch(e) {}
print(test1());
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<632,637,30>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (test1) != "undefined") {_RecordType("<638,643,30>",(test1)); Inst25++; } } catch(e) {}
print(test1());
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<648,653,31>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (test1) != "undefined") {_RecordType("<654,659,31>",(test1)); Inst27++; } } catch(e) {}
print(test1());

