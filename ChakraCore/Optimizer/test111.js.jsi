var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var shouldBailout = false;
try { if (Inst0 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<371,384,5>",(shouldBailout)); Inst0++; } } catch(e) {}

var func0 = function (argArr1) {
try { if (Inst2 <= 1000 && typeof (argArr1) != "undefined") {_RecordType("<417,424,7>",(argArr1)); Inst2++; } } catch(e) {}
  for (var __loopvar2 = 0; __loopvar2 < 1 && argArr1[(shouldBailout ? argArr1[0] : 0) ? 0 : 0]; __loopvar2++) {
try { if (Inst3 <= 1000 && typeof (__loopvar2) != "undefined") {_RecordType("<439,449,8>",(__loopvar2)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (__loopvar2) != "undefined") {_RecordType("<455,465,8>",(__loopvar2)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (argArr1[(shouldBailout ? argArr1[0] : 0) ? 0 : 0]) != "undefined") {_RecordType("<473,522,8>",(argArr1[(shouldBailout ? argArr1[0] : 0) ? 0 : 0])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (argArr1) != "undefined") {_RecordType("<473,480,8>",(argArr1)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<482,495,8>",(shouldBailout)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (argArr1[0]) != "undefined") {_RecordType("<498,508,8>",(argArr1[0])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (argArr1) != "undefined") {_RecordType("<498,505,8>",(argArr1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (__loopvar2) != "undefined") {_RecordType("<524,534,8>",(__loopvar2)); Inst10++; } } catch(e) {}
    var __loopvar3 = 0;
try { if (Inst11 <= 1000 && typeof (__loopvar3) != "undefined") {_RecordType("<548,558,9>",(__loopvar3)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (argArr1[(shouldBailout ? argArr1[0] : 0) ? 0 : 0]) != "undefined") {_RecordType("<607,656,13>",(argArr1[(shouldBailout ? argArr1[0] : 0) ? 0 : 0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (argArr1) != "undefined") {_RecordType("<607,614,13>",(argArr1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<616,629,13>",(shouldBailout)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (argArr1[0]) != "undefined") {_RecordType("<632,642,13>",(argArr1[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (argArr1) != "undefined") {_RecordType("<632,639,13>",(argArr1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (__loopvar3) != "undefined") {_RecordType("<660,670,13>",(__loopvar3)); Inst17++; } } catch(e) {}
    do {
try { if (Inst18 <= 1000 && typeof (__loopvar3) != "undefined") {_RecordType("<580,590,12>",(__loopvar3)); Inst18++; } } catch(e) {}
      __loopvar3++;
    } while (argArr1[(shouldBailout ? argArr1[0] : 0) ? 0 : 0] && __loopvar3 < 1);
  }

  return {
    xyz: function () {
      ;
    }
  };
};
try { if (Inst1 <= 1000 && typeof (func0) != "undefined") {_RecordType("<399,404,7>",(func0)); Inst1++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<753,758,23>",(Array)); Inst20++; } } catch(e) {}
var ary = new Array();
try { if (Inst19 <= 1000 && typeof (ary) != "undefined") {_RecordType("<743,746,23>",(ary)); Inst19++; } } catch(e) {}
var intary = [4];
try { if (Inst21 <= 1000 && typeof (intary) != "undefined") {_RecordType("<766,772,24>",(intary)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (func0) != "undefined") {_RecordType("<780,785,25>",(func0)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ary) != "undefined") {_RecordType("<786,789,25>",(ary)); Inst23++; } } catch(e) {}
func0(ary);
try { if (Inst24 <= 1000 && typeof (func0) != "undefined") {_RecordType("<792,797,26>",(func0)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (ary) != "undefined") {_RecordType("<798,801,26>",(ary)); Inst25++; } } catch(e) {}
func0(ary);
try { if (Inst26 <= 1000 && typeof (func0) != "undefined") {_RecordType("<804,809,27>",(func0)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (intary) != "undefined") {_RecordType("<810,816,27>",(intary)); Inst27++; } } catch(e) {}
func0(intary);
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<819,824,28>",(print)); Inst28++; } } catch(e) {}
print("pass");

