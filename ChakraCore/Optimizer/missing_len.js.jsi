var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//FileName: \\ezeqasrv1\users\runtimetoolsbugs\casanalyzed\exprgen\fbl_ie_script_dev\130228-2030\x86\nebularun_x86\201303012321\ddltd2_0c68bf08-e27f-4a80-b0be-afca5b36c627\bug0.js
//Configuration: cse.xml
//Testcase Number: 8661
//Switches:  -maxinterpretcount:1
//Branch:  fbl_ie_script_dev
//Build: 130228-2030
//Arch: X86
//MachineName: BPT30135
try { if (Inst0 <= 1000 && typeof (test2) != "undefined") {_RecordType("<725,730,13>",(test2)); Inst0++; } } catch(e) {}
function test2() {
try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<751,756,14>",(Array)); Inst2++; } } catch(e) {}
  var ary = new Array(10);
try { if (Inst1 <= 1000 && typeof (ary) != "undefined") {_RecordType("<741,744,14>",(ary)); Inst1++; } } catch(e) {}
  var d = 1;
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<768,769,15>",(d)); Inst3++; } } catch(e) {}
  ary[0] = 1;
try { if (Inst4 <= 1000 && typeof (ary[0]) != "undefined") {_RecordType("<777,783,16>",(ary[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ary) != "undefined") {_RecordType("<777,780,16>",(ary)); Inst5++; } } catch(e) {}
  ary[1] = 1;
try { if (Inst6 <= 1000 && typeof (ary[1]) != "undefined") {_RecordType("<791,797,17>",(ary[1])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ary) != "undefined") {_RecordType("<791,794,17>",(ary)); Inst7++; } } catch(e) {}
  ary[2] = 1;
try { if (Inst8 <= 1000 && typeof (ary[2]) != "undefined") {_RecordType("<805,811,18>",(ary[2])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ary) != "undefined") {_RecordType("<805,808,18>",(ary)); Inst9++; } } catch(e) {}
  ary[3] = 1;
try { if (Inst10 <= 1000 && typeof (ary[3]) != "undefined") {_RecordType("<819,825,19>",(ary[3])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ary) != "undefined") {_RecordType("<819,822,19>",(ary)); Inst11++; } } catch(e) {}
  ary[4] = 1;
try { if (Inst12 <= 1000 && typeof (ary[4]) != "undefined") {_RecordType("<833,839,20>",(ary[4])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ary) != "undefined") {_RecordType("<833,836,20>",(ary)); Inst13++; } } catch(e) {}
  ary[5] = 1; // Snippets: implicitcalls2.ecs
try { if (Inst14 <= 1000 && typeof (ary[5]) != "undefined") {_RecordType("<847,853,21>",(ary[5])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ary) != "undefined") {_RecordType("<847,850,21>",(ary)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (v292101) != "undefined") {_RecordType("<903,910,23>",(v292101)); Inst16++; } } catch(e) {}
  function v292101() {
try { if (Inst17 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<919,940,24>",(Object.defineProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<919,925,24>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<941,956,24>",(Array.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<941,946,24>",(Array)); Inst20++; } } catch(e) {}
    Object.defineProperty(Array.prototype, "4", {
      configurable: true,
      get: function () {
        return 30;
      }
    }); //Code Snippet: Seal.ecs

try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1096,1102,31>",(Object)); Inst22++; } } catch(e) {}
    var _obj = new Object();
try { if (Inst21 <= 1000 && typeof (_obj) != "undefined") {_RecordType("<1085,1089,31>",(_obj)); Inst21++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<1121,1122,33>",(d)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<1125,1135,33>",(ary.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1125,1128,33>",(ary)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<1138,1148,33>",(ary.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1138,1141,33>",(ary)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ary[4]) != "undefined") {_RecordType("<1152,1158,33>",(ary[4])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1152,1155,33>",(ary)); Inst31++; } } catch(e) {}
    _obj.x = (d ? ary.length : ary.length) ? ary[4] : 1;
try { if (Inst23 <= 1000 && typeof (_obj.x) != "undefined") {_RecordType("<1111,1117,33>",(_obj.x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (_obj) != "undefined") {_RecordType("<1111,1115,33>",(_obj)); Inst24++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1168,1173,34>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (_obj.x) != "undefined") {_RecordType("<1188,1194,34>",(_obj.x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (_obj) != "undefined") {_RecordType("<1188,1192,34>",(_obj)); Inst34++; } } catch(e) {}
    print("_obj.x = " + _obj.x);
  }

try { if (Inst35 <= 1000 && typeof (v292101) != "undefined") {_RecordType("<1204,1211,37>",(v292101)); Inst35++; } } catch(e) {}
  v292101();
try { if (Inst36 <= 1000 && typeof (v292101) != "undefined") {_RecordType("<1217,1224,38>",(v292101)); Inst36++; } } catch(e) {}
  v292101();
}

; // generate profile

try { if (Inst37 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1254,1259,43>",(test2)); Inst37++; } } catch(e) {}
test2(); // run JITted code

try { if (Inst38 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1283,1288,45>",(test2)); Inst38++; } } catch(e) {}
test2();

