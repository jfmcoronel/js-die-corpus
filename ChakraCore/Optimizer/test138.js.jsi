var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  for (var i = 0; i < 26; ++i) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<397,398,6>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<404,405,6>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,6>",(i)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,7>",(i)); Inst4++; } } catch(e) {}
    if (i === 24) {
try { if (Inst10 <= 1000 && typeof (ex) != "undefined") {_RecordType("<584,586,14>",(ex)); Inst10++; } } catch(e) {}
      try {
        for (var j = 0; j < 26; ++j) {
try { if (Inst5 <= 1000 && typeof (j) != "undefined") {_RecordType("<468,469,9>",(j)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (j) != "undefined") {_RecordType("<475,476,9>",(j)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (j) != "undefined") {_RecordType("<485,486,9>",(j)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<504,505,10>",(j)); Inst8++; } } catch(e) {}
          if (j === 25) {
try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<538,543,11>",(Error)); Inst9++; } } catch(e) {}
            throw new Error();
          }
        }
      } catch (ex) {
        ;
      }
    }
  }
}

try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<621,626,21>",(test0)); Inst11++; } } catch(e) {}
test0();

try { if (Inst12 <= 1000 && typeof (test1) != "undefined") {_RecordType("<640,645,23>",(test1)); Inst12++; } } catch(e) {}
function test1() {
  for (var i = 0; i < 26; ++i) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<661,662,24>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<668,669,24>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<678,679,24>",(i)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<695,696,25>",(i)); Inst17++; } } catch(e) {}
    var n = i >= 24 ? 26 : 0;
try { if (Inst16 <= 1000 && typeof (n) != "undefined") {_RecordType("<691,692,25>",(n)); Inst16++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (ex) != "undefined") {_RecordType("<844,846,33>",(ex)); Inst24++; } } catch(e) {}
    try {
      for (var j = 0; j < n; ++j) {
try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<739,740,28>",(j)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (j) != "undefined") {_RecordType("<746,747,28>",(j)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (n) != "undefined") {_RecordType("<750,751,28>",(n)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<755,756,28>",(j)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<772,773,29>",(j)); Inst22++; } } catch(e) {}
        if (j === 25) {
try { if (Inst23 <= 1000 && typeof (Error) != "undefined") {_RecordType("<804,809,30>",(Error)); Inst23++; } } catch(e) {}
          throw new Error();
        }
      }
    } catch (ex) {
      ;
    }
  }
}

try { if (Inst25 <= 1000 && typeof (test1) != "undefined") {_RecordType("<871,876,39>",(test1)); Inst25++; } } catch(e) {}
test1();
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<880,885,40>",(print)); Inst26++; } } catch(e) {}
print("pass");

