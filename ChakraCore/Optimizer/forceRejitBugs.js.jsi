var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo(i1) {
try { if (Inst1 <= 1000 && typeof (i1) != "undefined") {_RecordType("<380,382,5>",(i1)); Inst1++; } } catch(e) {}
  var d2 = 16777217;
try { if (Inst2 <= 1000 && typeof (d2) != "undefined") {_RecordType("<392,394,6>",(d2)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (i1) != "undefined") {_RecordType("<417,419,7>",(i1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (d2) != "undefined") {_RecordType("<424,426,7>",(d2)); Inst4++; } } catch(e) {}
  return !i1 >>> d2 % ~~295147905179352830000 + 4268133759 | 0;
}

try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<474,479,10>",(print)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<480,483,10>",(foo)); Inst6++; } } catch(e) {}
print(foo());
try { if (Inst7 <= 1000 && typeof (print) != "undefined") {_RecordType("<488,493,11>",(print)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<494,497,11>",(foo)); Inst8++; } } catch(e) {}
print(foo());
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<502,507,12>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<508,511,12>",(foo)); Inst10++; } } catch(e) {}
print(foo());

try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<526,531,14>",(test0)); Inst11++; } } catch(e) {}
function test0() {
  ;
}

var arrObj0 = {};
try { if (Inst12 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<547,554,18>",(arrObj0)); Inst12++; } } catch(e) {}

var func2 = function () {
try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<590,596,21>",(Object)); Inst14++; } } catch(e) {}
  Object;

try { if (Inst15 <= 1000 && typeof (v0) != "undefined") {_RecordType("<610,612,23>",(v0)); Inst15++; } } catch(e) {}
  function v0() {
    for (var v1 = 0; v1 < 8; v1++) {
try { if (Inst16 <= 1000 && typeof (v1) != "undefined") {_RecordType("<630,632,24>",(v1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v1) != "undefined") {_RecordType("<638,640,24>",(v1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (v1) != "undefined") {_RecordType("<646,648,24>",(v1)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (func9) != "undefined") {_RecordType("<669,674,25>",(func9)); Inst19++; } } catch(e) {}
      function func9() {
try { if (Inst20 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<687,703,26>",(Object.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<687,693,26>",(Object)); Inst21++; } } catch(e) {}
        Object.prototype;
      }

try { if (Inst23 <= 1000 && typeof (func9) != "undefined") {_RecordType("<727,732,29>",(func9)); Inst23++; } } catch(e) {}
      obj7 = func9();
try { if (Inst22 <= 1000 && typeof (obj7) != "undefined") {_RecordType("<720,724,29>",(obj7)); Inst22++; } } catch(e) {}
    }
  }

try { if (Inst24 <= 1000 && typeof (v0) != "undefined") {_RecordType("<749,751,33>",(v0)); Inst24++; } } catch(e) {}
  v0();
};
try { if (Inst13 <= 1000 && typeof (func2) != "undefined") {_RecordType("<566,571,20>",(func2)); Inst13++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<769,774,36>",(Array)); Inst26++; } } catch(e) {}
var ary = Array(2);
try { if (Inst25 <= 1000 && typeof (ary) != "undefined") {_RecordType("<763,766,36>",(ary)); Inst25++; } } catch(e) {}
var VarArr0 = [];
try { if (Inst27 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<783,790,37>",(VarArr0)); Inst27++; } } catch(e) {}
var __loopvar0 = 4;
try { if (Inst28 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<801,811,38>",(__loopvar0)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (func2) != "undefined") {_RecordType("<817,822,39>",(func2)); Inst29++; } } catch(e) {}
func2();
try { if (Inst30 <= 1000 && typeof (func2) != "undefined") {_RecordType("<826,831,40>",(func2)); Inst30++; } } catch(e) {}
func2();

for (var _strvar65 of ary) {
try { if (Inst31 <= 1000 && typeof (_strvar65) != "undefined") {_RecordType("<845,854,42>",(_strvar65)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ary) != "undefined") {_RecordType("<858,861,42>",(ary)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (test0) != "undefined") {_RecordType("<875,880,43>",(test0)); Inst34++; } } catch(e) {}
  prop5 = test0;
try { if (Inst33 <= 1000 && typeof (prop5) != "undefined") {_RecordType("<867,872,43>",(prop5)); Inst33++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (VarArr0.unshift) != "undefined") {_RecordType("<907,922,45>",(VarArr0.unshift)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<907,914,45>",(VarArr0)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (func2) != "undefined") {_RecordType("<923,928,45>",(func2)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (func2) != "undefined") {_RecordType("<932,937,45>",(func2)); Inst39++; } } catch(e) {}
  litObj9 = {
    prop7: VarArr0.unshift(func2(), func2())
  };
try { if (Inst35 <= 1000 && typeof (litObj9) != "undefined") {_RecordType("<884,891,44>",(litObj9)); Inst35++; } } catch(e) {}
}

