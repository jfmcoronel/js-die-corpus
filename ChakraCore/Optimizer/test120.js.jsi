var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var GiantPrintArray = [];
try { if (Inst0 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<371,386,5>",(GiantPrintArray)); Inst0++; } } catch(e) {}
var reuseObjects = false;
try { if (Inst1 <= 1000 && typeof (reuseObjects) != "undefined") {_RecordType("<397,409,6>",(reuseObjects)); Inst1++; } } catch(e) {}
var PolymorphicFuncObjArr = [];
try { if (Inst2 <= 1000 && typeof (PolymorphicFuncObjArr) != "undefined") {_RecordType("<423,444,7>",(PolymorphicFuncObjArr)); Inst2++; } } catch(e) {}
var PolyFuncArr = [];
try { if (Inst3 <= 1000 && typeof (PolyFuncArr) != "undefined") {_RecordType("<455,466,8>",(PolyFuncArr)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (GetPolymorphicFunction) != "undefined") {_RecordType("<483,505,10>",(GetPolymorphicFunction)); Inst4++; } } catch(e) {}
function GetPolymorphicFunction() {
try { if (Inst5 <= 1000 && typeof (PolyFuncArr.length) != "undefined") {_RecordType("<516,534,11>",(PolyFuncArr.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (PolyFuncArr) != "undefined") {_RecordType("<516,527,11>",(PolyFuncArr)); Inst6++; } } catch(e) {}
  if (PolyFuncArr.length > 1) {
try { if (Inst8 <= 1000 && typeof (PolyFuncArr.shift) != "undefined") {_RecordType("<559,576,12>",(PolyFuncArr.shift)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (PolyFuncArr) != "undefined") {_RecordType("<559,570,12>",(PolyFuncArr)); Inst9++; } } catch(e) {}
    var myFunc = PolyFuncArr.shift();
try { if (Inst7 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<550,556,12>",(myFunc)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (PolyFuncArr.push) != "undefined") {_RecordType("<584,600,13>",(PolyFuncArr.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (PolyFuncArr) != "undefined") {_RecordType("<584,595,13>",(PolyFuncArr)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<601,607,13>",(myFunc)); Inst12++; } } catch(e) {}
    PolyFuncArr.push(myFunc);
try { if (Inst13 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<621,627,14>",(myFunc)); Inst13++; } } catch(e) {}
    return myFunc;
  } else {
try { if (Inst14 <= 1000 && typeof (PolyFuncArr[0]) != "undefined") {_RecordType("<651,665,16>",(PolyFuncArr[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (PolyFuncArr) != "undefined") {_RecordType("<651,662,16>",(PolyFuncArr)); Inst15++; } } catch(e) {}
    return PolyFuncArr[0];
  }
}

try { if (Inst16 <= 1000 && typeof (GetObjectwithPolymorphicFunction) != "undefined") {_RecordType("<683,715,20>",(GetObjectwithPolymorphicFunction)); Inst16++; } } catch(e) {}
function GetObjectwithPolymorphicFunction() {
try { if (Inst17 <= 1000 && typeof (reuseObjects) != "undefined") {_RecordType("<726,738,21>",(reuseObjects)); Inst17++; } } catch(e) {}
  if (reuseObjects) {
try { if (Inst18 <= 1000 && typeof (PolymorphicFuncObjArr.length) != "undefined") {_RecordType("<750,778,22>",(PolymorphicFuncObjArr.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (PolymorphicFuncObjArr) != "undefined") {_RecordType("<750,771,22>",(PolymorphicFuncObjArr)); Inst19++; } } catch(e) {}
    if (PolymorphicFuncObjArr.length > 1) {
try { if (Inst21 <= 1000 && typeof (PolymorphicFuncObjArr.shift) != "undefined") {_RecordType("<805,832,23>",(PolymorphicFuncObjArr.shift)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (PolymorphicFuncObjArr) != "undefined") {_RecordType("<805,826,23>",(PolymorphicFuncObjArr)); Inst22++; } } catch(e) {}
      var myFunc = PolymorphicFuncObjArr.shift();
try { if (Inst20 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<796,802,23>",(myFunc)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (PolymorphicFuncObjArr.push) != "undefined") {_RecordType("<842,868,24>",(PolymorphicFuncObjArr.push)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (PolymorphicFuncObjArr) != "undefined") {_RecordType("<842,863,24>",(PolymorphicFuncObjArr)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<869,875,24>",(myFunc)); Inst25++; } } catch(e) {}
      PolymorphicFuncObjArr.push(myFunc);
try { if (Inst26 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<891,897,25>",(myFunc)); Inst26++; } } catch(e) {}
      return myFunc;
    } else {
try { if (Inst27 <= 1000 && typeof (PolymorphicFuncObjArr[0]) != "undefined") {_RecordType("<925,949,27>",(PolymorphicFuncObjArr[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (PolymorphicFuncObjArr) != "undefined") {_RecordType("<925,946,27>",(PolymorphicFuncObjArr)); Inst28++; } } catch(e) {}
      return PolymorphicFuncObjArr[0];
    }
  } else {
    var obj = {};
try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<976,979,30>",(obj)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (GetPolymorphicFunction) != "undefined") {_RecordType("<1005,1027,31>",(GetPolymorphicFunction)); Inst32++; } } catch(e) {}
    obj.polyfunc = GetPolymorphicFunction();
try { if (Inst30 <= 1000 && typeof (obj.polyfunc) != "undefined") {_RecordType("<990,1002,31>",(obj.polyfunc)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (obj) != "undefined") {_RecordType("<990,993,31>",(obj)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (PolymorphicFuncObjArr.push) != "undefined") {_RecordType("<1035,1061,32>",(PolymorphicFuncObjArr.push)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (PolymorphicFuncObjArr) != "undefined") {_RecordType("<1035,1056,32>",(PolymorphicFuncObjArr)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1062,1065,32>",(obj)); Inst35++; } } catch(e) {}
    PolymorphicFuncObjArr.push(obj);
try { if (Inst36 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1079,1082,33>",(obj)); Inst36++; } } catch(e) {}
    return obj;
  }
}

;

try { if (Inst37 <= 1000 && typeof (InitPolymorphicFunctionArray) != "undefined") {_RecordType("<1103,1131,39>",(InitPolymorphicFunctionArray)); Inst37++; } } catch(e) {}
function InitPolymorphicFunctionArray() {
  for (var i = 0; i < arguments.length; i++) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1147,1148,40>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1154,1155,40>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1158,1174,40>",(arguments.length)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1158,1167,40>",(arguments)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<1176,1177,40>",(i)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (PolyFuncArr.push) != "undefined") {_RecordType("<1187,1203,41>",(PolyFuncArr.push)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (PolyFuncArr) != "undefined") {_RecordType("<1187,1198,41>",(PolyFuncArr)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (arguments[i]) != "undefined") {_RecordType("<1204,1216,41>",(arguments[i])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1204,1213,41>",(arguments)); Inst46++; } } catch(e) {}
    PolyFuncArr.push(arguments[i]);
  }
}

;

try { if (Inst47 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1238,1243,47>",(test0)); Inst47++; } } catch(e) {}
function test0() {
  //letconst3.ecs
try { if (Inst48 <= 1000 && typeof (v79580) != "undefined") {_RecordType("<1277,1283,49>",(v79580)); Inst48++; } } catch(e) {}
  function v79580() {
    var v79581 = -2147483646;
try { if (Inst49 <= 1000 && typeof (v79581) != "undefined") {_RecordType("<1296,1302,50>",(v79581)); Inst49++; } } catch(e) {}
    {
      const v79581 = 1;
try { if (Inst50 <= 1000 && typeof (v79581) != "undefined") {_RecordType("<1336,1342,52>",(v79581)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (GiantPrintArray.push) != "undefined") {_RecordType("<1354,1374,53>",(GiantPrintArray.push)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<1354,1369,53>",(GiantPrintArray)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (v79581) != "undefined") {_RecordType("<1375,1381,53>",(v79581)); Inst53++; } } catch(e) {}
      GiantPrintArray.push(v79581);
    }
try { if (Inst54 <= 1000 && typeof (GiantPrintArray.push) != "undefined") {_RecordType("<1394,1414,55>",(GiantPrintArray.push)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<1394,1409,55>",(GiantPrintArray)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (v79581) != "undefined") {_RecordType("<1415,1421,55>",(v79581)); Inst56++; } } catch(e) {}
    GiantPrintArray.push(v79581);
  }

try { if (Inst57 <= 1000 && typeof (v79580) != "undefined") {_RecordType("<1431,1437,58>",(v79580)); Inst57++; } } catch(e) {}
  v79580();
}

; // generate profile

try { if (Inst58 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1467,1472,63>",(test0)); Inst58++; } } catch(e) {}
test0(); // Run Simple JIT

try { if (Inst59 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1495,1500,65>",(test0)); Inst59++; } } catch(e) {}
test0();
try { if (Inst60 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1504,1509,66>",(test0)); Inst60++; } } catch(e) {}
test0();
try { if (Inst61 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1513,1518,67>",(test0)); Inst61++; } } catch(e) {}
test0();
try { if (Inst62 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1522,1527,68>",(test0)); Inst62++; } } catch(e) {}
test0();
try { if (Inst63 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1531,1536,69>",(test0)); Inst63++; } } catch(e) {}
test0(); // run JITted code

runningJITtedCode = true;
try { if (Inst64 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<1560,1577,71>",(runningJITtedCode)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1586,1591,72>",(test0)); Inst65++; } } catch(e) {}
test0();
try { if (Inst66 <= 1000 && typeof (print) != "undefined") {_RecordType("<1595,1600,73>",(print)); Inst66++; } } catch(e) {}
print("pass");

