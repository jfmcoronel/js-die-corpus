var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var shouldReturn = true;
try { if (Inst0 <= 1000 && typeof (shouldReturn) != "undefined") {_RecordType("<371,383,5>",(shouldReturn)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (func3) != "undefined") {_RecordType("<402,407,7>",(func3)); Inst1++; } } catch(e) {}
function func3(argMath8) {
try { if (Inst2 <= 1000 && typeof (argMath8) != "undefined") {_RecordType("<408,416,7>",(argMath8)); Inst2++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (ex) != "undefined") {_RecordType("<509,511,12>",(ex)); Inst8++; } } catch(e) {}
  try {
    var __loopvar6 = 5;
try { if (Inst3 <= 1000 && typeof (__loopvar6) != "undefined") {_RecordType("<436,446,9>",(__loopvar6)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (argMath8) != "undefined") {_RecordType("<456,464,10>",(argMath8)); Inst4++; } } catch(e) {}
    argMath8++;
try { if (Inst5 <= 1000 && typeof (func2.call) != "undefined") {_RecordType("<472,482,11>",(func2.call)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (func2) != "undefined") {_RecordType("<472,477,11>",(func2)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<483,492,11>",(protoObj0)); Inst7++; } } catch(e) {}
    func2.call(protoObj0, 1);
  } catch (ex) {
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<519,524,13>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ex.message) != "undefined") {_RecordType("<525,535,13>",(ex.message)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ex) != "undefined") {_RecordType("<525,527,13>",(ex)); Inst11++; } } catch(e) {}
    print(ex.message);

try { if (Inst12 <= 1000 && typeof (shouldReturn) != "undefined") {_RecordType("<547,559,15>",(shouldReturn)); Inst12++; } } catch(e) {}
    if (shouldReturn) {
      return 1;
    }
  }

try { if (Inst13 <= 1000 && typeof (ui32.length) != "undefined") {_RecordType("<592,603,20>",(ui32.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ui32) != "undefined") {_RecordType("<592,596,20>",(ui32)); Inst14++; } } catch(e) {}
  ui32.length;
}

try { if (Inst19 <= 1000 && typeof (ex) != "undefined") {_RecordType("<685,687,28>",(ex)); Inst19++; } } catch(e) {}
try {
try { if (Inst15 <= 1000 && typeof (func3) != "undefined") {_RecordType("<616,621,24>",(func3)); Inst15++; } } catch(e) {}
  func3(0);
try { if (Inst16 <= 1000 && typeof (func3) != "undefined") {_RecordType("<628,633,25>",(func3)); Inst16++; } } catch(e) {}
  func3(0);
  shouldReturn = false;
try { if (Inst17 <= 1000 && typeof (shouldReturn) != "undefined") {_RecordType("<640,652,26>",(shouldReturn)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (func3) != "undefined") {_RecordType("<664,669,27>",(func3)); Inst18++; } } catch(e) {}
  func3(1.1);
} catch (ex) {
  ;
}

try { if (Inst20 <= 1000 && typeof (v14) != "undefined") {_RecordType("<707,710,32>",(v14)); Inst20++; } } catch(e) {}
function v14() {
  return 1;
}

try { if (Inst21 <= 1000 && typeof (test0) != "undefined") {_RecordType("<739,744,36>",(test0)); Inst21++; } } catch(e) {}
function test0() {
  var GiantPrintArray = [];
try { if (Inst22 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<755,770,37>",(GiantPrintArray)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Array) != "undefined") {_RecordType("<793,798,38>",(Array)); Inst24++; } } catch(e) {}
  var ary = new Array(10);
try { if (Inst23 <= 1000 && typeof (ary) != "undefined") {_RecordType("<783,786,38>",(ary)); Inst23++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (ex) != "undefined") {_RecordType("<915,917,43>",(ex)); Inst35++; } } catch(e) {}
  try {
try { if (Inst25 <= 1000 && typeof (GiantPrintArray.push) != "undefined") {_RecordType("<817,837,41>",(GiantPrintArray.push)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<817,832,41>",(GiantPrintArray)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (v14) != "undefined") {_RecordType("<838,841,41>",(v14)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ary[1]) != "undefined") {_RecordType("<842,848,41>",(ary[1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ary) != "undefined") {_RecordType("<842,845,41>",(ary)); Inst29++; } } catch(e) {}
    GiantPrintArray.push(v14(ary[1], false));
try { if (Inst30 <= 1000 && typeof (GiantPrintArray.push) != "undefined") {_RecordType("<863,883,42>",(GiantPrintArray.push)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (GiantPrintArray) != "undefined") {_RecordType("<863,878,42>",(GiantPrintArray)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (v14) != "undefined") {_RecordType("<884,887,42>",(v14)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ary[1]) != "undefined") {_RecordType("<888,894,42>",(ary[1])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ary) != "undefined") {_RecordType("<888,891,42>",(ary)); Inst34++; } } catch(e) {}
    GiantPrintArray.push(v14(ary[1], 1, 1));
  } catch (ex) {
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<925,930,44>",(print)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ex.message) != "undefined") {_RecordType("<931,941,44>",(ex.message)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (ex) != "undefined") {_RecordType("<931,933,44>",(ex)); Inst38++; } } catch(e) {}
    print(ex.message);
  }
}

;
try { if (Inst39 <= 1000 && typeof (test0) != "undefined") {_RecordType("<953,958,49>",(test0)); Inst39++; } } catch(e) {}
test0();
try { if (Inst40 <= 1000 && typeof (test0) != "undefined") {_RecordType("<962,967,50>",(test0)); Inst40++; } } catch(e) {}
test0();
try { if (Inst41 <= 1000 && typeof (test0) != "undefined") {_RecordType("<971,976,51>",(test0)); Inst41++; } } catch(e) {}
test0();

