var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var obj1 = {};
try { if (Inst1 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<392,396,6>",(obj1)); Inst1++; } } catch(e) {}
  var arrObj0 = {};
try { if (Inst2 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<409,416,7>",(arrObj0)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<439,449,8>",(Uint8Array)); Inst4++; } } catch(e) {}
  var ui8 = new Uint8Array(256);
try { if (Inst3 <= 1000 && typeof (ui8) != "undefined") {_RecordType("<429,432,8>",(ui8)); Inst3++; } } catch(e) {}
  var intary = 1;
try { if (Inst5 <= 1000 && typeof (intary) != "undefined") {_RecordType("<462,468,9>",(intary)); Inst5++; } } catch(e) {}
  var d = 1;
try { if (Inst6 <= 1000 && typeof (d) != "undefined") {_RecordType("<480,481,10>",(d)); Inst6++; } } catch(e) {}
  var __loopvar1 = 0;
try { if (Inst7 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<493,503,11>",(__loopvar1)); Inst7++; } } catch(e) {}

  for (var strvar0 in ui8) {
try { if (Inst8 <= 1000 && typeof (strvar0) != "undefined") {_RecordType("<521,528,13>",(strvar0)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ui8) != "undefined") {_RecordType("<532,535,13>",(ui8)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (strvar0.indexOf) != "undefined") {_RecordType("<547,562,14>",(strvar0.indexOf)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (strvar0) != "undefined") {_RecordType("<547,554,14>",(strvar0)); Inst11++; } } catch(e) {}
    if (strvar0.indexOf('method') != -1) {
      continue;
    }

try { if (Inst12 <= 1000 && typeof (__loopvar1) != "undefined") {_RecordType("<613,623,18>",(__loopvar1)); Inst12++; } } catch(e) {}
    if (__loopvar1++ > 3) {
      break;
    }

try { if (Inst15 <= 1000 && typeof (d) != "undefined") {_RecordType("<671,672,22>",(d)); Inst15++; } } catch(e) {}
    obj1.length = d;
try { if (Inst13 <= 1000 && typeof (obj1.length) != "undefined") {_RecordType("<657,668,22>",(obj1.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<657,661,22>",(obj1)); Inst14++; } } catch(e) {}
    d = 1 & 2147483647;
try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<678,679,23>",(d)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (intary[(1 >= 0 ? 1 : 0) & 0XF]) != "undefined") {_RecordType("<718,748,24>",(intary[(1 >= 0 ? 1 : 0) & 0XF])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (intary) != "undefined") {_RecordType("<718,724,24>",(intary)); Inst20++; } } catch(e) {}
    arrObj0.prop0 = intary[(1 >= 0 ? 1 : 0) & 0XF];
try { if (Inst17 <= 1000 && typeof (arrObj0.prop0) != "undefined") {_RecordType("<702,715,24>",(arrObj0.prop0)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<702,709,24>",(arrObj0)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (d) != "undefined") {_RecordType("<759,760,25>",(d)); Inst22++; } } catch(e) {}
    e = +d;
try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<754,755,25>",(e)); Inst21++; } } catch(e) {}
  }
}

;
try { if (Inst23 <= 1000 && typeof (test0) != "undefined") {_RecordType("<771,776,30>",(test0)); Inst23++; } } catch(e) {}
test0();
try { if (Inst24 <= 1000 && typeof (test0) != "undefined") {_RecordType("<780,785,31>",(test0)); Inst24++; } } catch(e) {}
test0();
try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<789,794,32>",(print)); Inst25++; } } catch(e) {}
print("pass");

