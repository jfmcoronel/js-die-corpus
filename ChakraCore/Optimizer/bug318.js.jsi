var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<376,382,5>",(FAILED)); Inst0++; } } catch(e) {}
function FAILED() {
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<389,394,6>",(print)); Inst1++; } } catch(e) {}
  print("FAILED");
  throw 1;
}

try { if (Inst2 <= 1000 && typeof (test0) != "undefined") {_RecordType("<429,434,10>",(test0)); Inst2++; } } catch(e) {}
function test0() {
  var arrObj0 = {};
try { if (Inst3 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<445,452,11>",(arrObj0)); Inst3++; } } catch(e) {}

  if (2 % 2) {
    ;
  } else {
    b = 2 & 2;
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<496,497,16>",(b)); Inst4++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<531,532,19>",(b)); Inst7++; } } catch(e) {}
  arrObj0.length = b;
try { if (Inst5 <= 1000 && typeof (arrObj0.length) != "undefined") {_RecordType("<514,528,19>",(arrObj0.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<514,521,19>",(arrObj0)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (arrObj0.length) != "undefined") {_RecordType("<541,555,21>",(arrObj0.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<541,548,21>",(arrObj0)); Inst9++; } } catch(e) {}
  if (arrObj0.length != 2) {
try { if (Inst10 <= 1000 && typeof (FAILED) != "undefined") {_RecordType("<568,574,22>",(FAILED)); Inst10++; } } catch(e) {}
    FAILED();
  }
}

; // generate profile

try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<608,613,28>",(test0)); Inst11++; } } catch(e) {}
test0();
try { if (Inst12 <= 1000 && typeof (test0) != "undefined") {_RecordType("<617,622,29>",(test0)); Inst12++; } } catch(e) {}
test0();
try { if (Inst13 <= 1000 && typeof (test0) != "undefined") {_RecordType("<626,631,30>",(test0)); Inst13++; } } catch(e) {}
test0(); // run JITted code

runningJITtedCode = true;
try { if (Inst14 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<655,672,32>",(runningJITtedCode)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (test0) != "undefined") {_RecordType("<681,686,33>",(test0)); Inst15++; } } catch(e) {}
test0();
try { if (Inst16 <= 1000 && typeof (test0) != "undefined") {_RecordType("<690,695,34>",(test0)); Inst16++; } } catch(e) {}
test0();
try { if (Inst17 <= 1000 && typeof (test0) != "undefined") {_RecordType("<699,704,35>",(test0)); Inst17++; } } catch(e) {}
test0(); // run code with bailouts enabled

shouldBailout = true;
try { if (Inst18 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<743,756,37>",(shouldBailout)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<765,770,38>",(test0)); Inst19++; } } catch(e) {}
test0();
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<774,779,39>",(print)); Inst20++; } } catch(e) {}
print("Passed");

