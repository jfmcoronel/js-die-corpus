var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<380,381,5>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<383,384,5>",(y)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<400,401,6>",(x)); Inst4++; } } catch(e) {}
  const c = x + 1;
try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<396,397,6>",(c)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<419,420,7>",(y)); Inst6++; } } catch(e) {}
  const d = y + 1;
try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<415,416,7>",(d)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (d) != "undefined") {_RecordType("<432,433,8>",(d)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<437,438,8>",(c)); Inst9++; } } catch(e) {}
  x = d + (c << 0) | 0;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<428,429,8>",(x)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<457,458,9>",(d)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<462,463,9>",(c)); Inst12++; } } catch(e) {}
  x += d + (c << 1) | 0;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<452,453,9>",(x)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<482,483,10>",(d)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<487,488,10>",(c)); Inst15++; } } catch(e) {}
  x += d + (c << 2) | 0;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<477,478,10>",(x)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<507,508,11>",(d)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<512,513,11>",(c)); Inst18++; } } catch(e) {}
  x += d + (c << 3) | 0;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<502,503,11>",(x)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (d) != "undefined") {_RecordType("<532,533,12>",(d)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (c) != "undefined") {_RecordType("<537,538,12>",(c)); Inst21++; } } catch(e) {}
  x += d + (c << 4) | 0;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<527,528,12>",(x)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<559,560,13>",(x)); Inst22++; } } catch(e) {}
  return x;
}

try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<565,570,16>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<571,574,16>",(foo)); Inst24++; } } catch(e) {}
print(foo(2, 3));
try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<583,588,17>",(print)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<589,592,17>",(foo)); Inst26++; } } catch(e) {}
print(foo(2, 3));
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<601,606,18>",(print)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<607,610,18>",(foo)); Inst28++; } } catch(e) {}
print(foo(-12346578, 3));
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<627,632,19>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<633,636,19>",(foo)); Inst30++; } } catch(e) {}
print(foo(2, 12346578));

