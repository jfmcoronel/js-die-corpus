var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,5>",(foo)); Inst0++; } } catch(e) {}
function foo(arg1, arg2, arg3, arg4) {
try { if (Inst1 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<380,384,5>",(arg1)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arg2) != "undefined") {_RecordType("<386,390,5>",(arg2)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arg3) != "undefined") {_RecordType("<392,396,5>",(arg3)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arg4) != "undefined") {_RecordType("<398,402,5>",(arg4)); Inst4++; } } catch(e) {}
  var y = 1;
try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<412,413,6>",(y)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (arg3) != "undefined") {_RecordType("<426,430,8>",(arg3)); Inst6++; } } catch(e) {}
  if (arg3) {
try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<438,459,9>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<438,444,9>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<460,464,9>",(arg1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arg4) != "undefined") {_RecordType("<466,470,9>",(arg4)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (getProp) != "undefined") {_RecordType("<472,479,9>",(getProp)); Inst11++; } } catch(e) {}
    Object.defineProperty(arg1, arg4, getProp);
  }

try { if (Inst13 <= 1000 && typeof (arg1[arg4]) != "undefined") {_RecordType("<493,503,12>",(arg1[arg4])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<493,497,12>",(arg1)); Inst14++; } } catch(e) {}
  y = arg1[arg4];
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<489,490,12>",(y)); Inst12++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (arg3) != "undefined") {_RecordType("<512,516,14>",(arg3)); Inst15++; } } catch(e) {}
  if (arg3) {
try { if (Inst17 <= 1000 && typeof (arg1[arg4]) != "undefined") {_RecordType("<528,538,15>",(arg1[arg4])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<528,532,15>",(arg1)); Inst18++; } } catch(e) {}
    y = arg1[arg4];
try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<524,525,15>",(y)); Inst16++; } } catch(e) {}
  }

try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<554,555,18>",(y)); Inst19++; } } catch(e) {}
  return y;
}

o1 = {
  "prop4": 4
};
try { if (Inst20 <= 1000 && typeof (o1) != "undefined") {_RecordType("<560,562,21>",(o1)); Inst20++; } } catch(e) {}
var count = 0;
try { if (Inst21 <= 1000 && typeof (count) != "undefined") {_RecordType("<587,592,24>",(count)); Inst21++; } } catch(e) {}

for (var i = 0; i < 200; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<608,609,26>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<615,616,26>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<624,625,26>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<633,636,27>",(foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o1) != "undefined") {_RecordType("<637,639,27>",(o1)); Inst26++; } } catch(e) {}
  foo(o1, "text", false, "prop4");
}

var getProp = {
  get: function () {
try { if (Inst28 <= 1000 && typeof (count) != "undefined") {_RecordType("<717,722,32>",(count)); Inst28++; } } catch(e) {}
    return count++;
  }
};
try { if (Inst27 <= 1000 && typeof (getProp) != "undefined") {_RecordType("<673,680,30>",(getProp)); Inst27++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<738,741,36>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o1) != "undefined") {_RecordType("<742,744,36>",(o1)); Inst30++; } } catch(e) {}
if (foo(o1, "text", true, "prop4") != 1) {
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<779,784,37>",(print)); Inst31++; } } catch(e) {}
  print("FAILED");
} else {
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<807,812,39>",(print)); Inst32++; } } catch(e) {}
  print("Passed");
}

