var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<376,380,5>",(test)); Inst0++; } } catch(e) {}
function test() {
  Object.prototype['create'] = function () {
    ;
  };
try { if (Inst1 <= 1000 && typeof (Object.prototype['create']) != "undefined") {_RecordType("<387,413,6>",(Object.prototype['create'])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<387,403,6>",(Object.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<387,393,6>",(Object)); Inst3++; } } catch(e) {}

  Object.prototype['yoyo'] = function () {
    ;
  };
try { if (Inst4 <= 1000 && typeof (Object.prototype['yoyo']) != "undefined") {_RecordType("<444,468,10>",(Object.prototype['yoyo'])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<444,460,10>",(Object.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<444,450,10>",(Object)); Inst6++; } } catch(e) {}

  Object.prototype['splice'] = function () {
    ;
  };
try { if (Inst7 <= 1000 && typeof (Object.prototype['splice']) != "undefined") {_RecordType("<499,525,14>",(Object.prototype['splice'])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<499,515,14>",(Object.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<499,505,14>",(Object)); Inst9++; } } catch(e) {}

  Object.prototype['watch'] = function () {
    ;
  };
try { if (Inst10 <= 1000 && typeof (Object.prototype['watch']) != "undefined") {_RecordType("<556,581,18>",(Object.prototype['watch'])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<556,572,18>",(Object.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<556,562,18>",(Object)); Inst12++; } } catch(e) {}

  Object.prototype['setInt8'] = function () {
    ;
  };
try { if (Inst13 <= 1000 && typeof (Object.prototype['setInt8']) != "undefined") {_RecordType("<612,639,22>",(Object.prototype['setInt8'])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<612,628,22>",(Object.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<612,618,22>",(Object)); Inst15++; } } catch(e) {}

  Object.prototype['unwatch'] = function () {
    ;
  };
try { if (Inst16 <= 1000 && typeof (Object.prototype['unwatch']) != "undefined") {_RecordType("<670,697,26>",(Object.prototype['unwatch'])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<670,686,26>",(Object.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<670,676,26>",(Object)); Inst18++; } } catch(e) {}

  Object.prototype['eval'] = function () {
    ;
  };
try { if (Inst19 <= 1000 && typeof (Object.prototype['eval']) != "undefined") {_RecordType("<728,752,30>",(Object.prototype['eval'])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<728,744,30>",(Object.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<728,734,30>",(Object)); Inst21++; } } catch(e) {}

  (function () {
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<811,814,35>",(foo)); Inst22++; } } catch(e) {}
    function foo() {
try { if (Inst23 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<825,846,36>",(Object.defineProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<825,831,36>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<873,878,37>",(isNaN)); Inst25++; } } catch(e) {}
      Object.defineProperty(this, "b", {
        set: isNaN,
        configurable: true
      });
try { if (Inst26 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<923,944,40>",(Object.defineProperty)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<923,929,40>",(Object)); Inst27++; } } catch(e) {}
      Object.defineProperty(this, "w", {
        configurable: true
      });
    }

try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<1038,1039,47>",(e)); Inst29++; } } catch(e) {}
    try {
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1018,1021,46>",(foo)); Inst28++; } } catch(e) {}
      foo();
    } catch (e) {
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<1049,1054,48>",(print)); Inst30++; } } catch(e) {}
      print(1);
    }
  })();

  for (var y in [true, true, true, true, true, true, true, true, true, true, true, true, true, true, new Boolean(false), true, true]) {
try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<1085,1086,52>",(y)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<1179,1186,52>",(Boolean)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (w) != "undefined") {_RecordType("<1214,1215,53>",(w)); Inst33++; } } catch(e) {}
    w;
  }

try { if (Inst34 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1233,1236,56>",(bar)); Inst34++; } } catch(e) {}
  function bar() {
try { if (Inst35 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1245,1266,57>",(Object.defineProperty)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1245,1251,57>",(Object)); Inst36++; } } catch(e) {}
    Object.defineProperty(this, "a", {
      configurable: false
    });
try { if (Inst37 <= 1000 && typeof (this.w) != "undefined") {_RecordType("<1325,1331,60>",(this.w)); Inst37++; } } catch(e) {}
    delete this.w;
    this.w = false;
try { if (Inst38 <= 1000 && typeof (this.w) != "undefined") {_RecordType("<1337,1343,61>",(this.w)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<1357,1381,62>",(Object.preventExtensions)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1357,1363,62>",(Object)); Inst40++; } } catch(e) {}
    Object.preventExtensions(this);
  }

  ;
try { if (Inst41 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1400,1403,66>",(bar)); Inst41++; } } catch(e) {}
  bar();
}

; //Interpreter call

try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<1432,1436,71>",(test)); Inst42++; } } catch(e) {}
test(); //JIT call

try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<1452,1456,73>",(test)); Inst43++; } } catch(e) {}
test();
try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<1460,1464,74>",(test)); Inst44++; } } catch(e) {}
test();

