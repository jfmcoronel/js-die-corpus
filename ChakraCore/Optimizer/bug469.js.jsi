var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var protoObj0 = {};
try { if (Inst0 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<371,380,5>",(protoObj0)); Inst0++; } } catch(e) {}
var obj1 = {};
try { if (Inst1 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<391,395,6>",(obj1)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<417,426,7>",(protoObj0)); Inst3++; } } catch(e) {}
var VarArr0 = [protoObj0, -1];
try { if (Inst2 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<406,413,7>",(VarArr0)); Inst2++; } } catch(e) {}
protoObj0.prop1 = -314917159;
try { if (Inst4 <= 1000 && typeof (protoObj0.prop1) != "undefined") {_RecordType("<433,448,8>",(protoObj0.prop1)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<433,442,8>",(protoObj0)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (v8) != "undefined") {_RecordType("<473,475,10>",(v8)); Inst6++; } } catch(e) {}
function v8() {
  for (var _strvar0 of VarArr0) {
try { if (Inst7 <= 1000 && typeof (_strvar0) != "undefined") {_RecordType("<491,499,11>",(_strvar0)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<503,510,11>",(VarArr0)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<523,532,12>",(protoObj0)); Inst9++; } } catch(e) {}
    if (!protoObj0) {
try { if (Inst10 <= 1000 && typeof (FloatArr0.push) != "undefined") {_RecordType("<546,560,13>",(FloatArr0.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (FloatArr0) != "undefined") {_RecordType("<546,555,13>",(FloatArr0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (protoObj0.prop1) != "undefined") {_RecordType("<561,576,13>",(protoObj0.prop1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<561,570,13>",(protoObj0)); Inst13++; } } catch(e) {}
      if (FloatArr0.push(protoObj0.prop1)) {
try { if (Inst16 <= 1000 && typeof (arrObj0.prop1.substring) != "undefined") {_RecordType("<605,628,14>",(arrObj0.prop1.substring)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arrObj0.prop1) != "undefined") {_RecordType("<605,618,14>",(arrObj0.prop1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<605,612,14>",(arrObj0)); Inst18++; } } catch(e) {}
        arrObj0.prop1 = arrObj0.prop1.substring();
try { if (Inst14 <= 1000 && typeof (arrObj0.prop1) != "undefined") {_RecordType("<589,602,14>",(arrObj0.prop1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<589,596,14>",(arrObj0)); Inst15++; } } catch(e) {}
      }
    }

try { if (Inst19 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<651,655,18>",(obj1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<659,663,18>",(obj1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (protoObj0.prop1) != "undefined") {_RecordType("<666,681,18>",(protoObj0.prop1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<666,675,18>",(protoObj0)); Inst22++; } } catch(e) {}
    obj1 * (obj1 - protoObj0.prop1);

    for (var _strvar0 in VarArr0) {
try { if (Inst23 <= 1000 && typeof (_strvar0) != "undefined") {_RecordType("<698,706,20>",(_strvar0)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (VarArr0) != "undefined") {_RecordType("<710,717,20>",(VarArr0)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (_strvar0.indexOf) != "undefined") {_RecordType("<731,747,21>",(_strvar0.indexOf)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (_strvar0) != "undefined") {_RecordType("<731,739,21>",(_strvar0)); Inst26++; } } catch(e) {}
      if (_strvar0.indexOf()) {
        ;
      }
    }
  }
}

try { if (Inst27 <= 1000 && typeof (v8) != "undefined") {_RecordType("<784,786,28>",(v8)); Inst27++; } } catch(e) {}
v8();
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<790,795,29>",(print)); Inst28++; } } catch(e) {}
print("Pass");

