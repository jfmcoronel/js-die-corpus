var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var Failed = false;
try { if (Inst0 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<371,377,5>",(Failed)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<397,400,7>",(foo)); Inst1++; } } catch(e) {}
function foo(last) {
try { if (Inst2 <= 1000 && typeof (last) != "undefined") {_RecordType("<401,405,7>",(last)); Inst2++; } } catch(e) {}
  var x = 0.1;
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<415,416,8>",(x)); Inst3++; } } catch(e) {}
  var y = 0.2;
try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<430,431,9>",(y)); Inst4++; } } catch(e) {}
  var z = "Louie ";
try { if (Inst5 <= 1000 && typeof (z) != "undefined") {_RecordType("<445,446,10>",(z)); Inst5++; } } catch(e) {}
  var w;
try { if (Inst6 <= 1000 && typeof (w) != "undefined") {_RecordType("<465,466,11>",(w)); Inst6++; } } catch(e) {}

  for (var i = 0; i < 3; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<480,481,13>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<487,488,13>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<494,495,13>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<509,510,14>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<513,514,14>",(x)); Inst12++; } } catch(e) {}
    w = x + x; // Type spec this add? Make sure there is a bailout...
try { if (Inst10 <= 1000 && typeof (w) != "undefined") {_RecordType("<505,506,14>",(w)); Inst10++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<580,581,16>",(y)); Inst14++; } } catch(e) {}
    x = y;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<576,577,16>",(x)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (z) != "undefined") {_RecordType("<591,592,17>",(z)); Inst16++; } } catch(e) {}
    y = z;
try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<587,588,17>",(y)); Inst15++; } } catch(e) {}
  }

try { if (Inst17 <= 1000 && typeof (w) != "undefined") {_RecordType("<605,606,20>",(w)); Inst17++; } } catch(e) {}
  if (w != "Louie Louie ") {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<632,637,21>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (w) != "undefined") {_RecordType("<647,648,21>",(w)); Inst19++; } } catch(e) {}
    print("w = " + w);
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<655,660,22>",(print)); Inst20++; } } catch(e) {}
    print("FAILED");
    Failed = true;
try { if (Inst21 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<676,682,23>",(Failed)); Inst21++; } } catch(e) {}
  } else {
try { if (Inst22 <= 1000 && typeof (last) != "undefined") {_RecordType("<710,714,25>",(last)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Failed) != "undefined") {_RecordType("<719,725,25>",(Failed)); Inst23++; } } catch(e) {}
    if (last && !Failed) {
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<735,740,26>",(print)); Inst24++; } } catch(e) {}
      print("Passed");
    }
  }
}

for (var i = 0; i < 500; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<774,775,31>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<781,782,31>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<790,791,31>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<799,802,32>",(foo)); Inst28++; } } catch(e) {}
  foo(false);
}

try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<814,817,35>",(foo)); Inst29++; } } catch(e) {}
foo(true);

