var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var Count = 0;
try { if (Inst0 <= 1000 && typeof (Count) != "undefined") {_RecordType("<371,376,5>",(Count)); Inst0++; } } catch(e) {}
var shouldBailout = false;
try { if (Inst1 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<386,399,6>",(shouldBailout)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (test0) != "undefined") {_RecordType("<419,424,8>",(test0)); Inst2++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst3 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<435,439,9>",(obj0)); Inst3++; } } catch(e) {}

  var func0 = function (p0) {
try { if (Inst5 <= 1000 && typeof (p0) != "undefined") {_RecordType("<471,473,11>",(p0)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<485,498,12>",(shouldBailout)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<502,523,12>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<502,508,12>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<524,528,12>",(obj0)); Inst9++; } } catch(e) {}
    if (shouldBailout ? (Object.defineProperty(obj0, 'prop6', {
      get: function () {
try { if (Inst10 <= 1000 && typeof (Count) != "undefined") {_RecordType("<574,579,14>",(Count)); Inst10++; } } catch(e) {}
        Count++;
        return 3;
      },
      set: function (_x) {
try { if (Inst11 <= 1000 && typeof (_x) != "undefined") {_RecordType("<631,633,17>",(_x)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<645,650,18>",(print)); Inst12++; } } catch(e) {}
        print('obj0.prop6 setter');
      }
    }), 1) : 1) {
try { if (Inst13 <= 1000 && typeof (Math.log) != "undefined") {_RecordType("<705,713,21>",(Math.log)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Math) != "undefined") {_RecordType("<705,709,21>",(Math)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj0.prop6) != "undefined") {_RecordType("<714,724,21>",(obj0.prop6)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<714,718,21>",(obj0)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<728,735,21>",(Boolean)); Inst17++; } } catch(e) {}
      Math.log(obj0.prop6) - Boolean;
      11;
    }
  };
try { if (Inst4 <= 1000 && typeof (func0) != "undefined") {_RecordType("<453,458,11>",(func0)); Inst4++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (func0) != "undefined") {_RecordType("<871,876,33>",(func0)); Inst20++; } } catch(e) {}
  obj0.prop1 = {
    prop0: 1,
    prop1: 1,
    prop2: 1,
    prop3: 1,
    prop4: 1,
    prop5: 1,
    prop6: func0(1, 1),
    prop7: 1
  };
try { if (Inst18 <= 1000 && typeof (obj0.prop1) != "undefined") {_RecordType("<761,771,26>",(obj0.prop1)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<761,765,26>",(obj0)); Inst19++; } } catch(e) {}
}

;

for (var i = 0; i < 2000; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<917,918,40>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<924,925,40>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<934,935,40>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (test0) != "undefined") {_RecordType("<943,948,41>",(test0)); Inst24++; } } catch(e) {}
  test0();
} // run code with bailouts enabled


shouldBailout = true;
try { if (Inst25 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<990,1003,45>",(shouldBailout)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1012,1017,46>",(test0)); Inst26++; } } catch(e) {}
test0();

try { if (Inst27 <= 1000 && typeof (Count) != "undefined") {_RecordType("<1026,1031,48>",(Count)); Inst27++; } } catch(e) {}
if (Count != 1) {
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<1042,1047,49>",(print)); Inst28++; } } catch(e) {}
  print("FAILED\n");
} else {
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<1072,1077,51>",(print)); Inst29++; } } catch(e) {}
  print("Passed\n");
} // Windows Blue Bug 416975


try { if (Inst30 <= 1000 && typeof (test1) != "undefined") {_RecordType("<1131,1136,55>",(test1)); Inst30++; } } catch(e) {}
function test1() {
try { if (Inst31 <= 1000 && typeof (bar4) != "undefined") {_RecordType("<1152,1156,56>",(bar4)); Inst31++; } } catch(e) {}
  function bar4() {
try { if (Inst32 <= 1000 && typeof (bar4) != "undefined") {_RecordType("<1169,1173,57>",(bar4)); Inst32++; } } catch(e) {}
    if (bar4()) {
      ;
    }

    return 1 > 1;
  }

try { if (Inst33 <= 1000 && typeof (bar4) != "undefined") {_RecordType("<1219,1223,64>",(bar4)); Inst33++; } } catch(e) {}
  bar4();
}

;

try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<1259,1260,71>",(e)); Inst35++; } } catch(e) {}
try {
try { if (Inst34 <= 1000 && typeof (test1) != "undefined") {_RecordType("<1241,1246,70>",(test1)); Inst34++; } } catch(e) {}
  test1();
} catch (e) {
  ;
}

