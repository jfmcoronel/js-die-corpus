var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (foo0) != "undefined") {_RecordType("<376,380,5>",(foo0)); Inst0++; } } catch(e) {}
function foo0(o, i) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<381,382,5>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<384,385,5>",(i)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<395,396,6>",(o)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<406,407,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<411,412,6>",(o)); Inst5++; } } catch(e) {}
  if (o == 10 && i++, o) {
    ;
  } else {
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<437,442,9>",(print)); Inst6++; } } catch(e) {}
    print("FAILED");
  }
}

try { if (Inst7 <= 1000 && typeof (foo0) != "undefined") {_RecordType("<461,465,13>",(foo0)); Inst7++; } } catch(e) {}
foo0(9, 0); // - At 'o.p && 1', 'BrTrue 1' is const-folded to 'Br' to the loop exit block with the 'break'
// - 'a' becomes live as a float on the right side of '||' and is only live as an int on the left side
// - Since both of those blocks are predecessors to the loop exit block with the 'break', 'a' is kept live as a float on exit
//   out of the loop
// - When compensating in the 'BrTrue 1' block, we don't need an airlock block to convert 'a' to a float only on exit out of the
//   loop because that branch was already const-folded into 'Br' and always flows into the exit block

try { if (Inst8 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1059,1063,20>",(foo1)); Inst8++; } } catch(e) {}
function foo1() {
  var o = {
    p: 0
  };
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<1074,1075,21>",(o)); Inst9++; } } catch(e) {}
  var a = 0;
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<1100,1101,24>",(a)); Inst10++; } } catch(e) {}

  for (var i = 0; i < 2; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<1119,1120,26>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<1126,1127,26>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<1135,1136,26>",(i)); Inst13++; } } catch(e) {}
    a = 1;
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1144,1145,27>",(a)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (o.p) != "undefined") {_RecordType("<1160,1163,29>",(o.p)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<1160,1161,29>",(o)); Inst16++; } } catch(e) {}
    if (o.p && 1 || (a /= 2)) {
      break;
    }
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1173,1174,29>",(a)); Inst17++; } } catch(e) {}
  }
}

try { if (Inst18 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1210,1214,35>",(foo1)); Inst18++; } } catch(e) {}
foo1();
try { if (Inst19 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1218,1222,36>",(foo1)); Inst19++; } } catch(e) {}
foo1();

try { if (Inst20 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1236,1240,38>",(foo2)); Inst20++; } } catch(e) {}
function foo2() {
try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1261,1266,39>",(Array)); Inst22++; } } catch(e) {}
  var ary = new Array(10);
try { if (Inst21 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1251,1254,39>",(ary)); Inst21++; } } catch(e) {}
  var c = -1;
try { if (Inst23 <= 1000 && typeof (c) != "undefined") {_RecordType("<1278,1279,40>",(c)); Inst23++; } } catch(e) {}
  var e = 1;
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<1292,1293,41>",(e)); Inst24++; } } catch(e) {}
  var g = 1;
try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<1305,1306,42>",(g)); Inst25++; } } catch(e) {}
  ary[ary.length - 1] = 1;
try { if (Inst26 <= 1000 && typeof (ary[ary.length - 1]) != "undefined") {_RecordType("<1314,1333,43>",(ary[ary.length - 1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1314,1317,43>",(ary)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<1318,1328,43>",(ary.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1318,1321,43>",(ary)); Inst29++; } } catch(e) {}
  ary.length = 100;
try { if (Inst30 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<1341,1351,44>",(ary.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1341,1344,44>",(ary)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<1365,1366,45>",(e)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (c) != "undefined") {_RecordType("<1369,1370,45>",(c)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<1374,1375,45>",(g)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (c) != "undefined") {_RecordType("<1378,1379,45>",(c)); Inst36++; } } catch(e) {}
  g = e < c || g < c;
try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<1361,1362,45>",(g)); Inst32++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (g) != "undefined") {_RecordType("<1388,1389,47>",(g)); Inst37++; } } catch(e) {}
  if (g) {
try { if (Inst39 <= 1000 && typeof (e) != "undefined") {_RecordType("<1401,1402,48>",(e)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (c) != "undefined") {_RecordType("<1405,1406,48>",(c)); Inst40++; } } catch(e) {}
    c = e < c;
try { if (Inst38 <= 1000 && typeof (c) != "undefined") {_RecordType("<1397,1398,48>",(c)); Inst38++; } } catch(e) {}
  }

try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<1420,1421,51>",(e)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (c) != "undefined") {_RecordType("<1424,1425,51>",(c)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (g) != "undefined") {_RecordType("<1429,1430,51>",(g)); Inst44++; } } catch(e) {}
  c = (e < c) + g;
try { if (Inst41 <= 1000 && typeof (c) != "undefined") {_RecordType("<1415,1416,51>",(c)); Inst41++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (ary[ary.length - 1]) != "undefined") {_RecordType("<1434,1453,52>",(ary[ary.length - 1])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1434,1437,52>",(ary)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<1438,1448,52>",(ary.length)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (ary) != "undefined") {_RecordType("<1438,1441,52>",(ary)); Inst48++; } } catch(e) {}
  ary[ary.length - 1];
}

;
try { if (Inst49 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1460,1464,56>",(foo2)); Inst49++; } } catch(e) {}
foo2();
try { if (Inst50 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1468,1472,57>",(foo2)); Inst50++; } } catch(e) {}
foo2();
try { if (Inst51 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<1476,1480,58>",(foo2)); Inst51++; } } catch(e) {}
foo2();
try { if (Inst52 <= 1000 && typeof (print) != "undefined") {_RecordType("<1484,1489,59>",(print)); Inst52++; } } catch(e) {}
print("Passed");

