var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Conv_Num gets changed to Nop during copy-prop. The Nop instruction should not go through type specialization.
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<489,494,6>",(test0)); Inst0++; } } catch(e) {}
function test0(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<495,496,6>",(a)); Inst1++; } } catch(e) {}
  a &= 1;
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<502,503,7>",(a)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<525,526,8>",(a)); Inst4++; } } catch(e) {}
  var b = 1 << a;
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<516,517,8>",(b)); Inst3++; } } catch(e) {}
  var c = 0;
try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<534,535,9>",(c)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<548,549,11>",(a)); Inst6++; } } catch(e) {}
  if (a) {
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<567,568,12>",(b)); Inst9++; } } catch(e) {}
    c = (b = +b) * 1.1;
try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<557,558,12>",(c)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<562,563,12>",(b)); Inst8++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<592,593,15>",(b)); Inst10++; } } catch(e) {}
  return ~b;
}

try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<598,603,18>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (test0) != "undefined") {_RecordType("<616,621,18>",(test0)); Inst12++; } } catch(e) {}
print("test0: " + test0(1)); // - '~o' is not int-specialized but produces an int-range value, though 'a' is available only as a var
// - 'a === 1.1' is float-specialized, so now 'a' is also available as a float64
// - 'a = 1' makes 'a' only available as an int32 in the branch
// - Now we have a.v and a.f live on one side with 'a' having an int value, and a.i on the other side. The merge needs to keep
//   a.v live on both sides since due to the int value, 'a' may be int-specialized later (in 'a + 1'). a.v needs to be available
//   since a.f cannot be losslessly converted into an int32 (expensive and not supported at the time of this writing).

try { if (Inst13 <= 1000 && typeof (test1) != "undefined") {_RecordType("<1261,1266,25>",(test1)); Inst13++; } } catch(e) {}
function test1() {
  var o = {};
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<1277,1278,26>",(o)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<1296,1297,27>",(o)); Inst16++; } } catch(e) {}
  var a = ~o;
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1291,1292,27>",(a)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1306,1307,29>",(a)); Inst17++; } } catch(e) {}
  if (a === 1.1) {
    a = 1;
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<1323,1324,30>",(a)); Inst18++; } } catch(e) {}
  }

try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<1344,1345,33>",(a)); Inst19++; } } catch(e) {}
  return a + 1;
}

try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<1354,1359,36>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (test1) != "undefined") {_RecordType("<1372,1377,36>",(test1)); Inst21++; } } catch(e) {}
print("test1: " + test1());
var shouldBailout = false;
try { if (Inst22 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<1386,1399,37>",(shouldBailout)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (testrem) != "undefined") {_RecordType("<1419,1426,39>",(testrem)); Inst23++; } } catch(e) {}
function testrem() {
try { if (Inst24 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<1442,1446,40>",(leaf)); Inst24++; } } catch(e) {}
  function leaf(x) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<1447,1448,40>",(x)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<1463,1464,41>",(x)); Inst26++; } } catch(e) {}
    return x;
  }

  ;
  var obj0 = {};
try { if (Inst27 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1481,1485,45>",(obj0)); Inst27++; } } catch(e) {}

  var func0 = function (p0, p1, p2) {
try { if (Inst29 <= 1000 && typeof (p0) != "undefined") {_RecordType("<1517,1519,47>",(p0)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1521,1523,47>",(p1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1525,1527,47>",(p2)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (k) != "undefined") {_RecordType("<1547,1548,48>",(k)); Inst33++; } } catch(e) {}
    return g += k;
try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<1542,1543,48>",(g)); Inst32++; } } catch(e) {}
  };
try { if (Inst28 <= 1000 && typeof (func0) != "undefined") {_RecordType("<1499,1504,47>",(func0)); Inst28++; } } catch(e) {}

  var func1 = function (p0) {
try { if (Inst35 <= 1000 && typeof (p0) != "undefined") {_RecordType("<1580,1582,51>",(p0)); Inst35++; } } catch(e) {}
    // Make sure that we track implicit register kills properly for this type-specialized %.
try { if (Inst37 <= 1000 && typeof (r) != "undefined") {_RecordType("<1689,1690,53>",(r)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (q) != "undefined") {_RecordType("<1695,1696,53>",(q)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<1711,1724,53>",(shouldBailout)); Inst39++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<1735,1739,53>",(leaf)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (func0) != "undefined") {_RecordType("<1745,1750,53>",(func0)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (d) != "undefined") {_RecordType("<1765,1766,53>",(d)); Inst43++; } } catch(e) {}
    k -= (r ^ ++q) % ~1 * (1 - (shouldBailout ? func0 = leaf : 1, func0(1, 1))) ? 1 : d;
try { if (Inst36 <= 1000 && typeof (k) != "undefined") {_RecordType("<1683,1684,53>",(k)); Inst36++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (func0) != "undefined") {_RecordType("<1727,1732,53>",(func0)); Inst40++; } } catch(e) {}
  };
try { if (Inst34 <= 1000 && typeof (func1) != "undefined") {_RecordType("<1562,1567,51>",(func1)); Inst34++; } } catch(e) {}

  var func2 = function (p0, p1, p2) {
try { if (Inst45 <= 1000 && typeof (p0) != "undefined") {_RecordType("<1798,1800,56>",(p0)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1802,1804,56>",(p1)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1806,1808,56>",(p2)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (func0) != "undefined") {_RecordType("<1816,1821,57>",(func0)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (d) != "undefined") {_RecordType("<1836,1837,57>",(d)); Inst49++; } } catch(e) {}
    func0(1, 1, 1, 1, --d, 1);
  };
try { if (Inst44 <= 1000 && typeof (func2) != "undefined") {_RecordType("<1780,1785,56>",(func2)); Inst44++; } } catch(e) {}

try { if (Inst52 <= 1000 && typeof (func2) != "undefined") {_RecordType("<1866,1871,60>",(func2)); Inst52++; } } catch(e) {}
  obj0.method0 = func2;
try { if (Inst50 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<1851,1863,60>",(obj0.method0)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1851,1855,60>",(obj0)); Inst51++; } } catch(e) {}
  var b = 2147483647;
try { if (Inst53 <= 1000 && typeof (b) != "undefined") {_RecordType("<1879,1880,61>",(b)); Inst53++; } } catch(e) {}
  var d = -984599814;
try { if (Inst54 <= 1000 && typeof (d) != "undefined") {_RecordType("<1901,1902,62>",(d)); Inst54++; } } catch(e) {}
  var g = 1;
try { if (Inst55 <= 1000 && typeof (g) != "undefined") {_RecordType("<1923,1924,63>",(g)); Inst55++; } } catch(e) {}
  var k = 1;
try { if (Inst56 <= 1000 && typeof (k) != "undefined") {_RecordType("<1936,1937,64>",(k)); Inst56++; } } catch(e) {}
  var q = 7.26957791630936E+18;
try { if (Inst57 <= 1000 && typeof (q) != "undefined") {_RecordType("<1949,1950,65>",(q)); Inst57++; } } catch(e) {}
  var r = -264469094;
try { if (Inst58 <= 1000 && typeof (r) != "undefined") {_RecordType("<1981,1982,66>",(r)); Inst58++; } } catch(e) {}
  obj0.prop0 = 1;
try { if (Inst59 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<1999,2009,67>",(obj0.prop0)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<1999,2003,67>",(obj0)); Inst60++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (b) != "undefined") {_RecordType("<2133,2134,75>",(b)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (func1) != "undefined") {_RecordType("<2147,2152,76>",(func1)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<2157,2169,76>",(obj0.method0)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2157,2161,76>",(obj0)); Inst67++; } } catch(e) {}
  obj0.length = {
    prop7: 1,
    prop6: 1,
    prop5: 1,
    prop4: 1,
    prop3: 1,
    prop2: 1,
    prop1: q += b,
    prop0: func1() * obj0.method0(1, 1, 1, 1)
  };
try { if (Inst61 <= 1000 && typeof (obj0.length) != "undefined") {_RecordType("<2017,2028,68>",(obj0.length)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2017,2021,68>",(obj0)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (q) != "undefined") {_RecordType("<2128,2129,75>",(q)); Inst63++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (g) != "undefined") {_RecordType("<2203,2204,78>",(g)); Inst70++; } } catch(e) {}
  obj0.prop0 -= g;
try { if (Inst68 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<2189,2199,78>",(obj0.prop0)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2189,2193,78>",(obj0)); Inst69++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (print) != "undefined") {_RecordType("<2208,2213,79>",(print)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<2233,2243,79>",(obj0.prop0)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2233,2237,79>",(obj0)); Inst73++; } } catch(e) {}
  print("obj0.prop0 = " + (obj0.prop0 | 0));
}

;
try { if (Inst74 <= 1000 && typeof (testrem) != "undefined") {_RecordType("<2256,2263,83>",(testrem)); Inst74++; } } catch(e) {}
testrem();
try { if (Inst75 <= 1000 && typeof (testrem) != "undefined") {_RecordType("<2267,2274,84>",(testrem)); Inst75++; } } catch(e) {}
testrem(); // VSO bug 5497066
// Hoisting FromVar from a region where it doesn't need a bailout
// to one where it does

try { if (Inst76 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2397,2402,88>",(test2)); Inst76++; } } catch(e) {}
function test2() {
  var func1 = function (argMath2) {
try { if (Inst78 <= 1000 && typeof (argMath2) != "undefined") {_RecordType("<2431,2439,89>",(argMath2)); Inst78++; } } catch(e) {}
    for (; __loopvar0 != 2 && d < argMath2;) {
try { if (Inst79 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<2454,2464,90>",(__loopvar0)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (d) != "undefined") {_RecordType("<2473,2474,90>",(d)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (argMath2) != "undefined") {_RecordType("<2477,2485,90>",(argMath2)); Inst81++; } } catch(e) {}
      __loopvar0 += 3;
try { if (Inst82 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<2496,2506,91>",(__loopvar0)); Inst82++; } } catch(e) {}
    }
  };
try { if (Inst77 <= 1000 && typeof (func1) != "undefined") {_RecordType("<2413,2418,89>",(func1)); Inst77++; } } catch(e) {}

try { if (Inst84 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<2541,2551,95>",(Int32Array)); Inst84++; } } catch(e) {}
  var i32 = new Int32Array();
try { if (Inst83 <= 1000 && typeof (i32) != "undefined") {_RecordType("<2531,2534,95>",(i32)); Inst83++; } } catch(e) {}
  var d = -1865727919761880000;
try { if (Inst85 <= 1000 && typeof (d) != "undefined") {_RecordType("<2561,2562,96>",(d)); Inst85++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2604,2610,97>",(Object)); Inst87++; } } catch(e) {}
  var uniqobj0 = Object();
try { if (Inst86 <= 1000 && typeof (uniqobj0) != "undefined") {_RecordType("<2593,2601,97>",(uniqobj0)); Inst86++; } } catch(e) {}

  var __loopvar0 = -1;
try { if (Inst88 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<2621,2631,99>",(__loopvar0)); Inst88++; } } catch(e) {}

  var count = 1;
try { if (Inst89 <= 1000 && typeof (count) != "undefined") {_RecordType("<2645,2650,101>",(count)); Inst89++; } } catch(e) {}

  for (; count ? true : func1(uniqobj0); i32[1317940107]) {
try { if (Inst90 <= 1000 && typeof (count) != "undefined") {_RecordType("<2666,2671,103>",(count)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (func1) != "undefined") {_RecordType("<2681,2686,103>",(func1)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (uniqobj0) != "undefined") {_RecordType("<2687,2695,103>",(uniqobj0)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (i32[1317940107]) != "undefined") {_RecordType("<2698,2713,103>",(i32[1317940107])); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (i32) != "undefined") {_RecordType("<2698,2701,103>",(i32)); Inst94++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (count) != "undefined") {_RecordType("<2721,2726,104>",(count)); Inst95++; } } catch(e) {}
    count--;
  }

try { if (Inst96 <= 1000 && typeof (uniqobj0) != "undefined") {_RecordType("<2737,2745,107>",(uniqobj0)); Inst96++; } } catch(e) {}
  uniqobj0;
}

try { if (Inst97 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2750,2755,110>",(test2)); Inst97++; } } catch(e) {}
test2();
try { if (Inst98 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2759,2764,111>",(test2)); Inst98++; } } catch(e) {}
test2();

