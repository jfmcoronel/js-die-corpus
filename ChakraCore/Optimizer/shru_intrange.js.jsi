var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
try { if (Inst1 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<397,401,6>",(leaf)); Inst1++; } } catch(e) {}
  function leaf() {
    ;
  }

  var obj1 = {};
try { if (Inst2 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<423,427,10>",(obj1)); Inst2++; } } catch(e) {}

  var func0 = function () {
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<467,472,13>",(print)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<473,474,13>",(a)); Inst5++; } } catch(e) {}
    print(a);
  };
try { if (Inst3 <= 1000 && typeof (func0) != "undefined") {_RecordType("<441,446,12>",(func0)); Inst3++; } } catch(e) {}

  var func2 = function (argMath0) {
try { if (Inst7 <= 1000 && typeof (argMath0) != "undefined") {_RecordType("<507,515,16>",(argMath0)); Inst7++; } } catch(e) {}
    var __loopvar2 = 5;
try { if (Inst8 <= 1000 && typeof (__loopvar2) != "undefined") {_RecordType("<527,537,17>",(__loopvar2)); Inst8++; } } catch(e) {}

    for (; a < (argMath0 >>>= test0); a++) {
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<555,556,19>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (argMath0) != "undefined") {_RecordType("<560,568,19>",(argMath0)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<574,579,19>",(test0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<582,583,19>",(a)); Inst12++; } } catch(e) {}
      __loopvar2 += 2;
try { if (Inst13 <= 1000 && typeof (__loopvar2) != "undefined") {_RecordType("<595,605,20>",(__loopvar2)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (__loopvar2) != "undefined") {_RecordType("<623,633,22>",(__loopvar2)); Inst14++; } } catch(e) {}
      if (__loopvar2 >= 5 + 6) {
        break;
      }
    }

try { if (Inst15 <= 1000 && typeof (func0) != "undefined") {_RecordType("<680,685,27>",(func0)); Inst15++; } } catch(e) {}
    func0();
    return 65535;
  };
try { if (Inst6 <= 1000 && typeof (func2) != "undefined") {_RecordType("<489,494,16>",(func2)); Inst6++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (func2) != "undefined") {_RecordType("<730,735,31>",(func2)); Inst18++; } } catch(e) {}
  obj1.method1 = func2;
try { if (Inst16 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<715,727,31>",(obj1.method1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<715,719,31>",(obj1)); Inst17++; } } catch(e) {}
  var IntArr1 = [-198980986, 476677656118063740];
try { if (Inst19 <= 1000 && typeof (IntArr1) != "undefined") {_RecordType("<743,750,32>",(IntArr1)); Inst19++; } } catch(e) {}
  var a = 2147483647;
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<793,794,33>",(a)); Inst20++; } } catch(e) {}
  var __loopvar0 = 5;
try { if (Inst21 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<815,825,34>",(__loopvar0)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<923,935,42>",(obj1.method1)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<923,927,42>",(obj1)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (IntArr1.pop) != "undefined") {_RecordType("<936,947,42>",(IntArr1.pop)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (IntArr1) != "undefined") {_RecordType("<936,943,42>",(IntArr1)); Inst25++; } } catch(e) {}
  do {
    __loopvar0 += 4;
try { if (Inst26 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<843,853,37>",(__loopvar0)); Inst26++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<869,879,39>",(__loopvar0)); Inst27++; } } catch(e) {}
    if (__loopvar0 == 5 + 16) {
      break;
    }
  } while (obj1.method1(IntArr1.pop()));
}

try { if (Inst28 <= 1000 && typeof (test0) != "undefined") {_RecordType("<956,961,45>",(test0)); Inst28++; } } catch(e) {}
test0();
try { if (Inst29 <= 1000 && typeof (test0) != "undefined") {_RecordType("<965,970,46>",(test0)); Inst29++; } } catch(e) {}
test0();

