var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var __counter = 0;
try { if (Inst0 <= 1000 && typeof (__counter) != "undefined") {_RecordType("<371,380,5>",(__counter)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<396,401,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
try { if (Inst2 <= 1000 && typeof (__counter) != "undefined") {_RecordType("<408,417,8>",(__counter)); Inst2++; } } catch(e) {}
  __counter++;
  ;
  var obj0 = {};
try { if (Inst3 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<431,435,10>",(obj0)); Inst3++; } } catch(e) {}
  var obj1 = {};
try { if (Inst4 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<448,452,11>",(obj1)); Inst4++; } } catch(e) {}

  var func1 = function () {
    ;
  };
try { if (Inst5 <= 1000 && typeof (func1) != "undefined") {_RecordType("<466,471,13>",(func1)); Inst5++; } } catch(e) {}

  var func4 = function () {
    ;
  };
try { if (Inst6 <= 1000 && typeof (func4) != "undefined") {_RecordType("<506,511,17>",(func4)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (func1) != "undefined") {_RecordType("<557,562,21>",(func1)); Inst9++; } } catch(e) {}
  obj0.method1 = func1;
try { if (Inst7 <= 1000 && typeof (obj0.method1) != "undefined") {_RecordType("<542,554,21>",(obj0.method1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<542,546,21>",(obj0)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (func4) != "undefined") {_RecordType("<581,586,22>",(func4)); Inst12++; } } catch(e) {}
  obj1.method1 = func4;
try { if (Inst10 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<566,578,22>",(obj1.method1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<566,570,22>",(obj1)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<602,615,23>",(Object.create)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<602,608,23>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<616,620,23>",(obj0)); Inst16++; } } catch(e) {}
  protoObj0 = Object.create(obj0);
try { if (Inst13 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<590,599,23>",(protoObj0)); Inst13++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<637,650,24>",(Object.create)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<637,643,24>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<651,655,24>",(obj1)); Inst20++; } } catch(e) {}
  protoObj1 = Object.create(obj1); // loopbreakblock5.ecs
try { if (Inst17 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<625,634,24>",(protoObj1)); Inst17++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (v464) != "undefined") {_RecordType("<693,697,26>",(v464)); Inst21++; } } catch(e) {}
  function v464() {
    var v465 = 0;
try { if (Inst22 <= 1000 && typeof (v465) != "undefined") {_RecordType("<710,714,27>",(v465)); Inst22++; } } catch(e) {}
    var __loopvar1000 = 0;
try { if (Inst23 <= 1000 && typeof (__loopvar1000) != "undefined") {_RecordType("<728,741,28>",(__loopvar1000)); Inst23++; } } catch(e) {}

    while (1) {
try { if (Inst24 <= 1000 && typeof (__loopvar1000) != "undefined") {_RecordType("<774,787,31>",(__loopvar1000)); Inst24++; } } catch(e) {}
      if (__loopvar1000 > 3) {
        break;
      }

try { if (Inst25 <= 1000 && typeof (__loopvar1000) != "undefined") {_RecordType("<825,838,35>",(__loopvar1000)); Inst25++; } } catch(e) {}
      __loopvar1000++;

try { if (Inst26 <= 1000 && typeof (v465) != "undefined") {_RecordType("<853,857,37>",(v465)); Inst26++; } } catch(e) {}
      if (v465++ > 2) {
try { if (Inst28 <= 1000 && typeof (protoObj1) != "undefined") {_RecordType("<891,900,38>",(protoObj1)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<902,911,38>",(protoObj0)); Inst29++; } } catch(e) {}
        var uniqobj0 = [protoObj1, protoObj0];
try { if (Inst27 <= 1000 && typeof (uniqobj0) != "undefined") {_RecordType("<879,887,38>",(uniqobj0)); Inst27++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (uniqobj0[__counter % uniqobj0.length].method1) != "undefined") {_RecordType("<923,968,40>",(uniqobj0[__counter % uniqobj0.length].method1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (uniqobj0[__counter % uniqobj0.length]) != "undefined") {_RecordType("<923,960,40>",(uniqobj0[__counter % uniqobj0.length])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (uniqobj0) != "undefined") {_RecordType("<923,931,40>",(uniqobj0)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (__counter) != "undefined") {_RecordType("<932,941,40>",(__counter)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (uniqobj0.length) != "undefined") {_RecordType("<944,959,40>",(uniqobj0.length)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (uniqobj0) != "undefined") {_RecordType("<944,952,40>",(uniqobj0)); Inst35++; } } catch(e) {}
        uniqobj0[__counter % uniqobj0.length].method1();

        throw "loopbreakblock5.ecs";
      }
    }
  }

try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<1060,1061,49>",(e)); Inst37++; } } catch(e) {}
  try {
try { if (Inst36 <= 1000 && typeof (v464) != "undefined") {_RecordType("<1041,1045,48>",(v464)); Inst36++; } } catch(e) {}
    v464();
  } catch (e) {
    ;
  }

  ;
}

; // generate profile

try { if (Inst38 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1106,1111,58>",(test0)); Inst38++; } } catch(e) {}
test0(); // Run Simple JIT

try { if (Inst39 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1134,1139,60>",(test0)); Inst39++; } } catch(e) {}
test0(); // run JITted code

runningJITtedCode = true;
try { if (Inst40 <= 1000 && typeof (runningJITtedCode) != "undefined") {_RecordType("<1163,1180,62>",(runningJITtedCode)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1189,1194,63>",(test0)); Inst41++; } } catch(e) {}
test0();
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1198,1203,64>",(print)); Inst42++; } } catch(e) {}
print("PASSED\n");

