var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var obj1 = {
    prop1: 0.1
  };
try { if (Inst1 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<392,396,6>",(obj1)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (obj1.prop1) != "undefined") {_RecordType("<423,433,9>",(obj1.prop1)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<423,427,9>",(obj1)); Inst3++; } } catch(e) {}
  obj1.prop1;

  for (var i = 0; i < 1; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<447,448,11>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<454,455,11>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<463,464,11>",(i)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (test0a) != "undefined") {_RecordType("<472,478,12>",(test0a)); Inst7++; } } catch(e) {}
    test0a();
try { if (Inst9 <= 1000 && typeof (obj1.prop1) != "undefined") {_RecordType("<494,504,13>",(obj1.prop1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<494,498,13>",(obj1)); Inst10++; } } catch(e) {}
    var x = obj1.prop1;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<490,491,13>",(x)); Inst8++; } } catch(e) {}
    x += 1;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<510,511,14>",(x)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<522,527,15>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<528,529,15>",(x)); Inst13++; } } catch(e) {}
    print(x);
  }

try { if (Inst14 <= 1000 && typeof (test0a) != "undefined") {_RecordType("<548,554,18>",(test0a)); Inst14++; } } catch(e) {}
  function test0a() {
try { if (Inst16 <= 1000 && typeof (ex) != "undefined") {_RecordType("<598,600,21>",(ex)); Inst16++; } } catch(e) {}
    try {
try { if (Inst15 <= 1000 && typeof (test0b) != "undefined") {_RecordType("<575,581,20>",(test0b)); Inst15++; } } catch(e) {}
      test0b();
    } catch (ex) {
      ;
    }

try { if (Inst17 <= 1000 && typeof (test0b) != "undefined") {_RecordType("<632,638,25>",(test0b)); Inst17++; } } catch(e) {}
    function test0b() {
      for (var i = 0; i < 1; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<658,659,26>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<665,666,26>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<674,675,26>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (_nonexistent) != "undefined") {_RecordType("<693,705,27>",(_nonexistent)); Inst21++; } } catch(e) {}
        0.1 - _nonexistent;
        break;
      }
    }
  }
}

;
try { if (Inst22 <= 1000 && typeof (test0) != "undefined") {_RecordType("<745,750,35>",(test0)); Inst22++; } } catch(e) {}
test0();
try { if (Inst23 <= 1000 && typeof (test0) != "undefined") {_RecordType("<754,759,36>",(test0)); Inst23++; } } catch(e) {}
test0();

