var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft Corporation and contributors. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
fail = false; // #1
try { if (Inst0 <= 1000 && typeof (fail) != "undefined") {_RecordType("<396,400,5>",(fail)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<426,431,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
try { if (Inst2 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<447,451,8>",(leaf)); Inst2++; } } catch(e) {}
  function leaf() {
    return 100;
  }

  var obj1 = {};
try { if (Inst3 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<483,487,12>",(obj1)); Inst3++; } } catch(e) {}

  var func0 = function () {
try { if (Inst5 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<534,538,15>",(leaf)); Inst5++; } } catch(e) {}
    return leaf();
  };
try { if (Inst4 <= 1000 && typeof (func0) != "undefined") {_RecordType("<501,506,14>",(func0)); Inst4++; } } catch(e) {}

  var func2 = function () {
try { if (Inst7 <= 1000 && typeof (func0.call) != "undefined") {_RecordType("<586,596,19>",(func0.call)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (func0) != "undefined") {_RecordType("<586,591,19>",(func0)); Inst8++; } } catch(e) {}
    if (!(func0.call() % -2147483646)) {
try { if (Inst9 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<623,630,20>",(arrObj0)); Inst9++; } } catch(e) {}
      arrObj0;
    }
  };
try { if (Inst6 <= 1000 && typeof (func2) != "undefined") {_RecordType("<554,559,18>",(func2)); Inst6++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (func2) != "undefined") {_RecordType("<661,666,24>",(func2)); Inst12++; } } catch(e) {}
  obj1.method1 = func2;
try { if (Inst10 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<646,658,24>",(obj1.method1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<646,650,24>",(obj1)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (obj1.method1) != "undefined") {_RecordType("<670,682,25>",(obj1.method1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<670,674,25>",(obj1)); Inst14++; } } catch(e) {}
  obj1.method1();
}

try { if (Inst15 <= 1000 && typeof (test0) != "undefined") {_RecordType("<689,694,28>",(test0)); Inst15++; } } catch(e) {}
test0();
try { if (Inst16 <= 1000 && typeof (test0) != "undefined") {_RecordType("<698,703,29>",(test0)); Inst16++; } } catch(e) {}
test0();
try { if (Inst17 <= 1000 && typeof (test0) != "undefined") {_RecordType("<707,712,30>",(test0)); Inst17++; } } catch(e) {}
test0();
try { if (Inst18 <= 1000 && typeof (test0) != "undefined") {_RecordType("<716,721,31>",(test0)); Inst18++; } } catch(e) {}
test0(); // #2

try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<741,744,33>",(foo)); Inst19++; } } catch(e) {}
function foo(a, b) {
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<745,746,33>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<748,749,33>",(b)); Inst21++; } } catch(e) {}
  a %= 3;
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<755,756,34>",(a)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<769,770,35>",(b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<774,775,35>",(a)); Inst25++; } } catch(e) {}
  b = b >> a;
try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<765,766,35>",(b)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<786,787,36>",(b)); Inst26++; } } catch(e) {}
  return b;
}

try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<800,803,39>",(foo)); Inst28++; } } catch(e) {}
base1 = foo(4, 2);
try { if (Inst27 <= 1000 && typeof (base1) != "undefined") {_RecordType("<792,797,39>",(base1)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<811,814,40>",(foo)); Inst29++; } } catch(e) {}
foo(4, 2);
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<822,825,41>",(foo)); Inst30++; } } catch(e) {}
foo(4, 2);
try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<833,836,42>",(foo)); Inst31++; } } catch(e) {}
foo(4, 2);
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<844,847,43>",(foo)); Inst32++; } } catch(e) {}
foo(4, 2);
try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<863,866,44>",(foo)); Inst34++; } } catch(e) {}
case1 = foo(4, 2);
try { if (Inst33 <= 1000 && typeof (case1) != "undefined") {_RecordType("<855,860,44>",(case1)); Inst33++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (base1) != "undefined") {_RecordType("<879,884,46>",(base1)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (case1) != "undefined") {_RecordType("<888,893,46>",(case1)); Inst36++; } } catch(e) {}
if (base1 != case1) {
try { if (Inst37 <= 1000 && typeof (print) != "undefined") {_RecordType("<899,904,47>",(print)); Inst37++; } } catch(e) {}
  print("ERROR: Functional error in jit - Case1");
  fail = true;
try { if (Inst38 <= 1000 && typeof (fail) != "undefined") {_RecordType("<950,954,48>",(fail)); Inst38++; } } catch(e) {}
} // #3


try { if (Inst39 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<982,986,52>",(foo1)); Inst39++; } } catch(e) {}
function foo1(a) {
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<987,988,52>",(a)); Inst40++; } } catch(e) {}
  a %= 94;
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<994,995,53>",(a)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1009,1010,54>",(a)); Inst43++; } } catch(e) {}
  a = a & 255;
try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1005,1006,54>",(a)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<1027,1028,55>",(a)); Inst44++; } } catch(e) {}
  return a;
}

try { if (Inst46 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1041,1045,58>",(foo1)); Inst46++; } } catch(e) {}
base2 = foo1(123);
try { if (Inst45 <= 1000 && typeof (base2) != "undefined") {_RecordType("<1033,1038,58>",(base2)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1052,1056,59>",(foo1)); Inst47++; } } catch(e) {}
foo1(123);
try { if (Inst48 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1063,1067,60>",(foo1)); Inst48++; } } catch(e) {}
foo1(123);
try { if (Inst49 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1074,1078,61>",(foo1)); Inst49++; } } catch(e) {}
foo1(123);
try { if (Inst50 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1085,1089,62>",(foo1)); Inst50++; } } catch(e) {}
foo1(123);
try { if (Inst51 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1096,1100,63>",(foo1)); Inst51++; } } catch(e) {}
foo1(123);
try { if (Inst53 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<1115,1119,64>",(foo1)); Inst53++; } } catch(e) {}
case2 = foo1(123);
try { if (Inst52 <= 1000 && typeof (case2) != "undefined") {_RecordType("<1107,1112,64>",(case2)); Inst52++; } } catch(e) {}

try { if (Inst54 <= 1000 && typeof (base2) != "undefined") {_RecordType("<1131,1136,66>",(base2)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (case2) != "undefined") {_RecordType("<1140,1145,66>",(case2)); Inst55++; } } catch(e) {}
if (base2 != case2) {
try { if (Inst56 <= 1000 && typeof (print) != "undefined") {_RecordType("<1151,1156,67>",(print)); Inst56++; } } catch(e) {}
  print("ERROR: Functional error in jit - Case2");
  fail = true;
try { if (Inst57 <= 1000 && typeof (fail) != "undefined") {_RecordType("<1202,1206,68>",(fail)); Inst57++; } } catch(e) {}
}

try { if (Inst58 <= 1000 && typeof (fail) != "undefined") {_RecordType("<1223,1227,71>",(fail)); Inst58++; } } catch(e) {}
if (!fail) {
try { if (Inst59 <= 1000 && typeof (print) != "undefined") {_RecordType("<1233,1238,72>",(print)); Inst59++; } } catch(e) {}
  print('PASS');
} //Test failure causes assertion /error

