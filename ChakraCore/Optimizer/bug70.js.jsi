var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var shouldBailout = false;
try { if (Inst0 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<371,384,5>",(shouldBailout)); Inst0++; } } catch(e) {}
var count = 0;
try { if (Inst1 <= 1000 && typeof (count) != "undefined") {_RecordType("<398,403,6>",(count)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (test0) != "undefined") {_RecordType("<419,424,8>",(test0)); Inst2++; } } catch(e) {}
function test0() {
  var func1 = function () {
try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<465,466,10>",(d)); Inst5++; } } catch(e) {}
    h = d;
try { if (Inst4 <= 1000 && typeof (h) != "undefined") {_RecordType("<461,462,10>",(h)); Inst4++; } } catch(e) {}
  };
try { if (Inst3 <= 1000 && typeof (func1) != "undefined") {_RecordType("<435,440,9>",(func1)); Inst3++; } } catch(e) {}

  var d = 309820929.1;
try { if (Inst6 <= 1000 && typeof (d) != "undefined") {_RecordType("<480,481,13>",(d)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<500,513,14>",(shouldBailout)); Inst7++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (d) != "undefined") {_RecordType("<603,604,19>",(d)); Inst10++; } } catch(e) {}
  (shouldBailout ? (d = {
    valueOf: function () {
try { if (Inst9 <= 1000 && typeof (count) != "undefined") {_RecordType("<556,561,16>",(count)); Inst9++; } } catch(e) {}
      count++;
      return 3;
    }
  }, 1) : 1) ? +d : 1;
try { if (Inst8 <= 1000 && typeof (d) != "undefined") {_RecordType("<517,518,14>",(d)); Inst8++; } } catch(e) {}
}

; // generate profile

try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<636,641,24>",(test0)); Inst11++; } } catch(e) {}
test0(); // run JITted code

try { if (Inst12 <= 1000 && typeof (test0) != "undefined") {_RecordType("<665,670,26>",(test0)); Inst12++; } } catch(e) {}
test0(); // run code with bailouts enabled

shouldBailout = true;
try { if (Inst13 <= 1000 && typeof (shouldBailout) != "undefined") {_RecordType("<709,722,28>",(shouldBailout)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (test0) != "undefined") {_RecordType("<731,736,29>",(test0)); Inst14++; } } catch(e) {}
test0();

try { if (Inst15 <= 1000 && typeof (count) != "undefined") {_RecordType("<745,750,31>",(count)); Inst15++; } } catch(e) {}
if (count == 1) {
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<761,766,32>",(print)); Inst16++; } } catch(e) {}
  print("Passed");
} else {
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<789,794,34>",(print)); Inst17++; } } catch(e) {}
  print("FAILED");
}

