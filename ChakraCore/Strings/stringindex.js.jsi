var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (write) != "undefined") {_RecordType("<376,381,5>",(write)); Inst0++; } } catch(e) {}
function write(args) {
try { if (Inst1 <= 1000 && typeof (args) != "undefined") {_RecordType("<382,386,5>",(args)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<392,397,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (args) != "undefined") {_RecordType("<398,402,6>",(args)); Inst3++; } } catch(e) {}
  print(args);
}

try { if (Inst4 <= 1000 && typeof (write) != "undefined") {_RecordType("<408,413,9>",(write)); Inst4++; } } catch(e) {}
write("Scenario 1");
var sl = "hello";
try { if (Inst5 <= 1000 && typeof (sl) != "undefined") {_RecordType("<433,435,10>",(sl)); Inst5++; } } catch(e) {}

for (var i = 0; i < 8; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<457,458,12>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<464,465,12>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,12>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (write) != "undefined") {_RecordType("<480,485,13>",(write)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (sl.propertyIsEnumerable) != "undefined") {_RecordType("<486,509,13>",(sl.propertyIsEnumerable)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (sl) != "undefined") {_RecordType("<486,488,13>",(sl)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<510,511,13>",(i)); Inst12++; } } catch(e) {}
  write(sl.propertyIsEnumerable(i));
try { if (Inst13 <= 1000 && typeof (write) != "undefined") {_RecordType("<517,522,14>",(write)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (sl.hasOwnProperty) != "undefined") {_RecordType("<523,540,14>",(sl.hasOwnProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (sl) != "undefined") {_RecordType("<523,525,14>",(sl)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<541,542,14>",(i)); Inst16++; } } catch(e) {}
  write(sl.hasOwnProperty(i));
try { if (Inst17 <= 1000 && typeof (write) != "undefined") {_RecordType("<548,553,15>",(write)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (sl[i]) != "undefined") {_RecordType("<554,559,15>",(sl[i])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (sl) != "undefined") {_RecordType("<554,556,15>",(sl)); Inst19++; } } catch(e) {}
  write(sl[i]);
}

try { if (Inst20 <= 1000 && typeof (write) != "undefined") {_RecordType("<565,570,18>",(write)); Inst20++; } } catch(e) {}
write("Scenario 2");
try { if (Inst22 <= 1000 && typeof (String) != "undefined") {_RecordType("<599,605,19>",(String)); Inst22++; } } catch(e) {}
var so = new String("hello");
try { if (Inst21 <= 1000 && typeof (so) != "undefined") {_RecordType("<590,592,19>",(so)); Inst21++; } } catch(e) {}
so[1] = 10;
try { if (Inst23 <= 1000 && typeof (so[1]) != "undefined") {_RecordType("<616,621,20>",(so[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (so) != "undefined") {_RecordType("<616,618,20>",(so)); Inst24++; } } catch(e) {}
so[4] = 20;
try { if (Inst25 <= 1000 && typeof (so[4]) != "undefined") {_RecordType("<628,633,21>",(so[4])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (so) != "undefined") {_RecordType("<628,630,21>",(so)); Inst26++; } } catch(e) {}
so[7] = 30;
try { if (Inst27 <= 1000 && typeof (so[7]) != "undefined") {_RecordType("<640,645,22>",(so[7])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (so) != "undefined") {_RecordType("<640,642,22>",(so)); Inst28++; } } catch(e) {}
so.x = 20;
try { if (Inst29 <= 1000 && typeof (so.x) != "undefined") {_RecordType("<652,656,23>",(so.x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (so) != "undefined") {_RecordType("<652,654,23>",(so)); Inst30++; } } catch(e) {}

for (var i = 0; i < 8; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<673,674,25>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<680,681,25>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<687,688,25>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (write) != "undefined") {_RecordType("<696,701,26>",(write)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (so.propertyIsEnumerable) != "undefined") {_RecordType("<702,725,26>",(so.propertyIsEnumerable)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (so) != "undefined") {_RecordType("<702,704,26>",(so)); Inst36++; } } catch(e) {}
  write(so.propertyIsEnumerable(1));
try { if (Inst37 <= 1000 && typeof (write) != "undefined") {_RecordType("<733,738,27>",(write)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (so.hasOwnProperty) != "undefined") {_RecordType("<739,756,27>",(so.hasOwnProperty)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (so) != "undefined") {_RecordType("<739,741,27>",(so)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<757,758,27>",(i)); Inst40++; } } catch(e) {}
  write(so.hasOwnProperty(i));
try { if (Inst41 <= 1000 && typeof (write) != "undefined") {_RecordType("<764,769,28>",(write)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (so[i]) != "undefined") {_RecordType("<770,775,28>",(so[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (so) != "undefined") {_RecordType("<770,772,28>",(so)); Inst43++; } } catch(e) {}
  write(so[i]);
}

try { if (Inst44 <= 1000 && typeof (write) != "undefined") {_RecordType("<781,786,31>",(write)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (so.propertyIsEnumerable) != "undefined") {_RecordType("<787,810,31>",(so.propertyIsEnumerable)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (so) != "undefined") {_RecordType("<787,789,31>",(so)); Inst46++; } } catch(e) {}
write(so.propertyIsEnumerable("x"));
try { if (Inst47 <= 1000 && typeof (write) != "undefined") {_RecordType("<818,823,32>",(write)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (so.hasOwnProperty) != "undefined") {_RecordType("<824,841,32>",(so.hasOwnProperty)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (so) != "undefined") {_RecordType("<824,826,32>",(so)); Inst49++; } } catch(e) {}
write(so.hasOwnProperty("x"));
try { if (Inst50 <= 1000 && typeof (write) != "undefined") {_RecordType("<849,854,33>",(write)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (so["x"]) != "undefined") {_RecordType("<855,862,33>",(so["x"])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (so) != "undefined") {_RecordType("<855,857,33>",(so)); Inst52++; } } catch(e) {}
write(so["x"]);

