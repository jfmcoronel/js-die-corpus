var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<376,378,5>",(t1)); Inst0++; } } catch(e) {}
function t1() {
  // NOTE: See comments in test/UnitTestFramework/UnitTestFramework.js for more info about what assertions you can use
try { if (Inst1 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<504,515,7>",(console.log)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (console) != "undefined") {_RecordType("<504,511,7>",(console)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (String.prototype.trimLeft) != "undefined") {_RecordType("<516,541,7>",(String.prototype.trimLeft)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<516,532,7>",(String.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (String) != "undefined") {_RecordType("<516,522,7>",(String)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (String.prototype.trimStart) != "undefined") {_RecordType("<543,569,7>",(String.prototype.trimStart)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<543,559,7>",(String.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (String) != "undefined") {_RecordType("<543,549,7>",(String)); Inst8++; } } catch(e) {}
  console.log(String.prototype.trimLeft, String.prototype.trimStart);
}

try { if (Inst9 <= 1000 && typeof (t1) != "undefined") {_RecordType("<575,577,10>",(t1)); Inst9++; } } catch(e) {}
t1();

try { if (Inst10 <= 1000 && typeof (t2) != "undefined") {_RecordType("<591,593,12>",(t2)); Inst10++; } } catch(e) {}
function t2() {
try { if (Inst11 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<600,611,13>",(console.log)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (console) != "undefined") {_RecordType("<600,607,13>",(console)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (String.prototype.trimRight) != "undefined") {_RecordType("<612,638,13>",(String.prototype.trimRight)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<612,628,13>",(String.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (String) != "undefined") {_RecordType("<612,618,13>",(String)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (String.prototype.trimEnd) != "undefined") {_RecordType("<640,664,13>",(String.prototype.trimEnd)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<640,656,13>",(String.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (String) != "undefined") {_RecordType("<640,646,13>",(String)); Inst18++; } } catch(e) {}
  console.log(String.prototype.trimRight, String.prototype.trimEnd);
}

try { if (Inst19 <= 1000 && typeof (t2) != "undefined") {_RecordType("<670,672,16>",(t2)); Inst19++; } } catch(e) {}
t2();

try { if (Inst20 <= 1000 && typeof (t3) != "undefined") {_RecordType("<686,688,18>",(t3)); Inst20++; } } catch(e) {}
function t3() {
try { if (Inst21 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<695,706,19>",(console.log)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (console) != "undefined") {_RecordType("<695,702,19>",(console)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (String.prototype.trimLeft.name) != "undefined") {_RecordType("<707,737,19>",(String.prototype.trimLeft.name)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (String.prototype.trimLeft) != "undefined") {_RecordType("<707,732,19>",(String.prototype.trimLeft)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<707,723,19>",(String.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (String) != "undefined") {_RecordType("<707,713,19>",(String)); Inst26++; } } catch(e) {}
  console.log(String.prototype.trimLeft.name, 'trimStart');
}

try { if (Inst27 <= 1000 && typeof (t3) != "undefined") {_RecordType("<756,758,22>",(t3)); Inst27++; } } catch(e) {}
t3();

try { if (Inst28 <= 1000 && typeof (t4) != "undefined") {_RecordType("<772,774,24>",(t4)); Inst28++; } } catch(e) {}
function t4() {
try { if (Inst29 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<781,792,25>",(console.log)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (console) != "undefined") {_RecordType("<781,788,25>",(console)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (String.prototype.trimRight.name) != "undefined") {_RecordType("<793,824,25>",(String.prototype.trimRight.name)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (String.prototype.trimRight) != "undefined") {_RecordType("<793,819,25>",(String.prototype.trimRight)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<793,809,25>",(String.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (String) != "undefined") {_RecordType("<793,799,25>",(String)); Inst34++; } } catch(e) {}
  console.log(String.prototype.trimRight.name, 'trimEnd');
}

try { if (Inst35 <= 1000 && typeof (t4) != "undefined") {_RecordType("<841,843,28>",(t4)); Inst35++; } } catch(e) {}
t4();

try { if (Inst36 <= 1000 && typeof (t5) != "undefined") {_RecordType("<857,859,30>",(t5)); Inst36++; } } catch(e) {}
function t5() {
try { if (Inst37 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<866,877,31>",(console.log)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (console) != "undefined") {_RecordType("<866,873,31>",(console)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (String.prototype.trimStart.name) != "undefined") {_RecordType("<878,909,31>",(String.prototype.trimStart.name)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (String.prototype.trimStart) != "undefined") {_RecordType("<878,904,31>",(String.prototype.trimStart)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<878,894,31>",(String.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (String) != "undefined") {_RecordType("<878,884,31>",(String)); Inst42++; } } catch(e) {}
  console.log(String.prototype.trimStart.name, 'trimStart');
}

try { if (Inst43 <= 1000 && typeof (t5) != "undefined") {_RecordType("<928,930,34>",(t5)); Inst43++; } } catch(e) {}
t5();

try { if (Inst44 <= 1000 && typeof (t6) != "undefined") {_RecordType("<944,946,36>",(t6)); Inst44++; } } catch(e) {}
function t6() {
try { if (Inst45 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<953,964,37>",(console.log)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (console) != "undefined") {_RecordType("<953,960,37>",(console)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (String.prototype.trimEnd.name) != "undefined") {_RecordType("<965,994,37>",(String.prototype.trimEnd.name)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (String.prototype.trimEnd) != "undefined") {_RecordType("<965,989,37>",(String.prototype.trimEnd)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<965,981,37>",(String.prototype)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (String) != "undefined") {_RecordType("<965,971,37>",(String)); Inst50++; } } catch(e) {}
  console.log(String.prototype.trimEnd.name, 'trimEnd');
}

try { if (Inst51 <= 1000 && typeof (t6) != "undefined") {_RecordType("<1011,1013,40>",(t6)); Inst51++; } } catch(e) {}
t6();

