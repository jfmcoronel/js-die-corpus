var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// Number tests
{
  var str = "x";
try { if (Inst0 <= 1000 && typeof (str) != "undefined") {_RecordType("<391,394,7>",(str)); Inst0++; } } catch(e) {}
  str.a = 12;
try { if (Inst1 <= 1000 && typeof (str.a) != "undefined") {_RecordType("<404,409,8>",(str.a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (str) != "undefined") {_RecordType("<404,407,8>",(str)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<418,423,9>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<424,433,9>",(undefined)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (str.a) != "undefined") {_RecordType("<435,440,9>",(str.a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (str) != "undefined") {_RecordType("<435,438,9>",(str)); Inst6++; } } catch(e) {}
  print(undefined, str.a);
}
{
  var str = "x";
try { if (Inst7 <= 1000 && typeof (str) != "undefined") {_RecordType("<453,456,12>",(str)); Inst7++; } } catch(e) {}
  "use strict";

  str.a = 1;
try { if (Inst8 <= 1000 && typeof (str.a) != "undefined") {_RecordType("<483,488,15>",(str.a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (str) != "undefined") {_RecordType("<483,486,15>",(str)); Inst9++; } } catch(e) {}
}
{
  var str = "x";
try { if (Inst10 <= 1000 && typeof (str) != "undefined") {_RecordType("<504,507,18>",(str)); Inst10++; } } catch(e) {}
  str['a'] = 12;
try { if (Inst11 <= 1000 && typeof (str['a']) != "undefined") {_RecordType("<517,525,19>",(str['a'])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (str) != "undefined") {_RecordType("<517,520,19>",(str)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<534,539,20>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<540,549,20>",(undefined)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (str.a) != "undefined") {_RecordType("<551,556,20>",(str.a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (str) != "undefined") {_RecordType("<551,554,20>",(str)); Inst16++; } } catch(e) {}
  print(undefined, str.a);
}
{
  var str = "x";
try { if (Inst17 <= 1000 && typeof (str) != "undefined") {_RecordType("<569,572,23>",(str)); Inst17++; } } catch(e) {}
  "use strict";

  str['a'] = 1;
try { if (Inst18 <= 1000 && typeof (str['a']) != "undefined") {_RecordType("<599,607,26>",(str['a'])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (str) != "undefined") {_RecordType("<599,602,26>",(str)); Inst19++; } } catch(e) {}
}
{
  var str = "x";
try { if (Inst20 <= 1000 && typeof (str) != "undefined") {_RecordType("<623,626,29>",(str)); Inst20++; } } catch(e) {}
  str[66] = 12;
try { if (Inst21 <= 1000 && typeof (str[66]) != "undefined") {_RecordType("<636,643,30>",(str[66])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (str) != "undefined") {_RecordType("<636,639,30>",(str)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<652,657,31>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<658,667,31>",(undefined)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (str.a) != "undefined") {_RecordType("<669,674,31>",(str.a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (str) != "undefined") {_RecordType("<669,672,31>",(str)); Inst26++; } } catch(e) {}
  print(undefined, str.a);
}
{
  var str = "x";
try { if (Inst27 <= 1000 && typeof (str) != "undefined") {_RecordType("<687,690,34>",(str)); Inst27++; } } catch(e) {}
  "use strict";

  str[66] = 1;
try { if (Inst28 <= 1000 && typeof (str[66]) != "undefined") {_RecordType("<717,724,37>",(str[66])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (str) != "undefined") {_RecordType("<717,720,37>",(str)); Inst29++; } } catch(e) {}
}

