var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (MyRepl) != "undefined") {_RecordType("<376,382,5>",(MyRepl)); Inst0++; } } catch(e) {}
function MyRepl(matched, offset, input) {
try { if (Inst1 <= 1000 && typeof (matched) != "undefined") {_RecordType("<383,390,5>",(matched)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (offset) != "undefined") {_RecordType("<392,398,5>",(offset)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (input) != "undefined") {_RecordType("<400,405,5>",(input)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (input.substring) != "undefined") {_RecordType("<411,426,6>",(input.substring)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (input) != "undefined") {_RecordType("<411,416,6>",(input)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (offset) != "undefined") {_RecordType("<427,433,6>",(offset)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (matched.length) != "undefined") {_RecordType("<435,449,6>",(matched.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (matched) != "undefined") {_RecordType("<435,442,6>",(matched)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (matched) != "undefined") {_RecordType("<454,461,6>",(matched)); Inst9++; } } catch(e) {}
  input.substring(offset, matched.length) == matched;
  return "Boo!";
}

try { if (Inst11 <= 1000 && typeof (String) != "undefined") {_RecordType("<497,503,10>",(String)); Inst11++; } } catch(e) {}
var str = new String("asdfasdfGg");
try { if (Inst10 <= 1000 && typeof (str) != "undefined") {_RecordType("<487,490,10>",(str)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<519,524,11>",(print)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<525,536,11>",(str.replace)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (str) != "undefined") {_RecordType("<525,528,11>",(str)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (MyRepl) != "undefined") {_RecordType("<542,548,11>",(MyRepl)); Inst15++; } } catch(e) {}
print(str.replace("f", MyRepl));
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<552,557,12>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<558,569,12>",(str.replace)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (str) != "undefined") {_RecordType("<558,561,12>",(str)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (MyRepl) != "undefined") {_RecordType("<575,581,12>",(MyRepl)); Inst19++; } } catch(e) {}
print(str.replace(/a/, MyRepl));
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<585,590,13>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<591,602,13>",(str.replace)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (str) != "undefined") {_RecordType("<591,594,13>",(str)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (MyRepl) != "undefined") {_RecordType("<609,615,13>",(MyRepl)); Inst23++; } } catch(e) {}
print(str.replace(/d/g, MyRepl));
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<619,624,14>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<625,636,14>",(str.replace)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (str) != "undefined") {_RecordType("<625,628,14>",(str)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (MyRepl) != "undefined") {_RecordType("<645,651,14>",(MyRepl)); Inst27++; } } catch(e) {}
print(str.replace(/G*/gi, MyRepl));

