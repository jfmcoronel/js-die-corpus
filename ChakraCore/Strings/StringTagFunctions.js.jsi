var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<376,378,5>",(t1)); Inst0++; } } catch(e) {}
function t1() {
  var _this = 'value';
try { if (Inst1 <= 1000 && typeof (_this) != "undefined") {_RecordType("<389,394,6>",(_this)); Inst1++; } } catch(e) {}
  var property = 'any string with a quote " longer than 32 characters';
try { if (Inst2 <= 1000 && typeof (property) != "undefined") {_RecordType("<412,420,7>",(property)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<480,491,8>",(console.log)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (console) != "undefined") {_RecordType("<480,487,8>",(console)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (_this.link) != "undefined") {_RecordType("<572,582,8>",(_this.link)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (_this) != "undefined") {_RecordType("<572,577,8>",(_this)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (property) != "undefined") {_RecordType("<583,591,8>",(property)); Inst7++; } } catch(e) {}
  console.log('<a href="any string with a quote &quot; longer than 32 characters">value</a>', _this.link(property));
  _this = '""""""""""""""""';
try { if (Inst8 <= 1000 && typeof (_this) != "undefined") {_RecordType("<597,602,9>",(_this)); Inst8++; } } catch(e) {}
  property = '""""""""""""""""';
try { if (Inst9 <= 1000 && typeof (property) != "undefined") {_RecordType("<627,635,10>",(property)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<660,671,11>",(console.log)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (console) != "undefined") {_RecordType("<660,667,11>",(console)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (_this.anchor) != "undefined") {_RecordType("<803,815,11>",(_this.anchor)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (_this) != "undefined") {_RecordType("<803,808,11>",(_this)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (property) != "undefined") {_RecordType("<816,824,11>",(property)); Inst14++; } } catch(e) {}
  console.log('<a name="&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;">""""""""""""""""</a>', _this.anchor(property));
  _this = 'value';
try { if (Inst15 <= 1000 && typeof (_this) != "undefined") {_RecordType("<830,835,12>",(_this)); Inst15++; } } catch(e) {}
  property = 'long string with " multiple " quote characters " and " the final character is a quote "';
try { if (Inst16 <= 1000 && typeof (property) != "undefined") {_RecordType("<849,857,13>",(property)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<953,964,14>",(console.log)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (console) != "undefined") {_RecordType("<953,960,14>",(console)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (_this.fontsize) != "undefined") {_RecordType("<1107,1121,14>",(_this.fontsize)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1107,1112,14>",(_this)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (property) != "undefined") {_RecordType("<1122,1130,14>",(property)); Inst21++; } } catch(e) {}
  console.log('<font size="long string with &quot; multiple &quot; quote characters &quot; and &quot; the final character is a quote &quot;">value</font>', _this.fontsize(property));
}

try { if (Inst22 <= 1000 && typeof (t1) != "undefined") {_RecordType("<1137,1139,17>",(t1)); Inst22++; } } catch(e) {}
t1();

try { if (Inst23 <= 1000 && typeof (t2) != "undefined") {_RecordType("<1153,1155,19>",(t2)); Inst23++; } } catch(e) {}
function t2() {
  var _this = 'value';
try { if (Inst24 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1166,1171,20>",(_this)); Inst24++; } } catch(e) {}
  var property = "-\"";
try { if (Inst25 <= 1000 && typeof (property) != "undefined") {_RecordType("<1189,1197,21>",(property)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1209,1220,22>",(console.log)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (console) != "undefined") {_RecordType("<1209,1216,22>",(console)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (_this.link) != "undefined") {_RecordType("<1246,1256,22>",(_this.link)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1246,1251,22>",(_this)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (property.substring) != "undefined") {_RecordType("<1257,1275,22>",(property.substring)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (property) != "undefined") {_RecordType("<1257,1265,22>",(property)); Inst31++; } } catch(e) {}
  console.log('<a href="-">value</a>', _this.link(property.substring(1, 0)));
}

try { if (Inst32 <= 1000 && typeof (t2) != "undefined") {_RecordType("<1288,1290,25>",(t2)); Inst32++; } } catch(e) {}
t2();

try { if (Inst33 <= 1000 && typeof (t3) != "undefined") {_RecordType("<1304,1306,27>",(t3)); Inst33++; } } catch(e) {}
function t3() {
  var _this = 'value';
try { if (Inst34 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1317,1322,28>",(_this)); Inst34++; } } catch(e) {}
  var property = " a string with quotes \"\" and an embedded null \0 character";
try { if (Inst35 <= 1000 && typeof (property) != "undefined") {_RecordType("<1340,1348,29>",(property)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (_this.fontcolor) != "undefined") {_RecordType("<1431,1446,31>",(_this.fontcolor)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1431,1436,31>",(_this)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (property) != "undefined") {_RecordType("<1447,1455,31>",(property)); Inst39++; } } catch(e) {}
  var result = _this.fontcolor(property);
try { if (Inst36 <= 1000 && typeof (result) != "undefined") {_RecordType("<1422,1428,31>",(result)); Inst36++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1461,1472,33>",(console.log)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (console) != "undefined") {_RecordType("<1461,1468,33>",(console)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<1574,1580,33>",(result)); Inst42++; } } catch(e) {}
  console.log("<font color=\" a string with quotes &quot;&quot; and an embedded null \0 character\">value</font>", result);
try { if (Inst43 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1585,1596,34>",(console.log)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (console) != "undefined") {_RecordType("<1585,1592,34>",(console)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<1601,1614,34>",(result.length)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (result) != "undefined") {_RecordType("<1601,1607,34>",(result)); Inst46++; } } catch(e) {}
  console.log(94, result.length);
try { if (Inst48 <= 1000 && typeof ("\0".fontsize) != "undefined") {_RecordType("<1628,1641,35>",("\0".fontsize)); Inst48++; } } catch(e) {}
  result = "\0".fontsize("\0");
try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<1619,1625,35>",(result)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1651,1662,36>",(console.log)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (console) != "undefined") {_RecordType("<1651,1658,36>",(console)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<1694,1700,36>",(result)); Inst51++; } } catch(e) {}
  console.log("<font size=\"\0\">\0</font>", result);
try { if (Inst52 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1705,1716,37>",(console.log)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (console) != "undefined") {_RecordType("<1705,1712,37>",(console)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<1721,1734,37>",(result.length)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (result) != "undefined") {_RecordType("<1721,1727,37>",(result)); Inst55++; } } catch(e) {}
  console.log(23, result.length);
}

try { if (Inst56 <= 1000 && typeof (t3) != "undefined") {_RecordType("<1740,1742,40>",(t3)); Inst56++; } } catch(e) {}
t3();

try { if (Inst57 <= 1000 && typeof (t4) != "undefined") {_RecordType("<1756,1758,42>",(t4)); Inst57++; } } catch(e) {}
function t4() {
  var _this = 'value';
try { if (Inst58 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1769,1774,43>",(_this)); Inst58++; } } catch(e) {}
  var property = '';
try { if (Inst59 <= 1000 && typeof (property) != "undefined") {_RecordType("<1792,1800,44>",(property)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1809,1820,45>",(console.log)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (console) != "undefined") {_RecordType("<1809,1816,45>",(console)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (_this.fontsize) != "undefined") {_RecordType("<1853,1867,45>",(_this.fontsize)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1853,1858,45>",(_this)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (property) != "undefined") {_RecordType("<1868,1876,45>",(property)); Inst64++; } } catch(e) {}
  console.log("<font size=\"\">value</font>", _this.fontsize(property));
  _this = '';
try { if (Inst65 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1882,1887,46>",(_this)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1896,1907,47>",(console.log)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (console) != "undefined") {_RecordType("<1896,1903,47>",(console)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (_this.link) != "undefined") {_RecordType("<1929,1939,47>",(_this.link)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1929,1934,47>",(_this)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (property) != "undefined") {_RecordType("<1940,1948,47>",(property)); Inst70++; } } catch(e) {}
  console.log("<a href=\"\"></a>", _this.link(property));
}

try { if (Inst71 <= 1000 && typeof (t4) != "undefined") {_RecordType("<1955,1957,50>",(t4)); Inst71++; } } catch(e) {}
t4();

try { if (Inst72 <= 1000 && typeof (t5) != "undefined") {_RecordType("<1971,1973,52>",(t5)); Inst72++; } } catch(e) {}
function t5() {
  var _this = 'value';
try { if (Inst73 <= 1000 && typeof (_this) != "undefined") {_RecordType("<1984,1989,53>",(_this)); Inst73++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2003,2014,54>",(console.log)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (console) != "undefined") {_RecordType("<2003,2010,54>",(console)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (_this.blink) != "undefined") {_RecordType("<2039,2050,54>",(_this.blink)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (_this) != "undefined") {_RecordType("<2039,2044,54>",(_this)); Inst77++; } } catch(e) {}
  console.log("<blink>value</blink>", _this.blink());
}

try { if (Inst78 <= 1000 && typeof (t5) != "undefined") {_RecordType("<2058,2060,57>",(t5)); Inst78++; } } catch(e) {}
t5();

