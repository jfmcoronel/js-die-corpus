var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (f1_f) != "undefined") {_RecordType("<376,380,5>",(f1_f)); Inst0++; } } catch(e) {}
function f1_f() {
  ;
}

;
var f2_v = 123;
try { if (Inst1 <= 1000 && typeof (f2_v) != "undefined") {_RecordType("<398,402,10>",(f2_v)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f3_f) != "undefined") {_RecordType("<420,424,12>",(f3_f)); Inst2++; } } catch(e) {}
function f3_f() {
  ;
}

;
var f4_v = 123;
try { if (Inst3 <= 1000 && typeof (f4_v) != "undefined") {_RecordType("<442,446,17>",(f4_v)); Inst3++; } } catch(e) {}
let f5_l = 123;
try { if (Inst4 <= 1000 && typeof (f5_l) != "undefined") {_RecordType("<458,462,18>",(f5_l)); Inst4++; } } catch(e) {}
const f6_c = 123;
try { if (Inst5 <= 1000 && typeof (f6_c) != "undefined") {_RecordType("<476,480,19>",(f6_c)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (ff) != "undefined") {_RecordType("<499,501,21>",(ff)); Inst6++; } } catch(e) {}
(function ff() {
  if (true) {
    let fo5_l = 123;
try { if (Inst7 <= 1000 && typeof (fo5_l) != "undefined") {_RecordType("<528,533,23>",(fo5_l)); Inst7++; } } catch(e) {}

    if (true) {
      // TODO: this is blocked by https://github.com/Microsoft/ChakraCore/issues/5070
      //
      // Top level function in eval conflicts with outer function level let
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<805,806,33>",(e)); Inst9++; } } catch(e) {}
      try {
try { if (Inst8 <= 1000 && typeof (fo5_l) != "undefined") {_RecordType("<758,763,30>",(fo5_l)); Inst8++; } } catch(e) {}
        function fo5_l() {
          ;
        }
      } catch (e) {
try { if (Inst11 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<823,832,34>",(e.message)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<823,824,34>",(e)); Inst12++; } } catch(e) {}
        ex = e.message;
try { if (Inst10 <= 1000 && typeof (ex) != "undefined") {_RecordType("<818,820,34>",(ex)); Inst10++; } } catch(e) {}
      }

      ex = "5";
try { if (Inst13 <= 1000 && typeof (ex) != "undefined") {_RecordType("<849,851,37>",(ex)); Inst13++; } } catch(e) {}
    }
  }

  if (true) {
    // Top level function in eval conflicts with outer function level const
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<1026,1027,47>",(e)); Inst15++; } } catch(e) {}
    try {
try { if (Inst14 <= 1000 && typeof (fo6_c) != "undefined") {_RecordType("<985,990,44>",(fo6_c)); Inst14++; } } catch(e) {}
      function fo6_c() {
        ;
      }
    } catch (e) {
try { if (Inst17 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1042,1051,48>",(e.message)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<1042,1043,48>",(e)); Inst18++; } } catch(e) {}
      ex = e.message;
try { if (Inst16 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1037,1039,48>",(ex)); Inst16++; } } catch(e) {}
    }
  }

try { if (Inst19 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1066,1077,52>",(console.log)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (console) != "undefined") {_RecordType("<1066,1073,52>",(console)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1078,1080,52>",(ex)); Inst21++; } } catch(e) {}
  console.log(ex);
  ex = "6";
try { if (Inst22 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1085,1087,53>",(ex)); Inst22++; } } catch(e) {}
  const fo6_c = 123;
try { if (Inst23 <= 1000 && typeof (fo6_c) != "undefined") {_RecordType("<1103,1108,54>",(fo6_c)); Inst23++; } } catch(e) {}
})();

try { if (Inst24 <= 1000 && typeof (ffs) != "undefined") {_RecordType("<1133,1136,57>",(ffs)); Inst24++; } } catch(e) {}
(function ffs() {
  'use strict';

  let fos5_l = 123; // Top level function in eval conflicts with outer function level let (strict)
try { if (Inst25 <= 1000 && typeof (fos5_l) != "undefined") {_RecordType("<1164,1170,60>",(fos5_l)); Inst25++; } } catch(e) {}
  // function fos5_l(){}

  if (true) {
    // Top level function in eval conflicts with outer function level const (strict)
try { if (Inst26 <= 1000 && typeof (fos6_c) != "undefined") {_RecordType("<1395,1401,65>",(fos6_c)); Inst26++; } } catch(e) {}
    function fos6_c() {
      ;
    }
  }

  const fos6_c = 123;
try { if (Inst27 <= 1000 && typeof (fos6_c) != "undefined") {_RecordType("<1433,1439,70>",(fos6_c)); Inst27++; } } catch(e) {}
})();

try { if (Inst28 <= 1000 && typeof (ffl) != "undefined") {_RecordType("<1464,1467,73>",(ffl)); Inst28++; } } catch(e) {}
(function ffl() {
  let fo5_l_sl = 123; // Top level function in eval conflicts with outer function level let
try { if (Inst29 <= 1000 && typeof (fo5_l_sl) != "undefined") {_RecordType("<1478,1486,74>",(fo5_l_sl)); Inst29++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<1624,1625,80>",(e)); Inst31++; } } catch(e) {}
  try {
try { if (Inst30 <= 1000 && typeof (fo5_l_sl) != "undefined") {_RecordType("<1586,1594,77>",(fo5_l_sl)); Inst30++; } } catch(e) {}
    function fo5_l_sl() {
      ;
    }
  } catch (e) {
try { if (Inst33 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1638,1647,81>",(e.message)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<1638,1639,81>",(e)); Inst34++; } } catch(e) {}
    ex = e.message;
try { if (Inst32 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1633,1635,81>",(ex)); Inst32++; } } catch(e) {}
  }

  ex = "7"; // Top level function in eval conflicts with outer function level const
try { if (Inst35 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1656,1658,84>",(ex)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<1798,1799,90>",(e)); Inst37++; } } catch(e) {}
  try {
try { if (Inst36 <= 1000 && typeof (fo6_c_sl) != "undefined") {_RecordType("<1760,1768,87>",(fo6_c_sl)); Inst36++; } } catch(e) {}
    function fo6_c_sl() {
      ;
    }
  } catch (e) {
try { if (Inst39 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1812,1821,91>",(e.message)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (e) != "undefined") {_RecordType("<1812,1813,91>",(e)); Inst40++; } } catch(e) {}
    ex = e.message;
try { if (Inst38 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1807,1809,91>",(ex)); Inst38++; } } catch(e) {}
  }

  ex = "8";
try { if (Inst41 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1830,1832,94>",(ex)); Inst41++; } } catch(e) {}
  const fo6_c_sl = 123;
try { if (Inst42 <= 1000 && typeof (fo6_c_sl) != "undefined") {_RecordType("<1848,1856,95>",(fo6_c_sl)); Inst42++; } } catch(e) {}
})();

try { if (Inst43 <= 1000 && typeof (ffn) != "undefined") {_RecordType("<1881,1884,98>",(ffn)); Inst43++; } } catch(e) {}
(function ffn() {
  let fo5_l_nf = 123; // Top level function in "new Function" does not conflict with outer function level let
try { if (Inst44 <= 1000 && typeof (fo5_l_nf) != "undefined") {_RecordType("<1895,1903,99>",(fo5_l_nf)); Inst44++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (fo5_l_nf) != "undefined") {_RecordType("<2015,2023,101>",(fo5_l_nf)); Inst46++; } } catch(e) {}
  f = function fo5_l_nf() {
    ;
  }; // Top level function in "new Function" does not conflict with outer function level const
try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<2002,2003,101>",(f)); Inst45++; } } catch(e) {}


try { if (Inst48 <= 1000 && typeof (fo6_c_nf) != "undefined") {_RecordType("<2146,2154,106>",(fo6_c_nf)); Inst48++; } } catch(e) {}
  f = function fo6_c_nf() {
    ;
  };
try { if (Inst47 <= 1000 && typeof (f) != "undefined") {_RecordType("<2133,2134,106>",(f)); Inst47++; } } catch(e) {}

try { if (Inst49 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<2173,2184,110>",(console.log)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (console) != "undefined") {_RecordType("<2173,2180,110>",(console)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<2185,2195,110>",(f.toString)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (f) != "undefined") {_RecordType("<2185,2186,110>",(f)); Inst52++; } } catch(e) {}
  console.log(f.toString());
  const fo6_c_nf = 123;
try { if (Inst53 <= 1000 && typeof (fo6_c_nf) != "undefined") {_RecordType("<2208,2216,111>",(fo6_c_nf)); Inst53++; } } catch(e) {}
})(); // Top level function in eval does not conflict with top level const, in a class (since strict is assumed)    


class C1 {
  static M() {
try { if (Inst55 <= 1000 && typeof (f6_c) != "undefined") {_RecordType("<2382,2386,117>",(f6_c)); Inst55++; } } catch(e) {}
    function f6_c() {
      ;
    }
  }

}
try { if (Inst54 <= 1000 && typeof (C1) != "undefined") {_RecordType("<2349,2351,115>",(C1)); Inst54++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (C1.M) != "undefined") {_RecordType("<2413,2417,124>",(C1.M)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (C1) != "undefined") {_RecordType("<2413,2415,124>",(C1)); Inst57++; } } catch(e) {}
C1.M(); // Top level function in eval does not conflict with class level get      

class C2 {
  get f7_l() {
    return "q";
  }

  static M() {
try { if (Inst59 <= 1000 && typeof (f7_l) != "undefined") {_RecordType("<2572,2576,132>",(f7_l)); Inst59++; } } catch(e) {}
    function f7_l() {
      ;
    }
  }

}
try { if (Inst58 <= 1000 && typeof (C2) != "undefined") {_RecordType("<2503,2505,126>",(C2)); Inst58++; } } catch(e) {}

try { if (Inst60 <= 1000 && typeof (C2.M) != "undefined") {_RecordType("<2603,2607,139>",(C2.M)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (C2) != "undefined") {_RecordType("<2603,2605,139>",(C2)); Inst61++; } } catch(e) {}
C2.M();

