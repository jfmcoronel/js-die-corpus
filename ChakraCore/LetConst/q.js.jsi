var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
let x;
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,5>",(x)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<374,379,6>",(print)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<380,381,6>",(x)); Inst2++; } } catch(e) {}
print(x);
{
  let x = 5;
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<392,393,8>",(x)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<401,406,9>",(print)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<407,408,9>",(x)); Inst5++; } } catch(e) {}
  print(x);
}
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<413,418,11>",(print)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<419,420,11>",(x)); Inst7++; } } catch(e) {}
print(x);

for (var a in this) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<433,434,13>",(a)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<452,453,14>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<467,468,14>",(a)); Inst10++; } } catch(e) {}
  if (a === "SCA" || a === "ImageData") {
    continue;
  }

try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<509,514,18>",(print)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<515,516,18>",(a)); Inst12++; } } catch(e) {}
  print(a);
}

try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<522,527,21>",(print)); Inst13++; } } catch(e) {}
print();

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<541,542,23>",(f)); Inst14++; } } catch(e) {}
function f() {
  const x = 'a';
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<555,556,24>",(x)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<566,571,25>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<572,573,25>",(x)); Inst17++; } } catch(e) {}
  print(x);

  if (1 > 0) {
    let x;
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<600,601,28>",(x)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<607,612,29>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<613,614,29>",(x)); Inst20++; } } catch(e) {}
    print(x);
  }

try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<624,629,32>",(print)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<630,631,32>",(x)); Inst22++; } } catch(e) {}
  print(x);
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<636,641,33>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<642,643,33>",(f)); Inst24++; } } catch(e) {}
  print(f);
}

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<649,650,36>",(f)); Inst25++; } } catch(e) {}
f();
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<654,659,37>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<660,661,37>",(x)); Inst27++; } } catch(e) {}
print(x);

