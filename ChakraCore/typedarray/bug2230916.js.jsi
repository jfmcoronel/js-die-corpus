var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var isPassed1 = false;
try { if (Inst0 <= 1000 && typeof (isPassed1) != "undefined") {_RecordType("<371,380,5>",(isPassed1)); Inst0++; } } catch(e) {}
var isPassed2 = false;
try { if (Inst1 <= 1000 && typeof (isPassed2) != "undefined") {_RecordType("<394,403,6>",(isPassed2)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (test1) != "undefined") {_RecordType("<423,428,8>",(test1)); Inst2++; } } catch(e) {}
function test1() {
try { if (Inst9 <= 1000 && typeof (ex) != "undefined") {_RecordType("<540,542,13>",(ex)); Inst9++; } } catch(e) {}
  try {
    for (var ubwtog in Object(Math.imul(1073741824, Object(Symbol())))) {
try { if (Inst3 <= 1000 && typeof (ubwtog) != "undefined") {_RecordType("<454,460,10>",(ubwtog)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<464,470,10>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math.imul) != "undefined") {_RecordType("<471,480,10>",(Math.imul)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Math) != "undefined") {_RecordType("<471,475,10>",(Math)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<493,499,10>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<500,506,10>",(Symbol)); Inst8++; } } catch(e) {}
      ;
    }
  } catch (ex) {
try { if (Inst10 <= 1000 && typeof (ex) != "undefined") {_RecordType("<554,556,14>",(ex)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<568,577,14>",(TypeError)); Inst11++; } } catch(e) {}
    if (ex instanceof TypeError) {
try { if (Inst12 <= 1000 && typeof (ex.message) != "undefined") {_RecordType("<591,601,15>",(ex.message)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ex) != "undefined") {_RecordType("<591,593,15>",(ex)); Inst13++; } } catch(e) {}
      if (ex.message === 'Number expected') {
        isPassed1 = true;
try { if (Inst14 <= 1000 && typeof (isPassed1) != "undefined") {_RecordType("<635,644,16>",(isPassed1)); Inst14++; } } catch(e) {}
      }
    }
  }
}

try { if (Inst15 <= 1000 && typeof (test2) != "undefined") {_RecordType("<683,688,22>",(test2)); Inst15++; } } catch(e) {}
function test2() {
try { if (Inst17 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<710,720,23>",(Uint8Array)); Inst17++; } } catch(e) {}
  ejdmhf_0 = new Uint8Array();
try { if (Inst16 <= 1000 && typeof (ejdmhf_0) != "undefined") {_RecordType("<695,703,23>",(ejdmhf_0)); Inst16++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (ex) != "undefined") {_RecordType("<776,778,27>",(ex)); Inst21++; } } catch(e) {}
  try {
try { if (Inst20 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<755,761,26>",(Symbol)); Inst20++; } } catch(e) {}
    ejdmhf_0[50341] = Symbol();
try { if (Inst18 <= 1000 && typeof (ejdmhf_0[50341]) != "undefined") {_RecordType("<737,752,26>",(ejdmhf_0[50341])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ejdmhf_0) != "undefined") {_RecordType("<737,745,26>",(ejdmhf_0)); Inst19++; } } catch(e) {}
  } catch (ex) {
try { if (Inst22 <= 1000 && typeof (ex) != "undefined") {_RecordType("<790,792,28>",(ex)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<804,813,28>",(TypeError)); Inst23++; } } catch(e) {}
    if (ex instanceof TypeError) {
try { if (Inst24 <= 1000 && typeof (ex.message) != "undefined") {_RecordType("<827,837,29>",(ex.message)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (ex) != "undefined") {_RecordType("<827,829,29>",(ex)); Inst25++; } } catch(e) {}
      if (ex.message === 'Number expected') {
        isPassed2 = true;
try { if (Inst26 <= 1000 && typeof (isPassed2) != "undefined") {_RecordType("<871,880,30>",(isPassed2)); Inst26++; } } catch(e) {}
      }
    }
  }
}

try { if (Inst27 <= 1000 && typeof (test1) != "undefined") {_RecordType("<910,915,36>",(test1)); Inst27++; } } catch(e) {}
test1();
try { if (Inst28 <= 1000 && typeof (test2) != "undefined") {_RecordType("<919,924,37>",(test2)); Inst28++; } } catch(e) {}
test2();
try { if (Inst29 <= 1000 && typeof (test2) != "undefined") {_RecordType("<928,933,38>",(test2)); Inst29++; } } catch(e) {}
test2();
try { if (Inst30 <= 1000 && typeof (test2) != "undefined") {_RecordType("<937,942,39>",(test2)); Inst30++; } } catch(e) {}
test2();
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<946,951,40>",(print)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (isPassed1) != "undefined") {_RecordType("<952,961,40>",(isPassed1)); Inst32++; } } catch(e) {}
print(isPassed1 ? 'PASS' : 'FAIL');
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<982,987,41>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (isPassed2) != "undefined") {_RecordType("<988,997,41>",(isPassed2)); Inst34++; } } catch(e) {}
print(isPassed2 ? 'PASS' : 'FAIL');

