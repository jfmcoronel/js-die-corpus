var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
try { if (Inst2 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<402,412,6>",(Uint8Array)); Inst2++; } } catch(e) {}
  var ui8 = new Uint8Array(256);
try { if (Inst1 <= 1000 && typeof (ui8) != "undefined") {_RecordType("<392,395,6>",(ui8)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (ui8) != "undefined") {_RecordType("<432,435,7>",(ui8)); Inst4++; } } catch(e) {}
  var cpa8 = ui8;
try { if (Inst3 <= 1000 && typeof (cpa8) != "undefined") {_RecordType("<425,429,7>",(cpa8)); Inst3++; } } catch(e) {}
  var g = 0;
try { if (Inst5 <= 1000 && typeof (g) != "undefined") {_RecordType("<443,444,8>",(g)); Inst5++; } } catch(e) {}
  var h = 0.5;
try { if (Inst6 <= 1000 && typeof (h) != "undefined") {_RecordType("<456,457,9>",(h)); Inst6++; } } catch(e) {}
  var i = 0;
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,10>",(i)); Inst7++; } } catch(e) {}
  var total = 0;
try { if (Inst8 <= 1000 && typeof (total) != "undefined") {_RecordType("<484,489,11>",(total)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (g) != "undefined") {_RecordType("<505,506,13>",(g)); Inst9++; } } catch(e) {}
  while (g < 10) {
    // Make sure we round ties the same way between the interpreter and the JIT-ed code.
try { if (Inst12 <= 1000 && typeof (g) != "undefined") {_RecordType("<618,619,15>",(g)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (h) != "undefined") {_RecordType("<622,623,15>",(h)); Inst13++; } } catch(e) {}
    cpa8[i] = g + h;
try { if (Inst10 <= 1000 && typeof (cpa8[i]) != "undefined") {_RecordType("<608,615,15>",(cpa8[i])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (cpa8) != "undefined") {_RecordType("<608,612,15>",(cpa8)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<629,634,16>",(print)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<645,646,16>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (cpa8[i++]) != "undefined") {_RecordType("<658,667,16>",(cpa8[i++])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (cpa8) != "undefined") {_RecordType("<658,662,16>",(cpa8)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<663,664,16>",(i)); Inst18++; } } catch(e) {}
    print("cpa8[" + i + "] = " + cpa8[i++]);
try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<674,675,17>",(g)); Inst19++; } } catch(e) {}
    g++;
  }

try { if (Inst20 <= 1000 && typeof (total) != "undefined") {_RecordType("<693,698,20>",(total)); Inst20++; } } catch(e) {}
  return total;
}

;
try { if (Inst21 <= 1000 && typeof (test0) != "undefined") {_RecordType("<705,710,24>",(test0)); Inst21++; } } catch(e) {}
test0();
try { if (Inst22 <= 1000 && typeof (test0) != "undefined") {_RecordType("<714,719,25>",(test0)); Inst22++; } } catch(e) {}
test0();

