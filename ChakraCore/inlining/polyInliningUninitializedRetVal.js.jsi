var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<376,380,5>",(leaf)); Inst0++; } } catch(e) {}
function leaf() {
  return 1;
}

try { if (Inst1 <= 1000 && typeof (f1) != "undefined") {_RecordType("<409,411,9>",(f1)); Inst1++; } } catch(e) {}
function f1() {
  var b = true || true;
try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<422,423,10>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<449,453,11>",(leaf)); Inst3++; } } catch(e) {}
  return leaf();
}

try { if (Inst4 <= 1000 && typeof (f2) != "undefined") {_RecordType("<469,471,14>",(f2)); Inst4++; } } catch(e) {}
function f2() {
  var c = true || true;
try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<482,483,15>",(c)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<509,513,16>",(leaf)); Inst6++; } } catch(e) {}
  return leaf();
}

try { if (Inst7 <= 1000 && typeof (bar) != "undefined") {_RecordType("<529,532,19>",(bar)); Inst7++; } } catch(e) {}
function bar(f) {
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<533,534,19>",(f)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<548,549,20>",(f)); Inst10++; } } catch(e) {}
  var a = f();
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<544,545,20>",(a)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<562,566,21>",(leaf)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<567,568,21>",(a)); Inst12++; } } catch(e) {}
  return leaf(a);
}

try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<574,577,24>",(bar)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f1) != "undefined") {_RecordType("<578,580,24>",(f1)); Inst14++; } } catch(e) {}
bar(f1);
try { if (Inst15 <= 1000 && typeof (bar) != "undefined") {_RecordType("<583,586,25>",(bar)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f2) != "undefined") {_RecordType("<587,589,25>",(f2)); Inst16++; } } catch(e) {}
bar(f2);
try { if (Inst17 <= 1000 && typeof (bar) != "undefined") {_RecordType("<592,595,26>",(bar)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f2) != "undefined") {_RecordType("<596,598,26>",(f2)); Inst18++; } } catch(e) {}
bar(f2);
try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<609,612,27>",(bar)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f2) != "undefined") {_RecordType("<613,615,27>",(f2)); Inst21++; } } catch(e) {}
var c = bar(f2);
try { if (Inst19 <= 1000 && typeof (c) != "undefined") {_RecordType("<605,606,27>",(c)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<618,623,28>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (c) != "undefined") {_RecordType("<624,625,28>",(c)); Inst23++; } } catch(e) {}
print(c);

