var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//switches: -maxinterpretcount:1
var __counter = 0;
try { if (Inst0 <= 1000 && typeof (__counter) != "undefined") {_RecordType("<404,413,6>",(__counter)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (__counter) != "undefined") {_RecordType("<419,428,7>",(__counter)); Inst1++; } } catch(e) {}
__counter++;
var obj0 = {};
try { if (Inst2 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<436,440,8>",(obj0)); Inst2++; } } catch(e) {}

obj0.method0 = function () {
try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<496,497,11>",(e)); Inst7++; } } catch(e) {}
  obj0.prop0 = 1 - e;
try { if (Inst5 <= 1000 && typeof (obj0.prop0) != "undefined") {_RecordType("<479,489,11>",(obj0.prop0)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<479,483,11>",(obj0)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof ([].push) != "undefined") {_RecordType("<501,508,12>",([].push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<519,520,12>",(e)); Inst9++; } } catch(e) {}
  [].push('e = ' + (e | 0));
};
try { if (Inst3 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<448,460,10>",(obj0.method0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<448,452,10>",(obj0)); Inst4++; } } catch(e) {}

var e = 2;
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<536,537,15>",(e)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<543,564,16>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<543,549,16>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<565,569,16>",(obj0)); Inst13++; } } catch(e) {}
Object.defineProperty(obj0, 'prop0', {
  set: function (v5) {
try { if (Inst14 <= 1000 && typeof (v5) != "undefined") {_RecordType("<599,601,17>",(v5)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<609,618,18>",(arguments)); Inst15++; } } catch(e) {}
    arguments; // this disables the argout optimization

try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<666,671,20>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v5) != "undefined") {_RecordType("<672,674,20>",(v5)); Inst17++; } } catch(e) {}
    print(v5);
  }
});

for (var i = 0; i < 3; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<695,696,24>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<702,703,24>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<709,710,24>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof ([{}, obj0][__counter].method0) != "undefined") {_RecordType("<718,747,25>",([{}, obj0][__counter].method0)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof ([{}, obj0][__counter]) != "undefined") {_RecordType("<718,739,25>",([{}, obj0][__counter])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<723,727,25>",(obj0)); Inst23++; } } catch(e) {}
  [{}, obj0][__counter].method0();
}

