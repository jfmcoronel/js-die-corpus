var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
// TH: 594138
while (true) {
  var v13 = {
    v14: function () {
try { if (Inst1 <= 1000 && typeof (bar) != "undefined") {_RecordType("<455,458,9>",(bar)); Inst1++; } } catch(e) {}
      return function bar() {
try { if (Inst2 <= 1000 && typeof (this.method0.apply) != "undefined") {_RecordType("<471,489,10>",(this.method0.apply)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (this.method0) != "undefined") {_RecordType("<471,483,10>",(this.method0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (this.prop2) != "undefined") {_RecordType("<490,500,10>",(this.prop2)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<502,511,10>",(arguments)); Inst5++; } } catch(e) {}
        this.method0.apply(this.prop2, arguments);
      };
    }
  };
try { if (Inst0 <= 1000 && typeof (v13) != "undefined") {_RecordType("<402,405,7>",(v13)); Inst0++; } } catch(e) {}
  var v15 = {};
try { if (Inst6 <= 1000 && typeof (v15) != "undefined") {_RecordType("<540,543,14>",(v15)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v13.v14) != "undefined") {_RecordType("<562,569,15>",(v13.v14)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v13) != "undefined") {_RecordType("<562,565,15>",(v13)); Inst10++; } } catch(e) {}
  v15.v16 = v13.v14();
try { if (Inst7 <= 1000 && typeof (v15.v16) != "undefined") {_RecordType("<552,559,15>",(v15.v16)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v15) != "undefined") {_RecordType("<552,555,15>",(v15)); Inst8++; } } catch(e) {}
  v15.v16.prototype = {
    method0: function () {
try { if (Inst14 <= 1000 && typeof (this.v20) != "undefined") {_RecordType("<630,638,18>",(this.v20)); Inst14++; } } catch(e) {}
      this.v20;
    }
  };
try { if (Inst11 <= 1000 && typeof (v15.v16.prototype) != "undefined") {_RecordType("<575,592,16>",(v15.v16.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v15.v16) != "undefined") {_RecordType("<575,582,16>",(v15.v16)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v15) != "undefined") {_RecordType("<575,578,16>",(v15)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (v13.v14) != "undefined") {_RecordType("<663,670,21>",(v13.v14)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (v13) != "undefined") {_RecordType("<663,666,21>",(v13)); Inst18++; } } catch(e) {}
  v15.v18 = v13.v14();
try { if (Inst15 <= 1000 && typeof (v15.v18) != "undefined") {_RecordType("<653,660,21>",(v15.v18)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (v15) != "undefined") {_RecordType("<653,656,21>",(v15)); Inst16++; } } catch(e) {}
  v15.v18.prototype = {
    method0: function () {
try { if (Inst22 <= 1000 && typeof (v15.v16) != "undefined") {_RecordType("<735,742,24>",(v15.v16)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (v15) != "undefined") {_RecordType("<735,738,24>",(v15)); Inst23++; } } catch(e) {}
      new v15.v16();
    }
  };
try { if (Inst19 <= 1000 && typeof (v15.v18.prototype) != "undefined") {_RecordType("<676,693,22>",(v15.v18.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v15.v18) != "undefined") {_RecordType("<676,683,22>",(v15.v18)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v15) != "undefined") {_RecordType("<676,679,22>",(v15)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (v15.v18) != "undefined") {_RecordType("<773,780,27>",(v15.v18)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (v15) != "undefined") {_RecordType("<773,776,27>",(v15)); Inst26++; } } catch(e) {}
  var v35 = new v15.v18();
try { if (Inst24 <= 1000 && typeof (v35) != "undefined") {_RecordType("<763,766,27>",(v35)); Inst24++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (v15.v18) != "undefined") {_RecordType("<800,807,28>",(v15.v18)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (v15) != "undefined") {_RecordType("<800,803,28>",(v15)); Inst29++; } } catch(e) {}
  var v36 = new v15.v18();
try { if (Inst27 <= 1000 && typeof (v36) != "undefined") {_RecordType("<790,793,28>",(v36)); Inst27++; } } catch(e) {}
  break;
}

try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<823,828,32>",(print)); Inst30++; } } catch(e) {}
print("PASSED");

