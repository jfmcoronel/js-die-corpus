var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
//reduced switches: -maxsimplejitruncount:2 -maxinterpretcount:1
var arr = [];
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<436,439,6>",(arr)); Inst0++; } } catch(e) {}
var obj0 = {};
try { if (Inst1 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<450,454,7>",(obj0)); Inst1++; } } catch(e) {}

var func0 = function () {
  ;
};
try { if (Inst2 <= 1000 && typeof (func0) != "undefined") {_RecordType("<466,471,9>",(func0)); Inst2++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (func0) != "undefined") {_RecordType("<511,516,13>",(func0)); Inst5++; } } catch(e) {}
obj0.method0 = func0;
try { if (Inst3 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<496,508,13>",(obj0.method0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<496,500,13>",(obj0)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<532,544,14>",(Float32Array)); Inst7++; } } catch(e) {}
var f32 = new Float32Array(256);
try { if (Inst6 <= 1000 && typeof (f32) != "undefined") {_RecordType("<522,525,14>",(f32)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<563,569,15>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<570,574,15>",(obj0)); Inst10++; } } catch(e) {}
protoObj0 = Object(obj0);
try { if (Inst8 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<551,560,15>",(protoObj0)); Inst8++; } } catch(e) {}

for (var _strvar30 in f32) {
try { if (Inst11 <= 1000 && typeof (_strvar30) != "undefined") {_RecordType("<587,596,17>",(_strvar30)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f32) != "undefined") {_RecordType("<600,603,17>",(f32)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (v9) != "undefined") {_RecordType("<618,620,18>",(v9)); Inst13++; } } catch(e) {}
  function v9() {
    var v13 = {
      v14: function () {
try { if (Inst15 <= 1000 && typeof (bar) != "undefined") {_RecordType("<690,693,21>",(bar)); Inst15++; } } catch(e) {}
        return function bar() {
try { if (Inst16 <= 1000 && typeof (protoObj0.method0.apply) != "undefined") {_RecordType("<708,731,22>",(protoObj0.method0.apply)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (protoObj0.method0) != "undefined") {_RecordType("<708,725,22>",(protoObj0.method0)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<708,717,22>",(protoObj0)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<732,741,22>",(protoObj0)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<743,752,22>",(arguments)); Inst20++; } } catch(e) {}
          protoObj0.method0.apply(protoObj0, arguments);
try { if (Inst21 <= 1000 && typeof (this.method0.apply) != "undefined") {_RecordType("<765,783,23>",(this.method0.apply)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (this.method0) != "undefined") {_RecordType("<765,777,23>",(this.method0)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (this.method0.apply) != "undefined") {_RecordType("<784,802,23>",(this.method0.apply)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (this.method0) != "undefined") {_RecordType("<784,796,23>",(this.method0)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<809,818,23>",(arguments)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<821,830,23>",(arguments)); Inst26++; } } catch(e) {}
          this.method0.apply(this.method0.apply(this, arguments), arguments);
        };
      }
    };
try { if (Inst14 <= 1000 && typeof (v13) != "undefined") {_RecordType("<633,636,19>",(v13)); Inst14++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (v13.v14) != "undefined") {_RecordType("<879,886,27>",(v13.v14)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (v13) != "undefined") {_RecordType("<879,882,27>",(v13)); Inst30++; } } catch(e) {}
    protoObj0.v16 = v13.v14();
try { if (Inst27 <= 1000 && typeof (protoObj0.v16) != "undefined") {_RecordType("<863,876,27>",(protoObj0.v16)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<863,872,27>",(protoObj0)); Inst28++; } } catch(e) {}
    protoObj0.v16.prototype = {
      method0: function (v20) {
try { if (Inst34 <= 1000 && typeof (v20) != "undefined") {_RecordType("<947,950,29>",(v20)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (v20) != "undefined") {_RecordType("<973,976,30>",(v20)); Inst36++; } } catch(e) {}
        this.v20 = v20;
try { if (Inst35 <= 1000 && typeof (this.v20) != "undefined") {_RecordType("<962,970,30>",(this.v20)); Inst35++; } } catch(e) {}
      }
    };
try { if (Inst31 <= 1000 && typeof (protoObj0.v16.prototype) != "undefined") {_RecordType("<894,917,28>",(protoObj0.v16.prototype)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (protoObj0.v16) != "undefined") {_RecordType("<894,907,28>",(protoObj0.v16)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<894,903,28>",(protoObj0)); Inst33++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (protoObj0.v16) != "undefined") {_RecordType("<1001,1014,33>",(protoObj0.v16)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (protoObj0) != "undefined") {_RecordType("<1001,1010,33>",(protoObj0)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (f32[11]) != "undefined") {_RecordType("<1015,1022,33>",(f32[11])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f32) != "undefined") {_RecordType("<1015,1018,33>",(f32)); Inst40++; } } catch(e) {}
    new protoObj0.v16(f32[11]);
  }

try { if (Inst41 <= 1000 && typeof (v9) != "undefined") {_RecordType("<1032,1034,36>",(v9)); Inst41++; } } catch(e) {}
  v9();
}

try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1041,1046,39>",(print)); Inst42++; } } catch(e) {}
print("PASSED");

