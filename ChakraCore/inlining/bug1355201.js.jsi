var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<382,383,5>",(a)); Inst1++; } } catch(e) {}
  var arrObj0 = {};
try { if (Inst2 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<393,400,6>",(arrObj0)); Inst2++; } } catch(e) {}

  var func2 = function () {
try { if (Inst4 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<447,454,9>",(arrObj0)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<458,459,9>",(b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arrObj0[typeof (typeof a == 'boolean') != 'undefined' ? typeof (typeof a == 'boolean') : 0]) != "undefined") {_RecordType("<463,554,9>",(arrObj0[typeof (typeof a == 'boolean') != 'undefined' ? typeof (typeof a == 'boolean') : 0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<463,470,9>",(arrObj0)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<486,487,9>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<534,535,9>",(a)); Inst9++; } } catch(e) {}
    return arrObj0 != b || arrObj0[typeof (typeof a == 'boolean') != 'undefined' ? typeof (typeof a == 'boolean') : 0];
  };
try { if (Inst3 <= 1000 && typeof (func2) != "undefined") {_RecordType("<414,419,8>",(func2)); Inst3++; } } catch(e) {}

  var func3 = function (a) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<586,587,12>",(a)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (func2) != "undefined") {_RecordType("<603,608,13>",(func2)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<609,610,13>",(a)); Inst14++; } } catch(e) {}
    var m = func2(a) ? 'caller' : 1;
try { if (Inst12 <= 1000 && typeof (m) != "undefined") {_RecordType("<599,600,13>",(m)); Inst12++; } } catch(e) {}
  };
try { if (Inst10 <= 1000 && typeof (func3) != "undefined") {_RecordType("<568,573,12>",(func3)); Inst10++; } } catch(e) {}

  var a = -191;
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<640,641,16>",(a)); Inst15++; } } catch(e) {}
  var b = -2147483647;
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<656,657,17>",(b)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (func3) != "undefined") {_RecordType("<675,680,18>",(func3)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<681,682,18>",(a)); Inst18++; } } catch(e) {}
  func3(a);
}

try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<688,693,21>",(test0)); Inst19++; } } catch(e) {}
test0(1);
try { if (Inst20 <= 1000 && typeof (test0) != "undefined") {_RecordType("<698,703,22>",(test0)); Inst20++; } } catch(e) {}
test0(1);
try { if (Inst21 <= 1000 && typeof (test0) != "undefined") {_RecordType("<708,713,23>",(test0)); Inst21++; } } catch(e) {}
test0(1);
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<718,723,24>",(print)); Inst22++; } } catch(e) {}
print("Passed");

