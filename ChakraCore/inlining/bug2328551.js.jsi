var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var obj0 = {};
try { if (Inst1 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<392,396,6>",(obj0)); Inst1++; } } catch(e) {}
  var obj1 = {};
try { if (Inst2 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<409,413,7>",(obj1)); Inst2++; } } catch(e) {}
  var arrObj0 = {};
try { if (Inst3 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<426,433,8>",(arrObj0)); Inst3++; } } catch(e) {}

  var func1 = function () {
    ;
  };
try { if (Inst4 <= 1000 && typeof (func1) != "undefined") {_RecordType("<447,452,10>",(func1)); Inst4++; } } catch(e) {}

  var func2 = function () {
    ;
  };
try { if (Inst5 <= 1000 && typeof (func2) != "undefined") {_RecordType("<487,492,14>",(func2)); Inst5++; } } catch(e) {}

  var func3 = function (argMath4) {
try { if (Inst7 <= 1000 && typeof (argMath4) != "undefined") {_RecordType("<545,553,18>",(argMath4)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (func2) != "undefined") {_RecordType("<577,582,20>",(func2)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ary.unshift) != "undefined") {_RecordType("<583,594,20>",(ary.unshift)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ary) != "undefined") {_RecordType("<583,586,20>",(ary)); Inst10++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<609,616,20>",(arrObj0)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (func1) != "undefined") {_RecordType("<618,623,20>",(func1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (argMath4) != "undefined") {_RecordType("<632,640,20>",(argMath4)); Inst15++; } } catch(e) {}
    ({
      prop5: func2(ary.unshift(obj1.prop0 *= arrObj0, func1(65535 * argMath4)))
    });
try { if (Inst11 <= 1000 && typeof (obj1.prop0) != "undefined") {_RecordType("<595,605,20>",(obj1.prop0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<595,599,20>",(obj1)); Inst12++; } } catch(e) {}
  };
try { if (Inst6 <= 1000 && typeof (func3) != "undefined") {_RecordType("<527,532,18>",(func3)); Inst6++; } } catch(e) {}

  var func4 = function () {
try { if (Inst17 <= 1000 && typeof (func3) != "undefined") {_RecordType("<690,695,25>",(func3)); Inst17++; } } catch(e) {}
    func3(-242);
  };
try { if (Inst16 <= 1000 && typeof (func4) != "undefined") {_RecordType("<664,669,24>",(func4)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<721,726,28>",(Array)); Inst19++; } } catch(e) {}
  var ary = Array();
try { if (Inst18 <= 1000 && typeof (ary) != "undefined") {_RecordType("<715,718,28>",(ary)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (func4) != "undefined") {_RecordType("<732,737,29>",(func4)); Inst20++; } } catch(e) {}
  func4();
try { if (Inst21 <= 1000 && typeof (func3) != "undefined") {_RecordType("<743,748,30>",(func3)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (func4) != "undefined") {_RecordType("<749,754,30>",(func4)); Inst22++; } } catch(e) {}
  func3(func4());
}

try { if (Inst23 <= 1000 && typeof (test0) != "undefined") {_RecordType("<762,767,33>",(test0)); Inst23++; } } catch(e) {}
test0();
try { if (Inst24 <= 1000 && typeof (test0) != "undefined") {_RecordType("<771,776,34>",(test0)); Inst24++; } } catch(e) {}
test0();
try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<780,785,35>",(print)); Inst25++; } } catch(e) {}
print("Passed");

