var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
var __counter = 0;
try { if (Inst0 <= 1000 && typeof (__counter) != "undefined") {_RecordType("<371,380,5>",(__counter)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test0) != "undefined") {_RecordType("<396,401,7>",(test0)); Inst1++; } } catch(e) {}
function test0() {
try { if (Inst2 <= 1000 && typeof (__counter) != "undefined") {_RecordType("<408,417,8>",(__counter)); Inst2++; } } catch(e) {}
  __counter++;

try { if (Inst3 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<433,437,10>",(leaf)); Inst3++; } } catch(e) {}
  function leaf() {
    ;
  }

  var obj0 = {};
try { if (Inst4 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<459,463,14>",(obj0)); Inst4++; } } catch(e) {}
  var obj1 = {};
try { if (Inst5 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<476,480,15>",(obj1)); Inst5++; } } catch(e) {}
  var arrObj0 = {};
try { if (Inst6 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<493,500,16>",(arrObj0)); Inst6++; } } catch(e) {}

  var func0 = function () {
    for (var _strvar0 in obj0) {
try { if (Inst8 <= 1000 && typeof (_strvar0) != "undefined") {_RecordType("<549,557,19>",(_strvar0)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<561,565,19>",(obj0)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (_strvar0.indexOf) != "undefined") {_RecordType("<579,595,20>",(_strvar0.indexOf)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (_strvar0) != "undefined") {_RecordType("<579,587,20>",(_strvar0)); Inst11++; } } catch(e) {}
      if (_strvar0.indexOf('method') != -1) {
        continue;
      }

try { if (Inst12 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<655,659,24>",(leaf)); Inst12++; } } catch(e) {}
      return leaf();
    }

try { if (Inst13 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<681,685,27>",(leaf)); Inst13++; } } catch(e) {}
    return leaf();

try { if (Inst14 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<720,727,31>",(arrObj0)); Inst14++; } } catch(e) {}
    do {
      ;
    } while (arrObj0);
  };
try { if (Inst7 <= 1000 && typeof (func0) != "undefined") {_RecordType("<514,519,18>",(func0)); Inst7++; } } catch(e) {}

  var func2 = function () {
    ;
  };
try { if (Inst15 <= 1000 && typeof (func2) != "undefined") {_RecordType("<742,747,34>",(func2)); Inst15++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (func2) != "undefined") {_RecordType("<793,798,38>",(func2)); Inst18++; } } catch(e) {}
  obj0.method0 = func2;
try { if (Inst16 <= 1000 && typeof (obj0.method0) != "undefined") {_RecordType("<778,790,38>",(obj0.method0)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<778,782,38>",(obj0)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (func0) != "undefined") {_RecordType("<817,822,39>",(func0)); Inst21++; } } catch(e) {}
  obj0.method1 = func0;
try { if (Inst19 <= 1000 && typeof (obj0.method1) != "undefined") {_RecordType("<802,814,39>",(obj0.method1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<802,806,39>",(obj0)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (func2) != "undefined") {_RecordType("<844,849,40>",(func2)); Inst24++; } } catch(e) {}
  arrObj0.method1 = func2;
try { if (Inst22 <= 1000 && typeof (arrObj0.method1) != "undefined") {_RecordType("<826,841,40>",(arrObj0.method1)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<826,833,40>",(arrObj0)); Inst23++; } } catch(e) {}
  Object.prototype.prop0 = -21449704;
try { if (Inst25 <= 1000 && typeof (Object.prototype.prop0) != "undefined") {_RecordType("<853,875,41>",(Object.prototype.prop0)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<853,869,41>",(Object.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<853,859,41>",(Object)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<908,912,42>",(obj1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<914,918,42>",(obj0)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arrObj0) != "undefined") {_RecordType("<920,927,42>",(arrObj0)); Inst31++; } } catch(e) {}
  var uniqobj27 = [obj1, obj0, arrObj0];
try { if (Inst28 <= 1000 && typeof (uniqobj27) != "undefined") {_RecordType("<895,904,42>",(uniqobj27)); Inst28++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (uniqobj27[__counter]) != "undefined") {_RecordType("<948,968,43>",(uniqobj27[__counter])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (uniqobj27) != "undefined") {_RecordType("<948,957,43>",(uniqobj27)); Inst34++; } } catch(e) {}
  var uniqobj28 = uniqobj27[__counter];
try { if (Inst32 <= 1000 && typeof (uniqobj28) != "undefined") {_RecordType("<936,945,43>",(uniqobj28)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (uniqobj28.method1) != "undefined") {_RecordType("<972,989,44>",(uniqobj28.method1)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (uniqobj28) != "undefined") {_RecordType("<972,981,44>",(uniqobj28)); Inst36++; } } catch(e) {}
  uniqobj28.method1();
}

try { if (Inst40 <= 1000 && typeof (e) != "undefined") {_RecordType("<1044,1045,51>",(e)); Inst40++; } } catch(e) {}
try {
try { if (Inst37 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1004,1009,48>",(test0)); Inst37++; } } catch(e) {}
  test0();
try { if (Inst38 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1015,1020,49>",(test0)); Inst38++; } } catch(e) {}
  test0();
try { if (Inst39 <= 1000 && typeof (test0) != "undefined") {_RecordType("<1026,1031,50>",(test0)); Inst39++; } } catch(e) {}
  test0();
} catch (e) {
try { if (Inst41 <= 1000 && typeof (print) != "undefined") {_RecordType("<1051,1056,52>",(print)); Inst41++; } } catch(e) {}
  print("PASS");
}

