var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<377,387,5>",(Uint8Array)); Inst1++; } } catch(e) {}
arr = new Uint8Array(0x40000);
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<367,370,5>",(arr)); Inst0++; } } catch(e) {}
var obj = {
  x: 1.1
};
try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<402,405,6>",(obj)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (test2) != "undefined") {_RecordType("<432,437,10>",(test2)); Inst3++; } } catch(e) {}
function test2() {
try { if (Inst4 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<451,456,11>",(obj.x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<451,454,11>",(obj)); Inst5++; } } catch(e) {}
  return obj.x;
}

try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<470,474,14>",(test)); Inst6++; } } catch(e) {}
function test() {
try { if (Inst7 <= 1000 && typeof (test1) != "undefined") {_RecordType("<490,495,15>",(test1)); Inst7++; } } catch(e) {}
  function test1() {
    for (var i = 0; i < arr.length; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<513,514,16>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<520,521,16>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<524,534,16>",(arr.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<524,527,16>",(arr)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<536,537,16>",(i)); Inst12++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<584,594,17>",(Math.floor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<584,588,17>",(Math)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (test2) != "undefined") {_RecordType("<595,600,17>",(test2)); Inst23++; } } catch(e) {}
      arr[i] = arr[i + 1] = arr[i + 2] = Math.floor(test2() / 4294967295 * 128), arr[i + 3] = 255;
try { if (Inst13 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<549,555,17>",(arr[i])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<549,552,17>",(arr)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr[i + 1]) != "undefined") {_RecordType("<558,568,17>",(arr[i + 1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<558,561,17>",(arr)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<562,563,17>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr[i + 2]) != "undefined") {_RecordType("<571,581,17>",(arr[i + 2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<571,574,17>",(arr)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<575,576,17>",(i)); Inst20++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr[i + 3]) != "undefined") {_RecordType("<624,634,17>",(arr[i + 3])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<624,627,17>",(arr)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<628,629,17>",(i)); Inst26++; } } catch(e) {}
    }
  }

try { if (Inst27 <= 1000 && typeof (test1) != "undefined") {_RecordType("<655,660,21>",(test1)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arr) != "undefined") {_RecordType("<661,664,21>",(arr)); Inst28++; } } catch(e) {}
  test1(arr);
}

try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<670,674,24>",(test)); Inst29++; } } catch(e) {}
test();
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<678,683,25>",(print)); Inst30++; } } catch(e) {}
print("passed");

