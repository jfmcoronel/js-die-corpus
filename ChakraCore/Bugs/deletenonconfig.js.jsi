var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (makeProperty) != "undefined") {_RecordType("<376,388,5>",(makeProperty)); Inst0++; } } catch(e) {}
function makeProperty(obj, prop) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<389,392,5>",(obj)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (prop) != "undefined") {_RecordType("<394,398,5>",(prop)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<404,425,6>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<404,410,6>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<426,429,6>",(obj)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (prop) != "undefined") {_RecordType("<431,435,6>",(prop)); Inst6++; } } catch(e) {}
  Object.defineProperty(obj, prop, {
    configurable: false,
    writable: true,
    value: 'basic'
  });
}

try { if (Inst7 <= 1000 && typeof (test1) != "undefined") {_RecordType("<521,526,13>",(test1)); Inst7++; } } catch(e) {}
function test1() {
  var obj = {
    length: 4
  };
try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<537,540,14>",(obj)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (makeProperty) != "undefined") {_RecordType("<566,578,17>",(makeProperty)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<579,582,17>",(obj)); Inst10++; } } catch(e) {}
  makeProperty(obj, '3');

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<658,659,21>",(e)); Inst16++; } } catch(e) {}
  try {
try { if (Inst11 <= 1000 && typeof (Array.prototype.copyWithin.call) != "undefined") {_RecordType("<603,634,20>",(Array.prototype.copyWithin.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array.prototype.copyWithin) != "undefined") {_RecordType("<603,629,20>",(Array.prototype.copyWithin)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<603,618,20>",(Array.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<603,608,20>",(Array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj) != "undefined") {_RecordType("<635,638,20>",(obj)); Inst15++; } } catch(e) {}
    Array.prototype.copyWithin.call(obj, 3, 0);
  } catch (e) {
    ;
  }
}

try { if (Inst17 <= 1000 && typeof (test1) != "undefined") {_RecordType("<676,681,26>",(test1)); Inst17++; } } catch(e) {}
test1();

try { if (Inst18 <= 1000 && typeof (test2) != "undefined") {_RecordType("<695,700,28>",(test2)); Inst18++; } } catch(e) {}
function test2() {
try { if (Inst20 <= 1000 && typeof (Int8Array.of) != "undefined") {_RecordType("<716,728,29>",(Int8Array.of)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<716,725,29>",(Int8Array)); Inst21++; } } catch(e) {}
  var ta = Int8Array.of(0, 1, 2); // Array's implementation of copyWithin uses 'length' property to determine the source items
try { if (Inst19 <= 1000 && typeof (ta) != "undefined") {_RecordType("<711,713,29>",(ta)); Inst19++; } } catch(e) {}
  // to copy and it would attempt to delete the target items if the source items are missing,
  // which is not supported by TypedArrays.

try { if (Inst22 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<973,994,33>",(Object.defineProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<973,979,33>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ta) != "undefined") {_RecordType("<995,997,33>",(ta)); Inst24++; } } catch(e) {}
  Object.defineProperty(ta, "length", {
    value: 4
  });

try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<1097,1098,39>",(e)); Inst30++; } } catch(e) {}
  try {
try { if (Inst25 <= 1000 && typeof (Array.prototype.copyWithin.call) != "undefined") {_RecordType("<1043,1074,38>",(Array.prototype.copyWithin.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.prototype.copyWithin) != "undefined") {_RecordType("<1043,1069,38>",(Array.prototype.copyWithin)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1043,1058,38>",(Array.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1043,1048,38>",(Array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1075,1077,38>",(ta)); Inst29++; } } catch(e) {}
    Array.prototype.copyWithin.call(ta, 1, 2);
  } catch (e) {
    ;
  }
}

try { if (Inst31 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1115,1120,44>",(test2)); Inst31++; } } catch(e) {}
test2();

try { if (Inst32 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1134,1139,46>",(test3)); Inst32++; } } catch(e) {}
function test3() {
  var obj = {
    length: 4
  };
try { if (Inst33 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1150,1153,47>",(obj)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (makeProperty) != "undefined") {_RecordType("<1179,1191,50>",(makeProperty)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1192,1195,50>",(obj)); Inst35++; } } catch(e) {}
  makeProperty(obj, '3');

try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<1258,1259,54>",(e)); Inst41++; } } catch(e) {}
  try {
try { if (Inst36 <= 1000 && typeof (Array.prototype.pop.call) != "undefined") {_RecordType("<1216,1240,53>",(Array.prototype.pop.call)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Array.prototype.pop) != "undefined") {_RecordType("<1216,1235,53>",(Array.prototype.pop)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1216,1231,53>",(Array.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1216,1221,53>",(Array)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1241,1244,53>",(obj)); Inst40++; } } catch(e) {}
    Array.prototype.pop.call(obj);
  } catch (e) {
    ;
  }
}

try { if (Inst42 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1276,1281,59>",(test3)); Inst42++; } } catch(e) {}
test3();

try { if (Inst43 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1295,1300,61>",(test4)); Inst43++; } } catch(e) {}
function test4() {
  var obj = {
    length: 4
  };
try { if (Inst44 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1311,1314,62>",(obj)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (makeProperty) != "undefined") {_RecordType("<1340,1352,65>",(makeProperty)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1353,1356,65>",(obj)); Inst46++; } } catch(e) {}
  makeProperty(obj, '3');

try { if (Inst52 <= 1000 && typeof (e) != "undefined") {_RecordType("<1421,1422,69>",(e)); Inst52++; } } catch(e) {}
  try {
try { if (Inst47 <= 1000 && typeof (Array.prototype.shift.call) != "undefined") {_RecordType("<1377,1403,68>",(Array.prototype.shift.call)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Array.prototype.shift) != "undefined") {_RecordType("<1377,1398,68>",(Array.prototype.shift)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1377,1392,68>",(Array.prototype)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1377,1382,68>",(Array)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1404,1407,68>",(obj)); Inst51++; } } catch(e) {}
    Array.prototype.shift.call(obj);
  } catch (e) {
    ;
  }
}

try { if (Inst53 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1439,1444,74>",(test4)); Inst53++; } } catch(e) {}
test4();

try { if (Inst54 <= 1000 && typeof (test5) != "undefined") {_RecordType("<1458,1463,76>",(test5)); Inst54++; } } catch(e) {}
function test5() {
  var obj = {
    length: 4
  };
try { if (Inst55 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1474,1477,77>",(obj)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (makeProperty) != "undefined") {_RecordType("<1503,1515,80>",(makeProperty)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1516,1519,80>",(obj)); Inst57++; } } catch(e) {}
  makeProperty(obj, '3');

try { if (Inst63 <= 1000 && typeof (e) != "undefined") {_RecordType("<1586,1587,84>",(e)); Inst63++; } } catch(e) {}
  try {
try { if (Inst58 <= 1000 && typeof (Array.prototype.reverse.call) != "undefined") {_RecordType("<1540,1568,83>",(Array.prototype.reverse.call)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Array.prototype.reverse) != "undefined") {_RecordType("<1540,1563,83>",(Array.prototype.reverse)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1540,1555,83>",(Array.prototype)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1540,1545,83>",(Array)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1569,1572,83>",(obj)); Inst62++; } } catch(e) {}
    Array.prototype.reverse.call(obj);
  } catch (e) {
    ;
  }
}

try { if (Inst64 <= 1000 && typeof (test5) != "undefined") {_RecordType("<1604,1609,89>",(test5)); Inst64++; } } catch(e) {}
test5();

