var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (test0) != "undefined") {_RecordType("<376,381,5>",(test0)); Inst0++; } } catch(e) {}
function test0() {
  var func2 = function (argMath6) {
try { if (Inst2 <= 1000 && typeof (argMath6) != "undefined") {_RecordType("<410,418,6>",(argMath6)); Inst2++; } } catch(e) {}
    var func6 = () => {
try { if (Inst5 <= 1000 && typeof ((strvar2 + (this.prop0 %= 2131692238)).replace('-%X)P#*%T:+$+%!', '-%X)P#*%T:+$+%!').concat) != "undefined") {_RecordType("<462,553,8>",((strvar2 + (this.prop0 %= 2131692238)).replace('-%X)P#*%T:+$+%!', '-%X)P#*%T:+$+%!').concat)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof ((strvar2 + (this.prop0 %= 2131692238)).replace) != "undefined") {_RecordType("<462,508,8>",((strvar2 + (this.prop0 %= 2131692238)).replace)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (strvar2) != "undefined") {_RecordType("<463,470,8>",(strvar2)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (this.prop1) != "undefined") {_RecordType("<561,571,8>",(this.prop1)); Inst9++; } } catch(e) {}
      strvar7 = (strvar2 + (this.prop0 %= 2131692238)).replace('-%X)P#*%T:+$+%!', '-%X)P#*%T:+$+%!').concat(typeof this.prop1 == 'undefined');
try { if (Inst4 <= 1000 && typeof (strvar7) != "undefined") {_RecordType("<452,459,8>",(strvar7)); Inst4++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (this.prop0) != "undefined") {_RecordType("<474,484,8>",(this.prop0)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (argMath8) != "undefined") {_RecordType("<602,610,9>",(argMath8)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arguments[(argMath8 >= 0 ? argMath8 : 0) & 15]) != "undefined") {_RecordType("<614,660,9>",(arguments[(argMath8 >= 0 ? argMath8 : 0) & 15])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<614,623,9>",(arguments)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (argMath8) != "undefined") {_RecordType("<625,633,9>",(argMath8)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (argMath8) != "undefined") {_RecordType("<641,649,9>",(argMath8)); Inst14++; } } catch(e) {}
      return argMath8 <= arguments[(argMath8 >= 0 ? argMath8 : 0) & 15];
    };
try { if (Inst3 <= 1000 && typeof (func6) != "undefined") {_RecordType("<430,435,7>",(func6)); Inst3++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<688,694,12>",(target)); Inst16++; } } catch(e) {}
    strvar5 = new.target;
try { if (Inst15 <= 1000 && typeof (strvar5) != "undefined") {_RecordType("<674,681,12>",(strvar5)); Inst15++; } } catch(e) {}
  };
try { if (Inst1 <= 1000 && typeof (func2) != "undefined") {_RecordType("<392,397,6>",(func2)); Inst1++; } } catch(e) {}

  var func3 = function () {
try { if (Inst18 <= 1000 && typeof (func2) != "undefined") {_RecordType("<745,750,16>",(func2)); Inst18++; } } catch(e) {}
    return new func2();
  };
try { if (Inst17 <= 1000 && typeof (func3) != "undefined") {_RecordType("<708,713,15>",(func3)); Inst17++; } } catch(e) {}

  var __loopvar0 = 3;
try { if (Inst19 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<766,776,19>",(__loopvar0)); Inst19++; } } catch(e) {}

  for (;;) {
try { if (Inst20 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<800,810,22>",(__loopvar0)); Inst20++; } } catch(e) {}
    __loopvar0++;

try { if (Inst21 <= 1000 && typeof (__loopvar0) != "undefined") {_RecordType("<823,833,24>",(__loopvar0)); Inst21++; } } catch(e) {}
    if (__loopvar0 == 8) {
      break;
    }

try { if (Inst22 <= 1000 && typeof (func3) != "undefined") {_RecordType("<866,871,28>",(func3)); Inst22++; } } catch(e) {}
    func3();
  }

try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<882,887,31>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (strvar5) != "undefined") {_RecordType("<888,895,31>",(strvar5)); Inst24++; } } catch(e) {}
  print(strvar5);
}

try { if (Inst25 <= 1000 && typeof (test0) != "undefined") {_RecordType("<901,906,34>",(test0)); Inst25++; } } catch(e) {}
test0();

