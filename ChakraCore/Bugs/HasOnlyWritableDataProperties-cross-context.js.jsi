var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (setUp) != "undefined") {_RecordType("<376,381,5>",(setUp)); Inst0++; } } catch(e) {}
function setUp(obj0, obj1) {
try { if (Inst1 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<382,386,5>",(obj0)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<388,392,5>",(obj1)); Inst2++; } } catch(e) {}
  obj1.foo0 = 1;
try { if (Inst3 <= 1000 && typeof (obj1.foo0) != "undefined") {_RecordType("<398,407,6>",(obj1.foo0)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<398,402,6>",(obj1)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<415,436,7>",(Object.setPrototypeOf)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<415,421,7>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<437,441,7>",(obj0)); Inst7++; } } catch(e) {}
  Object.setPrototypeOf(obj0, {});
try { if (Inst8 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<450,471,8>",(Object.defineProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<450,456,8>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<472,493,8>",(Object.getPrototypeOf)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<472,478,8>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<494,498,8>",(obj0)); Inst12++; } } catch(e) {}
  Object.defineProperty(Object.getPrototypeOf(obj0), "foo1", {
    writable: false,
    value: "bar"
  });
}

try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<567,568,14>",(f)); Inst13++; } } catch(e) {}
function f() {
  var obj0 = {};
try { if (Inst14 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<579,583,15>",(obj0)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<599,612,16>",(Object.create)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<599,605,16>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<613,617,16>",(obj0)); Inst18++; } } catch(e) {}
  obj1 = Object.create(obj0);
try { if (Inst15 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<592,596,16>",(obj1)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (setUp) != "undefined") {_RecordType("<622,627,17>",(setUp)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<628,632,17>",(obj0)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<634,638,17>",(obj1)); Inst21++; } } catch(e) {}
  setUp(obj0, obj1);
  obj1.foo2 = 'bar';
try { if (Inst22 <= 1000 && typeof (obj1.foo2) != "undefined") {_RecordType("<643,652,18>",(obj1.foo2)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<643,647,18>",(obj1)); Inst23++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<665,666,21>",(f)); Inst24++; } } catch(e) {}
f();
try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<670,675,22>",(print)); Inst25++; } } catch(e) {}
print('Pass');

